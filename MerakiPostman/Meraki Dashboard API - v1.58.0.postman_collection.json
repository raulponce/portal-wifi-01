{
	"info": {
		"_postman_id": "42355ad3-0145-48c6-8e65-e4bb9f180939",
		"name": "Meraki Dashboard API - v1.58.0",
		"description": "A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.\n\n> Date: 07 May, 2025\n>\n> [Recent Updates](https://meraki.io/whats-new/)\n\n---\n\n[API Documentation](https://meraki.io/api)\n\n[Community Support](https://meraki.io/community)\n\n[Meraki Homepage](https://www.meraki.com)\n\n\nContact Support:\n Name: Meraki Developer Community",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10584098",
		"_collection_link": "https://www.postman.com/meraki-api/cisco-meraki-s-public-workspace/collection/e2mz0s7/meraki-dashboard-api-v1-58-0?action=share&source=collection_link&creator=10584098"
	},
	"item": [
		{
			"name": "platform",
			"item": [
				{
					"name": "configure",
					"item": [
						{
							"name": "actionBatches",
							"item": [
								{
									"name": "createOrganizationActionBatch",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actions\": [\n    {\n      \"resource\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"body\": \"<object>\"\n    },\n    {\n      \"resource\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"body\": \"<object>\"\n    }\n  ],\n  \"confirmed\": \"<boolean>\",\n  \"synchronous\": \"<boolean>\",\n  \"callback\": {\n    \"url\": \"<string>\",\n    \"sharedSecret\": \"<string>\",\n    \"httpServer\": {\n      \"id\": \"<string>\"\n    },\n    \"payloadTemplate\": {\n      \"id\": \"<string>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/actionBatches",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"actionBatches"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Create an action batch"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actions\": [\n    {\n      \"resource\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"body\": \"<object>\"\n    },\n    {\n      \"resource\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"body\": \"<object>\"\n    }\n  ],\n  \"confirmed\": \"<boolean>\",\n  \"synchronous\": \"<boolean>\",\n  \"callback\": {\n    \"url\": \"<string>\",\n    \"sharedSecret\": \"<string>\",\n    \"httpServer\": {\n      \"id\": \"<string>\"\n    },\n    \"payloadTemplate\": {\n      \"id\": \"<string>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/actionBatches",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"actionBatches"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1234\",\n  \"organizationId\": \"2930418\",\n  \"confirmed\": true,\n  \"synchronous\": false,\n  \"status\": {\n    \"completed\": true,\n    \"failed\": false,\n    \"errors\": [],\n    \"createdResources\": [\n      {\n        \"id\": \"1284392014819\",\n        \"uri\": \"/networks/L_XXXXX/groupPolicies/100\"\n      }\n    ]\n  },\n  \"actions\": [\n    {\n      \"resource\": \"/devices/QXXX-XXXX-XXXX/switch/ports/3\",\n      \"operation\": \"update\"\n    }\n  ],\n  \"callback\": {\n    \"id\": \"1284392014819\",\n    \"url\": \"https://webhook.site/28efa24e-f830-4d9f-a12b-fbb9e5035031\",\n    \"status\": \"new\"\n  }\n}"
										}
									]
								},
								{
									"name": "deleteOrganizationActionBatch",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/actionBatches/:actionBatchId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"actionBatches",
												":actionBatchId"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "actionBatchId",
													"value": "{{actionBatchId}}",
													"description": "(Required) Action batch ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Delete an action batch"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/actionBatches/:actionBatchId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"actionBatches",
														":actionBatchId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "actionBatchId",
															"value": "<string>",
															"description": "(Required) Action batch ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "getOrganizationActionBatch",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/actionBatches/:actionBatchId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"actionBatches",
												":actionBatchId"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "actionBatchId",
													"value": "{{actionBatchId}}",
													"description": "(Required) Action batch ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return an action batch"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/actionBatches/:actionBatchId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"actionBatches",
														":actionBatchId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "actionBatchId",
															"value": "<string>",
															"description": "(Required) Action batch ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1234\",\n  \"organizationId\": \"2930418\",\n  \"confirmed\": true,\n  \"synchronous\": false,\n  \"status\": {\n    \"completed\": true,\n    \"failed\": false,\n    \"errors\": [],\n    \"createdResources\": [\n      {\n        \"id\": \"1284392014819\",\n        \"uri\": \"/networks/L_XXXXX/groupPolicies/100\"\n      }\n    ]\n  },\n  \"actions\": [\n    {\n      \"resource\": \"/devices/QXXX-XXXX-XXXX/switch/ports/3\",\n      \"operation\": \"update\"\n    }\n  ],\n  \"callback\": {\n    \"id\": \"1284392014819\",\n    \"url\": \"https://webhook.site/28efa24e-f830-4d9f-a12b-fbb9e5035031\",\n    \"status\": \"new\"\n  }\n}"
										}
									]
								},
								{
									"name": "getOrganizationActionBatches",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/actionBatches",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"actionBatches"
											],
											"query": [
												{
													"key": "status",
													"value": "{{status}}",
													"description": "Filter batches by status. Valid types are pending, completed, and failed.",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return the list of action batches in the organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/actionBatches?status=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"actionBatches"
													],
													"query": [
														{
															"key": "status",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"1234\",\n    \"organizationId\": \"2930418\",\n    \"confirmed\": true,\n    \"synchronous\": false,\n    \"status\": {\n      \"completed\": true,\n      \"failed\": false,\n      \"errors\": [],\n      \"createdResources\": [\n        {\n          \"id\": \"1284392014819\",\n          \"uri\": \"/networks/L_XXXXX/groupPolicies/100\"\n        }\n      ]\n    },\n    \"actions\": [\n      {\n        \"resource\": \"/devices/QXXX-XXXX-XXXX/switch/ports/3\",\n        \"operation\": \"update\"\n      }\n    ]\n  }\n]"
										}
									]
								},
								{
									"name": "updateOrganizationActionBatch",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmed\": \"<boolean>\",\n  \"synchronous\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/actionBatches/:actionBatchId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"actionBatches",
												":actionBatchId"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "actionBatchId",
													"value": "{{actionBatchId}}",
													"description": "(Required) Action batch ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Update an action batch"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmed\": true,\n  \"synchronous\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/actionBatches/:actionBatchId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"actionBatches",
														":actionBatchId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "actionBatchId",
															"value": "<string>",
															"description": "(Required) Action batch ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1234\",\n  \"organizationId\": \"2930418\",\n  \"confirmed\": true,\n  \"synchronous\": false,\n  \"status\": {\n    \"completed\": true,\n    \"failed\": false,\n    \"errors\": [],\n    \"createdResources\": [\n      {\n        \"id\": \"1284392014819\",\n        \"uri\": \"/networks/L_XXXXX/groupPolicies/100\"\n      }\n    ]\n  },\n  \"actions\": [\n    {\n      \"resource\": \"/devices/QXXX-XXXX-XXXX/switch/ports/3\",\n      \"operation\": \"update\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "adaptivePolicy",
							"item": [
								{
									"name": "acls",
									"item": [
										{
											"name": "createOrganizationAdaptivePolicyAcl",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\",\n      \"log\": \"<boolean>\",\n      \"tcpEstablished\": \"<boolean>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\",\n      \"log\": \"<boolean>\",\n      \"tcpEstablished\": \"<boolean>\"\n    }\n  ],\n  \"ipVersion\": \"<string>\",\n  \"description\": \"\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/acls",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"adaptivePolicy",
														"acls"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Creates new adaptive policy ACL"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\",\n      \"log\": \"<boolean>\",\n      \"tcpEstablished\": \"<boolean>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\",\n      \"log\": \"<boolean>\",\n      \"tcpEstablished\": \"<boolean>\"\n    }\n  ],\n  \"ipVersion\": \"<string>\",\n  \"description\": \"\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/acls",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"adaptivePolicy",
																"acls"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"aclId\": \"12345678\",\n  \"name\": \"Block sensitive web traffic\",\n  \"description\": \"Blocks sensitive web traffic\",\n  \"ipVersion\": \"ipv6\",\n  \"rules\": [\n    {\n      \"policy\": \"deny\",\n      \"protocol\": \"tcp\",\n      \"srcPort\": \"1,33\",\n      \"dstPort\": \"22-30\",\n      \"log\": true,\n      \"tcpEstablished\": true\n    }\n  ],\n  \"createdAt\": \"2021-05-19T17:08:25Z\",\n  \"updatedAt\": \"2021-05-19T17:11:54Z\"\n}"
												}
											]
										},
										{
											"name": "deleteOrganizationAdaptivePolicyAcl",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/acls/:aclId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"adaptivePolicy",
														"acls",
														":aclId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "aclId",
															"value": "{{aclId}}",
															"description": "(Required) Acl ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Deletes the specified adaptive policy ACL. Note this adaptive policy ACL will also be removed from policies using it."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/acls/:aclId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"adaptivePolicy",
																"acls",
																":aclId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "aclId",
																	"value": "<string>",
																	"description": "(Required) Acl ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getOrganizationAdaptivePolicyAcl",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/acls/:aclId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"adaptivePolicy",
														"acls",
														":aclId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "aclId",
															"value": "{{aclId}}",
															"description": "(Required) Acl ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Returns the adaptive policy ACL information"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/acls/:aclId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"adaptivePolicy",
																"acls",
																":aclId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "aclId",
																	"value": "<string>",
																	"description": "(Required) Acl ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"aclId\": \"12345678\",\n  \"name\": \"Block sensitive web traffic\",\n  \"description\": \"Blocks sensitive web traffic\",\n  \"ipVersion\": \"ipv6\",\n  \"rules\": [\n    {\n      \"policy\": \"deny\",\n      \"protocol\": \"tcp\",\n      \"srcPort\": \"1,33\",\n      \"dstPort\": \"22-30\",\n      \"log\": true,\n      \"tcpEstablished\": true\n    }\n  ],\n  \"createdAt\": \"2021-05-19T17:08:25Z\",\n  \"updatedAt\": \"2021-05-19T17:11:54Z\"\n}"
												}
											]
										},
										{
											"name": "getOrganizationAdaptivePolicyAcls",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/acls",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"adaptivePolicy",
														"acls"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List adaptive policy ACLs in a organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/acls",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"adaptivePolicy",
																"acls"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"aclId\": \"12345678\",\n    \"name\": \"Block sensitive web traffic\",\n    \"description\": \"Blocks sensitive web traffic\",\n    \"ipVersion\": \"ipv6\",\n    \"rules\": [\n      {\n        \"policy\": \"deny\",\n        \"protocol\": \"tcp\",\n        \"srcPort\": \"1,33\",\n        \"dstPort\": \"22-30\",\n        \"log\": true,\n        \"tcpEstablished\": true\n      }\n    ],\n    \"createdAt\": \"2021-05-19T17:08:25Z\",\n    \"updatedAt\": \"2021-05-19T17:11:54Z\"\n  }\n]"
												}
											]
										},
										{
											"name": "updateOrganizationAdaptivePolicyAcl",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\",\n      \"log\": \"<boolean>\",\n      \"tcpEstablished\": \"<boolean>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\",\n      \"log\": \"<boolean>\",\n      \"tcpEstablished\": \"<boolean>\"\n    }\n  ],\n  \"ipVersion\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/acls/:aclId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"adaptivePolicy",
														"acls",
														":aclId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "aclId",
															"value": "{{aclId}}",
															"description": "(Required) Acl ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Updates an adaptive policy ACL"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\",\n      \"log\": \"<boolean>\",\n      \"tcpEstablished\": \"<boolean>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\",\n      \"log\": \"<boolean>\",\n      \"tcpEstablished\": \"<boolean>\"\n    }\n  ],\n  \"ipVersion\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/acls/:aclId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"adaptivePolicy",
																"acls",
																":aclId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "aclId",
																	"value": "<string>",
																	"description": "(Required) Acl ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"aclId\": \"12345678\",\n  \"name\": \"Block sensitive web traffic\",\n  \"description\": \"Blocks sensitive web traffic\",\n  \"ipVersion\": \"ipv6\",\n  \"rules\": [\n    {\n      \"policy\": \"deny\",\n      \"protocol\": \"tcp\",\n      \"srcPort\": \"1,33\",\n      \"dstPort\": \"22-30\",\n      \"log\": true,\n      \"tcpEstablished\": true\n    }\n  ],\n  \"createdAt\": \"2021-05-19T17:08:25Z\",\n  \"updatedAt\": \"2021-05-19T17:11:54Z\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "groups",
									"item": [
										{
											"name": "createOrganizationAdaptivePolicyGroup",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"sgt\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"policyObjects\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"adaptivePolicy",
														"groups"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Creates a new adaptive policy group"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"sgt\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"policyObjects\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/groups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"adaptivePolicy",
																"groups"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"groupId\": \"1234\",\n  \"name\": \"Employee Group\",\n  \"sgt\": 1000,\n  \"description\": \"Group of XYZ Corp Employees\",\n  \"policyObjects\": [\n    {\n      \"id\": \"2345\",\n      \"name\": \"Example Policy Object\"\n    }\n  ],\n  \"isDefaultGroup\": false,\n  \"requiredIpMappings\": [],\n  \"createdAt\": \"2019-06-27T21:34:25.253480Z\",\n  \"updatedAt\": \"2019-06-27T21:34:25.253480Z\"\n}"
												}
											]
										},
										{
											"name": "deleteOrganizationAdaptivePolicyGroup",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"adaptivePolicy",
														"groups",
														":id"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "id",
															"value": "",
															"description": "(Required) ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Deletes the specified adaptive policy group and any associated policies and references"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/groups/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"adaptivePolicy",
																"groups",
																":id"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getOrganizationAdaptivePolicyGroup",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"adaptivePolicy",
														"groups",
														":id"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "id",
															"value": "",
															"description": "(Required) ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Returns an adaptive policy group"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/groups/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"adaptivePolicy",
																"groups",
																":id"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"groupId\": \"1234\",\n  \"name\": \"Employee Group\",\n  \"sgt\": 1000,\n  \"description\": \"Group of XYZ Corp Employees\",\n  \"policyObjects\": [\n    {\n      \"id\": \"2345\",\n      \"name\": \"Example Policy Object\"\n    }\n  ],\n  \"isDefaultGroup\": false,\n  \"requiredIpMappings\": [],\n  \"createdAt\": \"2019-06-27T21:34:25.253480Z\",\n  \"updatedAt\": \"2019-06-27T21:34:25.253480Z\"\n}"
												}
											]
										},
										{
											"name": "getOrganizationAdaptivePolicyGroups",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"adaptivePolicy",
														"groups"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List adaptive policy groups in a organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/groups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"adaptivePolicy",
																"groups"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"groupId\": \"1234\",\n    \"name\": \"Employee Group\",\n    \"sgt\": 1000,\n    \"description\": \"Group of XYZ Corp Employees\",\n    \"policyObjects\": [\n      {\n        \"id\": \"2345\",\n        \"name\": \"Example Policy Object\"\n      }\n    ],\n    \"isDefaultGroup\": false,\n    \"requiredIpMappings\": [],\n    \"createdAt\": \"2019-06-27T21:34:25.253480Z\",\n    \"updatedAt\": \"2019-06-27T21:34:25.253480Z\"\n  }\n]"
												}
											]
										},
										{
											"name": "updateOrganizationAdaptivePolicyGroup",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"sgt\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"policyObjects\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"adaptivePolicy",
														"groups",
														":id"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "id",
															"value": "",
															"description": "(Required) ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Updates an adaptive policy group. If updating \"Infrastructure\", only the SGT is allowed. Cannot update \"Unknown\"."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"sgt\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"policyObjects\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/groups/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"adaptivePolicy",
																"groups",
																":id"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"groupId\": \"1234\",\n  \"name\": \"Employee Group\",\n  \"sgt\": 1000,\n  \"description\": \"Group of XYZ Corp Employees\",\n  \"policyObjects\": [\n    {\n      \"id\": \"2345\",\n      \"name\": \"Example Policy Object\"\n    }\n  ],\n  \"isDefaultGroup\": false,\n  \"requiredIpMappings\": [],\n  \"createdAt\": \"2019-06-27T21:34:25.253480Z\",\n  \"updatedAt\": \"2019-06-27T21:34:25.253480Z\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "policies",
									"item": [
										{
											"name": "createOrganizationAdaptivePolicyPolicy",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sourceGroup\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"sgt\": \"<integer>\"\n  },\n  \"destinationGroup\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"sgt\": \"<integer>\"\n  },\n  \"acls\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"lastEntryRule\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"adaptivePolicy",
														"policies"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Add an Adaptive Policy"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"sourceGroup\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"sgt\": \"<integer>\"\n  },\n  \"destinationGroup\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"sgt\": \"<integer>\"\n  },\n  \"acls\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"lastEntryRule\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/policies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"adaptivePolicy",
																"policies"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"adaptivePolicyId\": \"111\",\n  \"sourceGroup\": {\n    \"id\": \"222\",\n    \"name\": \"IoT Devices\",\n    \"sgt\": 50\n  },\n  \"destinationGroup\": {\n    \"id\": \"333\",\n    \"name\": \"IoT Servers\",\n    \"sgt\": 51\n  },\n  \"acls\": [\n    {\n      \"id\": \"444\",\n      \"name\": \"Block web\"\n    }\n  ],\n  \"lastEntryRule\": \"allow\",\n  \"createdAt\": \"2019-06-27T21:34:25.253480Z\",\n  \"updatedAt\": \"2019-06-27T21:34:25.253480Z\"\n}"
												}
											]
										},
										{
											"name": "deleteOrganizationAdaptivePolicyPolicy",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"adaptivePolicy",
														"policies",
														":id"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "id",
															"value": "",
															"description": "(Required) ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Delete an Adaptive Policy"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/policies/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"adaptivePolicy",
																"policies",
																":id"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getOrganizationAdaptivePolicyPolicies",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"adaptivePolicy",
														"policies"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List adaptive policies in an organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/policies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"adaptivePolicy",
																"policies"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"adaptivePolicyId\": \"111\",\n    \"sourceGroup\": {\n      \"id\": \"222\",\n      \"name\": \"IoT Devices\",\n      \"sgt\": 50\n    },\n    \"destinationGroup\": {\n      \"id\": \"333\",\n      \"name\": \"IoT Servers\",\n      \"sgt\": 51\n    },\n    \"acls\": [\n      {\n        \"id\": \"444\",\n        \"name\": \"Block web\"\n      }\n    ],\n    \"lastEntryRule\": \"allow\",\n    \"createdAt\": \"2019-06-27T21:34:25.253480Z\",\n    \"updatedAt\": \"2019-06-27T21:34:25.253480Z\"\n  }\n]"
												}
											]
										},
										{
											"name": "getOrganizationAdaptivePolicyPolicy",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"adaptivePolicy",
														"policies",
														":id"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "id",
															"value": "",
															"description": "(Required) ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return an adaptive policy"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/policies/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"adaptivePolicy",
																"policies",
																":id"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"adaptivePolicyId\": \"111\",\n  \"sourceGroup\": {\n    \"id\": \"222\",\n    \"name\": \"IoT Devices\",\n    \"sgt\": 50\n  },\n  \"destinationGroup\": {\n    \"id\": \"333\",\n    \"name\": \"IoT Servers\",\n    \"sgt\": 51\n  },\n  \"acls\": [\n    {\n      \"id\": \"444\",\n      \"name\": \"Block web\"\n    }\n  ],\n  \"lastEntryRule\": \"allow\",\n  \"createdAt\": \"2019-06-27T21:34:25.253480Z\",\n  \"updatedAt\": \"2019-06-27T21:34:25.253480Z\"\n}"
												}
											]
										},
										{
											"name": "updateOrganizationAdaptivePolicyPolicy",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sourceGroup\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"sgt\": \"<integer>\"\n  },\n  \"destinationGroup\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"sgt\": \"<integer>\"\n  },\n  \"acls\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"lastEntryRule\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/policies/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"adaptivePolicy",
														"policies",
														":id"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "id",
															"value": "",
															"description": "(Required) ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update an Adaptive Policy"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"sourceGroup\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"sgt\": \"<integer>\"\n  },\n  \"destinationGroup\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"sgt\": \"<integer>\"\n  },\n  \"acls\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"lastEntryRule\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/policies/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"adaptivePolicy",
																"policies",
																":id"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"adaptivePolicyId\": \"111\",\n  \"sourceGroup\": {\n    \"id\": \"222\",\n    \"name\": \"IoT Devices\",\n    \"sgt\": 50\n  },\n  \"destinationGroup\": {\n    \"id\": \"333\",\n    \"name\": \"IoT Servers\",\n    \"sgt\": 51\n  },\n  \"acls\": [\n    {\n      \"id\": \"444\",\n      \"name\": \"Block web\"\n    }\n  ],\n  \"lastEntryRule\": \"allow\",\n  \"createdAt\": \"2019-06-27T21:34:25.253480Z\",\n  \"updatedAt\": \"2019-06-27T21:34:25.253480Z\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "settings",
									"item": [
										{
											"name": "getOrganizationAdaptivePolicySettings",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"adaptivePolicy",
														"settings"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Returns global adaptive policy settings in an organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"adaptivePolicy",
																"settings"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"enabledNetworks\": [\n    \"L_11111111\",\n    \"L_22222222\",\n    \"N_33333333\",\n    \"L_44444444\"\n  ]\n}"
												}
											]
										},
										{
											"name": "updateOrganizationAdaptivePolicySettings",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabledNetworks\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"adaptivePolicy",
														"settings"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update global adaptive policy settings"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabledNetworks\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"adaptivePolicy",
																"settings"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"enabledNetworks\": [\n    \"L_11111111\",\n    \"L_22222222\",\n    \"N_33333333\",\n    \"L_44444444\"\n  ]\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "admins",
							"item": [
								{
									"name": "createOrganizationAdmin",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"name\": \"<string>\",\n  \"orgAccess\": \"<string>\",\n  \"tags\": [\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ],\n  \"networks\": [\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ],\n  \"authenticationMethod\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/admins",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"admins"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Create a new dashboard administrator"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"name\": \"<string>\",\n  \"orgAccess\": \"<string>\",\n  \"tags\": [\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ],\n  \"networks\": [\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ],\n  \"authenticationMethod\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/admins",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"admins"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"212406\",\n  \"name\": \"Miles Meraki\",\n  \"email\": \"miles@meraki.com\",\n  \"orgAccess\": \"none\",\n  \"accountStatus\": \"ok\",\n  \"twoFactorAuthEnabled\": false,\n  \"hasApiKey\": true,\n  \"lastActive\": \"2018-02-11T00:00:00Z\",\n  \"tags\": [\n    {\n      \"tag\": \"west\",\n      \"access\": \"read-only\"\n    }\n  ],\n  \"networks\": [\n    {\n      \"id\": \"N_24329156\",\n      \"access\": \"full\"\n    }\n  ],\n  \"authenticationMethod\": \"Email\"\n}"
										}
									]
								},
								{
									"name": "deleteOrganizationAdmin",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/admins/:adminId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"admins",
												":adminId"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "adminId",
													"value": "{{adminId}}",
													"description": "(Required) Admin ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Revoke all access for a dashboard administrator within this organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/admins/:adminId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"admins",
														":adminId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "adminId",
															"value": "<string>",
															"description": "(Required) Admin ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "getOrganizationAdmins",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/admins",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"admins"
											],
											"query": [
												{
													"key": "networkIds",
													"value": "{{networkIds}}",
													"description": "Optional parameter to filter the result set by the included set of network IDs",
													"disabled": true
												},
												{
													"key": "networkIds",
													"value": "{{networkIds}}",
													"description": "Optional parameter to filter the result set by the included set of network IDs",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "List the dashboard administrators in this organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/admins?networkIds=<string>&networkIds=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"admins"
													],
													"query": [
														{
															"key": "networkIds",
															"value": "<string>"
														},
														{
															"key": "networkIds",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"212406\",\n    \"name\": \"Miles Meraki\",\n    \"email\": \"miles@meraki.com\",\n    \"orgAccess\": \"none\",\n    \"accountStatus\": \"ok\",\n    \"twoFactorAuthEnabled\": false,\n    \"hasApiKey\": true,\n    \"lastActive\": \"2018-02-11T00:00:00Z\",\n    \"tags\": [\n      {\n        \"tag\": \"west\",\n        \"access\": \"read-only\"\n      }\n    ],\n    \"networks\": [\n      {\n        \"id\": \"N_24329156\",\n        \"access\": \"full\"\n      }\n    ],\n    \"authenticationMethod\": \"Email\"\n  }\n]"
										}
									]
								},
								{
									"name": "updateOrganizationAdmin",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"orgAccess\": \"<string>\",\n  \"tags\": [\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ],\n  \"networks\": [\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/admins/:adminId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"admins",
												":adminId"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "adminId",
													"value": "{{adminId}}",
													"description": "(Required) Admin ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Update an administrator"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"orgAccess\": \"<string>\",\n  \"tags\": [\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ],\n  \"networks\": [\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/admins/:adminId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"admins",
														":adminId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "adminId",
															"value": "<string>",
															"description": "(Required) Admin ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"212406\",\n  \"name\": \"Miles Meraki\",\n  \"email\": \"miles@meraki.com\",\n  \"orgAccess\": \"none\",\n  \"accountStatus\": \"ok\",\n  \"twoFactorAuthEnabled\": false,\n  \"hasApiKey\": true,\n  \"lastActive\": \"2018-02-11T00:00:00Z\",\n  \"tags\": [\n    {\n      \"tag\": \"west\",\n      \"access\": \"read-only\"\n    }\n  ],\n  \"networks\": [\n    {\n      \"id\": \"N_24329156\",\n      \"access\": \"full\"\n    }\n  ],\n  \"authenticationMethod\": \"Email\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "alerts",
							"item": [
								{
									"name": "profiles",
									"item": [
										{
											"name": "createOrganizationAlertsProfile",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"<string>\",\n  \"alertCondition\": {\n    \"duration\": \"<integer>\",\n    \"window\": \"<integer>\",\n    \"bit_rate_bps\": \"<integer>\",\n    \"loss_ratio\": \"<float>\",\n    \"latency_ms\": \"<integer>\",\n    \"jitter_ms\": \"<integer>\",\n    \"mos\": \"<float>\",\n    \"interface\": \"<string>\"\n  },\n  \"recipients\": {\n    \"emails\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"httpServerIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"networkTags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"description\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/alerts/profiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"alerts",
														"profiles"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Create an organization-wide alert configuration"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"type\": \"<string>\",\n  \"alertCondition\": {\n    \"duration\": \"<integer>\",\n    \"window\": \"<integer>\",\n    \"bit_rate_bps\": \"<integer>\",\n    \"loss_ratio\": \"<float>\",\n    \"latency_ms\": \"<integer>\",\n    \"jitter_ms\": \"<integer>\",\n    \"mos\": \"<float>\",\n    \"interface\": \"<string>\"\n  },\n  \"recipients\": {\n    \"emails\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"httpServerIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"networkTags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"description\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/alerts/profiles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"alerts",
																"profiles"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1284392014819\",\n  \"type\": \"wanUtilization\",\n  \"enabled\": true,\n  \"alertCondition\": {\n    \"duration\": 60,\n    \"window\": 600,\n    \"bit_rate_bps\": 10000,\n    \"interface\": \"wan1\"\n  },\n  \"recipients\": {\n    \"emails\": [\n      \"admin@example.org\"\n    ],\n    \"httpServerIds\": [\n      \"aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vcGF0aA==\"\n    ]\n  },\n  \"networkTags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"description\": \"WAN 1 high utilization\"\n}"
												}
											]
										},
										{
											"name": "deleteOrganizationAlertsProfile",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/alerts/profiles/:alertConfigId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"alerts",
														"profiles",
														":alertConfigId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "alertConfigId",
															"value": "{{alertConfigId}}",
															"description": "(Required) Alert config ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Removes an organization-wide alert config"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/alerts/profiles/:alertConfigId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"alerts",
																"profiles",
																":alertConfigId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "alertConfigId",
																	"value": "<string>",
																	"description": "(Required) Alert config ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getOrganizationAlertsProfiles",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/alerts/profiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"alerts",
														"profiles"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List all organization-wide alert configurations"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/alerts/profiles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"alerts",
																"profiles"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"1284392014819\",\n    \"type\": \"wanUtilization\",\n    \"enabled\": true,\n    \"alertCondition\": {\n      \"duration\": 60,\n      \"window\": 600,\n      \"bit_rate_bps\": 10000,\n      \"interface\": \"wan1\"\n    },\n    \"recipients\": {\n      \"emails\": [\n        \"admin@example.org\"\n      ],\n      \"httpServerIds\": [\n        \"aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vcGF0aA==\"\n      ]\n    },\n    \"networkTags\": [\n      \"tag1\",\n      \"tag2\"\n    ],\n    \"description\": \"WAN 1 high utilization\"\n  }\n]"
												}
											]
										},
										{
											"name": "updateOrganizationAlertsProfile",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"type\": \"<string>\",\n  \"alertCondition\": {\n    \"duration\": \"<integer>\",\n    \"window\": \"<integer>\",\n    \"bit_rate_bps\": \"<integer>\",\n    \"loss_ratio\": \"<float>\",\n    \"latency_ms\": \"<integer>\",\n    \"jitter_ms\": \"<integer>\",\n    \"mos\": \"<float>\",\n    \"interface\": \"<string>\"\n  },\n  \"recipients\": {\n    \"emails\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"httpServerIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"networkTags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"description\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/alerts/profiles/:alertConfigId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"alerts",
														"profiles",
														":alertConfigId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "alertConfigId",
															"value": "{{alertConfigId}}",
															"description": "(Required) Alert config ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update an organization-wide alert config"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"type\": \"<string>\",\n  \"alertCondition\": {\n    \"duration\": \"<integer>\",\n    \"window\": \"<integer>\",\n    \"bit_rate_bps\": \"<integer>\",\n    \"loss_ratio\": \"<float>\",\n    \"latency_ms\": \"<integer>\",\n    \"jitter_ms\": \"<integer>\",\n    \"mos\": \"<float>\",\n    \"interface\": \"<string>\"\n  },\n  \"recipients\": {\n    \"emails\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"httpServerIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"networkTags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"description\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/alerts/profiles/:alertConfigId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"alerts",
																"profiles",
																":alertConfigId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "alertConfigId",
																	"value": "<string>",
																	"description": "(Required) Alert config ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1284392014819\",\n  \"type\": \"wanUtilization\",\n  \"enabled\": true,\n  \"alertCondition\": {\n    \"duration\": 60,\n    \"window\": 600,\n    \"bit_rate_bps\": 10000,\n    \"interface\": \"wan1\"\n  },\n  \"recipients\": {\n    \"emails\": [\n      \"admin@example.org\"\n    ],\n    \"httpServerIds\": [\n      \"aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vcGF0aA==\"\n    ]\n  },\n  \"networkTags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"description\": \"WAN 1 high utilization\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "settings",
									"item": [
										{
											"name": "getNetworkAlertsSettings",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/alerts/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"alerts",
														"settings"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the alert configuration for this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/alerts/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"alerts",
																"settings"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"defaultDestinations\": {\n    \"emails\": [\n      \"miles@meraki.com\"\n    ],\n    \"allAdmins\": true,\n    \"snmp\": true,\n    \"httpServerIds\": [\n      \"aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=\"\n    ]\n  },\n  \"alerts\": [\n    {\n      \"type\": \"gatewayDown\",\n      \"enabled\": true,\n      \"alertDestinations\": {\n        \"emails\": [\n          \"miles@meraki.com\"\n        ],\n        \"smsNumbers\": [\n          \"+15555555555\"\n        ],\n        \"allAdmins\": false,\n        \"snmp\": false,\n        \"httpServerIds\": [\n          \"aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=\"\n        ]\n      },\n      \"filters\": {\n        \"conditions\": [\n          {\n            \"type\": \"temperature\",\n            \"unit\": \"celsius\",\n            \"duration\": 0,\n            \"direction\": \"+\",\n            \"threshold\": 72.5\n          }\n        ],\n        \"failureType\": \"802.1X auth fail\",\n        \"lookbackWindow\": 360,\n        \"minDuration\": 60,\n        \"name\": \"Filter\",\n        \"period\": 1800,\n        \"priority\": \"\",\n        \"regex\": \"[a-z]\",\n        \"selector\": \"{\\\"smartSensitivity\\\":\\\"medium\\\",\\\"smartEnabled\\\":false,\\\"eventReminderPeriodSecs\\\":10800}\",\n        \"serials\": [\n          \"Q234-ABCD-0001\",\n          \"Q234-ABCD-0002\",\n          \"Q234-ABCD-0003\"\n        ],\n        \"ssidNum\": 1,\n        \"tag\": \"tag1\",\n        \"threshold\": 30,\n        \"timeout\": 60\n      }\n    }\n  ],\n  \"muting\": {\n    \"byPortSchedules\": {\n      \"enabled\": true\n    }\n  }\n}"
												}
											]
										},
										{
											"name": "updateNetworkAlertsSettings",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"defaultDestinations\": {\n    \"emails\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"allAdmins\": \"<boolean>\",\n    \"snmp\": \"<boolean>\",\n    \"httpServerIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"alerts\": [\n    {\n      \"type\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"alertDestinations\": {\n        \"emails\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"smsNumbers\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"allAdmins\": \"<boolean>\",\n        \"snmp\": \"<boolean>\",\n        \"httpServerIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"filters\": {\n        \"conditions\": [\n          {\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"unit\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"duration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"direction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"threshold\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"unit\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"duration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"direction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"threshold\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"failureType\": \"<string>\",\n        \"lookbackWindow\": \"<integer>\",\n        \"minDuration\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"period\": \"<integer>\",\n        \"priority\": \"<string>\",\n        \"regex\": \"<string>\",\n        \"selector\": \"<string>\",\n        \"serials\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ssidNum\": \"<integer>\",\n        \"tag\": \"<string>\",\n        \"threshold\": \"<integer>\",\n        \"timeout\": \"<integer>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"alertDestinations\": {\n        \"emails\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"smsNumbers\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"allAdmins\": \"<boolean>\",\n        \"snmp\": \"<boolean>\",\n        \"httpServerIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"filters\": {\n        \"conditions\": [\n          {\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"unit\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"duration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"direction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"threshold\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"unit\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"duration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"direction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"threshold\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"failureType\": \"<string>\",\n        \"lookbackWindow\": \"<integer>\",\n        \"minDuration\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"period\": \"<integer>\",\n        \"priority\": \"<string>\",\n        \"regex\": \"<string>\",\n        \"selector\": \"<string>\",\n        \"serials\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ssidNum\": \"<integer>\",\n        \"tag\": \"<string>\",\n        \"threshold\": \"<integer>\",\n        \"timeout\": \"<integer>\"\n      }\n    }\n  ],\n  \"muting\": {\n    \"byPortSchedules\": {\n      \"enabled\": \"<boolean>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/alerts/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"alerts",
														"settings"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the alert configuration for this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"defaultDestinations\": {\n    \"emails\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"allAdmins\": \"<boolean>\",\n    \"snmp\": \"<boolean>\",\n    \"httpServerIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"alerts\": [\n    {\n      \"type\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"alertDestinations\": {\n        \"emails\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"smsNumbers\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"allAdmins\": \"<boolean>\",\n        \"snmp\": \"<boolean>\",\n        \"httpServerIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"filters\": {\n        \"conditions\": [\n          {\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"unit\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"duration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"direction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"threshold\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"unit\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"duration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"direction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"threshold\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"failureType\": \"<string>\",\n        \"lookbackWindow\": \"<integer>\",\n        \"minDuration\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"period\": \"<integer>\",\n        \"priority\": \"<string>\",\n        \"regex\": \"<string>\",\n        \"selector\": \"<string>\",\n        \"serials\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ssidNum\": \"<integer>\",\n        \"tag\": \"<string>\",\n        \"threshold\": \"<integer>\",\n        \"timeout\": \"<integer>\"\n      }\n    },\n    {\n      \"type\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"alertDestinations\": {\n        \"emails\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"smsNumbers\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"allAdmins\": \"<boolean>\",\n        \"snmp\": \"<boolean>\",\n        \"httpServerIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"filters\": {\n        \"conditions\": [\n          {\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"unit\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"duration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"direction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"threshold\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"unit\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"duration\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"direction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"threshold\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"failureType\": \"<string>\",\n        \"lookbackWindow\": \"<integer>\",\n        \"minDuration\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"period\": \"<integer>\",\n        \"priority\": \"<string>\",\n        \"regex\": \"<string>\",\n        \"selector\": \"<string>\",\n        \"serials\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ssidNum\": \"<integer>\",\n        \"tag\": \"<string>\",\n        \"threshold\": \"<integer>\",\n        \"timeout\": \"<integer>\"\n      }\n    }\n  ],\n  \"muting\": {\n    \"byPortSchedules\": {\n      \"enabled\": \"<boolean>\"\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/alerts/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"alerts",
																"settings"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"defaultDestinations\": {\n    \"emails\": [\n      \"miles@meraki.com\"\n    ],\n    \"allAdmins\": true,\n    \"snmp\": true,\n    \"httpServerIds\": [\n      \"aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=\"\n    ]\n  },\n  \"alerts\": [\n    {\n      \"type\": \"gatewayDown\",\n      \"enabled\": true,\n      \"alertDestinations\": {\n        \"emails\": [\n          \"miles@meraki.com\"\n        ],\n        \"smsNumbers\": [\n          \"+15555555555\"\n        ],\n        \"allAdmins\": false,\n        \"snmp\": false,\n        \"httpServerIds\": [\n          \"aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=\"\n        ]\n      },\n      \"filters\": {\n        \"conditions\": [\n          {\n            \"type\": \"temperature\",\n            \"unit\": \"celsius\",\n            \"duration\": 0,\n            \"direction\": \"+\",\n            \"threshold\": 72.5\n          }\n        ],\n        \"failureType\": \"802.1X auth fail\",\n        \"lookbackWindow\": 360,\n        \"minDuration\": 60,\n        \"name\": \"Filter\",\n        \"period\": 1800,\n        \"priority\": \"\",\n        \"regex\": \"[a-z]\",\n        \"selector\": \"{\\\"smartSensitivity\\\":\\\"medium\\\",\\\"smartEnabled\\\":false,\\\"eventReminderPeriodSecs\\\":10800}\",\n        \"serials\": [\n          \"Q234-ABCD-0001\",\n          \"Q234-ABCD-0002\",\n          \"Q234-ABCD-0003\"\n        ],\n        \"ssidNum\": 1,\n        \"tag\": \"tag1\",\n        \"threshold\": 30,\n        \"timeout\": 60\n      }\n    }\n  ],\n  \"muting\": {\n    \"byPortSchedules\": {\n      \"enabled\": true\n    }\n  }\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "brandingPolicies",
							"item": [
								{
									"name": "priorities",
									"item": [
										{
											"name": "getOrganizationBrandingPoliciesPriorities",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies/priorities",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"brandingPolicies",
														"priorities"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the branding policy IDs of an organization in priority order. IDs are ordered in ascending order of priority (IDs later in the array have higher priority)."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies/priorities",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"brandingPolicies",
																"priorities"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"brandingPolicyIds\": [\n    \"123\",\n    \"456\",\n    \"789\"\n  ]\n}"
												}
											]
										},
										{
											"name": "updateOrganizationBrandingPoliciesPriorities",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"brandingPolicyIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies/priorities",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"brandingPolicies",
														"priorities"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the priority ordering of an organization's branding policies."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"brandingPolicyIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies/priorities",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"brandingPolicies",
																"priorities"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"brandingPolicyIds\": [\n    \"123\",\n    \"456\",\n    \"789\"\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "createOrganizationBrandingPolicy",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"adminSettings\": {\n    \"appliesTo\": \"<string>\",\n    \"values\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"helpSettings\": {\n    \"helpTab\": \"<string>\",\n    \"getHelpSubtab\": \"<string>\",\n    \"communitySubtab\": \"<string>\",\n    \"casesSubtab\": \"<string>\",\n    \"dataProtectionRequestsSubtab\": \"<string>\",\n    \"getHelpSubtabKnowledgeBaseSearch\": \"<string>\",\n    \"universalSearchKnowledgeBaseSearch\": \"<string>\",\n    \"ciscoMerakiProductDocumentation\": \"<string>\",\n    \"supportContactInfo\": \"<string>\",\n    \"newFeaturesSubtab\": \"<string>\",\n    \"firewallInfoSubtab\": \"<string>\",\n    \"apiDocsSubtab\": \"<string>\",\n    \"hardwareReplacementsSubtab\": \"<string>\",\n    \"smForums\": \"<string>\",\n    \"helpWidget\": \"<string>\"\n  },\n  \"customLogo\": {\n    \"enabled\": \"<boolean>\",\n    \"image\": {\n      \"contents\": \"<byte>\",\n      \"format\": \"<string>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"brandingPolicies"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Add a new branding policy to an organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"My Branding Policy\",\n  \"enabled\": true,\n  \"adminSettings\": {\n    \"appliesTo\": \"All admins of networks...\",\n    \"values\": [\n      \"N_1234\",\n      \"L_5678\"\n    ]\n  },\n  \"helpSettings\": {\n    \"helpTab\": \"show\",\n    \"getHelpSubtab\": \"default or inherit\",\n    \"communitySubtab\": \"show\",\n    \"casesSubtab\": \"hide\",\n    \"dataProtectionRequestsSubtab\": \"default or inherit\",\n    \"getHelpSubtabKnowledgeBaseSearch\": \"<h1>Some custom HTML content</h1>\",\n    \"universalSearchKnowledgeBaseSearch\": \"hide\",\n    \"ciscoMerakiProductDocumentation\": \"show\",\n    \"supportContactInfo\": \"show\",\n    \"newFeaturesSubtab\": \"show\",\n    \"firewallInfoSubtab\": \"hide\",\n    \"apiDocsSubtab\": \"default or inherit\",\n    \"hardwareReplacementsSubtab\": \"hide\",\n    \"smForums\": \"hide\",\n    \"helpWidget\": \"hide\"\n  },\n  \"customLogo\": {\n    \"enabled\": true,\n    \"image\": {\n      \"contents\": \"Hyperg26C8F4h8CvcoUqpA==\",\n      \"format\": \"jpg\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"brandingPolicies"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"My Branding Policy\",\n  \"enabled\": true,\n  \"adminSettings\": {\n    \"appliesTo\": \"All admins of networks...\",\n    \"values\": [\n      \"N_1234\",\n      \"L_5678\"\n    ]\n  },\n  \"helpSettings\": {\n    \"helpTab\": \"show\",\n    \"getHelpSubtab\": \"default or inherit\",\n    \"communitySubtab\": \"show\",\n    \"casesSubtab\": \"hide\",\n    \"dataProtectionRequestsSubtab\": \"default or inherit\",\n    \"getHelpSubtabKnowledgeBaseSearch\": \"<h1>Some custom HTML content</h1>\",\n    \"universalSearchKnowledgeBaseSearch\": \"hide\",\n    \"ciscoMerakiProductDocumentation\": \"show\",\n    \"supportContactInfo\": \"show\",\n    \"newFeaturesSubtab\": \"show\",\n    \"firewallInfoSubtab\": \"hide\",\n    \"apiDocsSubtab\": \"default or inherit\",\n    \"hardwareReplacementsSubtab\": \"hide\",\n    \"smForums\": \"hide\",\n    \"helpWidget\": \"hide\"\n  },\n  \"customLogo\": {\n    \"enabled\": true,\n    \"image\": {\n      \"preview\": {\n        \"url\": \"https://meraki-na.s3.amazonaws.com/org-assets/my-image.png\",\n        \"expiresAt\": \"2022-04-06T06:19:27-07:00\"\n      }\n    }\n  }\n}"
										}
									]
								},
								{
									"name": "deleteOrganizationBrandingPolicy",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies/:brandingPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"brandingPolicies",
												":brandingPolicyId"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "brandingPolicyId",
													"value": "{{brandingPolicyId}}",
													"description": "(Required) Branding policy ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Delete a branding policy"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies/:brandingPolicyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"brandingPolicies",
														":brandingPolicyId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "brandingPolicyId",
															"value": "<string>",
															"description": "(Required) Branding policy ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "getOrganizationBrandingPolicies",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"brandingPolicies"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "List the branding policies of an organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"brandingPolicies"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"name\": \"My Branding Policy\",\n    \"enabled\": true,\n    \"adminSettings\": {\n      \"appliesTo\": \"All admins of networks...\",\n      \"values\": [\n        \"N_1234\",\n        \"L_5678\"\n      ]\n    },\n    \"helpSettings\": {\n      \"helpTab\": \"show\",\n      \"getHelpSubtab\": \"default or inherit\",\n      \"communitySubtab\": \"show\",\n      \"casesSubtab\": \"hide\",\n      \"dataProtectionRequestsSubtab\": \"default or inherit\",\n      \"getHelpSubtabKnowledgeBaseSearch\": \"<h1>Some custom HTML content</h1>\",\n      \"universalSearchKnowledgeBaseSearch\": \"hide\",\n      \"ciscoMerakiProductDocumentation\": \"show\",\n      \"supportContactInfo\": \"show\",\n      \"newFeaturesSubtab\": \"show\",\n      \"firewallInfoSubtab\": \"hide\",\n      \"apiDocsSubtab\": \"default or inherit\",\n      \"hardwareReplacementsSubtab\": \"hide\",\n      \"smForums\": \"hide\",\n      \"helpWidget\": \"hide\"\n    },\n    \"customLogo\": {\n      \"enabled\": true,\n      \"image\": {\n        \"preview\": {\n          \"url\": \"https://meraki-na.s3.amazonaws.com/org-assets/my-image.png\",\n          \"expiresAt\": \"2022-04-06T06:19:27-07:00\"\n        }\n      }\n    }\n  }\n]"
										}
									]
								},
								{
									"name": "getOrganizationBrandingPolicy",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies/:brandingPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"brandingPolicies",
												":brandingPolicyId"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "brandingPolicyId",
													"value": "{{brandingPolicyId}}",
													"description": "(Required) Branding policy ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return a branding policy"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies/:brandingPolicyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"brandingPolicies",
														":brandingPolicyId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "brandingPolicyId",
															"value": "<string>",
															"description": "(Required) Branding policy ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"My Branding Policy\",\n  \"enabled\": true,\n  \"adminSettings\": {\n    \"appliesTo\": \"All admins of networks...\",\n    \"values\": [\n      \"N_1234\",\n      \"L_5678\"\n    ]\n  },\n  \"helpSettings\": {\n    \"helpTab\": \"show\",\n    \"getHelpSubtab\": \"default or inherit\",\n    \"communitySubtab\": \"show\",\n    \"casesSubtab\": \"hide\",\n    \"dataProtectionRequestsSubtab\": \"default or inherit\",\n    \"getHelpSubtabKnowledgeBaseSearch\": \"<h1>Some custom HTML content</h1>\",\n    \"universalSearchKnowledgeBaseSearch\": \"hide\",\n    \"ciscoMerakiProductDocumentation\": \"show\",\n    \"supportContactInfo\": \"show\",\n    \"newFeaturesSubtab\": \"show\",\n    \"firewallInfoSubtab\": \"hide\",\n    \"apiDocsSubtab\": \"default or inherit\",\n    \"hardwareReplacementsSubtab\": \"hide\",\n    \"smForums\": \"hide\",\n    \"helpWidget\": \"hide\"\n  },\n  \"customLogo\": {\n    \"enabled\": true,\n    \"image\": {\n      \"preview\": {\n        \"url\": \"https://meraki-na.s3.amazonaws.com/org-assets/my-image.png\",\n        \"expiresAt\": \"2022-04-06T06:19:27-07:00\"\n      }\n    }\n  }\n}"
										}
									]
								},
								{
									"name": "updateOrganizationBrandingPolicy",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"adminSettings\": {\n    \"appliesTo\": \"<string>\",\n    \"values\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"helpSettings\": {\n    \"helpTab\": \"<string>\",\n    \"getHelpSubtab\": \"<string>\",\n    \"communitySubtab\": \"<string>\",\n    \"casesSubtab\": \"<string>\",\n    \"dataProtectionRequestsSubtab\": \"<string>\",\n    \"getHelpSubtabKnowledgeBaseSearch\": \"<string>\",\n    \"universalSearchKnowledgeBaseSearch\": \"<string>\",\n    \"ciscoMerakiProductDocumentation\": \"<string>\",\n    \"supportContactInfo\": \"<string>\",\n    \"newFeaturesSubtab\": \"<string>\",\n    \"firewallInfoSubtab\": \"<string>\",\n    \"apiDocsSubtab\": \"<string>\",\n    \"hardwareReplacementsSubtab\": \"<string>\",\n    \"smForums\": \"<string>\",\n    \"helpWidget\": \"<string>\"\n  },\n  \"customLogo\": {\n    \"enabled\": \"<boolean>\",\n    \"image\": {\n      \"contents\": \"<byte>\",\n      \"format\": \"<string>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies/:brandingPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"brandingPolicies",
												":brandingPolicyId"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "brandingPolicyId",
													"value": "{{brandingPolicyId}}",
													"description": "(Required) Branding policy ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Update a branding policy"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"My Branding Policy\",\n  \"enabled\": true,\n  \"adminSettings\": {\n    \"appliesTo\": \"All admins of networks...\",\n    \"values\": [\n      \"N_1234\",\n      \"L_5678\"\n    ]\n  },\n  \"helpSettings\": {\n    \"helpTab\": \"show\",\n    \"getHelpSubtab\": \"default or inherit\",\n    \"communitySubtab\": \"show\",\n    \"casesSubtab\": \"hide\",\n    \"dataProtectionRequestsSubtab\": \"default or inherit\",\n    \"getHelpSubtabKnowledgeBaseSearch\": \"<h1>Some custom HTML content</h1>\",\n    \"universalSearchKnowledgeBaseSearch\": \"hide\",\n    \"ciscoMerakiProductDocumentation\": \"show\",\n    \"supportContactInfo\": \"show\",\n    \"newFeaturesSubtab\": \"show\",\n    \"firewallInfoSubtab\": \"hide\",\n    \"apiDocsSubtab\": \"default or inherit\",\n    \"hardwareReplacementsSubtab\": \"hide\",\n    \"smForums\": \"hide\",\n    \"helpWidget\": \"hide\"\n  },\n  \"customLogo\": {\n    \"enabled\": true,\n    \"image\": {\n      \"contents\": \"Hyperg26C8F4h8CvcoUqpA==\",\n      \"format\": \"jpg\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/brandingPolicies/:brandingPolicyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"brandingPolicies",
														":brandingPolicyId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "brandingPolicyId",
															"value": "<string>",
															"description": "(Required) Branding policy ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"My Branding Policy\",\n  \"enabled\": true,\n  \"adminSettings\": {\n    \"appliesTo\": \"All admins of networks...\",\n    \"values\": [\n      \"N_1234\",\n      \"L_5678\"\n    ]\n  },\n  \"helpSettings\": {\n    \"helpTab\": \"show\",\n    \"getHelpSubtab\": \"default or inherit\",\n    \"communitySubtab\": \"show\",\n    \"casesSubtab\": \"hide\",\n    \"dataProtectionRequestsSubtab\": \"default or inherit\",\n    \"getHelpSubtabKnowledgeBaseSearch\": \"<h1>Some custom HTML content</h1>\",\n    \"universalSearchKnowledgeBaseSearch\": \"hide\",\n    \"ciscoMerakiProductDocumentation\": \"show\",\n    \"supportContactInfo\": \"show\",\n    \"newFeaturesSubtab\": \"show\",\n    \"firewallInfoSubtab\": \"hide\",\n    \"apiDocsSubtab\": \"default or inherit\",\n    \"hardwareReplacementsSubtab\": \"hide\",\n    \"smForums\": \"hide\",\n    \"helpWidget\": \"hide\"\n  },\n  \"customLogo\": {\n    \"enabled\": true,\n    \"image\": {\n      \"preview\": {\n        \"url\": \"https://meraki-na.s3.amazonaws.com/org-assets/my-image.png\",\n        \"expiresAt\": \"2022-04-06T06:19:27-07:00\"\n      }\n    }\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "cellular",
							"item": [
								{
									"name": "sims",
									"item": [
										{
											"name": "getDeviceCellularSims",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/cellular/sims",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"cellular",
														"sims"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the SIM and APN configurations for a cellular device."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/cellular/sims",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"cellular",
																"sims"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"sims\": [\n    {\n      \"slot\": \"sim1\",\n      \"isPrimary\": false,\n      \"apns\": [\n        {\n          \"name\": \"internet\",\n          \"allowedIpTypes\": [\n            \"ipv4\",\n            \"ipv6\"\n          ],\n          \"authentication\": {\n            \"type\": \"pap\",\n            \"username\": \"milesmeraki\",\n            \"password\": \"secret\"\n          }\n        }\n      ]\n    }\n  ],\n  \"simOrdering\": [\n    \"sim1\",\n    \"sim2\",\n    \"sim3\"\n  ],\n  \"simFailover\": {\n    \"enabled\": true,\n    \"timeout\": 300\n  }\n}"
												}
											]
										},
										{
											"name": "updateDeviceCellularSims",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sims\": [\n    {\n      \"slot\": \"<string>\",\n      \"isPrimary\": false,\n      \"apns\": [\n        {\n          \"name\": \"<string>\",\n          \"allowedIpTypes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"authentication\": {\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"username\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"password\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"allowedIpTypes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"authentication\": {\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"username\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"password\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"simOrder\": \"<integer>\"\n    },\n    {\n      \"slot\": \"<string>\",\n      \"isPrimary\": false,\n      \"apns\": [\n        {\n          \"name\": \"<string>\",\n          \"allowedIpTypes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"authentication\": {\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"username\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"password\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"allowedIpTypes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"authentication\": {\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"username\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"password\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"simOrder\": \"<integer>\"\n    }\n  ],\n  \"simOrdering\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"simFailover\": {\n    \"enabled\": \"<boolean>\",\n    \"timeout\": \"<integer>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/cellular/sims",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"cellular",
														"sims"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Updates the SIM and APN configurations for a cellular device."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"sims\": [\n    {\n      \"slot\": \"<string>\",\n      \"isPrimary\": false,\n      \"apns\": [\n        {\n          \"name\": \"<string>\",\n          \"allowedIpTypes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"authentication\": {\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"username\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"password\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"allowedIpTypes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"authentication\": {\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"username\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"password\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"simOrder\": \"<integer>\"\n    },\n    {\n      \"slot\": \"<string>\",\n      \"isPrimary\": false,\n      \"apns\": [\n        {\n          \"name\": \"<string>\",\n          \"allowedIpTypes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"authentication\": {\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"username\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"password\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"allowedIpTypes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"authentication\": {\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"username\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"password\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"simOrder\": \"<integer>\"\n    }\n  ],\n  \"simOrdering\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"simFailover\": {\n    \"enabled\": \"<boolean>\",\n    \"timeout\": \"<integer>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/cellular/sims",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"cellular",
																"sims"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"sims\": [\n    {\n      \"slot\": \"sim1\",\n      \"isPrimary\": false,\n      \"apns\": [\n        {\n          \"name\": \"internet\",\n          \"allowedIpTypes\": [\n            \"ipv4\",\n            \"ipv6\"\n          ],\n          \"authentication\": {\n            \"type\": \"pap\",\n            \"username\": \"milesmeraki\",\n            \"password\": \"secret\"\n          }\n        }\n      ]\n    }\n  ],\n  \"simOrdering\": [\n    \"sim1\",\n    \"sim2\",\n    \"sim3\"\n  ],\n  \"simFailover\": {\n    \"enabled\": true,\n    \"timeout\": 300\n  }\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "clients",
							"item": [
								{
									"name": "policy",
									"item": [
										{
											"name": "getNetworkClientPolicy",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/policy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"clients",
														":clientId",
														"policy"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "clientId",
															"value": "{{clientId}}",
															"description": "(Required) Client ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/policy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"clients",
																":clientId",
																"policy"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "clientId",
																	"value": "<string>",
																	"description": "(Required) Client ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"mac\": \"00:11:22:33:44:55\",\n  \"devicePolicy\": \"Group policy\",\n  \"groupPolicyId\": \"101\"\n}"
												}
											]
										},
										{
											"name": "updateNetworkClientPolicy",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"devicePolicy\": \"<string>\",\n  \"groupPolicyId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/policy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"clients",
														":clientId",
														"policy"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "clientId",
															"value": "{{clientId}}",
															"description": "(Required) Client ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"devicePolicy\": \"Group policy\",\n  \"groupPolicyId\": \"101\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/policy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"clients",
																":clientId",
																"policy"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "clientId",
																	"value": "<string>",
																	"description": "(Required) Client ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"mac\": \"00:11:22:33:44:55\",\n  \"devicePolicy\": \"Group policy\",\n  \"groupPolicyId\": \"101\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "search",
									"item": [
										{
											"name": "getOrganizationClientsSearch",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/clients/search",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"clients",
														"search"
													],
													"query": [
														{
															"key": "perPage",
															"value": "{{perPage}}",
															"description": "The number of entries per page returned. Acceptable range is 3 - 5. Default is 5.",
															"disabled": true
														},
														{
															"key": "startingAfter",
															"value": "{{startingAfter}}",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "endingBefore",
															"value": "{{endingBefore}}",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "mac",
															"value": "{{mac}}",
															"description": "(Required) The MAC address of the client. Required.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the client details in an organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/clients/search?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&mac=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"clients",
																"search"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>"
																},
																{
																	"key": "startingAfter",
																	"value": "<string>"
																},
																{
																	"key": "endingBefore",
																	"value": "<string>"
																},
																{
																	"key": "mac",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Link",
															"value": "Lorem nisi fugiat",
															"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"clientId\": \"k74272e\",\n  \"mac\": \"22:33:44:55:66:77\",\n  \"manufacturer\": \"Apple\",\n  \"records\": [\n    {\n      \"network\": {\n        \"id\": \"N_24329156\",\n        \"organizationId\": \"2930418\",\n        \"name\": \"Main Office\",\n        \"productTypes\": [\n          \"appliance\",\n          \"switch\",\n          \"wireless\"\n        ],\n        \"timeZone\": \"America/Los_Angeles\",\n        \"tags\": [\n          \"tag1\",\n          \"tag2\"\n        ],\n        \"enrollmentString\": \"my-enrollment-string\",\n        \"url\": \"https://n1.meraki.com//n//manage/nodes/list\",\n        \"notes\": \"Additional description of the network\",\n        \"isBoundToConfigTemplate\": false\n      },\n      \"ip\": \"1.2.3.4\",\n      \"ip6\": \"2001:db8:3c4d:15::1\",\n      \"description\": \"Miles's phone\",\n      \"firstSeen\": 1518365681,\n      \"lastSeen\": 1526087474,\n      \"os\": \"iOS\",\n      \"user\": \"milesmeraki\",\n      \"vlan\": \"100\",\n      \"ssid\": \"My SSID\",\n      \"switchport\": \"My switch port\",\n      \"wirelessCapabilities\": \"802.11b - 2.4 GHz\",\n      \"smInstalled\": true,\n      \"recentDeviceMac\": \"22:33:44:55:66:77\",\n      \"clientVpnConnections\": [\n        {\n          \"remoteIp\": \"1.2.3.4\",\n          \"connectedAt\": 1522613355,\n          \"disconnectedAt\": 1522613360\n        }\n      ],\n      \"lldp\": [\n        [\n          \"System name\",\n          \"Some system name\"\n        ],\n        [\n          \"System description\",\n          \"Some system description\"\n        ],\n        [\n          \"Port ID\",\n          \"1\"\n        ],\n        [\n          \"Chassis ID\",\n          \"00:18:0a:00:00:00\"\n        ],\n        [\n          \"Port description\",\n          \"eth0\"\n        ],\n        [\n          \"System capabilities\",\n          \"Two-port MAC Relay\"\n        ]\n      ],\n      \"cdp\": [\n        [\n          \"System name\",\n          \"Some system name\"\n        ],\n        [\n          \"System description\",\n          \"Some system description\"\n        ],\n        [\n          \"Port ID\",\n          \"1\"\n        ],\n        [\n          \"Chassis ID\",\n          \"00:18:0a:00:00:00\"\n        ],\n        [\n          \"Port description\",\n          \"eth0\"\n        ],\n        [\n          \"System capabilities\",\n          \"Two-port MAC Relay\"\n        ]\n      ],\n      \"status\": \"Online\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "splashAuthorizationStatus",
									"item": [
										{
											"name": "getNetworkClientSplashAuthorizationStatus",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/splashAuthorizationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"clients",
														":clientId",
														"splashAuthorizationStatus"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "clientId",
															"value": "{{clientId}}",
															"description": "(Required) Client ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the splash authorization for a client, for each SSID they've associated with through splash. Only enabled SSIDs with Click-through splash enabled will be included. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/splashAuthorizationStatus",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"clients",
																":clientId",
																"splashAuthorizationStatus"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "clientId",
																	"value": "<string>",
																	"description": "(Required) Client ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ssids\": {\n    \"0\": {\n      \"isAuthorized\": true,\n      \"authorizedAt\": \"2018-02-11T00:00:00Z\",\n      \"expiresAt\": \"2018-05-12T00:00:00Z\"\n    }\n  }\n}"
												}
											]
										},
										{
											"name": "updateNetworkClientSplashAuthorizationStatus",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ssids\": {\n    \"0\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"1\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"2\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"3\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"4\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"5\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"6\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"7\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"8\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"9\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"10\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"11\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"12\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"13\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"14\": {\n      \"isAuthorized\": \"<boolean>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/splashAuthorizationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"clients",
														":clientId",
														"splashAuthorizationStatus"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "clientId",
															"value": "{{clientId}}",
															"description": "(Required) Client ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update a client's splash authorization. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ssids\": {\n    \"0\": {\n      \"isAuthorized\": true\n    },\n    \"2\": {\n      \"isAuthorized\": false\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/splashAuthorizationStatus",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"clients",
																":clientId",
																"splashAuthorizationStatus"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "clientId",
																	"value": "<string>",
																	"description": "(Required) Client ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ssids\": {\n    \"0\": {\n      \"isAuthorized\": true,\n      \"authorizedAt\": \"2017-07-19 16:24:13 UTC\",\n      \"expiresAt\": \"2017-07-20 16:24:13 UTC\"\n    },\n    \"2\": {\n      \"isAuthorized\": false\n    }\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "provisionNetworkClients",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"clients\": [\n    {\n      \"mac\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"mac\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"devicePolicy\": \"<string>\",\n  \"groupPolicyId\": \"<string>\",\n  \"policiesBySecurityAppliance\": {\n    \"devicePolicy\": \"<string>\"\n  },\n  \"policiesBySsid\": {\n    \"0\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"1\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"2\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"3\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"4\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"5\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"6\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"7\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"8\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"9\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"10\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"11\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"12\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"13\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"14\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/clients/provision",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"clients",
												"provision"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Provisions a client with a name and policy. Clients can be provisioned before they associate to the network."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"clients\": [\n    {\n      \"mac\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"mac\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"devicePolicy\": \"<string>\",\n  \"groupPolicyId\": \"<string>\",\n  \"policiesBySecurityAppliance\": {\n    \"devicePolicy\": \"<string>\"\n  },\n  \"policiesBySsid\": {\n    \"0\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"1\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"2\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"3\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"4\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"5\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"6\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"7\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"8\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"9\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"10\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"11\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"12\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"13\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"14\": {\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<string>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/clients/provision",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"clients",
														"provision"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"clients\": [\n    {\n      \"mac\": \"00:11:22:33:44:55\",\n      \"clientId\": \"k74272e\",\n      \"name\": \"Miles's phone\",\n      \"message\": \"Blocked message for client\"\n    }\n  ],\n  \"devicePolicy\": \"Group policy\",\n  \"groupPolicyId\": \"101\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "configTemplates",
							"item": [
								{
									"name": "createOrganizationConfigTemplate",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"timeZone\": \"<string>\",\n  \"copyFromNetworkId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/configTemplates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"configTemplates"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Create a new configuration template"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"My config template\",\n  \"timeZone\": \"America/Los_Angeles\",\n  \"copyFromNetworkId\": \"N_24329156\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/configTemplates",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"configTemplates"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"N_24329156\",\n  \"name\": \"My config template\",\n  \"productTypes\": [\n    \"appliance\",\n    \"switch\",\n    \"wireless\"\n  ],\n  \"timeZone\": \"America/Los_Angeles\"\n}"
										}
									]
								},
								{
									"name": "deleteOrganizationConfigTemplate",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/configTemplates/:configTemplateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"configTemplates",
												":configTemplateId"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "configTemplateId",
													"value": "{{configTemplateId}}",
													"description": "(Required) Config template ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Remove a configuration template"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/configTemplates/:configTemplateId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"configTemplates",
														":configTemplateId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "configTemplateId",
															"value": "<string>",
															"description": "(Required) Config template ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "getOrganizationConfigTemplate",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/configTemplates/:configTemplateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"configTemplates",
												":configTemplateId"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "configTemplateId",
													"value": "{{configTemplateId}}",
													"description": "(Required) Config template ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return a single configuration template"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/configTemplates/:configTemplateId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"configTemplates",
														":configTemplateId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "configTemplateId",
															"value": "<string>",
															"description": "(Required) Config template ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"N_24329156\",\n  \"name\": \"My config template\",\n  \"productTypes\": [\n    \"appliance\",\n    \"switch\",\n    \"wireless\"\n  ],\n  \"timeZone\": \"America/Los_Angeles\"\n}"
										}
									]
								},
								{
									"name": "getOrganizationConfigTemplates",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/configTemplates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"configTemplates"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "List the configuration templates for this organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/configTemplates",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"configTemplates"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"N_24329156\",\n    \"name\": \"My config template\",\n    \"productTypes\": [\n      \"appliance\",\n      \"switch\",\n      \"wireless\"\n    ],\n    \"timeZone\": \"America/Los_Angeles\"\n  }\n]"
										}
									]
								},
								{
									"name": "updateOrganizationConfigTemplate",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"timeZone\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/configTemplates/:configTemplateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"configTemplates",
												":configTemplateId"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "configTemplateId",
													"value": "{{configTemplateId}}",
													"description": "(Required) Config template ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Update a configuration template"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"My config template\",\n  \"timeZone\": \"America/Los_Angeles\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/configTemplates/:configTemplateId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"configTemplates",
														":configTemplateId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "configTemplateId",
															"value": "<string>",
															"description": "(Required) Config template ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"N_24329156\",\n  \"name\": \"My config template\",\n  \"productTypes\": [\n    \"appliance\",\n    \"switch\",\n    \"wireless\"\n  ],\n  \"timeZone\": \"America/Los_Angeles\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "devices",
							"item": [
								{
									"name": "claim",
									"item": [
										{
											"name": "vmxNetworkDevicesClaim",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"size\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/devices/claim/vmx",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"devices",
														"claim",
														"vmx"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Claim a vMX into a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"size\": \"small\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/devices/claim/vmx",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"devices",
																"claim",
																"vmx"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"My AP\",\n  \"lat\": 37.4180951010362,\n  \"lng\": -122.098531723022,\n  \"address\": \"1600 Pennsylvania Ave\",\n  \"notes\": \"My AP's note\",\n  \"tags\": [\n    \"recently-added\"\n  ],\n  \"networkId\": \"N_24329156\",\n  \"serial\": \"Q234-ABCD-5678\",\n  \"model\": \"MR34\",\n  \"imei\": \"123456789000000\",\n  \"mac\": \"00:11:22:33:44:55\",\n  \"lanIp\": \"1.2.3.4\",\n  \"firmware\": \"wireless-25-14\",\n  \"productType\": \"wireless\",\n  \"details\": [\n    {\n      \"name\": \"Catalyst serial\",\n      \"value\": \"123ABC\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "controller",
									"item": [
										{
											"name": "migrations",
											"item": [
												{
													"name": "createOrganizationDevicesControllerMigration",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"target\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/devices/controller/migrations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"devices",
																"controller",
																"migrations"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Migrate devices to another controller or management mode"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"target\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/devices/controller/migrations",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"devices",
																		"controller",
																		"migrations"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"serial\": \"QXYZ-DEFG-HIJK\",\n    \"target\": \"wirelessController\",\n    \"createdAt\": \"2020-10-21T02:00:00Z\",\n    \"migratedAt\": \"2020-10-21T03:00:00Z\"\n  }\n]"
														}
													]
												},
												{
													"name": "getOrganizationDevicesControllerMigrations",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/devices/controller/migrations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"devices",
																"controller",
																"migrations"
															],
															"query": [
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "A list of Meraki Serials for which to retrieve migrations",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "A list of Meraki Serials for which to retrieve migrations",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Filter device migrations by network IDs",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Filter device migrations by network IDs",
																	"disabled": true
																},
																{
																	"key": "target",
																	"value": "{{target}}",
																	"description": "Filter device migrations by target destination",
																	"disabled": true
																},
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Retrieve device migration statuses in an organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/devices/controller/migrations?serials=<string>&serials=<string>&networkIds=<string>&networkIds=<string>&target=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"devices",
																		"controller",
																		"migrations"
																	],
																	"query": [
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "target",
																			"value": "<string>"
																		},
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": [\n    {\n      \"serial\": \"QXYZ-DEFG-HIJK\",\n      \"target\": \"wirelessController\",\n      \"createdAt\": \"2020-10-21T02:00:00Z\",\n      \"migratedAt\": \"2020-10-21T03:00:00Z\"\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 10,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "details",
									"item": [
										{
											"name": "bulkUpdate",
											"item": [
												{
													"name": "bulkUpdateOrganizationDevicesDetails",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"details\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/devices/details/bulkUpdate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"devices",
																"details",
																"bulkUpdate"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Updating device details (currently only used for Catalyst devices)"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"details\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/devices/details/bulkUpdate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"devices",
																		"details",
																		"bulkUpdate"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"serials\": [\n    \"Q234-ABCD-0001\",\n    \"Q234-ABCD-0002\",\n    \"Q234-ABCD-0003\"\n  ]\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "overview",
									"item": [
										{
											"name": "byModel",
											"item": [
												{
													"name": "getOrganizationDevicesOverviewByModel",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/devices/overview/byModel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"devices",
																"overview",
																"byModel"
															],
															"query": [
																{
																	"key": "models",
																	"value": "{{models}}",
																	"description": "Optional parameter to filter devices by one or more models. All returned devices will have a model that is an exact match.",
																	"disabled": true
																},
																{
																	"key": "models",
																	"value": "{{models}}",
																	"description": "Optional parameter to filter devices by one or more models. All returned devices will have a model that is an exact match.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Optional parameter to filter devices by networkId.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Optional parameter to filter devices by networkId.",
																	"disabled": true
																},
																{
																	"key": "productTypes",
																	"value": "{{productTypes}}",
																	"description": "Optional parameter to filter device by device product types. This filter uses multiple exact matches.",
																	"disabled": true
																},
																{
																	"key": "productTypes",
																	"value": "{{productTypes}}",
																	"description": "Optional parameter to filter device by device product types. This filter uses multiple exact matches.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Lists the count for each device model"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/devices/overview/byModel?models=<string>&models=<string>&networkIds=<string>&networkIds=<string>&productTypes=<string>&productTypes=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"devices",
																		"overview",
																		"byModel"
																	],
																	"query": [
																		{
																			"key": "models",
																			"value": "<string>"
																		},
																		{
																			"key": "models",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "productTypes",
																			"value": "<string>"
																		},
																		{
																			"key": "productTypes",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"counts\": [\n    {\n      \"model\": \"MR34\",\n      \"total\": 1\n    }\n  ]\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "packetCapture",
									"item": [
										{
											"name": "captures",
											"item": [
												{
													"name": "downloadUrl",
													"item": [
														{
															"name": "generateOrganizationDevicesPacketCaptureCaptureDownloadUrl",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/devices/packetCapture/captures/:captureId/downloadUrl/generate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"devices",
																		"packetCapture",
																		"captures",
																		":captureId",
																		"downloadUrl",
																		"generate"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "captureId",
																			"value": "{{captureId}}",
																			"description": "(Required) Capture ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Get presigned download URL for given packet capture id"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/devices/packetCapture/captures/:captureId/downloadUrl/generate",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"devices",
																				"packetCapture",
																				"captures",
																				":captureId",
																				"downloadUrl",
																				"generate"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "captureId",
																					"value": "<string>",
																					"description": "(Required) Capture ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"captureId\": \"1234\",\n  \"downloadUrl\": \"example.com\",\n  \"url\": \"example.com\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "bulkOrganizationDevicesPacketCaptureCapturesCreate",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"devices\": [\n    {\n      \"serial\": \"<string>\",\n      \"switchports\": \"<string>\",\n      \"interface\": \"<string>\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"switchports\": \"<string>\",\n      \"interface\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"filterExpression\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/devices/packetCapture/captures/bulkCreate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"devices",
																"packetCapture",
																"captures",
																"bulkCreate"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Perform a packet capture on multiple devices and store in Meraki Cloud."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"devices\": [\n    {\n      \"serial\": \"<string>\",\n      \"switchports\": \"<string>\",\n      \"interface\": \"<string>\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"switchports\": \"<string>\",\n      \"interface\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"filterExpression\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/devices/packetCapture/captures/bulkCreate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"devices",
																		"packetCapture",
																		"captures",
																		"bulkCreate"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": [\n    {\n      \"captureId\": \"1234\",\n      \"network\": {\n        \"id\": \"N_24329156\",\n        \"name\": \"Main Office\"\n      },\n      \"device\": {\n        \"name\": \"My AP\",\n        \"serial\": \"Q234-ABCD-5678\"\n      },\n      \"admin\": {\n        \"id\": \"1234\",\n        \"name\": \"Miles Meraki\"\n      },\n      \"client\": {\n        \"id\": \"k74272e\",\n        \"mac\": \"22:33:44:55:66:77\"\n      },\n      \"details\": [\n        {\n          \"name\": \"reason\",\n          \"value\": \"bad_password\",\n          \"productType\": \"wireless\"\n        }\n      ],\n      \"name\": \"file_name\",\n      \"startTs\": \"2018-02-11T00:00:00.090210Z\",\n      \"ports\": \"1, 2\",\n      \"status\": \"downloading\",\n      \"errorMessage\": \"Some error message\",\n      \"destination\": \"upload_to_cloud\",\n      \"process\": \"feedback\",\n      \"file\": {\n        \"size\": 1066\n      },\n      \"duration\": 60,\n      \"filterExpression\": \"(icmp)\",\n      \"counts\": {\n        \"packets\": {\n          \"total\": 10\n        }\n      },\n      \"interface\": \"wired\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "bulkOrganizationDevicesPacketCaptureCapturesDelete",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"captureIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/devices/packetCapture/captures/bulkDelete",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"devices",
																"packetCapture",
																"captures",
																"bulkDelete"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "BulkDelete packet captures from cloud"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"captureIds\": [\n    \"1234\",\n    \"4567\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/devices/packetCapture/captures/bulkDelete",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"devices",
																		"packetCapture",
																		"captures",
																		"bulkDelete"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "createOrganizationDevicesPacketCaptureCapture",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"outputType\": \"<string>\",\n  \"destination\": \"<string>\",\n  \"ports\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"filterExpression\": \"<string>\",\n  \"interface\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/devices/packetCapture/captures",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"devices",
																"packetCapture",
																"captures"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Perform a packet capture on a device and store in Meraki Cloud. Only a single switch may be chosen per request, while multiple access points are allowed at once."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"outputType\": \"<string>\",\n  \"destination\": \"<string>\",\n  \"ports\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"filterExpression\": \"<string>\",\n  \"interface\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/devices/packetCapture/captures",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"devices",
																		"packetCapture",
																		"captures"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"captureId\": \"1234\",\n  \"network\": {\n    \"id\": \"N_24329156\",\n    \"name\": \"Main Office\"\n  },\n  \"device\": {\n    \"name\": \"My AP\",\n    \"serial\": \"Q234-ABCD-5678\"\n  },\n  \"admin\": {\n    \"id\": \"1234\",\n    \"name\": \"Miles Meraki\"\n  },\n  \"client\": {\n    \"id\": \"k74272e\",\n    \"mac\": \"22:33:44:55:66:77\"\n  },\n  \"details\": [\n    {\n      \"name\": \"reason\",\n      \"value\": \"bad_password\",\n      \"productType\": \"wireless\"\n    }\n  ],\n  \"name\": \"file_name\",\n  \"startTs\": \"2018-02-11T00:00:00.090210Z\",\n  \"ports\": \"1, 2\",\n  \"status\": \"downloading\",\n  \"errorMessage\": \"Some error message\",\n  \"destination\": \"upload_to_cloud\",\n  \"process\": \"feedback\",\n  \"file\": {\n    \"size\": 1066\n  },\n  \"duration\": 60,\n  \"filterExpression\": \"(icmp)\",\n  \"counts\": {\n    \"packets\": {\n      \"total\": 10\n    }\n  },\n  \"interface\": \"wired\"\n}"
														}
													]
												},
												{
													"name": "deleteOrganizationDevicesPacketCaptureCapture",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/devices/packetCapture/captures/:captureId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"devices",
																"packetCapture",
																"captures",
																":captureId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "captureId",
																	"value": "{{captureId}}",
																	"description": "(Required) Capture ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Delete a single packet capture from cloud using captureId"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/devices/packetCapture/captures/:captureId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"devices",
																		"packetCapture",
																		"captures",
																		":captureId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "captureId",
																			"value": "<string>",
																			"description": "(Required) Capture ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "getOrganizationDevicesPacketCaptureCaptures",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/devices/packetCapture/captures",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"devices",
																"packetCapture",
																"captures"
															],
															"query": [
																{
																	"key": "captureIds",
																	"value": "{{captureIds}}",
																	"description": "Return the packet captures of the specified capture ids",
																	"disabled": true
																},
																{
																	"key": "captureIds",
																	"value": "{{captureIds}}",
																	"description": "Return the packet captures of the specified capture ids",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Return the packet captures of the specified network(s)",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Return the packet captures of the specified network(s)",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Return the packet captures of the specified device(s)",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Return the packet captures of the specified device(s)",
																	"disabled": true
																},
																{
																	"key": "process",
																	"value": "{{process}}",
																	"description": "Return the packet captures of the specified process",
																	"disabled": true
																},
																{
																	"key": "process",
																	"value": "{{process}}",
																	"description": "Return the packet captures of the specified process",
																	"disabled": true
																},
																{
																	"key": "captureStatus",
																	"value": "{{captureStatus}}",
																	"description": "Return the packet captures of the specified capture status",
																	"disabled": true
																},
																{
																	"key": "captureStatus",
																	"value": "{{captureStatus}}",
																	"description": "Return the packet captures of the specified capture status",
																	"disabled": true
																},
																{
																	"key": "name",
																	"value": "{{name}}",
																	"description": "Return the packet captures matching the specified name",
																	"disabled": true
																},
																{
																	"key": "name",
																	"value": "{{name}}",
																	"description": "Return the packet captures matching the specified name",
																	"disabled": true
																},
																{
																	"key": "clientMac",
																	"value": "{{clientMac}}",
																	"description": "Return the packet captures matching the specified client macs",
																	"disabled": true
																},
																{
																	"key": "clientMac",
																	"value": "{{clientMac}}",
																	"description": "Return the packet captures matching the specified client macs",
																	"disabled": true
																},
																{
																	"key": "notes",
																	"value": "{{notes}}",
																	"description": "Return the packet captures matching the specified notes",
																	"disabled": true
																},
																{
																	"key": "deviceName",
																	"value": "{{deviceName}}",
																	"description": "Return the packet captures matching the specified device name",
																	"disabled": true
																},
																{
																	"key": "adminName",
																	"value": "{{adminName}}",
																	"description": "Return the packet captures matching the admin name",
																	"disabled": true
																},
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 100. Default is 10.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "sortOrder",
																	"value": "{{sortOrder}}",
																	"description": "Sorted order of entries. Order options are 'ascending' and 'descending'. Default is 'descending'.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List Packet Captures"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/devices/packetCapture/captures?captureIds=<string>&captureIds=<string>&networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&process=<string>&process=<string>&captureStatus=<string>&captureStatus=<string>&name=<string>&name=<string>&clientMac=<string>&clientMac=<string>&notes=<string>&deviceName=<string>&adminName=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&sortOrder=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"devices",
																		"packetCapture",
																		"captures"
																	],
																	"query": [
																		{
																			"key": "captureIds",
																			"value": "<string>"
																		},
																		{
																			"key": "captureIds",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "process",
																			"value": "<string>"
																		},
																		{
																			"key": "process",
																			"value": "<string>"
																		},
																		{
																			"key": "captureStatus",
																			"value": "<string>"
																		},
																		{
																			"key": "captureStatus",
																			"value": "<string>"
																		},
																		{
																			"key": "name",
																			"value": "<string>"
																		},
																		{
																			"key": "name",
																			"value": "<string>"
																		},
																		{
																			"key": "clientMac",
																			"value": "<string>"
																		},
																		{
																			"key": "clientMac",
																			"value": "<string>"
																		},
																		{
																			"key": "notes",
																			"value": "<string>"
																		},
																		{
																			"key": "deviceName",
																			"value": "<string>"
																		},
																		{
																			"key": "adminName",
																			"value": "<string>"
																		},
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		},
																		{
																			"key": "sortOrder",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": [\n    {\n      \"captureId\": \"1234\",\n      \"network\": {\n        \"id\": \"N_24329156\",\n        \"name\": \"Main Office\"\n      },\n      \"device\": {\n        \"name\": \"My AP\",\n        \"serial\": \"Q234-ABCD-5678\"\n      },\n      \"admin\": {\n        \"id\": \"1234\",\n        \"name\": \"Miles Meraki\"\n      },\n      \"client\": {\n        \"id\": \"k74272e\",\n        \"mac\": \"22:33:44:55:66:77\"\n      },\n      \"details\": [\n        {\n          \"name\": \"reason\",\n          \"value\": \"bad_password\",\n          \"productType\": \"wireless\"\n        }\n      ],\n      \"name\": \"file_name\",\n      \"startTs\": \"2018-02-11T00:00:00.090210Z\",\n      \"ports\": \"1, 2\",\n      \"status\": \"downloading\",\n      \"errorMessage\": \"Some error message\",\n      \"destination\": \"upload_to_cloud\",\n      \"process\": \"feedback\",\n      \"file\": {\n        \"size\": 1066\n      },\n      \"duration\": 60,\n      \"filterExpression\": \"(icmp)\",\n      \"counts\": {\n        \"packets\": {\n          \"total\": 10\n        }\n      },\n      \"interface\": \"wired\"\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 100,\n        \"remaining\": 100\n      }\n    }\n  }\n}"
														}
													]
												},
												{
													"name": "stopOrganizationDevicesPacketCaptureCapture",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/devices/packetCapture/captures/:captureId/stop",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"devices",
																"packetCapture",
																"captures",
																":captureId",
																"stop"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "captureId",
																	"value": "{{captureId}}",
																	"description": "(Required) Capture ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Stop a specific packet capture (not supported for Catalyst devices)"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/devices/packetCapture/captures/:captureId/stop",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"devices",
																		"packetCapture",
																		"captures",
																		":captureId",
																		"stop"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "captureId",
																			"value": "<string>",
																			"description": "(Required) Capture ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"captureId\": \"1234\",\n  \"network\": {\n    \"id\": \"N_24329156\",\n    \"name\": \"Main Office\"\n  },\n  \"device\": {\n    \"name\": \"My AP\",\n    \"serial\": \"Q234-ABCD-5678\"\n  },\n  \"admin\": {\n    \"id\": \"1234\",\n    \"name\": \"Miles Meraki\"\n  },\n  \"client\": {\n    \"id\": \"k74272e\",\n    \"mac\": \"22:33:44:55:66:77\"\n  },\n  \"details\": [\n    {\n      \"name\": \"reason\",\n      \"value\": \"bad_password\",\n      \"productType\": \"wireless\"\n    }\n  ],\n  \"name\": \"file_name\",\n  \"startTs\": \"2018-02-11T00:00:00.090210Z\",\n  \"ports\": \"1, 2\",\n  \"status\": \"downloading\",\n  \"errorMessage\": \"Some error message\",\n  \"destination\": \"upload_to_cloud\",\n  \"process\": \"feedback\",\n  \"file\": {\n    \"size\": 1066\n  },\n  \"duration\": 60,\n  \"filterExpression\": \"(icmp)\",\n  \"counts\": {\n    \"packets\": {\n      \"total\": 10\n    }\n  },\n  \"interface\": \"wired\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "schedules",
											"item": [
												{
													"name": "createOrganizationDevicesPacketCaptureSchedule",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"devices\": [\n    {\n      \"serial\": \"<string>\",\n      \"switchports\": \"<string>\",\n      \"interface\": \"<string>\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"switchports\": \"<string>\",\n      \"interface\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"filterExpression\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"schedule\": {\n    \"name\": \"<string>\",\n    \"startTs\": \"<string>\",\n    \"endTs\": \"<string>\",\n    \"frequency\": \"<string>\",\n    \"weekdays\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"recurrence\": \"<integer>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/devices/packetCapture/schedules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"devices",
																"packetCapture",
																"schedules"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Create a schedule for packet capture"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"devices\": [\n    {\n      \"serial\": \"<string>\",\n      \"switchports\": \"<string>\",\n      \"interface\": \"<string>\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"switchports\": \"<string>\",\n      \"interface\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"filterExpression\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"schedule\": {\n    \"name\": \"<string>\",\n    \"startTs\": \"<string>\",\n    \"endTs\": \"<string>\",\n    \"frequency\": \"<string>\",\n    \"weekdays\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"recurrence\": \"<integer>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/devices/packetCapture/schedules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"devices",
																		"packetCapture",
																		"schedules"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"scheduleId\": \"1234\",\n  \"devices\": [\n    {\n      \"device\": {\n        \"serial\": \"Q234-ABCD-5678\",\n        \"switchports\": \"1-3, 9\",\n        \"interface\": \"GigabitEthernet1/0/1\"\n      }\n    }\n  ],\n  \"name\": \"pcap_file_name\",\n  \"admin\": {\n    \"id\": \"1234\",\n    \"name\": \"Miles Meraki\"\n  },\n  \"notes\": \"capture reason\",\n  \"duration\": 60,\n  \"filterExpression\": \"(icmp)\",\n  \"createdAt\": \"2018-02-11T00:00:00.090210Z\",\n  \"updatedAt\": \"2018-02-11T00:00:00.090210Z\",\n  \"captureCount\": 2,\n  \"lastCaptureId\": \"1234\",\n  \"enabled\": true,\n  \"priority\": 1,\n  \"schedule\": {\n    \"name\": \"schedule_name\",\n    \"startTs\": \"2018-02-11T00:00:00.090210Z\",\n    \"endTs\": \"2018-02-11T00:00:00.090210Z\",\n    \"frequency\": \"week\",\n    \"weekdays\": [\n      \"Monday\",\n      \"Tuesday\"\n    ],\n    \"recurrence\": 1,\n    \"nextCaptureTs\": \"2018-02-11T00:00:00.090210Z\"\n  },\n  \"warnings\": [\n    \"This schedule conflicts with the schedule Test Schedule at the time 2025-01-28T18:25:06Z\"\n  ]\n}"
														}
													]
												},
												{
													"name": "deleteOrganizationDevicesPacketCaptureSchedule",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"scheduleId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/devices/packetCapture/schedules/:scheduleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"devices",
																"packetCapture",
																"schedules",
																":scheduleId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "scheduleId",
																	"value": "{{scheduleId}}",
																	"description": "(Required) Schedule ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Delete schedule from cloud"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"scheduleId\": \"1234\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/devices/packetCapture/schedules/:scheduleId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"devices",
																		"packetCapture",
																		"schedules",
																		":scheduleId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "scheduleId",
																			"value": "<string>",
																			"description": "(Required) Schedule ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "getOrganizationDevicesPacketCaptureSchedules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/devices/packetCapture/schedules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"devices",
																"packetCapture",
																"schedules"
															],
															"query": [
																{
																	"key": "scheduleIds",
																	"value": "{{scheduleIds}}",
																	"description": "Return the packet captures schedules of the specified packet capture schedule ids",
																	"disabled": true
																},
																{
																	"key": "scheduleIds",
																	"value": "{{scheduleIds}}",
																	"description": "Return the packet captures schedules of the specified packet capture schedule ids",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Return the scheduled packet captures of the specified network(s)",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Return the scheduled packet captures of the specified network(s)",
																	"disabled": true
																},
																{
																	"key": "deviceIds",
																	"value": "{{deviceIds}}",
																	"description": "Return the scheduled packet captures of the specified device(s)",
																	"disabled": true
																},
																{
																	"key": "deviceIds",
																	"value": "{{deviceIds}}",
																	"description": "Return the scheduled packet captures of the specified device(s)",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the Packet Capture Schedules"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/devices/packetCapture/schedules?scheduleIds=<string>&scheduleIds=<string>&networkIds=<string>&networkIds=<string>&deviceIds=<string>&deviceIds=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"devices",
																		"packetCapture",
																		"schedules"
																	],
																	"query": [
																		{
																			"key": "scheduleIds",
																			"value": "<string>"
																		},
																		{
																			"key": "scheduleIds",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "deviceIds",
																			"value": "<string>"
																		},
																		{
																			"key": "deviceIds",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": [\n    {\n      \"scheduleId\": \"1234\",\n      \"devices\": [\n        {\n          \"device\": {\n            \"serial\": \"Q234-ABCD-5678\",\n            \"switchports\": \"1-3, 9\",\n            \"interface\": \"GigabitEthernet1/0/1\"\n          }\n        }\n      ],\n      \"name\": \"pcap_file_name\",\n      \"admin\": {\n        \"id\": \"1234\",\n        \"name\": \"Miles Meraki\"\n      },\n      \"notes\": \"capture reason\",\n      \"duration\": 60,\n      \"filterExpression\": \"(icmp)\",\n      \"createdAt\": \"2018-02-11T00:00:00.090210Z\",\n      \"updatedAt\": \"2018-02-11T00:00:00.090210Z\",\n      \"captureCount\": 2,\n      \"lastCaptureId\": \"1234\",\n      \"enabled\": true,\n      \"priority\": 1,\n      \"schedule\": {\n        \"name\": \"schedule_name\",\n        \"startTs\": \"2018-02-11T00:00:00.090210Z\",\n        \"endTs\": \"2018-02-11T00:00:00.090210Z\",\n        \"frequency\": \"week\",\n        \"weekdays\": [\n          \"Monday\",\n          \"Tuesday\"\n        ],\n        \"recurrence\": 1,\n        \"nextCaptureTs\": \"2018-02-11T00:00:00.090210Z\"\n      },\n      \"warnings\": [\n        \"This schedule conflicts with the schedule Test Schedule at the time 2025-01-28T18:25:06Z\"\n      ]\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 100\n      }\n    }\n  }\n}"
														}
													]
												},
												{
													"name": "reorderOrganizationDevicesPacketCaptureSchedules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"order\": [\n    {\n      \"scheduleId\": \"<string>\",\n      \"priority\": \"<integer>\"\n    },\n    {\n      \"scheduleId\": \"<string>\",\n      \"priority\": \"<integer>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/devices/packetCapture/schedules/reorder",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"devices",
																"packetCapture",
																"schedules",
																"reorder"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Bulk update priorities of pcap schedules"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"order\": [\n    {\n      \"scheduleId\": \"<string>\",\n      \"priority\": \"<integer>\"\n    },\n    {\n      \"scheduleId\": \"<string>\",\n      \"priority\": \"<integer>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/devices/packetCapture/schedules/reorder",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"devices",
																		"packetCapture",
																		"schedules",
																		"reorder"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"updatedPriorities\": [\n    {\n      \"pcapScheduleConfigurationId\": \"1234\",\n      \"priority\": 1\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "updateOrganizationDevicesPacketCaptureSchedule",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"devices\": [\n    {\n      \"serial\": \"<string>\",\n      \"switchports\": \"<string>\",\n      \"interface\": \"<string>\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"switchports\": \"<string>\",\n      \"interface\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"filterExpression\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"schedule\": {\n    \"name\": \"<string>\",\n    \"startTs\": \"<string>\",\n    \"endTs\": \"<string>\",\n    \"frequency\": \"<string>\",\n    \"weekdays\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"recurrence\": \"<integer>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/devices/packetCapture/schedules/:scheduleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"devices",
																"packetCapture",
																"schedules",
																":scheduleId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "scheduleId",
																	"value": "{{scheduleId}}",
																	"description": "(Required) Schedule ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update a schedule for packet capture"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"devices\": [\n    {\n      \"serial\": \"<string>\",\n      \"switchports\": \"<string>\",\n      \"interface\": \"<string>\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"switchports\": \"<string>\",\n      \"interface\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"filterExpression\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"schedule\": {\n    \"name\": \"<string>\",\n    \"startTs\": \"<string>\",\n    \"endTs\": \"<string>\",\n    \"frequency\": \"<string>\",\n    \"weekdays\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"recurrence\": \"<integer>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/devices/packetCapture/schedules/:scheduleId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"devices",
																		"packetCapture",
																		"schedules",
																		":scheduleId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "scheduleId",
																			"value": "<string>",
																			"description": "(Required) Schedule ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"scheduleId\": \"1234\",\n  \"devices\": [\n    {\n      \"device\": {\n        \"serial\": \"Q234-ABCD-5678\",\n        \"switchports\": \"1-3, 9\",\n        \"interface\": \"GigabitEthernet1/0/1\"\n      }\n    }\n  ],\n  \"name\": \"pcap_file_name\",\n  \"admin\": {\n    \"id\": \"1234\",\n    \"name\": \"Miles Meraki\"\n  },\n  \"notes\": \"capture reason\",\n  \"duration\": 60,\n  \"filterExpression\": \"(icmp)\",\n  \"createdAt\": \"2018-02-11T00:00:00.090210Z\",\n  \"updatedAt\": \"2018-02-11T00:00:00.090210Z\",\n  \"captureCount\": 2,\n  \"lastCaptureId\": \"1234\",\n  \"enabled\": true,\n  \"priority\": 1,\n  \"schedule\": {\n    \"name\": \"schedule_name\",\n    \"startTs\": \"2018-02-11T00:00:00.090210Z\",\n    \"endTs\": \"2018-02-11T00:00:00.090210Z\",\n    \"frequency\": \"week\",\n    \"weekdays\": [\n      \"Monday\",\n      \"Tuesday\"\n    ],\n    \"recurrence\": 1,\n    \"nextCaptureTs\": \"2018-02-11T00:00:00.090210Z\"\n  },\n  \"warnings\": [\n    \"This schedule conflicts with the schedule Test Schedule at the time 2025-01-28T18:25:06Z\"\n  ]\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "claimNetworkDevices",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"detailsByDevice\": [\n    {\n      \"serial\": \"<string>\",\n      \"details\": [\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"serial\": \"<string>\",\n      \"details\": [\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/devices/claim",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"devices",
												"claim"
											],
											"query": [
												{
													"key": "addAtomically",
													"value": "{{addAtomically}}",
													"description": "Whether to claim devices atomically. If true, all devices will be claimed or none will be claimed. Default is true.",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Claim devices into a network. (Note: for recently claimed devices, it may take a few minutes for API requests against that device to succeed). This operation can be used up to ten times within a single five minute window."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"detailsByDevice\": [\n    {\n      \"serial\": \"<string>\",\n      \"details\": [\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"serial\": \"<string>\",\n      \"details\": [\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/devices/claim?addAtomically=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"devices",
														"claim"
													],
													"query": [
														{
															"key": "addAtomically",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"serials\": [\n    \"Q234-ABCD-0001\",\n    \"Q234-ABCD-0002\",\n    \"Q234-ABCD-0003\"\n  ],\n  \"errors\": [\n    {\n      \"serial\": \"Q234-ABCD-5678\",\n      \"errors\": [\n        \"Device already claimed\"\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "getNetworkDevices",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"devices"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "List the devices in a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/devices",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"devices"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"name\": \"My AP\",\n    \"lat\": 37.4180951010362,\n    \"lng\": -122.098531723022,\n    \"address\": \"1600 Pennsylvania Ave\",\n    \"notes\": \"My AP's note\",\n    \"tags\": [\n      \" recently-added \"\n    ],\n    \"networkId\": \"N_24329156\",\n    \"serial\": \"Q234-ABCD-5678\",\n    \"model\": \"MR34\",\n    \"mac\": \"00:11:22:33:44:55\",\n    \"lanIp\": \"1.2.3.4\",\n    \"firmware\": \"wireless-25-14\",\n    \"floorPlanId\": \"g_2176982374\",\n    \"details\": [\n      {\n        \"name\": \"Catalyst serial\",\n        \"value\": \"123ABC\"\n      }\n    ],\n    \"beaconIdParams\": {\n      \"uuid\": \"00000000-0000-0000-0000-000000000000\",\n      \"major\": 5,\n      \"minor\": 3\n    }\n  }\n]"
										}
									]
								},
								{
									"name": "getOrganizationDevices",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"devices"
											],
											"query": [
												{
													"key": "perPage",
													"value": "{{perPage}}",
													"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
													"disabled": true
												},
												{
													"key": "startingAfter",
													"value": "{{startingAfter}}",
													"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
													"disabled": true
												},
												{
													"key": "endingBefore",
													"value": "{{endingBefore}}",
													"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
													"disabled": true
												},
												{
													"key": "configurationUpdatedAfter",
													"value": "{{configurationUpdatedAfter}}",
													"description": "Filter results by whether or not the device's configuration has been updated after the given timestamp",
													"disabled": true
												},
												{
													"key": "networkIds",
													"value": "{{networkIds}}",
													"description": "Optional parameter to filter devices by network.",
													"disabled": true
												},
												{
													"key": "networkIds",
													"value": "{{networkIds}}",
													"description": "Optional parameter to filter devices by network.",
													"disabled": true
												},
												{
													"key": "productTypes",
													"value": "{{productTypes}}",
													"description": "Optional parameter to filter devices by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor, wirelessController, and secureConnect.",
													"disabled": true
												},
												{
													"key": "productTypes",
													"value": "{{productTypes}}",
													"description": "Optional parameter to filter devices by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor, wirelessController, and secureConnect.",
													"disabled": true
												},
												{
													"key": "tags",
													"value": "{{tags}}",
													"description": "Optional parameter to filter devices by tags.",
													"disabled": true
												},
												{
													"key": "tags",
													"value": "{{tags}}",
													"description": "Optional parameter to filter devices by tags.",
													"disabled": true
												},
												{
													"key": "tagsFilterType",
													"value": "{{tagsFilterType}}",
													"description": "Optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.",
													"disabled": true
												},
												{
													"key": "name",
													"value": "{{name}}",
													"description": "Optional parameter to filter devices by name. All returned devices will have a name that contains the search term or is an exact match.",
													"disabled": true
												},
												{
													"key": "mac",
													"value": "{{mac}}",
													"description": "Optional parameter to filter devices by MAC address. All returned devices will have a MAC address that contains the search term or is an exact match.",
													"disabled": true
												},
												{
													"key": "serial",
													"value": "{{serial}}",
													"description": "Optional parameter to filter devices by serial number. All returned devices will have a serial number that contains the search term or is an exact match.",
													"disabled": true
												},
												{
													"key": "model",
													"value": "{{model}}",
													"description": "Optional parameter to filter devices by model. All returned devices will have a model that contains the search term or is an exact match.",
													"disabled": true
												},
												{
													"key": "macs",
													"value": "{{macs}}",
													"description": "Optional parameter to filter devices by one or more MAC addresses. All returned devices will have a MAC address that is an exact match.",
													"disabled": true
												},
												{
													"key": "macs",
													"value": "{{macs}}",
													"description": "Optional parameter to filter devices by one or more MAC addresses. All returned devices will have a MAC address that is an exact match.",
													"disabled": true
												},
												{
													"key": "serials",
													"value": "{{serials}}",
													"description": "Optional parameter to filter devices by one or more serial numbers. All returned devices will have a serial number that is an exact match.",
													"disabled": true
												},
												{
													"key": "serials",
													"value": "{{serials}}",
													"description": "Optional parameter to filter devices by one or more serial numbers. All returned devices will have a serial number that is an exact match.",
													"disabled": true
												},
												{
													"key": "sensorMetrics",
													"value": "{{sensorMetrics}}",
													"description": "Optional parameter to filter devices by the metrics that they provide. Only applies to sensor devices.",
													"disabled": true
												},
												{
													"key": "sensorMetrics",
													"value": "{{sensorMetrics}}",
													"description": "Optional parameter to filter devices by the metrics that they provide. Only applies to sensor devices.",
													"disabled": true
												},
												{
													"key": "sensorAlertProfileIds",
													"value": "{{sensorAlertProfileIds}}",
													"description": "Optional parameter to filter devices by the alert profiles that are bound to them. Only applies to sensor devices.",
													"disabled": true
												},
												{
													"key": "sensorAlertProfileIds",
													"value": "{{sensorAlertProfileIds}}",
													"description": "Optional parameter to filter devices by the alert profiles that are bound to them. Only applies to sensor devices.",
													"disabled": true
												},
												{
													"key": "models",
													"value": "{{models}}",
													"description": "Optional parameter to filter devices by one or more models. All returned devices will have a model that is an exact match.",
													"disabled": true
												},
												{
													"key": "models",
													"value": "{{models}}",
													"description": "Optional parameter to filter devices by one or more models. All returned devices will have a model that is an exact match.",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "List the devices in an organization that have been assigned to a network."
									},
									"response": []
								},
								{
									"name": "removeNetworkDevices",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"serial\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/devices/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"devices",
												"remove"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Remove a single device"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serial\": \"Q234-ABCD-5678\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/devices/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"devices",
														"remove"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "earlyAccess",
							"item": [
								{
									"name": "features",
									"item": [
										{
											"name": "optIns",
											"item": [
												{
													"name": "createOrganizationEarlyAccessFeaturesOptIn",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"shortName\": \"<string>\",\n  \"limitScopeToNetworks\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/earlyAccess/features/optIns",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"earlyAccess",
																"features",
																"optIns"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Create a new early access feature opt-in for an organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"shortName\": \"<string>\",\n  \"limitScopeToNetworks\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/earlyAccess/features/optIns",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"earlyAccess",
																		"features",
																		"optIns"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"1\",\n  \"shortName\": \"has_new_feature\",\n  \"limitScopeToNetworks\": [\n    {\n      \"id\": \"L_1234\",\n      \"name\": \"My Network\"\n    }\n  ],\n  \"optOutEligibility\": {\n    \"eligible\": false,\n    \"reason\": \"Please remove devices of type XYZ from your organization\",\n    \"help\": {\n      \"label\": \"Read more\",\n      \"url\": \"http://meraki.com/my_help\"\n    }\n  },\n  \"createdAt\": \"2022-05-01T04:07:15Z\"\n}"
														}
													]
												},
												{
													"name": "deleteOrganizationEarlyAccessFeaturesOptIn",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/earlyAccess/features/optIns/:optInId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"earlyAccess",
																"features",
																"optIns",
																":optInId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "optInId",
																	"value": "{{optInId}}",
																	"description": "(Required) Opt in ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Delete an early access feature opt-in"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/earlyAccess/features/optIns/:optInId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"earlyAccess",
																		"features",
																		"optIns",
																		":optInId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "optInId",
																			"value": "<string>",
																			"description": "(Required) Opt in ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "getOrganizationEarlyAccessFeaturesOptIn",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/earlyAccess/features/optIns/:optInId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"earlyAccess",
																"features",
																"optIns",
																":optInId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "optInId",
																	"value": "{{optInId}}",
																	"description": "(Required) Opt in ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Show an early access feature opt-in for an organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/earlyAccess/features/optIns/:optInId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"earlyAccess",
																		"features",
																		"optIns",
																		":optInId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "optInId",
																			"value": "<string>",
																			"description": "(Required) Opt in ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"1\",\n  \"shortName\": \"has_new_feature\",\n  \"limitScopeToNetworks\": [\n    {\n      \"id\": \"L_1234\",\n      \"name\": \"My Network\"\n    }\n  ],\n  \"optOutEligibility\": {\n    \"eligible\": false,\n    \"reason\": \"Please remove devices of type XYZ from your organization\",\n    \"help\": {\n      \"label\": \"Read more\",\n      \"url\": \"http://meraki.com/my_help\"\n    }\n  },\n  \"createdAt\": \"2022-05-01T04:07:15Z\"\n}"
														}
													]
												},
												{
													"name": "getOrganizationEarlyAccessFeaturesOptIns",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/earlyAccess/features/optIns",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"earlyAccess",
																"features",
																"optIns"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the early access feature opt-ins for an organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/earlyAccess/features/optIns",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"earlyAccess",
																		"features",
																		"optIns"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"1\",\n  \"shortName\": \"has_new_feature\",\n  \"limitScopeToNetworks\": [\n    {\n      \"id\": \"L_1234\",\n      \"name\": \"My Network\"\n    }\n  ],\n  \"optOutEligibility\": {\n    \"eligible\": false,\n    \"reason\": \"Please remove devices of type XYZ from your organization\",\n    \"help\": {\n      \"label\": \"Read more\",\n      \"url\": \"http://meraki.com/my_help\"\n    }\n  },\n  \"createdAt\": \"2022-05-01T04:07:15Z\"\n}"
														}
													]
												},
												{
													"name": "updateOrganizationEarlyAccessFeaturesOptIn",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"limitScopeToNetworks\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/earlyAccess/features/optIns/:optInId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"earlyAccess",
																"features",
																"optIns",
																":optInId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "optInId",
																	"value": "{{optInId}}",
																	"description": "(Required) Opt in ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update an early access feature opt-in for an organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"limitScopeToNetworks\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/earlyAccess/features/optIns/:optInId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"earlyAccess",
																		"features",
																		"optIns",
																		":optInId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "optInId",
																			"value": "<string>",
																			"description": "(Required) Opt in ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"1\",\n  \"shortName\": \"has_new_feature\",\n  \"limitScopeToNetworks\": [\n    {\n      \"id\": \"L_1234\",\n      \"name\": \"My Network\"\n    }\n  ],\n  \"optOutEligibility\": {\n    \"eligible\": false,\n    \"reason\": \"Please remove devices of type XYZ from your organization\",\n    \"help\": {\n      \"label\": \"Read more\",\n      \"url\": \"http://meraki.com/my_help\"\n    }\n  },\n  \"createdAt\": \"2022-05-01T04:07:15Z\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "getOrganizationEarlyAccessFeatures",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/earlyAccess/features",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"earlyAccess",
														"features"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the available early access features for organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/earlyAccess/features",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"earlyAccess",
																"features"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"shortName\": \"has_new_feature\",\n    \"name\": \"New Feature Beta\",\n    \"descriptions\": {\n      \"short\": \"New Feature Beta\",\n      \"long\": \"New Feature Beta long description. consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"\n    },\n    \"topic\": \"Dashboard\",\n    \"isOrgScopedOnly\": true,\n    \"documentationLink\": \"https://documentation.meraki.com/\",\n    \"supportLink\": \"https://community.meraki.com/\"\n  }\n]"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "firmware",
							"item": [
								{
									"name": "upgrades",
									"item": [
										{
											"name": "byDevice",
											"item": [
												{
													"name": "getOrganizationFirmwareUpgradesByDevice",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/firmware/upgrades/byDevice",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"firmware",
																"upgrades",
																"byDevice"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Optional parameter to filter by network",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Optional parameter to filter by network",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Optional parameter to filter by serial number.  All returned devices will have a serial number that is an exact match.",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Optional parameter to filter by serial number.  All returned devices will have a serial number that is an exact match.",
																	"disabled": true
																},
																{
																	"key": "macs",
																	"value": "{{macs}}",
																	"description": "Optional parameter to filter by one or more MAC addresses belonging to devices. All devices returned belong to MAC addresses that are an exact match.",
																	"disabled": true
																},
																{
																	"key": "macs",
																	"value": "{{macs}}",
																	"description": "Optional parameter to filter by one or more MAC addresses belonging to devices. All devices returned belong to MAC addresses that are an exact match.",
																	"disabled": true
																},
																{
																	"key": "firmwareUpgradeBatchIds",
																	"value": "{{firmwareUpgradeBatchIds}}",
																	"description": "Optional parameter to filter by firmware upgrade batch ids.",
																	"disabled": true
																},
																{
																	"key": "firmwareUpgradeBatchIds",
																	"value": "{{firmwareUpgradeBatchIds}}",
																	"description": "Optional parameter to filter by firmware upgrade batch ids.",
																	"disabled": true
																},
																{
																	"key": "upgradeStatuses",
																	"value": "{{upgradeStatuses}}",
																	"description": "Optional parameter to filter by firmware upgrade statuses.",
																	"disabled": true
																},
																{
																	"key": "upgradeStatuses",
																	"value": "{{upgradeStatuses}}",
																	"description": "Optional parameter to filter by firmware upgrade statuses.",
																	"disabled": true
																},
																{
																	"key": "currentUpgradesOnly",
																	"value": "{{currentUpgradesOnly}}",
																	"description": "Optional parameter to filter to only current or pending upgrade statuses",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Get firmware upgrade status for the filtered devices. This endpoint currently only supports Meraki switches."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/firmware/upgrades/byDevice?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&macs=<string>&macs=<string>&firmwareUpgradeBatchIds=<string>&firmwareUpgradeBatchIds=<string>&upgradeStatuses=<string>&upgradeStatuses=<string>&currentUpgradesOnly=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"firmware",
																		"upgrades",
																		"byDevice"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "macs",
																			"value": "<string>"
																		},
																		{
																			"key": "macs",
																			"value": "<string>"
																		},
																		{
																			"key": "firmwareUpgradeBatchIds",
																			"value": "<string>"
																		},
																		{
																			"key": "firmwareUpgradeBatchIds",
																			"value": "<string>"
																		},
																		{
																			"key": "upgradeStatuses",
																			"value": "<string>"
																		},
																		{
																			"key": "upgradeStatuses",
																			"value": "<string>"
																		},
																		{
																			"key": "currentUpgradesOnly",
																			"value": "<boolean>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"serial\": \"Q234-ABCD-5678\",\n    \"name\": \"My switch\",\n    \"deviceStatus\": \"completed\",\n    \"upgrade\": {\n      \"time\": \"2018-02-11T00:00:00.090210Z\",\n      \"fromVersion\": {\n        \"id\": \"1234\",\n        \"shortName\": \"MS 16.7\",\n        \"releaseType\": \"stable\",\n        \"releaseDate\": \"2018-02-11T00:00:00.090210Z\"\n      },\n      \"toVersion\": {\n        \"id\": \"1234\",\n        \"shortName\": \"MS 16.7.1\",\n        \"releaseType\": \"stable\",\n        \"releaseDate\": \"2018-02-11T00:00:00.090210Z\"\n      },\n      \"status\": \"Completed\",\n      \"id\": \"1234\",\n      \"upgradeBatchId\": \"1234\",\n      \"staged\": {\n        \"group\": {\n          \"id\": \"1234\"\n        }\n      }\n    }\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "getOrganizationFirmwareUpgrades",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/firmware/upgrades",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"firmware",
														"upgrades"
													],
													"query": [
														{
															"key": "perPage",
															"value": "{{perPage}}",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
															"disabled": true
														},
														{
															"key": "startingAfter",
															"value": "{{startingAfter}}",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "endingBefore",
															"value": "{{endingBefore}}",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "status",
															"value": "{{status}}",
															"description": "Optional parameter to filter the upgrade by status.",
															"disabled": true
														},
														{
															"key": "status",
															"value": "{{status}}",
															"description": "Optional parameter to filter the upgrade by status.",
															"disabled": true
														},
														{
															"key": "productTypes",
															"value": "{{productTypes}}",
															"description": "Optional parameter to filter the upgrade by product type.",
															"disabled": true
														},
														{
															"key": "productTypes",
															"value": "{{productTypes}}",
															"description": "Optional parameter to filter the upgrade by product type.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Get firmware upgrade information for an organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/firmware/upgrades?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&status=<string>&status=<string>&productTypes=<string>&productTypes=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"firmware",
																"upgrades"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>"
																},
																{
																	"key": "startingAfter",
																	"value": "<string>"
																},
																{
																	"key": "endingBefore",
																	"value": "<string>"
																},
																{
																	"key": "status",
																	"value": "<string>"
																},
																{
																	"key": "status",
																	"value": "<string>"
																},
																{
																	"key": "productTypes",
																	"value": "<string>"
																},
																{
																	"key": "productTypes",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Link",
															"value": "Lorem nisi fugiat",
															"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"upgradeId\": \"1234\",\n    \"upgradeBatchId\": \"5678\",\n    \"network\": {\n      \"id\": \"L_1738\",\n      \"name\": \"Minions\"\n    },\n    \"status\": \"Completed\",\n    \"time\": \"2022-11-01T00:00:00Z\",\n    \"completedAt\": \"2020-11-05 15:50:05 UTC\",\n    \"productTypes\": \"wireless\",\n    \"toVersion\": {\n      \"id\": \"2888\",\n      \"shortName\": \"MR 11.2.1\",\n      \"firmware\": \"wireless-11-2-1\",\n      \"releaseType\": \"stable\",\n      \"releaseDate\": \"2022-03-17T17:22:52Z\"\n    },\n    \"fromVersion\": {\n      \"id\": \"2887\",\n      \"shortName\": \"MR 11.2.1\",\n      \"firmware\": \"wireless-11-2-1\",\n      \"releaseType\": \"stable\",\n      \"releaseDate\": \"2022-03-17T17:22:52Z\"\n    }\n  }\n]"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "firmwareUpgrades",
							"item": [
								{
									"name": "rollbacks",
									"item": [
										{
											"name": "createNetworkFirmwareUpgradesRollback",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"reasons\": [\n    {\n      \"category\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"category\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"product\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"toVersion\": {\n    \"id\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/rollbacks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"firmwareUpgrades",
														"rollbacks"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Rollback a Firmware Upgrade For A Network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"reasons\": [\n    {\n      \"category\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"category\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"product\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"toVersion\": {\n    \"id\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/rollbacks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"firmwareUpgrades",
																"rollbacks"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"product\": \"switch\",\n  \"status\": \"pending\",\n  \"upgradeBatchId\": \"23456\",\n  \"time\": \"2020-10-21T02:00:00Z\",\n  \"toVersion\": {\n    \"id\": \"7857\",\n    \"firmware\": \"switch-15-5-2\",\n    \"shortName\": \"MS 25.5.2\",\n    \"releaseType\": \"stable\",\n    \"releaseDate\": \"2020-03-28T17:22:52Z\"\n  },\n  \"reasons\": [\n    {\n      \"category\": \"performance\",\n      \"comment\": \"Network was slower with the upgrade\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "staged",
									"item": [
										{
											"name": "events",
											"item": [
												{
													"name": "createNetworkFirmwareUpgradesStagedEvent",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"stages\": [\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<string>\"\n      }\n    },\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<string>\"\n      }\n    }\n  ],\n  \"products\": {\n    \"switch\": {\n      \"nextUpgrade\": {\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      }\n    },\n    \"switchCatalyst\": {\n      \"nextUpgrade\": {\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      }\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/staged/events",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"firmwareUpgrades",
																"staged",
																"events"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Create a Staged Upgrade Event for a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"stages\": [\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<string>\"\n      }\n    },\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<string>\"\n      }\n    }\n  ],\n  \"products\": {\n    \"switch\": {\n      \"nextUpgrade\": {\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      }\n    },\n    \"switchCatalyst\": {\n      \"nextUpgrade\": {\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      }\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/staged/events",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"firmwareUpgrades",
																		"staged",
																		"events"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"products\": {\n    \"switch\": {\n      \"nextUpgrade\": {\n        \"toVersion\": {\n          \"id\": \"1234\",\n          \"shortName\": \"MS 15.2.1\"\n        }\n      }\n    }\n  },\n  \"stages\": [\n    {\n      \"group\": {\n        \"id\": \"1234\",\n        \"name\": \"My Staged Upgrade Group\",\n        \"description\": \"My Staged Upgrade Group Description\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"2018-02-11T00:00:00Z\",\n        \"startedAt\": \"2018-02-11T00:00:00Z\",\n        \"completedAt\": \"2018-02-11T00:00:00Z\",\n        \"canceledAt\": \"2018-02-11T00:00:00Z\"\n      },\n      \"status\": \"Completed\"\n    }\n  ],\n  \"reasons\": [\n    {\n      \"category\": \"performance\",\n      \"comment\": \"Network was slower with the upgrade\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "deferNetworkFirmwareUpgradesStagedEvents",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/staged/events/defer",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"firmwareUpgrades",
																"staged",
																"events",
																"defer"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Postpone by 1 week all pending staged upgrade stages for a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/staged/events/defer",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"firmwareUpgrades",
																		"staged",
																		"events",
																		"defer"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"products\": {\n    \"switch\": {\n      \"nextUpgrade\": {\n        \"toVersion\": {\n          \"id\": \"1234\",\n          \"shortName\": \"MS 15.2.1\"\n        }\n      }\n    }\n  },\n  \"stages\": [\n    {\n      \"group\": {\n        \"id\": \"1234\",\n        \"name\": \"My Staged Upgrade Group\",\n        \"description\": \"My Staged Upgrade Group Description\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"2018-02-11T00:00:00Z\",\n        \"startedAt\": \"2018-02-11T00:00:00Z\",\n        \"completedAt\": \"2018-02-11T00:00:00Z\",\n        \"canceledAt\": \"2018-02-11T00:00:00Z\"\n      },\n      \"status\": \"Completed\"\n    }\n  ],\n  \"reasons\": [\n    {\n      \"category\": \"performance\",\n      \"comment\": \"Network was slower with the upgrade\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "getNetworkFirmwareUpgradesStagedEvents",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/staged/events",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"firmwareUpgrades",
																"staged",
																"events"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Get the Staged Upgrade Event from a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/staged/events",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"firmwareUpgrades",
																		"staged",
																		"events"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"products\": {\n    \"switch\": {\n      \"nextUpgrade\": {\n        \"toVersion\": {\n          \"id\": \"1234\",\n          \"shortName\": \"MS 15.2.1\"\n        }\n      }\n    }\n  },\n  \"stages\": [\n    {\n      \"group\": {\n        \"id\": \"1234\",\n        \"name\": \"My Staged Upgrade Group\",\n        \"description\": \"My Staged Upgrade Group Description\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"2018-02-11T00:00:00Z\",\n        \"startedAt\": \"2018-02-11T00:00:00Z\",\n        \"completedAt\": \"2018-02-11T00:00:00Z\",\n        \"canceledAt\": \"2018-02-11T00:00:00Z\"\n      },\n      \"status\": \"Completed\"\n    }\n  ],\n  \"reasons\": [\n    {\n      \"category\": \"performance\",\n      \"comment\": \"Network was slower with the upgrade\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "rollbacksNetworkFirmwareUpgradesStagedEvents",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"stages\": [\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<string>\"\n      }\n    },\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<string>\"\n      }\n    }\n  ],\n  \"reasons\": [\n    {\n      \"category\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"category\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/staged/events/rollbacks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"firmwareUpgrades",
																"staged",
																"events",
																"rollbacks"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Rollback a Staged Upgrade Event for a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"stages\": [\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<string>\"\n      }\n    },\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<string>\"\n      }\n    }\n  ],\n  \"reasons\": [\n    {\n      \"category\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"category\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/staged/events/rollbacks",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"firmwareUpgrades",
																		"staged",
																		"events",
																		"rollbacks"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"products\": {\n    \"switch\": {\n      \"nextUpgrade\": {\n        \"toVersion\": {\n          \"id\": \"1234\",\n          \"shortName\": \"MS 15.2.1\"\n        }\n      }\n    }\n  },\n  \"stages\": [\n    {\n      \"group\": {\n        \"id\": \"1234\",\n        \"name\": \"My Staged Upgrade Group\",\n        \"description\": \"My Staged Upgrade Group Description\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"2018-02-11T00:00:00Z\",\n        \"startedAt\": \"2018-02-11T00:00:00Z\",\n        \"completedAt\": \"2018-02-11T00:00:00Z\",\n        \"canceledAt\": \"2018-02-11T00:00:00Z\"\n      },\n      \"status\": \"Completed\"\n    }\n  ],\n  \"reasons\": [\n    {\n      \"category\": \"performance\",\n      \"comment\": \"Network was slower with the upgrade\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "updateNetworkFirmwareUpgradesStagedEvents",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"stages\": [\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<string>\"\n      }\n    },\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/staged/events",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"firmwareUpgrades",
																"staged",
																"events"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the Staged Upgrade Event for a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"stages\": [\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<string>\"\n      }\n    },\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/staged/events",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"firmwareUpgrades",
																		"staged",
																		"events"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"products\": {\n    \"switch\": {\n      \"nextUpgrade\": {\n        \"toVersion\": {\n          \"id\": \"1234\",\n          \"shortName\": \"MS 15.2.1\"\n        }\n      }\n    }\n  },\n  \"stages\": [\n    {\n      \"group\": {\n        \"id\": \"1234\",\n        \"name\": \"My Staged Upgrade Group\",\n        \"description\": \"My Staged Upgrade Group Description\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"2018-02-11T00:00:00Z\",\n        \"startedAt\": \"2018-02-11T00:00:00Z\",\n        \"completedAt\": \"2018-02-11T00:00:00Z\",\n        \"canceledAt\": \"2018-02-11T00:00:00Z\"\n      },\n      \"status\": \"Completed\"\n    }\n  ],\n  \"reasons\": [\n    {\n      \"category\": \"performance\",\n      \"comment\": \"Network was slower with the upgrade\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "groups",
											"item": [
												{
													"name": "createNetworkFirmwareUpgradesStagedGroup",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"assignedDevices\": {\n    \"devices\": [\n      {\n        \"serial\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"serial\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"switchStacks\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/staged/groups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"firmwareUpgrades",
																"staged",
																"groups"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Create a Staged Upgrade Group for a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"assignedDevices\": {\n    \"devices\": [\n      {\n        \"serial\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"serial\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"switchStacks\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ]\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/staged/groups",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"firmwareUpgrades",
																		"staged",
																		"groups"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"groupId\": \"1234\",\n  \"name\": \"My Staged Upgrade Group\",\n  \"description\": \"The description of the group\",\n  \"isDefault\": false,\n  \"assignedDevices\": {\n    \"devices\": [\n      {\n        \"serial\": \"Q234-ABCD-5678\",\n        \"name\": \"Device Name\"\n      }\n    ],\n    \"switchStacks\": [\n      {\n        \"id\": \"1234\",\n        \"name\": \"Stack Name\"\n      }\n    ]\n  }\n}"
														}
													]
												},
												{
													"name": "deleteNetworkFirmwareUpgradesStagedGroup",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/staged/groups/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"firmwareUpgrades",
																"staged",
																"groups",
																":groupId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "groupId",
																	"value": "{{groupId}}",
																	"description": "(Required) Group ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Delete a Staged Upgrade Group"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/staged/groups/:groupId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"firmwareUpgrades",
																		"staged",
																		"groups",
																		":groupId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "groupId",
																			"value": "<string>",
																			"description": "(Required) Group ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "getNetworkFirmwareUpgradesStagedGroup",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/staged/groups/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"firmwareUpgrades",
																"staged",
																"groups",
																":groupId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "groupId",
																	"value": "{{groupId}}",
																	"description": "(Required) Group ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Get a Staged Upgrade Group from a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/staged/groups/:groupId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"firmwareUpgrades",
																		"staged",
																		"groups",
																		":groupId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "groupId",
																			"value": "<string>",
																			"description": "(Required) Group ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"groupId\": \"1234\",\n  \"name\": \"My Staged Upgrade Group\",\n  \"description\": \"The description of the group\",\n  \"isDefault\": false,\n  \"assignedDevices\": {\n    \"devices\": [\n      {\n        \"serial\": \"Q234-ABCD-5678\",\n        \"name\": \"Device Name\"\n      }\n    ],\n    \"switchStacks\": [\n      {\n        \"id\": \"1234\",\n        \"name\": \"Stack Name\"\n      }\n    ]\n  }\n}"
														}
													]
												},
												{
													"name": "getNetworkFirmwareUpgradesStagedGroups",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/staged/groups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"firmwareUpgrades",
																"staged",
																"groups"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List of Staged Upgrade Groups in a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/staged/groups",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"firmwareUpgrades",
																		"staged",
																		"groups"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"groupId\": \"1234\",\n    \"name\": \"My Staged Upgrade Group\",\n    \"description\": \"The description of the group\",\n    \"isDefault\": false,\n    \"assignedDevices\": {\n      \"devices\": [\n        {\n          \"serial\": \"Q234-ABCD-5678\",\n          \"name\": \"Device Name\"\n        }\n      ],\n      \"switchStacks\": [\n        {\n          \"id\": \"1234\",\n          \"name\": \"Stack Name\"\n        }\n      ]\n    }\n  }\n]"
														}
													]
												},
												{
													"name": "updateNetworkFirmwareUpgradesStagedGroup",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"assignedDevices\": {\n    \"devices\": [\n      {\n        \"serial\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"serial\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"switchStacks\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/staged/groups/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"firmwareUpgrades",
																"staged",
																"groups",
																":groupId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "groupId",
																	"value": "{{groupId}}",
																	"description": "(Required) Group ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update a Staged Upgrade Group for a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"assignedDevices\": {\n    \"devices\": [\n      {\n        \"serial\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"serial\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"switchStacks\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ]\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/staged/groups/:groupId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"firmwareUpgrades",
																		"staged",
																		"groups",
																		":groupId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "groupId",
																			"value": "<string>",
																			"description": "(Required) Group ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"groupId\": \"1234\",\n  \"name\": \"My Staged Upgrade Group\",\n  \"description\": \"The description of the group\",\n  \"isDefault\": false,\n  \"assignedDevices\": {\n    \"devices\": [\n      {\n        \"serial\": \"Q234-ABCD-5678\",\n        \"name\": \"Device Name\"\n      }\n    ],\n    \"switchStacks\": [\n      {\n        \"id\": \"1234\",\n        \"name\": \"Stack Name\"\n      }\n    ]\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "stages",
											"item": [
												{
													"name": "getNetworkFirmwareUpgradesStagedStages",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/staged/stages",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"firmwareUpgrades",
																"staged",
																"stages"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Order of Staged Upgrade Groups in a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/staged/stages",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"firmwareUpgrades",
																		"staged",
																		"stages"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"group\": {\n      \"id\": \"1234\",\n      \"name\": \"My Staged Upgrade Group\",\n      \"description\": \"My Staged Upgrade Description\"\n    }\n  }\n]"
														}
													]
												},
												{
													"name": "updateNetworkFirmwareUpgradesStagedStages",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"_json\": [\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/staged/stages",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"firmwareUpgrades",
																"staged",
																"stages"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Assign Staged Upgrade Group order in the sequence."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"_json\": [\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades/staged/stages",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"firmwareUpgrades",
																		"staged",
																		"stages"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"group\": {\n      \"id\": \"1234\",\n      \"name\": \"My Staged Upgrade Group\",\n      \"description\": \"My Staged Upgrade Description\"\n    }\n  }\n]"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "getNetworkFirmwareUpgrades",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"firmwareUpgrades"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Get firmware upgrade information for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"firmwareUpgrades"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"upgradeWindow\": {\n    \"dayOfWeek\": \"sun\",\n    \"hourOfDay\": \"4:00\"\n  },\n  \"timezone\": \"America/Los_Angeles\",\n  \"products\": {\n    \"wireless\": {\n      \"currentVersion\": {\n        \"id\": \"4321\",\n        \"firmware\": \"camera-11-2-1\",\n        \"shortName\": \"MV 11.2.1\",\n        \"releaseType\": \"stable\",\n        \"releaseDate\": \"2020-03-17T17:22:52Z\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"fromVersion\": {\n          \"id\": \"1234\",\n          \"firmware\": \"camera-10-8-1\",\n          \"shortName\": \"MV 10.8.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-03-17T17:22:52Z\"\n        },\n        \"toVersion\": {\n          \"id\": \"4321\",\n          \"firmware\": \"camera-11-2-1\",\n          \"shortName\": \"MV 11.2.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2019-03-17T17:22:52Z\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"toVersion\": {\n          \"id\": \"2134\",\n          \"firmware\": \"camera-15-5-2\",\n          \"shortName\": \"MV 25.5.2\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-05-28T17:22:52Z\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"3421\",\n          \"firmware\": \"camera-16-x-y\",\n          \"shortName\": \"MV 16.x.y\",\n          \"releaseType\": \"beta\",\n          \"releaseDate\": \"2020-11-28T17:22:52Z\"\n        }\n      ],\n      \"participateInNextBetaRelease\": false\n    },\n    \"appliance\": {\n      \"currentVersion\": {\n        \"id\": \"4321\",\n        \"firmware\": \"camera-11-2-1\",\n        \"shortName\": \"MV 11.2.1\",\n        \"releaseType\": \"stable\",\n        \"releaseDate\": \"2020-03-17T17:22:52Z\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"fromVersion\": {\n          \"id\": \"1234\",\n          \"firmware\": \"camera-10-8-1\",\n          \"shortName\": \"MV 10.8.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-03-17T17:22:52Z\"\n        },\n        \"toVersion\": {\n          \"id\": \"4321\",\n          \"firmware\": \"camera-11-2-1\",\n          \"shortName\": \"MV 11.2.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2019-03-17T17:22:52Z\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"toVersion\": {\n          \"id\": \"2134\",\n          \"firmware\": \"camera-15-5-2\",\n          \"shortName\": \"MV 25.5.2\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-05-28T17:22:52Z\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"3421\",\n          \"firmware\": \"camera-16-x-y\",\n          \"shortName\": \"MV 16.x.y\",\n          \"releaseType\": \"beta\",\n          \"releaseDate\": \"2020-11-28T17:22:52Z\"\n        }\n      ],\n      \"participateInNextBetaRelease\": false\n    },\n    \"switch\": {\n      \"currentVersion\": {\n        \"id\": \"4321\",\n        \"firmware\": \"camera-11-2-1\",\n        \"shortName\": \"MV 11.2.1\",\n        \"releaseType\": \"stable\",\n        \"releaseDate\": \"2020-03-17T17:22:52Z\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"fromVersion\": {\n          \"id\": \"1234\",\n          \"firmware\": \"camera-10-8-1\",\n          \"shortName\": \"MV 10.8.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-03-17T17:22:52Z\"\n        },\n        \"toVersion\": {\n          \"id\": \"4321\",\n          \"firmware\": \"camera-11-2-1\",\n          \"shortName\": \"MV 11.2.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2019-03-17T17:22:52Z\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"toVersion\": {\n          \"id\": \"2134\",\n          \"firmware\": \"camera-15-5-2\",\n          \"shortName\": \"MV 25.5.2\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-05-28T17:22:52Z\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"3421\",\n          \"firmware\": \"camera-16-x-y\",\n          \"shortName\": \"MV 16.x.y\",\n          \"releaseType\": \"beta\",\n          \"releaseDate\": \"2020-11-28T17:22:52Z\"\n        }\n      ],\n      \"participateInNextBetaRelease\": false\n    },\n    \"camera\": {\n      \"currentVersion\": {\n        \"id\": \"4321\",\n        \"firmware\": \"camera-11-2-1\",\n        \"shortName\": \"MV 11.2.1\",\n        \"releaseType\": \"stable\",\n        \"releaseDate\": \"2020-03-17T17:22:52Z\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"fromVersion\": {\n          \"id\": \"1234\",\n          \"firmware\": \"camera-10-8-1\",\n          \"shortName\": \"MV 10.8.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-03-17T17:22:52Z\"\n        },\n        \"toVersion\": {\n          \"id\": \"4321\",\n          \"firmware\": \"camera-11-2-1\",\n          \"shortName\": \"MV 11.2.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2019-03-17T17:22:52Z\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"toVersion\": {\n          \"id\": \"2134\",\n          \"firmware\": \"camera-15-5-2\",\n          \"shortName\": \"MV 25.5.2\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-05-28T17:22:52Z\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"3421\",\n          \"firmware\": \"camera-16-x-y\",\n          \"shortName\": \"MV 16.x.y\",\n          \"releaseType\": \"beta\",\n          \"releaseDate\": \"2020-11-28T17:22:52Z\"\n        }\n      ],\n      \"participateInNextBetaRelease\": false\n    },\n    \"cellularGateway\": {\n      \"currentVersion\": {\n        \"id\": \"4321\",\n        \"firmware\": \"camera-11-2-1\",\n        \"shortName\": \"MV 11.2.1\",\n        \"releaseType\": \"stable\",\n        \"releaseDate\": \"2020-03-17T17:22:52Z\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"fromVersion\": {\n          \"id\": \"1234\",\n          \"firmware\": \"camera-10-8-1\",\n          \"shortName\": \"MV 10.8.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-03-17T17:22:52Z\"\n        },\n        \"toVersion\": {\n          \"id\": \"4321\",\n          \"firmware\": \"camera-11-2-1\",\n          \"shortName\": \"MV 11.2.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2019-03-17T17:22:52Z\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"toVersion\": {\n          \"id\": \"2134\",\n          \"firmware\": \"camera-15-5-2\",\n          \"shortName\": \"MV 25.5.2\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-05-28T17:22:52Z\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"3421\",\n          \"firmware\": \"camera-16-x-y\",\n          \"shortName\": \"MV 16.x.y\",\n          \"releaseType\": \"beta\",\n          \"releaseDate\": \"2020-11-28T17:22:52Z\"\n        }\n      ],\n      \"participateInNextBetaRelease\": false\n    },\n    \"sensor\": {\n      \"currentVersion\": {\n        \"id\": \"4321\",\n        \"firmware\": \"camera-11-2-1\",\n        \"shortName\": \"MV 11.2.1\",\n        \"releaseType\": \"stable\",\n        \"releaseDate\": \"2020-03-17T17:22:52Z\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"fromVersion\": {\n          \"id\": \"1234\",\n          \"firmware\": \"camera-10-8-1\",\n          \"shortName\": \"MV 10.8.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-03-17T17:22:52Z\"\n        },\n        \"toVersion\": {\n          \"id\": \"4321\",\n          \"firmware\": \"camera-11-2-1\",\n          \"shortName\": \"MV 11.2.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2019-03-17T17:22:52Z\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"toVersion\": {\n          \"id\": \"2134\",\n          \"firmware\": \"camera-15-5-2\",\n          \"shortName\": \"MV 25.5.2\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-05-28T17:22:52Z\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"3421\",\n          \"firmware\": \"camera-16-x-y\",\n          \"shortName\": \"MV 16.x.y\",\n          \"releaseType\": \"beta\",\n          \"releaseDate\": \"2020-11-28T17:22:52Z\"\n        }\n      ],\n      \"participateInNextBetaRelease\": false\n    },\n    \"wirelessController\": {\n      \"currentVersion\": {\n        \"id\": \"4321\",\n        \"firmware\": \"camera-11-2-1\",\n        \"shortName\": \"MV 11.2.1\",\n        \"releaseType\": \"stable\",\n        \"releaseDate\": \"2020-03-17T17:22:52Z\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"fromVersion\": {\n          \"id\": \"1234\",\n          \"firmware\": \"camera-10-8-1\",\n          \"shortName\": \"MV 10.8.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-03-17T17:22:52Z\"\n        },\n        \"toVersion\": {\n          \"id\": \"4321\",\n          \"firmware\": \"camera-11-2-1\",\n          \"shortName\": \"MV 11.2.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2019-03-17T17:22:52Z\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"toVersion\": {\n          \"id\": \"2134\",\n          \"firmware\": \"camera-15-5-2\",\n          \"shortName\": \"MV 25.5.2\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-05-28T17:22:52Z\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"3421\",\n          \"firmware\": \"camera-16-x-y\",\n          \"shortName\": \"MV 16.x.y\",\n          \"releaseType\": \"beta\",\n          \"releaseDate\": \"2020-11-28T17:22:52Z\"\n        }\n      ],\n      \"participateInNextBetaRelease\": false\n    },\n    \"secureConnect\": {\n      \"currentVersion\": {\n        \"id\": \"4321\",\n        \"firmware\": \"camera-11-2-1\",\n        \"shortName\": \"MV 11.2.1\",\n        \"releaseType\": \"stable\",\n        \"releaseDate\": \"2020-03-17T17:22:52Z\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"fromVersion\": {\n          \"id\": \"1234\",\n          \"firmware\": \"camera-10-8-1\",\n          \"shortName\": \"MV 10.8.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-03-17T17:22:52Z\"\n        },\n        \"toVersion\": {\n          \"id\": \"4321\",\n          \"firmware\": \"camera-11-2-1\",\n          \"shortName\": \"MV 11.2.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2019-03-17T17:22:52Z\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"toVersion\": {\n          \"id\": \"2134\",\n          \"firmware\": \"camera-15-5-2\",\n          \"shortName\": \"MV 25.5.2\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-05-28T17:22:52Z\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"3421\",\n          \"firmware\": \"camera-16-x-y\",\n          \"shortName\": \"MV 16.x.y\",\n          \"releaseType\": \"beta\",\n          \"releaseDate\": \"2020-11-28T17:22:52Z\"\n        }\n      ],\n      \"participateInNextBetaRelease\": false\n    }\n  }\n}"
										}
									]
								},
								{
									"name": "updateNetworkFirmwareUpgrades",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"upgradeWindow\": {\n    \"dayOfWeek\": \"<string>\",\n    \"hourOfDay\": \"<string>\"\n  },\n  \"timezone\": \"<string>\",\n  \"products\": {\n    \"wireless\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"appliance\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"switch\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"camera\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"cellularGateway\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"sensor\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"wirelessController\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"secureConnect\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"switchCatalyst\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"firmwareUpgrades"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Update firmware upgrade information for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"upgradeWindow\": {\n    \"dayOfWeek\": \"sun\",\n    \"hourOfDay\": \"4:00\"\n  },\n  \"timezone\": \"America/Los_Angeles\",\n  \"products\": {\n    \"wireless\": {\n      \"nextUpgrade\": {\n        \"time\": \"2019-03-17T17:22:52Z\",\n        \"toVersion\": {}\n      },\n      \"participateInNextBetaRelease\": false\n    },\n    \"appliance\": {\n      \"nextUpgrade\": {\n        \"time\": \"2019-03-17T17:22:52Z\",\n        \"toVersion\": {}\n      },\n      \"participateInNextBetaRelease\": false\n    },\n    \"switch\": {\n      \"nextUpgrade\": {\n        \"time\": \"2019-03-17T17:22:52Z\",\n        \"toVersion\": {}\n      },\n      \"participateInNextBetaRelease\": false\n    },\n    \"camera\": {\n      \"nextUpgrade\": {\n        \"time\": \"2019-03-17T17:22:52Z\",\n        \"toVersion\": {}\n      },\n      \"participateInNextBetaRelease\": false\n    },\n    \"cellularGateway\": {\n      \"nextUpgrade\": {\n        \"time\": \"2019-03-17T17:22:52Z\",\n        \"toVersion\": {}\n      },\n      \"participateInNextBetaRelease\": false\n    },\n    \"sensor\": {\n      \"nextUpgrade\": {\n        \"time\": \"2019-03-17T17:22:52Z\",\n        \"toVersion\": {}\n      },\n      \"participateInNextBetaRelease\": false\n    },\n    \"wirelessController\": {\n      \"nextUpgrade\": {\n        \"time\": \"2019-03-17T17:22:52Z\",\n        \"toVersion\": {}\n      },\n      \"participateInNextBetaRelease\": false\n    },\n    \"secureConnect\": {\n      \"nextUpgrade\": {\n        \"time\": \"2019-03-17T17:22:52Z\",\n        \"toVersion\": {}\n      },\n      \"participateInNextBetaRelease\": false\n    },\n    \"switchCatalyst\": {\n      \"nextUpgrade\": {\n        \"time\": \"2019-03-17T17:22:52Z\",\n        \"toVersion\": {}\n      },\n      \"participateInNextBetaRelease\": false\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/firmwareUpgrades",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"firmwareUpgrades"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"upgradeWindow\": {\n    \"dayOfWeek\": \"sun\",\n    \"hourOfDay\": \"4:00\"\n  },\n  \"timezone\": \"America/Los_Angeles\",\n  \"products\": {\n    \"wireless\": {\n      \"currentVersion\": {\n        \"id\": \"4321\",\n        \"firmware\": \"camera-11-2-1\",\n        \"shortName\": \"MV 11.2.1\",\n        \"releaseType\": \"stable\",\n        \"releaseDate\": \"2020-03-17T17:22:52Z\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"fromVersion\": {\n          \"id\": \"1234\",\n          \"firmware\": \"camera-10-8-1\",\n          \"shortName\": \"MV 10.8.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-03-17T17:22:52Z\"\n        },\n        \"toVersion\": {\n          \"id\": \"4321\",\n          \"firmware\": \"camera-11-2-1\",\n          \"shortName\": \"MV 11.2.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2019-03-17T17:22:52Z\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"toVersion\": {\n          \"id\": \"2134\",\n          \"firmware\": \"camera-15-5-2\",\n          \"shortName\": \"MV 25.5.2\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-05-28T17:22:52Z\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"3421\",\n          \"firmware\": \"camera-16-x-y\",\n          \"shortName\": \"MV 16.x.y\",\n          \"releaseType\": \"beta\",\n          \"releaseDate\": \"2020-11-28T17:22:52Z\"\n        }\n      ],\n      \"participateInNextBetaRelease\": false\n    },\n    \"appliance\": {\n      \"currentVersion\": {\n        \"id\": \"4321\",\n        \"firmware\": \"camera-11-2-1\",\n        \"shortName\": \"MV 11.2.1\",\n        \"releaseType\": \"stable\",\n        \"releaseDate\": \"2020-03-17T17:22:52Z\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"fromVersion\": {\n          \"id\": \"1234\",\n          \"firmware\": \"camera-10-8-1\",\n          \"shortName\": \"MV 10.8.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-03-17T17:22:52Z\"\n        },\n        \"toVersion\": {\n          \"id\": \"4321\",\n          \"firmware\": \"camera-11-2-1\",\n          \"shortName\": \"MV 11.2.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2019-03-17T17:22:52Z\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"toVersion\": {\n          \"id\": \"2134\",\n          \"firmware\": \"camera-15-5-2\",\n          \"shortName\": \"MV 25.5.2\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-05-28T17:22:52Z\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"3421\",\n          \"firmware\": \"camera-16-x-y\",\n          \"shortName\": \"MV 16.x.y\",\n          \"releaseType\": \"beta\",\n          \"releaseDate\": \"2020-11-28T17:22:52Z\"\n        }\n      ],\n      \"participateInNextBetaRelease\": false\n    },\n    \"switch\": {\n      \"currentVersion\": {\n        \"id\": \"4321\",\n        \"firmware\": \"camera-11-2-1\",\n        \"shortName\": \"MV 11.2.1\",\n        \"releaseType\": \"stable\",\n        \"releaseDate\": \"2020-03-17T17:22:52Z\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"fromVersion\": {\n          \"id\": \"1234\",\n          \"firmware\": \"camera-10-8-1\",\n          \"shortName\": \"MV 10.8.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-03-17T17:22:52Z\"\n        },\n        \"toVersion\": {\n          \"id\": \"4321\",\n          \"firmware\": \"camera-11-2-1\",\n          \"shortName\": \"MV 11.2.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2019-03-17T17:22:52Z\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"toVersion\": {\n          \"id\": \"2134\",\n          \"firmware\": \"camera-15-5-2\",\n          \"shortName\": \"MV 25.5.2\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-05-28T17:22:52Z\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"3421\",\n          \"firmware\": \"camera-16-x-y\",\n          \"shortName\": \"MV 16.x.y\",\n          \"releaseType\": \"beta\",\n          \"releaseDate\": \"2020-11-28T17:22:52Z\"\n        }\n      ],\n      \"participateInNextBetaRelease\": false\n    },\n    \"camera\": {\n      \"currentVersion\": {\n        \"id\": \"4321\",\n        \"firmware\": \"camera-11-2-1\",\n        \"shortName\": \"MV 11.2.1\",\n        \"releaseType\": \"stable\",\n        \"releaseDate\": \"2020-03-17T17:22:52Z\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"fromVersion\": {\n          \"id\": \"1234\",\n          \"firmware\": \"camera-10-8-1\",\n          \"shortName\": \"MV 10.8.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-03-17T17:22:52Z\"\n        },\n        \"toVersion\": {\n          \"id\": \"4321\",\n          \"firmware\": \"camera-11-2-1\",\n          \"shortName\": \"MV 11.2.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2019-03-17T17:22:52Z\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"toVersion\": {\n          \"id\": \"2134\",\n          \"firmware\": \"camera-15-5-2\",\n          \"shortName\": \"MV 25.5.2\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-05-28T17:22:52Z\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"3421\",\n          \"firmware\": \"camera-16-x-y\",\n          \"shortName\": \"MV 16.x.y\",\n          \"releaseType\": \"beta\",\n          \"releaseDate\": \"2020-11-28T17:22:52Z\"\n        }\n      ],\n      \"participateInNextBetaRelease\": false\n    },\n    \"cellularGateway\": {\n      \"currentVersion\": {\n        \"id\": \"4321\",\n        \"firmware\": \"camera-11-2-1\",\n        \"shortName\": \"MV 11.2.1\",\n        \"releaseType\": \"stable\",\n        \"releaseDate\": \"2020-03-17T17:22:52Z\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"fromVersion\": {\n          \"id\": \"1234\",\n          \"firmware\": \"camera-10-8-1\",\n          \"shortName\": \"MV 10.8.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-03-17T17:22:52Z\"\n        },\n        \"toVersion\": {\n          \"id\": \"4321\",\n          \"firmware\": \"camera-11-2-1\",\n          \"shortName\": \"MV 11.2.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2019-03-17T17:22:52Z\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"toVersion\": {\n          \"id\": \"2134\",\n          \"firmware\": \"camera-15-5-2\",\n          \"shortName\": \"MV 25.5.2\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-05-28T17:22:52Z\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"3421\",\n          \"firmware\": \"camera-16-x-y\",\n          \"shortName\": \"MV 16.x.y\",\n          \"releaseType\": \"beta\",\n          \"releaseDate\": \"2020-11-28T17:22:52Z\"\n        }\n      ],\n      \"participateInNextBetaRelease\": false\n    },\n    \"sensor\": {\n      \"currentVersion\": {\n        \"id\": \"4321\",\n        \"firmware\": \"camera-11-2-1\",\n        \"shortName\": \"MV 11.2.1\",\n        \"releaseType\": \"stable\",\n        \"releaseDate\": \"2020-03-17T17:22:52Z\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"fromVersion\": {\n          \"id\": \"1234\",\n          \"firmware\": \"camera-10-8-1\",\n          \"shortName\": \"MV 10.8.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-03-17T17:22:52Z\"\n        },\n        \"toVersion\": {\n          \"id\": \"4321\",\n          \"firmware\": \"camera-11-2-1\",\n          \"shortName\": \"MV 11.2.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2019-03-17T17:22:52Z\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"toVersion\": {\n          \"id\": \"2134\",\n          \"firmware\": \"camera-15-5-2\",\n          \"shortName\": \"MV 25.5.2\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-05-28T17:22:52Z\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"3421\",\n          \"firmware\": \"camera-16-x-y\",\n          \"shortName\": \"MV 16.x.y\",\n          \"releaseType\": \"beta\",\n          \"releaseDate\": \"2020-11-28T17:22:52Z\"\n        }\n      ],\n      \"participateInNextBetaRelease\": false\n    },\n    \"wirelessController\": {\n      \"currentVersion\": {\n        \"id\": \"4321\",\n        \"firmware\": \"camera-11-2-1\",\n        \"shortName\": \"MV 11.2.1\",\n        \"releaseType\": \"stable\",\n        \"releaseDate\": \"2020-03-17T17:22:52Z\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"fromVersion\": {\n          \"id\": \"1234\",\n          \"firmware\": \"camera-10-8-1\",\n          \"shortName\": \"MV 10.8.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-03-17T17:22:52Z\"\n        },\n        \"toVersion\": {\n          \"id\": \"4321\",\n          \"firmware\": \"camera-11-2-1\",\n          \"shortName\": \"MV 11.2.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2019-03-17T17:22:52Z\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"toVersion\": {\n          \"id\": \"2134\",\n          \"firmware\": \"camera-15-5-2\",\n          \"shortName\": \"MV 25.5.2\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-05-28T17:22:52Z\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"3421\",\n          \"firmware\": \"camera-16-x-y\",\n          \"shortName\": \"MV 16.x.y\",\n          \"releaseType\": \"beta\",\n          \"releaseDate\": \"2020-11-28T17:22:52Z\"\n        }\n      ],\n      \"participateInNextBetaRelease\": false\n    },\n    \"secureConnect\": {\n      \"currentVersion\": {\n        \"id\": \"4321\",\n        \"firmware\": \"camera-11-2-1\",\n        \"shortName\": \"MV 11.2.1\",\n        \"releaseType\": \"stable\",\n        \"releaseDate\": \"2020-03-17T17:22:52Z\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"fromVersion\": {\n          \"id\": \"1234\",\n          \"firmware\": \"camera-10-8-1\",\n          \"shortName\": \"MV 10.8.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-03-17T17:22:52Z\"\n        },\n        \"toVersion\": {\n          \"id\": \"4321\",\n          \"firmware\": \"camera-11-2-1\",\n          \"shortName\": \"MV 11.2.1\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2019-03-17T17:22:52Z\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"2021-05-17T17:22:52Z\",\n        \"toVersion\": {\n          \"id\": \"2134\",\n          \"firmware\": \"camera-15-5-2\",\n          \"shortName\": \"MV 25.5.2\",\n          \"releaseType\": \"stable\",\n          \"releaseDate\": \"2021-05-28T17:22:52Z\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"3421\",\n          \"firmware\": \"camera-16-x-y\",\n          \"shortName\": \"MV 16.x.y\",\n          \"releaseType\": \"beta\",\n          \"releaseDate\": \"2020-11-28T17:22:52Z\"\n        }\n      ],\n      \"participateInNextBetaRelease\": false\n    }\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "floorPlans",
							"item": [
								{
									"name": "autoLocate",
									"item": [
										{
											"name": "devices",
											"item": [
												{
													"name": "getOrganizationFloorPlansAutoLocateDevices",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/floorPlans/autoLocate/devices",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"floorPlans",
																"autoLocate",
																"devices"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 10000. Default is 1000.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Optional parameter to filter devices by one or more network IDs",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Optional parameter to filter devices by one or more network IDs",
																	"disabled": true
																},
																{
																	"key": "floorPlanIds",
																	"value": "{{floorPlanIds}}",
																	"description": "Optional parameter to filter devices by one or more floorplan IDs",
																	"disabled": true
																},
																{
																	"key": "floorPlanIds",
																	"value": "{{floorPlanIds}}",
																	"description": "Optional parameter to filter devices by one or more floorplan IDs",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List auto locate details for each device in your organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/floorPlans/autoLocate/devices?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&floorPlanIds=<string>&floorPlanIds=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"floorPlans",
																		"autoLocate",
																		"devices"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "floorPlanIds",
																			"value": "<string>"
																		},
																		{
																			"key": "floorPlanIds",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"items\": [\n      {\n        \"name\": \"My AP\",\n        \"serial\": \"Q234-ABCD-5678\",\n        \"mac\": \"00:11:22:33:44:55\",\n        \"model\": \"MR34\",\n        \"tags\": [\n          \"tag1\",\n          \"tag2\"\n        ],\n        \"status\": \"online\",\n        \"network\": {\n          \"id\": \"N_24329156\"\n        },\n        \"floorPlan\": {\n          \"id\": \"g_2176982374\",\n          \"status\": \"My floor plan\"\n        },\n        \"lat\": 37.4180951010362,\n        \"lng\": -122.098531723022,\n        \"autoLocate\": {\n          \"lat\": 13.23454243,\n          \"lng\": 18.12938123\n        },\n        \"type\": \"user\",\n        \"isAnchor\": true\n      }\n    ],\n    \"meta\": {\n      \"counts\": {\n        \"items\": {\n          \"total\": 50,\n          \"remaining\": 100\n        }\n      }\n    }\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "jobs",
											"item": [
												{
													"name": "batchNetworkFloorPlansAutoLocateJobs",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"jobs\": [\n    {\n      \"floorPlanId\": \"<string>\",\n      \"refresh\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"scheduledAt\": \"<dateTime>\"\n    },\n    {\n      \"floorPlanId\": \"<string>\",\n      \"refresh\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"scheduledAt\": \"<dateTime>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/floorPlans/autoLocate/jobs/batch",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"floorPlans",
																"autoLocate",
																"jobs",
																"batch"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Schedule auto locate jobs for one or more floor plans in a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"jobs\": [\n    {\n      \"floorPlanId\": \"<string>\",\n      \"refresh\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"scheduledAt\": \"<dateTime>\"\n    },\n    {\n      \"floorPlanId\": \"<string>\",\n      \"refresh\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"scheduledAt\": \"<dateTime>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/floorPlans/autoLocate/jobs/batch",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"floorPlans",
																		"autoLocate",
																		"jobs",
																		"batch"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"jobs\": [\n    {\n      \"id\": \"1234\",\n      \"networkId\": \"N_24329156\",\n      \"floorPlanId\": \"g_2176982374\",\n      \"status\": \"error\",\n      \"scheduledAt\": \"2018-02-11T00:00:00Z\",\n      \"completed\": {\n        \"percentage\": 50\n      },\n      \"ranging\": {\n        \"status\": \"in progress\",\n        \"completed\": {\n          \"percentage\": 24\n        }\n      },\n      \"gnss\": {\n        \"status\": \"in progress\",\n        \"completed\": {\n          \"percentage\": 4\n        }\n      },\n      \"errors\": [\n        {\n          \"source\": \"ranging\",\n          \"type\": \"missing anchors\"\n        }\n      ]\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "cancelNetworkFloorPlansAutoLocateJob",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/floorPlans/autoLocate/jobs/:jobId/cancel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"floorPlans",
																"autoLocate",
																"jobs",
																":jobId",
																"cancel"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "jobId",
																	"value": "{{jobId}}",
																	"description": "(Required) Job ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Cancel a scheduled or running auto locate job"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/floorPlans/autoLocate/jobs/:jobId/cancel",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"floorPlans",
																		"autoLocate",
																		"jobs",
																		":jobId",
																		"cancel"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "jobId",
																			"value": "<string>",
																			"description": "(Required) Job ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "publishNetworkFloorPlansAutoLocateJob",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"devices\": [\n    {\n      \"serial\": \"<string>\",\n      \"lat\": \"<float>\",\n      \"lng\": \"<float>\",\n      \"autoLocate\": {\n        \"isAnchor\": \"<boolean>\"\n      }\n    },\n    {\n      \"serial\": \"<string>\",\n      \"lat\": \"<float>\",\n      \"lng\": \"<float>\",\n      \"autoLocate\": {\n        \"isAnchor\": \"<boolean>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/floorPlans/autoLocate/jobs/:jobId/publish",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"floorPlans",
																"autoLocate",
																"jobs",
																":jobId",
																"publish"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "jobId",
																	"value": "{{jobId}}",
																	"description": "(Required) Job ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the status of a finished auto locate job to be published, and update device locations"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"devices\": [\n    {\n      \"serial\": \"<string>\",\n      \"lat\": \"<float>\",\n      \"lng\": \"<float>\",\n      \"autoLocate\": {\n        \"isAnchor\": \"<boolean>\"\n      }\n    },\n    {\n      \"serial\": \"<string>\",\n      \"lat\": \"<float>\",\n      \"lng\": \"<float>\",\n      \"autoLocate\": {\n        \"isAnchor\": \"<boolean>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/floorPlans/autoLocate/jobs/:jobId/publish",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"floorPlans",
																		"autoLocate",
																		"jobs",
																		":jobId",
																		"publish"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "jobId",
																			"value": "<string>",
																			"description": "(Required) Job ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": true\n}"
														}
													]
												},
												{
													"name": "recalculateNetworkFloorPlansAutoLocateJob",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"devices\": [\n    {\n      \"serial\": \"<string>\",\n      \"autoLocate\": {\n        \"isAnchor\": \"<boolean>\",\n        \"lat\": \"<float>\",\n        \"lng\": \"<float>\"\n      }\n    },\n    {\n      \"serial\": \"<string>\",\n      \"autoLocate\": {\n        \"isAnchor\": \"<boolean>\",\n        \"lat\": \"<float>\",\n        \"lng\": \"<float>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/floorPlans/autoLocate/jobs/:jobId/recalculate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"floorPlans",
																"autoLocate",
																"jobs",
																":jobId",
																"recalculate"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "jobId",
																	"value": "{{jobId}}",
																	"description": "(Required) Job ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Trigger auto locate recalculation for a job, and optionally set anchors"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"devices\": [\n    {\n      \"serial\": \"<string>\",\n      \"autoLocate\": {\n        \"isAnchor\": \"<boolean>\",\n        \"lat\": \"<float>\",\n        \"lng\": \"<float>\"\n      }\n    },\n    {\n      \"serial\": \"<string>\",\n      \"autoLocate\": {\n        \"isAnchor\": \"<boolean>\",\n        \"lat\": \"<float>\",\n        \"lng\": \"<float>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/floorPlans/autoLocate/jobs/:jobId/recalculate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"floorPlans",
																		"autoLocate",
																		"jobs",
																		":jobId",
																		"recalculate"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "jobId",
																			"value": "<string>",
																			"description": "(Required) Job ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": true\n}"
														}
													]
												}
											]
										},
										{
											"name": "statuses",
											"item": [
												{
													"name": "getOrganizationFloorPlansAutoLocateStatuses",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/floorPlans/autoLocate/statuses",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"floorPlans",
																"autoLocate",
																"statuses"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 10000. Default is 1000.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Optional parameter to filter floorplans by one or more network IDs",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Optional parameter to filter floorplans by one or more network IDs",
																	"disabled": true
																},
																{
																	"key": "floorPlanIds",
																	"value": "{{floorPlanIds}}",
																	"description": "Optional parameter to filter floorplans by one or more floorplan IDs",
																	"disabled": true
																},
																{
																	"key": "floorPlanIds",
																	"value": "{{floorPlanIds}}",
																	"description": "Optional parameter to filter floorplans by one or more floorplan IDs",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the status of auto locate for each floorplan in your organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/floorPlans/autoLocate/statuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&floorPlanIds=<string>&floorPlanIds=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"floorPlans",
																		"autoLocate",
																		"statuses"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "floorPlanIds",
																			"value": "<string>"
																		},
																		{
																			"key": "floorPlanIds",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"items\": [\n      {\n        \"network\": {\n          \"id\": \"N_24329156\"\n        },\n        \"floorPlanId\": \"g_2176982374\",\n        \"name\": \"My Floorplan\",\n        \"counts\": {\n          \"devices\": {\n            \"total\": 120\n          }\n        },\n        \"jobs\": [\n          {\n            \"id\": \"1234\",\n            \"status\": \"error\",\n            \"scheduledAt\": \"2018-02-11T00:00:00Z\",\n            \"completed\": {\n              \"percentage\": 50\n            },\n            \"ranging\": {\n              \"status\": \"in progress\",\n              \"completed\": {\n                \"percentage\": 24\n              }\n            },\n            \"gnss\": {\n              \"status\": \"in progress\",\n              \"completed\": {\n                \"percentage\": 4\n              }\n            },\n            \"errors\": [\n              {\n                \"source\": \"ranging\",\n                \"type\": \"missing anchors\"\n              }\n            ]\n          }\n        ]\n      }\n    ],\n    \"meta\": {\n      \"counts\": {\n        \"items\": {\n          \"total\": 50,\n          \"remaining\": 100\n        }\n      }\n    }\n  }\n]"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "devices",
									"item": [
										{
											"name": "batchNetworkFloorPlansDevicesUpdate",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"assignments\": [\n    {\n      \"serial\": \"<string>\",\n      \"floorPlan\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"serial\": \"<string>\",\n      \"floorPlan\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/floorPlans/devices/batchUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"floorPlans",
														"devices",
														"batchUpdate"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update floorplan assignments for a batch of devices"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"assignments\": [\n    {\n      \"serial\": \"<string>\",\n      \"floorPlan\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"serial\": \"<string>\",\n      \"floorPlan\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/floorPlans/devices/batchUpdate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"floorPlans",
																"devices",
																"batchUpdate"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": true\n}"
												}
											]
										}
									]
								},
								{
									"name": "createNetworkFloorPlan",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"imageContents\": \"<byte>\",\n  \"center\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"bottomLeftCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"bottomRightCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"topLeftCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"topRightCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"floorNumber\": \"<float>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/floorPlans",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"floorPlans"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Upload a floor plan"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"HQ Floor Plan\",\n  \"center\": {\n    \"lat\": 37.770040510499996,\n    \"lng\": -122.38714009525\n  },\n  \"bottomLeftCorner\": {\n    \"lat\": 37.770040510499996,\n    \"lng\": -122.38714009525\n  },\n  \"bottomRightCorner\": {\n    \"lat\": 37.770040510499996,\n    \"lng\": -122.38714009525\n  },\n  \"topLeftCorner\": {\n    \"lat\": 37.770040510499996,\n    \"lng\": -122.38714009525\n  },\n  \"topRightCorner\": {\n    \"lat\": 37.770040510499996,\n    \"lng\": -122.38714009525\n  },\n  \"floorNumber\": 5,\n  \"imageContents\": \"2a9edd3f4ffd80130c647d13eacb59f3\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/floorPlans",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"floorPlans"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"floorPlanId\": \"g_1234567\",\n  \"imageUrl\": \"https://meraki-na.s3.amazonaws.com/assets/...\",\n  \"imageUrlExpiresAt\": \"2019-06-11 16:04:54 +00:00\",\n  \"imageExtension\": \"png\",\n  \"imageMd5\": \"2a9edd3f4ffd80130c647d13eacb59f3\",\n  \"name\": \"HQ Floor Plan\",\n  \"devices\": [\n    {\n      \"name\": \"My AP\",\n      \"lat\": 37.4180951010362,\n      \"lng\": -122.098531723022,\n      \"address\": \"1600 Pennsylvania Ave\",\n      \"notes\": \"My AP's note\",\n      \"tags\": [\n        \"recently-added\"\n      ],\n      \"networkId\": \"N_24329156\",\n      \"serial\": \"Q234-ABCD-5678\",\n      \"model\": \"MR34\",\n      \"imei\": \"123456789000000\",\n      \"mac\": \"00:11:22:33:44:55\",\n      \"lanIp\": \"1.2.3.4\",\n      \"firmware\": \"wireless-25-14\",\n      \"productType\": \"wireless\",\n      \"details\": [\n        {\n          \"name\": \"Catalyst serial\",\n          \"value\": \"123ABC\"\n        }\n      ]\n    }\n  ],\n  \"width\": 100,\n  \"height\": 150.1,\n  \"center\": {\n    \"lat\": 37.770040510499996,\n    \"lng\": -122.38714009525\n  },\n  \"bottomLeftCorner\": {\n    \"lat\": 37.7696461495,\n    \"lng\": -122.3880815506\n  },\n  \"bottomRightCorner\": {\n    \"lat\": 37.771524649766654,\n    \"lng\": -122.38795275055205\n  },\n  \"topLeftCorner\": {\n    \"lat\": 37.769700101836364,\n    \"lng\": -122.3888684251381\n  },\n  \"topRightCorner\": {\n    \"lat\": 37.77157860210302,\n    \"lng\": -122.38873962509012\n  },\n  \"floorNumber\": 5\n}"
										}
									]
								},
								{
									"name": "deleteNetworkFloorPlan",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/floorPlans/:floorPlanId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"floorPlans",
												":floorPlanId"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "floorPlanId",
													"value": "{{floorPlanId}}",
													"description": "(Required) Floor plan ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Destroy a floor plan"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/floorPlans/:floorPlanId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"floorPlans",
														":floorPlanId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "floorPlanId",
															"value": "<string>",
															"description": "(Required) Floor plan ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"floorPlanId\": \"g_1234567\",\n  \"imageUrl\": \"https://meraki-na.s3.amazonaws.com/assets/...\",\n  \"imageUrlExpiresAt\": \"2019-06-11 16:04:54 +00:00\",\n  \"imageExtension\": \"png\",\n  \"imageMd5\": \"2a9edd3f4ffd80130c647d13eacb59f3\",\n  \"name\": \"HQ Floor Plan\",\n  \"devices\": [\n    {\n      \"name\": \"My AP\",\n      \"lat\": 37.4180951010362,\n      \"lng\": -122.098531723022,\n      \"address\": \"1600 Pennsylvania Ave\",\n      \"notes\": \"My AP's note\",\n      \"tags\": [\n        \"recently-added\"\n      ],\n      \"networkId\": \"N_24329156\",\n      \"serial\": \"Q234-ABCD-5678\",\n      \"model\": \"MR34\",\n      \"imei\": \"123456789000000\",\n      \"mac\": \"00:11:22:33:44:55\",\n      \"lanIp\": \"1.2.3.4\",\n      \"firmware\": \"wireless-25-14\",\n      \"productType\": \"wireless\",\n      \"details\": [\n        {\n          \"name\": \"Catalyst serial\",\n          \"value\": \"123ABC\"\n        }\n      ]\n    }\n  ],\n  \"width\": 100,\n  \"height\": 150.1,\n  \"center\": {\n    \"lat\": 37.770040510499996,\n    \"lng\": -122.38714009525\n  },\n  \"bottomLeftCorner\": {\n    \"lat\": 37.7696461495,\n    \"lng\": -122.3880815506\n  },\n  \"bottomRightCorner\": {\n    \"lat\": 37.771524649766654,\n    \"lng\": -122.38795275055205\n  },\n  \"topLeftCorner\": {\n    \"lat\": 37.769700101836364,\n    \"lng\": -122.3888684251381\n  },\n  \"topRightCorner\": {\n    \"lat\": 37.77157860210302,\n    \"lng\": -122.38873962509012\n  },\n  \"floorNumber\": 5\n}"
										}
									]
								},
								{
									"name": "getNetworkFloorPlan",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/floorPlans/:floorPlanId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"floorPlans",
												":floorPlanId"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "floorPlanId",
													"value": "{{floorPlanId}}",
													"description": "(Required) Floor plan ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Find a floor plan by ID"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/floorPlans/:floorPlanId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"floorPlans",
														":floorPlanId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "floorPlanId",
															"value": "<string>",
															"description": "(Required) Floor plan ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"floorPlanId\": \"g_1234567\",\n  \"imageUrl\": \"https://meraki-na.s3.amazonaws.com/assets/...\",\n  \"imageUrlExpiresAt\": \"2019-06-11 16:04:54 +00:00\",\n  \"imageExtension\": \"png\",\n  \"imageMd5\": \"2a9edd3f4ffd80130c647d13eacb59f3\",\n  \"name\": \"HQ Floor Plan\",\n  \"devices\": [\n    {\n      \"name\": \"My AP\",\n      \"lat\": 37.4180951010362,\n      \"lng\": -122.098531723022,\n      \"address\": \"1600 Pennsylvania Ave\",\n      \"notes\": \"My AP's note\",\n      \"tags\": [\n        \"recently-added\"\n      ],\n      \"networkId\": \"N_24329156\",\n      \"serial\": \"Q234-ABCD-5678\",\n      \"model\": \"MR34\",\n      \"imei\": \"123456789000000\",\n      \"mac\": \"00:11:22:33:44:55\",\n      \"lanIp\": \"1.2.3.4\",\n      \"firmware\": \"wireless-25-14\",\n      \"productType\": \"wireless\",\n      \"details\": [\n        {\n          \"name\": \"Catalyst serial\",\n          \"value\": \"123ABC\"\n        }\n      ]\n    }\n  ],\n  \"width\": 100,\n  \"height\": 150.1,\n  \"center\": {\n    \"lat\": 37.770040510499996,\n    \"lng\": -122.38714009525\n  },\n  \"bottomLeftCorner\": {\n    \"lat\": 37.7696461495,\n    \"lng\": -122.3880815506\n  },\n  \"bottomRightCorner\": {\n    \"lat\": 37.771524649766654,\n    \"lng\": -122.38795275055205\n  },\n  \"topLeftCorner\": {\n    \"lat\": 37.769700101836364,\n    \"lng\": -122.3888684251381\n  },\n  \"topRightCorner\": {\n    \"lat\": 37.77157860210302,\n    \"lng\": -122.38873962509012\n  },\n  \"floorNumber\": 5\n}"
										}
									]
								},
								{
									"name": "getNetworkFloorPlans",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/floorPlans",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"floorPlans"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "List the floor plans that belong to your network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/floorPlans",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"floorPlans"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"floorPlanId\": \"g_1234567\",\n    \"imageUrl\": \"https://meraki-na.s3.amazonaws.com/assets/...\",\n    \"imageUrlExpiresAt\": \"2019-06-11 16:04:54 +00:00\",\n    \"imageExtension\": \"png\",\n    \"imageMd5\": \"2a9edd3f4ffd80130c647d13eacb59f3\",\n    \"name\": \"HQ Floor Plan\",\n    \"devices\": [\n      {\n        \"name\": \"My AP\",\n        \"lat\": 37.4180951010362,\n        \"lng\": -122.098531723022,\n        \"address\": \"1600 Pennsylvania Ave\",\n        \"notes\": \"My AP's note\",\n        \"tags\": [\n          \"recently-added\"\n        ],\n        \"networkId\": \"N_24329156\",\n        \"serial\": \"Q234-ABCD-5678\",\n        \"model\": \"MR34\",\n        \"imei\": \"123456789000000\",\n        \"mac\": \"00:11:22:33:44:55\",\n        \"lanIp\": \"1.2.3.4\",\n        \"firmware\": \"wireless-25-14\",\n        \"productType\": \"wireless\",\n        \"details\": [\n          {\n            \"name\": \"Catalyst serial\",\n            \"value\": \"123ABC\"\n          }\n        ]\n      }\n    ],\n    \"width\": 100,\n    \"height\": 150.1,\n    \"center\": {\n      \"lat\": 37.770040510499996,\n      \"lng\": -122.38714009525\n    },\n    \"bottomLeftCorner\": {\n      \"lat\": 37.7696461495,\n      \"lng\": -122.3880815506\n    },\n    \"bottomRightCorner\": {\n      \"lat\": 37.771524649766654,\n      \"lng\": -122.38795275055205\n    },\n    \"topLeftCorner\": {\n      \"lat\": 37.769700101836364,\n      \"lng\": -122.3888684251381\n    },\n    \"topRightCorner\": {\n      \"lat\": 37.77157860210302,\n      \"lng\": -122.38873962509012\n    },\n    \"floorNumber\": 5\n  }\n]"
										}
									]
								},
								{
									"name": "updateNetworkFloorPlan",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"center\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"bottomLeftCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"bottomRightCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"topLeftCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"topRightCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"floorNumber\": \"<float>\",\n  \"imageContents\": \"<byte>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/floorPlans/:floorPlanId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"floorPlans",
												":floorPlanId"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "floorPlanId",
													"value": "{{floorPlanId}}",
													"description": "(Required) Floor plan ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Update a floor plan's geolocation and other meta data"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"HQ Floor Plan\",\n  \"center\": {\n    \"lat\": 37.770040510499996,\n    \"lng\": -122.38714009525\n  },\n  \"bottomLeftCorner\": {\n    \"lat\": 37.770040510499996,\n    \"lng\": -122.38714009525\n  },\n  \"bottomRightCorner\": {\n    \"lat\": 37.770040510499996,\n    \"lng\": -122.38714009525\n  },\n  \"topLeftCorner\": {\n    \"lat\": 37.770040510499996,\n    \"lng\": -122.38714009525\n  },\n  \"topRightCorner\": {\n    \"lat\": 37.770040510499996,\n    \"lng\": -122.38714009525\n  },\n  \"floorNumber\": 5,\n  \"imageContents\": \"2a9edd3f4ffd80130c647d13eacb59f3\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/floorPlans/:floorPlanId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"floorPlans",
														":floorPlanId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "floorPlanId",
															"value": "<string>",
															"description": "(Required) Floor plan ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"floorPlanId\": \"g_1234567\",\n  \"imageUrl\": \"https://meraki-na.s3.amazonaws.com/assets/...\",\n  \"imageUrlExpiresAt\": \"2019-06-11 16:04:54 +00:00\",\n  \"imageExtension\": \"png\",\n  \"imageMd5\": \"2a9edd3f4ffd80130c647d13eacb59f3\",\n  \"name\": \"HQ Floor Plan\",\n  \"devices\": [\n    {\n      \"name\": \"My AP\",\n      \"lat\": 37.4180951010362,\n      \"lng\": -122.098531723022,\n      \"address\": \"1600 Pennsylvania Ave\",\n      \"notes\": \"My AP's note\",\n      \"tags\": [\n        \"recently-added\"\n      ],\n      \"networkId\": \"N_24329156\",\n      \"serial\": \"Q234-ABCD-5678\",\n      \"model\": \"MR34\",\n      \"imei\": \"123456789000000\",\n      \"mac\": \"00:11:22:33:44:55\",\n      \"lanIp\": \"1.2.3.4\",\n      \"firmware\": \"wireless-25-14\",\n      \"productType\": \"wireless\",\n      \"details\": [\n        {\n          \"name\": \"Catalyst serial\",\n          \"value\": \"123ABC\"\n        }\n      ]\n    }\n  ],\n  \"width\": 100,\n  \"height\": 150.1,\n  \"center\": {\n    \"lat\": 37.770040510499996,\n    \"lng\": -122.38714009525\n  },\n  \"bottomLeftCorner\": {\n    \"lat\": 37.7696461495,\n    \"lng\": -122.3880815506\n  },\n  \"bottomRightCorner\": {\n    \"lat\": 37.771524649766654,\n    \"lng\": -122.38795275055205\n  },\n  \"topLeftCorner\": {\n    \"lat\": 37.769700101836364,\n    \"lng\": -122.3888684251381\n  },\n  \"topRightCorner\": {\n    \"lat\": 37.77157860210302,\n    \"lng\": -122.38873962509012\n  },\n  \"floorNumber\": 5\n}"
										}
									]
								}
							]
						},
						{
							"name": "groupPolicies",
							"item": [
								{
									"name": "createNetworkGroupPolicy",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"scheduling\": {\n    \"enabled\": \"<boolean>\",\n    \"monday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"tuesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"wednesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"thursday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"friday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"saturday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"sunday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    }\n  },\n  \"bandwidth\": {\n    \"settings\": \"<string>\",\n    \"bandwidthLimits\": {\n      \"limitUp\": \"<integer>\",\n      \"limitDown\": \"<integer>\"\n    }\n  },\n  \"firewallAndTrafficShaping\": {\n    \"settings\": \"<string>\",\n    \"trafficShapingRules\": [\n      {\n        \"definitions\": {\n          \"type\": \"array\",\n          \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n          \"maxItems\": 2,\n          \"items\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"type\",\n              \"value\"\n            ],\n            \"properties\": {\n              \"type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          }\n        },\n        \"perClientBandwidthLimits\": {\n          \"settings\": \"<string>\",\n          \"bandwidthLimits\": {\n            \"limitUp\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limitDown\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"dscpTagValue\": \"<integer>\",\n        \"pcpTagValue\": \"<integer>\",\n        \"priority\": \"<string>\"\n      },\n      {\n        \"definitions\": {\n          \"type\": \"array\",\n          \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n          \"maxItems\": 2,\n          \"items\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"type\",\n              \"value\"\n            ],\n            \"properties\": {\n              \"type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          }\n        },\n        \"perClientBandwidthLimits\": {\n          \"settings\": \"<string>\",\n          \"bandwidthLimits\": {\n            \"limitUp\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limitDown\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"dscpTagValue\": \"<integer>\",\n        \"pcpTagValue\": \"<integer>\",\n        \"priority\": \"<string>\"\n      }\n    ],\n    \"l3FirewallRules\": [\n      {\n        \"policy\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"destCidr\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"destPort\": \"<string>\"\n      },\n      {\n        \"policy\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"destCidr\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"destPort\": \"<string>\"\n      }\n    ],\n    \"l7FirewallRules\": [\n      {\n        \"policy\": \"<string>\",\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"policy\": \"<string>\",\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ]\n  },\n  \"contentFiltering\": {\n    \"allowedUrlPatterns\": {\n      \"settings\": \"<string>\",\n      \"patterns\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"blockedUrlPatterns\": {\n      \"settings\": \"<string>\",\n      \"patterns\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"blockedUrlCategories\": {\n      \"settings\": \"<string>\",\n      \"categories\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"splashAuthSettings\": \"<string>\",\n  \"vlanTagging\": {\n    \"settings\": \"<string>\",\n    \"vlanId\": \"<string>\"\n  },\n  \"bonjourForwarding\": {\n    \"settings\": \"<string>\",\n    \"rules\": [\n      {\n        \"vlanId\": \"<string>\",\n        \"services\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"description\": \"<string>\"\n      },\n      {\n        \"vlanId\": \"<string>\",\n        \"services\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"description\": \"<string>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/groupPolicies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"groupPolicies"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Create a group policy"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"scheduling\": {\n    \"enabled\": \"<boolean>\",\n    \"monday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"tuesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"wednesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"thursday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"friday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"saturday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"sunday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    }\n  },\n  \"bandwidth\": {\n    \"settings\": \"<string>\",\n    \"bandwidthLimits\": {\n      \"limitUp\": \"<integer>\",\n      \"limitDown\": \"<integer>\"\n    }\n  },\n  \"firewallAndTrafficShaping\": {\n    \"settings\": \"<string>\",\n    \"trafficShapingRules\": [\n      {\n        \"definitions\": {\n          \"type\": \"array\",\n          \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n          \"maxItems\": 2,\n          \"minItems\": 2,\n          \"items\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"type\",\n              \"value\"\n            ],\n            \"properties\": {\n              \"type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          }\n        },\n        \"perClientBandwidthLimits\": {\n          \"settings\": \"<string>\",\n          \"bandwidthLimits\": {\n            \"limitUp\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limitDown\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"dscpTagValue\": \"<integer>\",\n        \"pcpTagValue\": \"<integer>\",\n        \"priority\": \"<string>\"\n      },\n      {\n        \"definitions\": {\n          \"type\": \"array\",\n          \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n          \"maxItems\": 2,\n          \"minItems\": 2,\n          \"items\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"type\",\n              \"value\"\n            ],\n            \"properties\": {\n              \"type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          }\n        },\n        \"perClientBandwidthLimits\": {\n          \"settings\": \"<string>\",\n          \"bandwidthLimits\": {\n            \"limitUp\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limitDown\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"dscpTagValue\": \"<integer>\",\n        \"pcpTagValue\": \"<integer>\",\n        \"priority\": \"<string>\"\n      }\n    ],\n    \"l3FirewallRules\": [\n      {\n        \"policy\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"destCidr\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"destPort\": \"<string>\"\n      },\n      {\n        \"policy\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"destCidr\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"destPort\": \"<string>\"\n      }\n    ],\n    \"l7FirewallRules\": [\n      {\n        \"policy\": \"<string>\",\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"policy\": \"<string>\",\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ]\n  },\n  \"contentFiltering\": {\n    \"allowedUrlPatterns\": {\n      \"settings\": \"<string>\",\n      \"patterns\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"blockedUrlPatterns\": {\n      \"settings\": \"<string>\",\n      \"patterns\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"blockedUrlCategories\": {\n      \"settings\": \"<string>\",\n      \"categories\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"splashAuthSettings\": \"<string>\",\n  \"vlanTagging\": {\n    \"settings\": \"<string>\",\n    \"vlanId\": \"<string>\"\n  },\n  \"bonjourForwarding\": {\n    \"settings\": \"<string>\",\n    \"rules\": [\n      {\n        \"vlanId\": \"<string>\",\n        \"services\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"description\": \"<string>\"\n      },\n      {\n        \"vlanId\": \"<string>\",\n        \"services\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"description\": \"<string>\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/groupPolicies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"groupPolicies"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"groupPolicyId\": \"101\",\n  \"scheduling\": {\n    \"enabled\": true,\n    \"monday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"tuesday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"wednesday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"thursday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"friday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"saturday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"sunday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    }\n  },\n  \"bandwidth\": {\n    \"settings\": \"custom\",\n    \"bandwidthLimits\": {\n      \"limitUp\": 1000000,\n      \"limitDown\": 1000000\n    }\n  },\n  \"firewallAndTrafficShaping\": {\n    \"settings\": \"custom\",\n    \"trafficShapingRules\": [\n      {\n        \"definitions\": [\n          {\n            \"type\": \"host\",\n            \"value\": \"google.com\"\n          }\n        ],\n        \"perClientBandwidthLimits\": {\n          \"settings\": \"custom\",\n          \"bandwidthLimits\": {\n            \"limitUp\": 1000000,\n            \"limitDown\": 1000000\n          }\n        },\n        \"dscpTagValue\": 0,\n        \"pcpTagValue\": 0,\n        \"priority\": \"normal\"\n      }\n    ],\n    \"l3FirewallRules\": [\n      {\n        \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\n        \"policy\": \"allow\",\n        \"protocol\": \"tcp\",\n        \"destPort\": \"443\",\n        \"destCidr\": \"192.168.1.0/24\"\n      }\n    ],\n    \"l7FirewallRules\": [\n      {\n        \"policy\": \"deny\",\n        \"type\": \"host\",\n        \"value\": \"google.com\"\n      }\n    ]\n  },\n  \"contentFiltering\": {\n    \"allowedUrlPatterns\": {\n      \"settings\": \"network default\",\n      \"patterns\": []\n    },\n    \"blockedUrlPatterns\": {\n      \"settings\": \"append\",\n      \"patterns\": [\n        \"http://www.example.com\",\n        \"http://www.betting.com\"\n      ]\n    },\n    \"blockedUrlCategories\": {\n      \"settings\": \"override\",\n      \"categories\": [\n        \"meraki:contentFiltering/category/1\",\n        \"meraki:contentFiltering/category/7\"\n      ]\n    }\n  },\n  \"splashAuthSettings\": \"bypass\",\n  \"vlanTagging\": {\n    \"settings\": \"custom\",\n    \"vlanId\": \"1\"\n  },\n  \"bonjourForwarding\": {\n    \"settings\": \"custom\",\n    \"rules\": [\n      {\n        \"description\": \"A simple bonjour rule\",\n        \"vlanId\": \"1\",\n        \"services\": [\n          \"All Services\"\n        ]\n      }\n    ]\n  }\n}"
										}
									]
								},
								{
									"name": "deleteNetworkGroupPolicy",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/groupPolicies/:groupPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"groupPolicies",
												":groupPolicyId"
											],
											"query": [
												{
													"key": "force",
													"value": "{{force}}",
													"description": "If true, the system deletes the GP even if there are active clients using the GP. After deletion, active clients that were assigned to that Group Policy will be left without any policy applied. Default is false.",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "groupPolicyId",
													"value": "{{groupPolicyId}}",
													"description": "(Required) Group policy ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Delete a group policy"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/groupPolicies/:groupPolicyId?force=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"groupPolicies",
														":groupPolicyId"
													],
													"query": [
														{
															"key": "force",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "groupPolicyId",
															"value": "<string>",
															"description": "(Required) Group policy ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "getNetworkGroupPolicies",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/groupPolicies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"groupPolicies"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "List the group policies in a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/groupPolicies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"groupPolicies"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"groupPolicyId\": \"101\",\n    \"scheduling\": {\n      \"enabled\": true,\n      \"monday\": {\n        \"active\": true,\n        \"from\": \"9:00\",\n        \"to\": \"17:00\"\n      },\n      \"tuesday\": {\n        \"active\": true,\n        \"from\": \"9:00\",\n        \"to\": \"17:00\"\n      },\n      \"wednesday\": {\n        \"active\": true,\n        \"from\": \"9:00\",\n        \"to\": \"17:00\"\n      },\n      \"thursday\": {\n        \"active\": true,\n        \"from\": \"9:00\",\n        \"to\": \"17:00\"\n      },\n      \"friday\": {\n        \"active\": true,\n        \"from\": \"9:00\",\n        \"to\": \"17:00\"\n      },\n      \"saturday\": {\n        \"active\": true,\n        \"from\": \"9:00\",\n        \"to\": \"17:00\"\n      },\n      \"sunday\": {\n        \"active\": true,\n        \"from\": \"9:00\",\n        \"to\": \"17:00\"\n      }\n    },\n    \"bandwidth\": {\n      \"settings\": \"custom\",\n      \"bandwidthLimits\": {\n        \"limitUp\": 1000000,\n        \"limitDown\": 1000000\n      }\n    },\n    \"firewallAndTrafficShaping\": {\n      \"settings\": \"custom\",\n      \"trafficShapingRules\": [\n        {\n          \"definitions\": [\n            {\n              \"type\": \"host\",\n              \"value\": \"google.com\"\n            }\n          ],\n          \"perClientBandwidthLimits\": {\n            \"settings\": \"custom\",\n            \"bandwidthLimits\": {\n              \"limitUp\": 1000000,\n              \"limitDown\": 1000000\n            }\n          },\n          \"dscpTagValue\": 0,\n          \"pcpTagValue\": 0,\n          \"priority\": \"normal\"\n        }\n      ],\n      \"l3FirewallRules\": [\n        {\n          \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\n          \"policy\": \"allow\",\n          \"protocol\": \"tcp\",\n          \"destPort\": \"443\",\n          \"destCidr\": \"192.168.1.0/24\"\n        }\n      ],\n      \"l7FirewallRules\": [\n        {\n          \"policy\": \"deny\",\n          \"type\": \"host\",\n          \"value\": \"google.com\"\n        }\n      ]\n    },\n    \"contentFiltering\": {\n      \"allowedUrlPatterns\": {\n        \"settings\": \"network default\",\n        \"patterns\": []\n      },\n      \"blockedUrlPatterns\": {\n        \"settings\": \"append\",\n        \"patterns\": [\n          \"http://www.example.com\",\n          \"http://www.betting.com\"\n        ]\n      },\n      \"blockedUrlCategories\": {\n        \"settings\": \"override\",\n        \"categories\": [\n          \"meraki:contentFiltering/category/1\",\n          \"meraki:contentFiltering/category/7\"\n        ]\n      }\n    },\n    \"splashAuthSettings\": \"bypass\",\n    \"vlanTagging\": {\n      \"settings\": \"custom\",\n      \"vlanId\": \"1\"\n    },\n    \"bonjourForwarding\": {\n      \"settings\": \"custom\",\n      \"rules\": [\n        {\n          \"description\": \"A simple bonjour rule\",\n          \"vlanId\": \"1\",\n          \"services\": [\n            \"All Services\"\n          ]\n        }\n      ]\n    }\n  }\n]"
										}
									]
								},
								{
									"name": "getNetworkGroupPolicy",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/groupPolicies/:groupPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"groupPolicies",
												":groupPolicyId"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "groupPolicyId",
													"value": "{{groupPolicyId}}",
													"description": "(Required) Group policy ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Display a group policy"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/groupPolicies/:groupPolicyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"groupPolicies",
														":groupPolicyId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "groupPolicyId",
															"value": "<string>",
															"description": "(Required) Group policy ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"groupPolicyId\": \"101\",\n  \"scheduling\": {\n    \"enabled\": true,\n    \"monday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"tuesday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"wednesday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"thursday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"friday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"saturday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"sunday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    }\n  },\n  \"bandwidth\": {\n    \"settings\": \"custom\",\n    \"bandwidthLimits\": {\n      \"limitUp\": 1000000,\n      \"limitDown\": 1000000\n    }\n  },\n  \"firewallAndTrafficShaping\": {\n    \"settings\": \"custom\",\n    \"trafficShapingRules\": [\n      {\n        \"definitions\": [\n          {\n            \"type\": \"host\",\n            \"value\": \"google.com\"\n          }\n        ],\n        \"perClientBandwidthLimits\": {\n          \"settings\": \"custom\",\n          \"bandwidthLimits\": {\n            \"limitUp\": 1000000,\n            \"limitDown\": 1000000\n          }\n        },\n        \"dscpTagValue\": 0,\n        \"pcpTagValue\": 0,\n        \"priority\": \"normal\"\n      }\n    ],\n    \"l3FirewallRules\": [\n      {\n        \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\n        \"policy\": \"allow\",\n        \"protocol\": \"tcp\",\n        \"destPort\": \"443\",\n        \"destCidr\": \"192.168.1.0/24\"\n      }\n    ],\n    \"l7FirewallRules\": [\n      {\n        \"policy\": \"deny\",\n        \"type\": \"host\",\n        \"value\": \"google.com\"\n      }\n    ]\n  },\n  \"contentFiltering\": {\n    \"allowedUrlPatterns\": {\n      \"settings\": \"network default\",\n      \"patterns\": []\n    },\n    \"blockedUrlPatterns\": {\n      \"settings\": \"append\",\n      \"patterns\": [\n        \"http://www.example.com\",\n        \"http://www.betting.com\"\n      ]\n    },\n    \"blockedUrlCategories\": {\n      \"settings\": \"override\",\n      \"categories\": [\n        \"meraki:contentFiltering/category/1\",\n        \"meraki:contentFiltering/category/7\"\n      ]\n    }\n  },\n  \"splashAuthSettings\": \"bypass\",\n  \"vlanTagging\": {\n    \"settings\": \"custom\",\n    \"vlanId\": \"1\"\n  },\n  \"bonjourForwarding\": {\n    \"settings\": \"custom\",\n    \"rules\": [\n      {\n        \"description\": \"A simple bonjour rule\",\n        \"vlanId\": \"1\",\n        \"services\": [\n          \"All Services\"\n        ]\n      }\n    ]\n  }\n}"
										}
									]
								},
								{
									"name": "updateNetworkGroupPolicy",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"scheduling\": {\n    \"enabled\": \"<boolean>\",\n    \"monday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"tuesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"wednesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"thursday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"friday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"saturday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"sunday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    }\n  },\n  \"bandwidth\": {\n    \"settings\": \"<string>\",\n    \"bandwidthLimits\": {\n      \"limitUp\": \"<integer>\",\n      \"limitDown\": \"<integer>\"\n    }\n  },\n  \"firewallAndTrafficShaping\": {\n    \"settings\": \"<string>\",\n    \"trafficShapingRules\": [\n      {\n        \"definitions\": {\n          \"type\": \"array\",\n          \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n          \"maxItems\": 2,\n          \"items\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"type\",\n              \"value\"\n            ],\n            \"properties\": {\n              \"type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          }\n        },\n        \"perClientBandwidthLimits\": {\n          \"settings\": \"<string>\",\n          \"bandwidthLimits\": {\n            \"limitUp\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limitDown\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"dscpTagValue\": \"<integer>\",\n        \"pcpTagValue\": \"<integer>\",\n        \"priority\": \"<string>\"\n      },\n      {\n        \"definitions\": {\n          \"type\": \"array\",\n          \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n          \"maxItems\": 2,\n          \"items\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"type\",\n              \"value\"\n            ],\n            \"properties\": {\n              \"type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          }\n        },\n        \"perClientBandwidthLimits\": {\n          \"settings\": \"<string>\",\n          \"bandwidthLimits\": {\n            \"limitUp\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limitDown\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"dscpTagValue\": \"<integer>\",\n        \"pcpTagValue\": \"<integer>\",\n        \"priority\": \"<string>\"\n      }\n    ],\n    \"l3FirewallRules\": [\n      {\n        \"policy\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"destCidr\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"destPort\": \"<string>\"\n      },\n      {\n        \"policy\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"destCidr\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"destPort\": \"<string>\"\n      }\n    ],\n    \"l7FirewallRules\": [\n      {\n        \"policy\": \"<string>\",\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"policy\": \"<string>\",\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ]\n  },\n  \"contentFiltering\": {\n    \"allowedUrlPatterns\": {\n      \"settings\": \"<string>\",\n      \"patterns\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"blockedUrlPatterns\": {\n      \"settings\": \"<string>\",\n      \"patterns\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"blockedUrlCategories\": {\n      \"settings\": \"<string>\",\n      \"categories\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"splashAuthSettings\": \"<string>\",\n  \"vlanTagging\": {\n    \"settings\": \"<string>\",\n    \"vlanId\": \"<string>\"\n  },\n  \"bonjourForwarding\": {\n    \"settings\": \"<string>\",\n    \"rules\": [\n      {\n        \"vlanId\": \"<string>\",\n        \"services\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"description\": \"<string>\"\n      },\n      {\n        \"vlanId\": \"<string>\",\n        \"services\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"description\": \"<string>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/groupPolicies/:groupPolicyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"groupPolicies",
												":groupPolicyId"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "groupPolicyId",
													"value": "{{groupPolicyId}}",
													"description": "(Required) Group policy ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Update a group policy"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"scheduling\": {\n    \"enabled\": \"<boolean>\",\n    \"monday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"tuesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"wednesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"thursday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"friday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"saturday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"sunday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    }\n  },\n  \"bandwidth\": {\n    \"settings\": \"<string>\",\n    \"bandwidthLimits\": {\n      \"limitUp\": \"<integer>\",\n      \"limitDown\": \"<integer>\"\n    }\n  },\n  \"firewallAndTrafficShaping\": {\n    \"settings\": \"<string>\",\n    \"trafficShapingRules\": [\n      {\n        \"definitions\": {\n          \"type\": \"array\",\n          \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n          \"maxItems\": 2,\n          \"minItems\": 2,\n          \"items\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"type\",\n              \"value\"\n            ],\n            \"properties\": {\n              \"type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          }\n        },\n        \"perClientBandwidthLimits\": {\n          \"settings\": \"<string>\",\n          \"bandwidthLimits\": {\n            \"limitUp\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limitDown\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"dscpTagValue\": \"<integer>\",\n        \"pcpTagValue\": \"<integer>\",\n        \"priority\": \"<string>\"\n      },\n      {\n        \"definitions\": {\n          \"type\": \"array\",\n          \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n          \"maxItems\": 2,\n          \"minItems\": 2,\n          \"items\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"type\",\n              \"value\"\n            ],\n            \"properties\": {\n              \"type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"value\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          }\n        },\n        \"perClientBandwidthLimits\": {\n          \"settings\": \"<string>\",\n          \"bandwidthLimits\": {\n            \"limitUp\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limitDown\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"dscpTagValue\": \"<integer>\",\n        \"pcpTagValue\": \"<integer>\",\n        \"priority\": \"<string>\"\n      }\n    ],\n    \"l3FirewallRules\": [\n      {\n        \"policy\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"destCidr\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"destPort\": \"<string>\"\n      },\n      {\n        \"policy\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"destCidr\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"destPort\": \"<string>\"\n      }\n    ],\n    \"l7FirewallRules\": [\n      {\n        \"policy\": \"<string>\",\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"policy\": \"<string>\",\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ]\n  },\n  \"contentFiltering\": {\n    \"allowedUrlPatterns\": {\n      \"settings\": \"<string>\",\n      \"patterns\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"blockedUrlPatterns\": {\n      \"settings\": \"<string>\",\n      \"patterns\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"blockedUrlCategories\": {\n      \"settings\": \"<string>\",\n      \"categories\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"splashAuthSettings\": \"<string>\",\n  \"vlanTagging\": {\n    \"settings\": \"<string>\",\n    \"vlanId\": \"<string>\"\n  },\n  \"bonjourForwarding\": {\n    \"settings\": \"<string>\",\n    \"rules\": [\n      {\n        \"vlanId\": \"<string>\",\n        \"services\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"description\": \"<string>\"\n      },\n      {\n        \"vlanId\": \"<string>\",\n        \"services\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"description\": \"<string>\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/groupPolicies/:groupPolicyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"groupPolicies",
														":groupPolicyId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "groupPolicyId",
															"value": "<string>",
															"description": "(Required) Group policy ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"groupPolicyId\": \"101\",\n  \"scheduling\": {\n    \"enabled\": true,\n    \"monday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"tuesday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"wednesday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"thursday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"friday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"saturday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"sunday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    }\n  },\n  \"bandwidth\": {\n    \"settings\": \"custom\",\n    \"bandwidthLimits\": {\n      \"limitUp\": 1000000,\n      \"limitDown\": 1000000\n    }\n  },\n  \"firewallAndTrafficShaping\": {\n    \"settings\": \"custom\",\n    \"trafficShapingRules\": [\n      {\n        \"definitions\": [\n          {\n            \"type\": \"host\",\n            \"value\": \"google.com\"\n          }\n        ],\n        \"perClientBandwidthLimits\": {\n          \"settings\": \"custom\",\n          \"bandwidthLimits\": {\n            \"limitUp\": 1000000,\n            \"limitDown\": 1000000\n          }\n        },\n        \"dscpTagValue\": 0,\n        \"pcpTagValue\": 0,\n        \"priority\": \"normal\"\n      }\n    ],\n    \"l3FirewallRules\": [\n      {\n        \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\n        \"policy\": \"allow\",\n        \"protocol\": \"tcp\",\n        \"destPort\": \"443\",\n        \"destCidr\": \"192.168.1.0/24\"\n      }\n    ],\n    \"l7FirewallRules\": [\n      {\n        \"policy\": \"deny\",\n        \"type\": \"host\",\n        \"value\": \"google.com\"\n      }\n    ]\n  },\n  \"contentFiltering\": {\n    \"allowedUrlPatterns\": {\n      \"settings\": \"network default\",\n      \"patterns\": []\n    },\n    \"blockedUrlPatterns\": {\n      \"settings\": \"append\",\n      \"patterns\": [\n        \"http://www.example.com\",\n        \"http://www.betting.com\"\n      ]\n    },\n    \"blockedUrlCategories\": {\n      \"settings\": \"override\",\n      \"categories\": [\n        \"meraki:contentFiltering/category/1\",\n        \"meraki:contentFiltering/category/7\"\n      ]\n    }\n  },\n  \"splashAuthSettings\": \"bypass\",\n  \"vlanTagging\": {\n    \"settings\": \"custom\",\n    \"vlanId\": \"1\"\n  },\n  \"bonjourForwarding\": {\n    \"settings\": \"custom\",\n    \"rules\": [\n      {\n        \"description\": \"A simple bonjour rule\",\n        \"vlanId\": \"1\",\n        \"services\": [\n          \"All Services\"\n        ]\n      }\n    ]\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "health",
							"item": [
								{
									"name": "alerts",
									"item": [
										{
											"name": "getNetworkHealthAlerts",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/health/alerts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"health",
														"alerts"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return all global alerts on this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/health/alerts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"health",
																"alerts"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"1234\",\n    \"category\": \"Connectivity\",\n    \"type\": \"Poor connectivity to the Meraki cloud\",\n    \"severity\": \"info\",\n    \"scope\": {\n      \"devices\": [\n        {\n          \"url\": \"https://n1.meraki.com//n//manage/nodes/new_list/000000000000\",\n          \"name\": \"My AP\",\n          \"productType\": \"switch\",\n          \"serial\": \"Q234-ABCD-5678\",\n          \"mac\": \"00:11:22:33:44:55\",\n          \"lldp\": {\n            \"portId\": \"1\"\n          },\n          \"clients\": [\n            {\n              \"mac\": \"22:33:44:55:66:77\"\n            }\n          ]\n        }\n      ],\n      \"applications\": [\n        {\n          \"url\": \"https://n1.meraki.com//n//manage/nodes/list\",\n          \"name\": \"Application on application server\"\n        }\n      ],\n      \"peers\": [\n        {\n          \"url\": \"https://n1.meraki.com//n//manage/nodes/list\",\n          \"network\": {\n            \"name\": \"Main Office\",\n            \"id\": \"N_24329156\"\n          }\n        }\n      ]\n    }\n  }\n]"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "identities",
							"item": [
								{
									"name": "me",
									"item": [
										{
											"name": "api",
											"item": [
												{
													"name": "keys",
													"item": [
														{
															"name": "generateAdministeredIdentitiesMeApiKeys",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/administered/identities/me/api/keys/generate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"administered",
																		"identities",
																		"me",
																		"api",
																		"keys",
																		"generate"
																	],
																	"variable": [
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Generates an API key for an identity. For users who have access to more than one organization, the change will take up to five minutes to propagate. If one of the organizations is currently under maintenance, the change may not propagate fully until after the maintenance has been completed."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/administered/identities/me/api/keys/generate",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"administered",
																				"identities",
																				"me",
																				"api",
																				"keys",
																				"generate"
																			],
																			"variable": [
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"key\": \"1284392014819\"\n}"
																}
															]
														},
														{
															"name": "getAdministeredIdentitiesMeApiKeys",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/administered/identities/me/api/keys",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"administered",
																		"identities",
																		"me",
																		"api",
																		"keys"
																	],
																	"variable": [
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "List the non-sensitive metadata associated with the API keys that belong to the user"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/administered/identities/me/api/keys",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"administered",
																				"identities",
																				"me",
																				"api",
																				"keys"
																			],
																			"variable": [
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"suffix\": \"da4f\",\n    \"createdAt\": \"2018-02-11T00:00:00.090210Z\"\n  }\n]"
																}
															]
														},
														{
															"name": "revokeAdministeredIdentitiesMeApiKeys",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/administered/identities/me/api/keys/:suffix/revoke",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"administered",
																		"identities",
																		"me",
																		"api",
																		"keys",
																		":suffix",
																		"revoke"
																	],
																	"variable": [
																		{
																			"key": "suffix",
																			"value": "{{suffix}}",
																			"description": "(Required) Suffix"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Revokes an identity's API key, using the last four characters of the key. For users who have access to more than one organization, the change will take up to five minutes to propagate. If one of the organizations is currently under maintenance, the change may not propagate fully until after the maintenance has been completed."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/administered/identities/me/api/keys/:suffix/revoke",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"administered",
																				"identities",
																				"me",
																				"api",
																				"keys",
																				":suffix",
																				"revoke"
																			],
																			"variable": [
																				{
																					"key": "suffix",
																					"value": "<string>",
																					"description": "(Required) Suffix"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "integrations",
							"item": [
								{
									"name": "xdr",
									"item": [
										{
											"name": "networks",
											"item": [
												{
													"name": "disableOrganizationIntegrationsXdrNetworks",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"networks\": [\n    {\n      \"networkId\": \"<string>\",\n      \"productTypes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"networkId\": \"<string>\",\n      \"productTypes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/integrations/xdr/networks/disable",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"integrations",
																"xdr",
																"networks",
																"disable"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Disable XDR on networks"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"networks\": [\n    {\n      \"networkId\": \"<string>\",\n      \"productTypes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"networkId\": \"<string>\",\n      \"productTypes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/integrations/xdr/networks/disable",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"integrations",
																		"xdr",
																		"networks",
																		"disable"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"networks\": [\n    {\n      \"networkId\": \"N_1234567\",\n      \"productTypes\": [\n        \"appliance\"\n      ],\n      \"name\": \"Test network\",\n      \"enabled\": false,\n      \"isEligible\": true\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "enableOrganizationIntegrationsXdrNetworks",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"networks\": [\n    {\n      \"networkId\": \"<string>\",\n      \"productTypes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"networkId\": \"<string>\",\n      \"productTypes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/integrations/xdr/networks/enable",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"integrations",
																"xdr",
																"networks",
																"enable"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Enable XDR on networks"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"networks\": [\n    {\n      \"networkId\": \"<string>\",\n      \"productTypes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"networkId\": \"<string>\",\n      \"productTypes\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/integrations/xdr/networks/enable",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"integrations",
																		"xdr",
																		"networks",
																		"enable"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"networks\": [\n    {\n      \"networkId\": \"N_1234567\",\n      \"productTypes\": [\n        \"appliance\"\n      ],\n      \"name\": \"Test network\",\n      \"enabled\": true,\n      \"isEligible\": true\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "getOrganizationIntegrationsXdrNetworks",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/integrations/xdr/networks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"integrations",
																"xdr",
																"networks"
															],
															"query": [
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Optional parameter to filter the results by network IDs",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Optional parameter to filter the results by network IDs",
																	"disabled": true
																},
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 100. Default is 20.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Returns the networks in the organization that have XDR enabled"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/integrations/xdr/networks?networkIds=<string>&networkIds=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"integrations",
																		"xdr",
																		"networks"
																	],
																	"query": [
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": [\n    {\n      \"networkId\": \"N_1234567\",\n      \"productTypes\": [\n        \"appliance\"\n      ],\n      \"name\": \"Test network\",\n      \"enabled\": true,\n      \"isEligible\": true\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 10,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "inventory",
							"item": [
								{
									"name": "devices",
									"item": [
										{
											"name": "swaps",
											"item": [
												{
													"name": "bulk",
													"item": [
														{
															"name": "createOrganizationInventoryDevicesSwapsBulk",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"swaps\": [\n    {\n      \"devices\": {\n        \"old\": \"<string>\",\n        \"new\": \"<string>\"\n      },\n      \"afterAction\": \"<string>\"\n    },\n    {\n      \"devices\": {\n        \"old\": \"<string>\",\n        \"new\": \"<string>\"\n      },\n      \"afterAction\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/inventory/devices/swaps/bulk",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"inventory",
																		"devices",
																		"swaps",
																		"bulk"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Swap the devices identified by devices.old with a devices.new, then perform the :afterAction on the devices.old."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"swaps\": [\n    {\n      \"devices\": {\n        \"old\": \"<string>\",\n        \"new\": \"<string>\"\n      },\n      \"afterAction\": \"<string>\"\n    },\n    {\n      \"devices\": {\n        \"old\": \"<string>\",\n        \"new\": \"<string>\"\n      },\n      \"afterAction\": \"<string>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/inventory/devices/swaps/bulk",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"inventory",
																				"devices",
																				"swaps",
																				"bulk"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "Multi-Status (WebDAV) (RFC 4918)",
																	"code": 207,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"jobId\": \"1284392014819\",\n  \"swaps\": [\n    {\n      \"id\": \"1284392014819\",\n      \"devices\": {\n        \"old\": {\n          \"mac\": \"00:11:22:33:44:55\",\n          \"serial\": \"Q234-ABCD-5678\",\n          \"model\": \"MR34\",\n          \"name\": \"My AP\"\n        },\n        \"new\": {\n          \"mac\": \"00:11:22:33:44:55\",\n          \"serial\": \"Q234-ABCD-5678\",\n          \"model\": \"MR34\",\n          \"name\": \"My AP\"\n        }\n      },\n      \"status\": \"complete\",\n      \"afterAction\": \"remove from network\",\n      \"createdAt\": \"2023-04-24T12:40:11Z\",\n      \"completedAt\": \"2023-04-24T12:40:12Z\",\n      \"errors\": []\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "getOrganizationInventoryDevicesSwapsBulk",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/inventory/devices/swaps/bulk/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"inventory",
																		"devices",
																		"swaps",
																		"bulk",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "id",
																			"value": "",
																			"description": "(Required) ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "List of device swaps for a given request ID ({id})."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/inventory/devices/swaps/bulk/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"inventory",
																				"devices",
																				"swaps",
																				"bulk",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "id",
																					"value": "<string>",
																					"description": "(Required) ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"jobId\": \"1284392014819\",\n  \"swaps\": [\n    {\n      \"id\": \"1284392014819\",\n      \"devices\": {\n        \"old\": {\n          \"mac\": \"00:11:22:33:44:55\",\n          \"serial\": \"Q234-ABCD-5678\",\n          \"model\": \"MR34\",\n          \"name\": \"My AP\"\n        },\n        \"new\": {\n          \"mac\": \"00:11:22:33:44:55\",\n          \"serial\": \"Q234-ABCD-5678\",\n          \"model\": \"MR34\",\n          \"name\": \"My AP\"\n        }\n      },\n      \"status\": \"complete\",\n      \"afterAction\": \"remove from network\",\n      \"createdAt\": \"2023-04-24T12:40:11Z\",\n      \"completedAt\": \"2023-04-24T12:40:12Z\",\n      \"errors\": []\n    }\n  ]\n}"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "getOrganizationInventoryDevice",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/inventory/devices/:serial",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"inventory",
														"devices",
														":serial"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return a single device from the inventory of an organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/inventory/devices/:serial",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"inventory",
																"devices",
																":serial"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"mac\": \"00:11:22:33:44:55\",\n  \"serial\": \"Q234-ABCD-5678\",\n  \"name\": \"My AP\",\n  \"model\": \"MR34\",\n  \"networkId\": \"N_24329156\",\n  \"orderNumber\": \"4C1234567\",\n  \"claimedAt\": \"2018-02-11T00:00:00.090210Z\",\n  \"licenseExpirationDate\": \"2020-05-02T10:52:44.012345Z\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"productType\": \"wireless\",\n  \"countryCode\": \"US\",\n  \"details\": [\n    {\n      \"name\": \"Catalyst serial\",\n      \"value\": \"FOC2234432B\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "getOrganizationInventoryDevices",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/inventory/devices",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"inventory",
														"devices"
													],
													"query": [
														{
															"key": "perPage",
															"value": "{{perPage}}",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
															"disabled": true
														},
														{
															"key": "startingAfter",
															"value": "{{startingAfter}}",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "endingBefore",
															"value": "{{endingBefore}}",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "usedState",
															"value": "{{usedState}}",
															"description": "Filter results by used or unused inventory. Accepted values are 'used' or 'unused'.",
															"disabled": true
														},
														{
															"key": "search",
															"value": "{{search}}",
															"description": "Search for devices in inventory based on serial number, mac address, or model.",
															"disabled": true
														},
														{
															"key": "macs",
															"value": "{{macs}}",
															"description": "Search for devices in inventory based on mac addresses.",
															"disabled": true
														},
														{
															"key": "macs",
															"value": "{{macs}}",
															"description": "Search for devices in inventory based on mac addresses.",
															"disabled": true
														},
														{
															"key": "networkIds",
															"value": "{{networkIds}}",
															"description": "Search for devices in inventory based on network ids. Use explicit 'null' value to get available devices only.",
															"disabled": true
														},
														{
															"key": "networkIds",
															"value": "{{networkIds}}",
															"description": "Search for devices in inventory based on network ids. Use explicit 'null' value to get available devices only.",
															"disabled": true
														},
														{
															"key": "serials",
															"value": "{{serials}}",
															"description": "Search for devices in inventory based on serials.",
															"disabled": true
														},
														{
															"key": "serials",
															"value": "{{serials}}",
															"description": "Search for devices in inventory based on serials.",
															"disabled": true
														},
														{
															"key": "models",
															"value": "{{models}}",
															"description": "Search for devices in inventory based on model.",
															"disabled": true
														},
														{
															"key": "models",
															"value": "{{models}}",
															"description": "Search for devices in inventory based on model.",
															"disabled": true
														},
														{
															"key": "orderNumbers",
															"value": "{{orderNumbers}}",
															"description": "Search for devices in inventory based on order numbers.",
															"disabled": true
														},
														{
															"key": "orderNumbers",
															"value": "{{orderNumbers}}",
															"description": "Search for devices in inventory based on order numbers.",
															"disabled": true
														},
														{
															"key": "tags",
															"value": "{{tags}}",
															"description": "Filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).",
															"disabled": true
														},
														{
															"key": "tags",
															"value": "{{tags}}",
															"description": "Filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).",
															"disabled": true
														},
														{
															"key": "tagsFilterType",
															"value": "{{tagsFilterType}}",
															"description": "To use with 'tags' parameter, to filter devices which contain ANY or ALL given tags. Accepted values are 'withAnyTags' or 'withAllTags', default is 'withAnyTags'.",
															"disabled": true
														},
														{
															"key": "productTypes",
															"value": "{{productTypes}}",
															"description": "Filter devices by product type. Accepted values are appliance, camera, cellularGateway, secureConnect, sensor, switch, systemsManager, wireless, and wirelessController.",
															"disabled": true
														},
														{
															"key": "productTypes",
															"value": "{{productTypes}}",
															"description": "Filter devices by product type. Accepted values are appliance, camera, cellularGateway, secureConnect, sensor, switch, systemsManager, wireless, and wirelessController.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the device inventory for an organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/inventory/devices?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&usedState=<string>&search=<string>&macs=<string>&macs=<string>&networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&models=<string>&models=<string>&orderNumbers=<string>&orderNumbers=<string>&tags=<string>&tags=<string>&tagsFilterType=<string>&productTypes=<string>&productTypes=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"inventory",
																"devices"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>"
																},
																{
																	"key": "startingAfter",
																	"value": "<string>"
																},
																{
																	"key": "endingBefore",
																	"value": "<string>"
																},
																{
																	"key": "usedState",
																	"value": "<string>"
																},
																{
																	"key": "search",
																	"value": "<string>"
																},
																{
																	"key": "macs",
																	"value": "<string>"
																},
																{
																	"key": "macs",
																	"value": "<string>"
																},
																{
																	"key": "networkIds",
																	"value": "<string>"
																},
																{
																	"key": "networkIds",
																	"value": "<string>"
																},
																{
																	"key": "serials",
																	"value": "<string>"
																},
																{
																	"key": "serials",
																	"value": "<string>"
																},
																{
																	"key": "models",
																	"value": "<string>"
																},
																{
																	"key": "models",
																	"value": "<string>"
																},
																{
																	"key": "orderNumbers",
																	"value": "<string>"
																},
																{
																	"key": "orderNumbers",
																	"value": "<string>"
																},
																{
																	"key": "tags",
																	"value": "<string>"
																},
																{
																	"key": "tags",
																	"value": "<string>"
																},
																{
																	"key": "tagsFilterType",
																	"value": "<string>"
																},
																{
																	"key": "productTypes",
																	"value": "<string>"
																},
																{
																	"key": "productTypes",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Link",
															"value": "Lorem nisi fugiat",
															"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"mac\": \"00:11:22:33:44:55\",\n    \"serial\": \"Q234-ABCD-5678\",\n    \"name\": \"My AP\",\n    \"model\": \"MR34\",\n    \"networkId\": \"N_24329156\",\n    \"orderNumber\": \"4C1234567\",\n    \"claimedAt\": \"2018-02-11T00:00:00.090210Z\",\n    \"licenseExpirationDate\": \"2020-05-02T10:52:44.012345Z\",\n    \"tags\": [\n      \"tag1\",\n      \"tag2\"\n    ],\n    \"productType\": \"wireless\",\n    \"countryCode\": \"US\",\n    \"details\": [\n      {\n        \"name\": \"Catalyst serial\",\n        \"value\": \"FOC2234432B\"\n      }\n    ]\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "onboarding",
									"item": [
										{
											"name": "cloudMonitoring",
											"item": [
												{
													"name": "exportEvents",
													"item": [
														{
															"name": "createOrganizationInventoryOnboardingCloudMonitoringExportEvent",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"logEvent\": \"<string>\",\n  \"timestamp\": \"<integer>\",\n  \"targetOS\": \"<string>\",\n  \"request\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/inventory/onboarding/cloudMonitoring/exportEvents",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"inventory",
																		"onboarding",
																		"cloudMonitoring",
																		"exportEvents"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Imports event logs related to the onboarding app into elastisearch"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"logEvent\": \"download\",\n  \"timestamp\": 1526087474,\n  \"targetOS\": \"mac\",\n  \"request\": \"r=cb\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/inventory/onboarding/cloudMonitoring/exportEvents",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"inventory",
																				"onboarding",
																				"cloudMonitoring",
																				"exportEvents"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														}
													]
												},
												{
													"name": "imports",
													"item": [
														{
															"name": "createOrganizationInventoryOnboardingCloudMonitoringImport",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"devices\": [\n    {\n      \"deviceId\": \"<string>\",\n      \"udi\": \"<string>\",\n      \"networkId\": \"<string>\"\n    },\n    {\n      \"deviceId\": \"<string>\",\n      \"udi\": \"<string>\",\n      \"networkId\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/inventory/onboarding/cloudMonitoring/imports",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"inventory",
																		"onboarding",
																		"cloudMonitoring",
																		"imports"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Commits the import operation to complete the onboarding of a device into Dashboard for monitoring."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"devices\": [\n    {\n      \"deviceId\": \"<string>\",\n      \"udi\": \"<string>\",\n      \"networkId\": \"<string>\"\n    },\n    {\n      \"deviceId\": \"<string>\",\n      \"udi\": \"<string>\",\n      \"networkId\": \"<string>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/inventory/onboarding/cloudMonitoring/imports",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"inventory",
																				"onboarding",
																				"cloudMonitoring",
																				"imports"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"status\": \"IMPORT JOB SUCCESS\",\n    \"importId\": \"1234\",\n    \"message\": \"Import Started\"\n  }\n]"
																}
															]
														},
														{
															"name": "getOrganizationInventoryOnboardingCloudMonitoringImports",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/inventory/onboarding/cloudMonitoring/imports",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"inventory",
																		"onboarding",
																		"cloudMonitoring",
																		"imports"
																	],
																	"query": [
																		{
																			"key": "importIds",
																			"value": "{{importIds}}",
																			"description": "(Required) import ids from an imports",
																			"disabled": true
																		},
																		{
																			"key": "importIds",
																			"value": "{{importIds}}",
																			"description": "(Required) import ids from an imports",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Check the status of a committed Import operation"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/inventory/onboarding/cloudMonitoring/imports?importIds=<string>&importIds=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"inventory",
																				"onboarding",
																				"cloudMonitoring",
																				"imports"
																			],
																			"query": [
																				{
																					"key": "importIds",
																					"value": "<string>"
																				},
																				{
																					"key": "importIds",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"importId\": \"0000000000000000\",\n    \"device\": {\n      \"url\": \"https://n1.meraki.com//n//manage/nodes/new_list/000000000000\",\n      \"created\": true,\n      \"status\": \"SUCCESS\"\n    }\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "networks",
													"item": [
														{
															"name": "getOrganizationInventoryOnboardingCloudMonitoringNetworks",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/inventory/onboarding/cloudMonitoring/networks",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"inventory",
																		"onboarding",
																		"cloudMonitoring",
																		"networks"
																	],
																	"query": [
																		{
																			"key": "deviceType",
																			"value": "{{deviceType}}",
																			"description": "(Required) Device Type switch or wireless controller",
																			"disabled": true
																		},
																		{
																			"key": "search",
																			"value": "{{search}}",
																			"description": "Optional parameter to search on network name",
																			"disabled": true
																		},
																		{
																			"key": "perPage",
																			"value": "{{perPage}}",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 100000. Default is 1000.",
																			"disabled": true
																		},
																		{
																			"key": "startingAfter",
																			"value": "{{startingAfter}}",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "endingBefore",
																			"value": "{{endingBefore}}",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Returns list of networks eligible for adding cloud monitored device"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/inventory/onboarding/cloudMonitoring/networks?deviceType=<string>&search=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"inventory",
																				"onboarding",
																				"cloudMonitoring",
																				"networks"
																			],
																			"query": [
																				{
																					"key": "deviceType",
																					"value": "<string>"
																				},
																				{
																					"key": "search",
																					"value": "<string>"
																				},
																				{
																					"key": "perPage",
																					"value": "<integer>"
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>"
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Link",
																			"value": "Lorem nisi fugiat",
																			"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"id\": \"N_24329156\",\n    \"organizationId\": \"2930418\",\n    \"name\": \"Main Office\",\n    \"productTypes\": [\n      \"appliance\",\n      \"switch\",\n      \"wireless\"\n    ],\n    \"timeZone\": \"America/Los_Angeles\",\n    \"tags\": [\n      \"tag1\",\n      \"tag2\"\n    ],\n    \"enrollmentString\": \"my-enrollment-string\",\n    \"url\": \"https://n1.meraki.com//n//manage/nodes/list\",\n    \"notes\": \"Additional description of the network\",\n    \"isBoundToConfigTemplate\": false\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "prepare",
													"item": [
														{
															"name": "createOrganizationInventoryOnboardingCloudMonitoringPrepare",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"devices\": [\n    {\n      \"sudi\": \"<string>\",\n      \"tunnel\": {\n        \"certificateName\": \"<string>\",\n        \"name\": \"<string>\",\n        \"loopbackNumber\": \"<integer>\",\n        \"localInterface\": \"<integer>\"\n      },\n      \"user\": {\n        \"username\": \"<string>\"\n      },\n      \"vty\": {\n        \"startLineNumber\": \"<integer>\",\n        \"endLineNumber\": \"<integer>\",\n        \"authentication\": {\n          \"group\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"authorization\": {\n          \"group\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"accessList\": {\n          \"vtyIn\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"vtyOut\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"rotaryNumber\": \"<integer>\"\n      }\n    },\n    {\n      \"sudi\": \"<string>\",\n      \"tunnel\": {\n        \"certificateName\": \"<string>\",\n        \"name\": \"<string>\",\n        \"loopbackNumber\": \"<integer>\",\n        \"localInterface\": \"<integer>\"\n      },\n      \"user\": {\n        \"username\": \"<string>\"\n      },\n      \"vty\": {\n        \"startLineNumber\": \"<integer>\",\n        \"endLineNumber\": \"<integer>\",\n        \"authentication\": {\n          \"group\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"authorization\": {\n          \"group\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"accessList\": {\n          \"vtyIn\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"vtyOut\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"rotaryNumber\": \"<integer>\"\n      }\n    }\n  ],\n  \"options\": {\n    \"skipCommit\": \"<boolean>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/inventory/onboarding/cloudMonitoring/prepare",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"inventory",
																		"onboarding",
																		"cloudMonitoring",
																		"prepare"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Initiates or updates an import session. An import ID will be generated and used when you are ready to commit the import."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"devices\": [\n    {\n      \"sudi\": \"<string>\",\n      \"tunnel\": {\n        \"certificateName\": \"<string>\",\n        \"name\": \"<string>\",\n        \"loopbackNumber\": \"<integer>\",\n        \"localInterface\": \"<integer>\"\n      },\n      \"user\": {\n        \"username\": \"<string>\"\n      },\n      \"vty\": {\n        \"startLineNumber\": \"<integer>\",\n        \"endLineNumber\": \"<integer>\",\n        \"authentication\": {\n          \"group\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"authorization\": {\n          \"group\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"accessList\": {\n          \"vtyIn\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"vtyOut\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"rotaryNumber\": \"<integer>\"\n      }\n    },\n    {\n      \"sudi\": \"<string>\",\n      \"tunnel\": {\n        \"certificateName\": \"<string>\",\n        \"name\": \"<string>\",\n        \"loopbackNumber\": \"<integer>\",\n        \"localInterface\": \"<integer>\"\n      },\n      \"user\": {\n        \"username\": \"<string>\"\n      },\n      \"vty\": {\n        \"startLineNumber\": \"<integer>\",\n        \"endLineNumber\": \"<integer>\",\n        \"authentication\": {\n          \"group\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"authorization\": {\n          \"group\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"accessList\": {\n          \"vtyIn\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"vtyOut\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"rotaryNumber\": \"<integer>\"\n      }\n    }\n  ],\n  \"options\": {\n    \"skipCommit\": \"<boolean>\"\n  }\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/inventory/onboarding/cloudMonitoring/prepare",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"inventory",
																				"onboarding",
																				"cloudMonitoring",
																				"prepare"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"message\": \"Existing import found\",\n    \"udi\": \"PID:C9200L-24P-4G SN:JAE25220R2K\",\n    \"deviceId\": \"161b2602-a713-4aac-b1eb-d9b55205353d\",\n    \"status\": \"SUCCESS\",\n    \"configParams\": {\n      \"tunnel\": {\n        \"mode\": \"443\",\n        \"port\": \"443\",\n        \"host\": \"secgw-int3.ciscocloudoffer.com\",\n        \"name\": \"MERAKI-PRIMARY\",\n        \"rootCertificate\": {\n          \"content\": \"\",\n          \"name\": \"MERAKI_TLSGW_CA\"\n        }\n      },\n      \"cloudStaticIp\": \"1.2.3.4\",\n      \"user\": {\n        \"publicKey\": \"\",\n        \"username\": \"MERAKI_USER\",\n        \"secret\": {\n          \"hash\": \"\"\n        }\n      }\n    }\n  }\n]"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "claimIntoOrganizationInventory",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"orders\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"licenses\": [\n    {\n      \"key\": \"<string>\",\n      \"mode\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"mode\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/inventory/claim",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"inventory",
												"claim"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Claim a list of devices, licenses, and/or orders into an organization inventory. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory. This operation can be used up to ten times within a single five minute window."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"orders\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"licenses\": [\n    {\n      \"key\": \"<string>\",\n      \"mode\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"mode\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/inventory/claim",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"inventory",
														"claim"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"orders\": [\n    \"4CXXXXXXX\"\n  ],\n  \"serials\": [\n    \"Q234-ABCD-5678\"\n  ],\n  \"licenses\": [\n    {\n      \"key\": \"Z2XXXXXXXXXX\",\n      \"mode\": \"addDevices\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "releaseFromOrganizationInventory",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/inventory/release",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"inventory",
												"release"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Release a list of claimed devices from an organization."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/inventory/release",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"inventory",
														"release"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"serials\": [\n    \"Q234-ABCD-5678\"\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "licenses",
							"item": [
								{
									"name": "assignOrganizationLicensesSeats",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"licenseId\": \"<string>\",\n  \"networkId\": \"<string>\",\n  \"seatCount\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/licenses/assignSeats",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"licenses",
												"assignSeats"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Assign SM seats to a network. This will increase the managed SM device limit of the network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"licenseId\": \"1234\",\n  \"networkId\": \"N_24329156\",\n  \"seatCount\": 20\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/licenses/assignSeats",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"licenses",
														"assignSeats"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"resultingLicenses\": [\n    {\n      \"id\": \"1234\",\n      \"licenseType\": \"SME\",\n      \"licenseKey\": \"Z21234567890\",\n      \"orderNumber\": \"4C1234567\",\n      \"deviceSerial\": \"Q234-ABCD-5678\",\n      \"networkId\": \"N_24329156\",\n      \"state\": \"active\",\n      \"seatCount\": 25,\n      \"totalDurationInDays\": 425,\n      \"durationInDays\": 365,\n      \"permanentlyQueuedLicenses\": [\n        {\n          \"id\": \"1234\",\n          \"licenseType\": \"SME\",\n          \"licenseKey\": \"Z21234567890\",\n          \"orderNumber\": \"4C1234567\",\n          \"durationInDays\": 60\n        }\n      ],\n      \"claimDate\": \"2019-08-29T12:40:10Z\",\n      \"activationDate\": \"2019-09-01T15:01:46Z\",\n      \"expirationDate\": \"2020-10-30T15:01:46Z\",\n      \"headLicenseId\": \"1234\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "getOrganizationLicense",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/licenses/:licenseId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"licenses",
												":licenseId"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "licenseId",
													"value": "{{licenseId}}",
													"description": "(Required) License ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Display a license"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/licenses/:licenseId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"licenses",
														":licenseId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "licenseId",
															"value": "<string>",
															"description": "(Required) License ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1234\",\n  \"licenseType\": \"MX64-ENT\",\n  \"licenseKey\": \"Z21234567890\",\n  \"orderNumber\": \"4C1234567\",\n  \"deviceSerial\": \"Q234-ABCD-5678\",\n  \"networkId\": \"N_24329156\",\n  \"state\": \"active\",\n  \"seatCount\": 25,\n  \"totalDurationInDays\": 425,\n  \"durationInDays\": 365,\n  \"permanentlyQueuedLicenses\": [\n    {\n      \"id\": \"1234\",\n      \"licenseType\": \"MX64-ENT\",\n      \"licenseKey\": \"Z21234567890\",\n      \"orderNumber\": \"4C1234567\",\n      \"durationInDays\": 60\n    }\n  ],\n  \"claimDate\": \"2019-08-29T12:40:10Z\",\n  \"activationDate\": \"2019-09-01T15:01:46Z\",\n  \"expirationDate\": \"2020-10-30T15:01:46Z\",\n  \"headLicenseId\": \"1234\"\n}"
										}
									]
								},
								{
									"name": "getOrganizationLicenses",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/licenses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"licenses"
											],
											"query": [
												{
													"key": "perPage",
													"value": "{{perPage}}",
													"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
													"disabled": true
												},
												{
													"key": "startingAfter",
													"value": "{{startingAfter}}",
													"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
													"disabled": true
												},
												{
													"key": "endingBefore",
													"value": "{{endingBefore}}",
													"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
													"disabled": true
												},
												{
													"key": "deviceSerial",
													"value": "{{deviceSerial}}",
													"description": "Filter the licenses to those assigned to a particular device. Returned in the same order that they are queued to the device.",
													"disabled": true
												},
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "Filter the licenses to those assigned in a particular network",
													"disabled": true
												},
												{
													"key": "state",
													"value": "{{state}}",
													"description": "Filter the licenses to those in a particular state. Can be one of 'active', 'expired', 'expiring', 'recentlyQueued', 'unused' or 'unusedActive'",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "List the licenses for an organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/licenses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&deviceSerial=<string>&networkId=<string>&state=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"licenses"
													],
													"query": [
														{
															"key": "perPage",
															"value": "<integer>"
														},
														{
															"key": "startingAfter",
															"value": "<string>"
														},
														{
															"key": "endingBefore",
															"value": "<string>"
														},
														{
															"key": "deviceSerial",
															"value": "<string>"
														},
														{
															"key": "networkId",
															"value": "<string>"
														},
														{
															"key": "state",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Link",
													"value": "Lorem nisi fugiat",
													"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"1234\",\n    \"licenseType\": \"MX64-ENT\",\n    \"licenseKey\": \"Z21234567890\",\n    \"orderNumber\": \"4C1234567\",\n    \"deviceSerial\": \"Q234-ABCD-5678\",\n    \"networkId\": \"N_24329156\",\n    \"state\": \"active\",\n    \"seatCount\": 25,\n    \"totalDurationInDays\": 425,\n    \"durationInDays\": 365,\n    \"permanentlyQueuedLicenses\": [\n      {\n        \"id\": \"1234\",\n        \"licenseType\": \"MX64-ENT\",\n        \"licenseKey\": \"Z21234567890\",\n        \"orderNumber\": \"4C1234567\",\n        \"durationInDays\": 60\n      }\n    ],\n    \"claimDate\": \"2019-08-29T12:40:10Z\",\n    \"activationDate\": \"2019-09-01T15:01:46Z\",\n    \"expirationDate\": \"2020-10-30T15:01:46Z\",\n    \"headLicenseId\": \"1234\"\n  }\n]"
										}
									]
								},
								{
									"name": "moveOrganizationLicenses",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"destOrganizationId\": \"<string>\",\n  \"licenseIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/licenses/move",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"licenses",
												"move"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Move licenses to another organization. This will also move any devices that the licenses are assigned to"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"destOrganizationId\": \"2930418\",\n  \"licenseIds\": [\n    \"123\",\n    \"456\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/licenses/move",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"licenses",
														"move"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"destOrganizationId\": \"2930418\",\n  \"licenseIds\": [\n    \"123\",\n    \"456\"\n  ]\n}"
										}
									]
								},
								{
									"name": "moveOrganizationLicensesSeats",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"destOrganizationId\": \"<string>\",\n  \"licenseId\": \"<string>\",\n  \"seatCount\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/licenses/moveSeats",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"licenses",
												"moveSeats"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Move SM seats to another organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"destOrganizationId\": \"2930418\",\n  \"licenseId\": \"1234\",\n  \"seatCount\": 20\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/licenses/moveSeats",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"licenses",
														"moveSeats"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"destOrganizationId\": \"2930418\",\n  \"licenseId\": \"1234\",\n  \"seatCount\": 20\n}"
										}
									]
								},
								{
									"name": "renewOrganizationLicensesSeats",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"licenseIdToRenew\": \"<string>\",\n  \"unusedLicenseId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/licenses/renewSeats",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"licenses",
												"renewSeats"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Renew SM seats of a license. This will extend the license expiration date of managed SM devices covered by this license"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"licenseIdToRenew\": \"123\",\n  \"unusedLicenseId\": \"1234\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/licenses/renewSeats",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"licenses",
														"renewSeats"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"resultingLicenses\": [\n    {\n      \"id\": \"1234\",\n      \"licenseType\": \"SME\",\n      \"licenseKey\": \"Z21234567890\",\n      \"orderNumber\": \"4C1234567\",\n      \"deviceSerial\": \"Q234-ABCD-5678\",\n      \"networkId\": \"N_24329156\",\n      \"state\": \"active\",\n      \"seatCount\": 25,\n      \"totalDurationInDays\": 425,\n      \"durationInDays\": 365,\n      \"permanentlyQueuedLicenses\": [\n        {\n          \"id\": \"1234\",\n          \"licenseType\": \"SME\",\n          \"licenseKey\": \"Z21234567890\",\n          \"orderNumber\": \"4C1234567\",\n          \"durationInDays\": 60\n        }\n      ],\n      \"claimDate\": \"2019-08-29T12:40:10Z\",\n      \"activationDate\": \"2019-09-01T15:01:46Z\",\n      \"expirationDate\": \"2020-10-30T15:01:46Z\",\n      \"headLicenseId\": \"1234\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "updateOrganizationLicense",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deviceSerial\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/licenses/:licenseId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"licenses",
												":licenseId"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "licenseId",
													"value": "{{licenseId}}",
													"description": "(Required) License ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Update a license"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deviceSerial\": \"Q234-ABCD-5678\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/licenses/:licenseId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"licenses",
														":licenseId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "licenseId",
															"value": "<string>",
															"description": "(Required) License ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1234\",\n  \"licenseType\": \"MX64-ENT\",\n  \"licenseKey\": \"Z21234567890\",\n  \"orderNumber\": \"4C1234567\",\n  \"deviceSerial\": \"Q234-ABCD-5678\",\n  \"networkId\": \"N_24329156\",\n  \"state\": \"active\",\n  \"seatCount\": 25,\n  \"totalDurationInDays\": 425,\n  \"durationInDays\": 365,\n  \"permanentlyQueuedLicenses\": [\n    {\n      \"id\": \"1234\",\n      \"licenseType\": \"MX64-ENT\",\n      \"licenseKey\": \"Z21234567890\",\n      \"orderNumber\": \"4C1234567\",\n      \"durationInDays\": 60\n    }\n  ],\n  \"claimDate\": \"2019-08-29T12:40:10Z\",\n  \"activationDate\": \"2019-09-01T15:01:46Z\",\n  \"expirationDate\": \"2020-10-30T15:01:46Z\",\n  \"headLicenseId\": \"1234\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "loginSecurity",
							"item": [
								{
									"name": "getOrganizationLoginSecurity",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/loginSecurity",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"loginSecurity"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Returns the login security settings for an organization."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/loginSecurity",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"loginSecurity"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"enforcePasswordExpiration\": true,\n  \"passwordExpirationDays\": 90,\n  \"enforceDifferentPasswords\": true,\n  \"numDifferentPasswords\": 3,\n  \"enforceStrongPasswords\": true,\n  \"minimumPasswordLength\": 12,\n  \"enforceAccountLockout\": true,\n  \"accountLockoutAttempts\": 3,\n  \"enforceIdleTimeout\": true,\n  \"idleTimeoutMinutes\": 30,\n  \"enforceTwoFactorAuth\": true,\n  \"enforceLoginIpRanges\": true,\n  \"loginIpRanges\": [\n    \"192.195.83.1\",\n    \"192.195.83.255\"\n  ],\n  \"apiAuthentication\": {\n    \"ipRestrictionsForKeys\": {\n      \"enabled\": true,\n      \"ranges\": [\n        \"192.195.83.1\",\n        \"192.168.33.33\"\n      ]\n    }\n  }\n}"
										}
									]
								},
								{
									"name": "updateOrganizationLoginSecurity",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enforcePasswordExpiration\": \"<boolean>\",\n  \"passwordExpirationDays\": \"<integer>\",\n  \"enforceDifferentPasswords\": \"<boolean>\",\n  \"numDifferentPasswords\": \"<integer>\",\n  \"enforceStrongPasswords\": \"<boolean>\",\n  \"minimumPasswordLength\": \"<integer>\",\n  \"enforceAccountLockout\": \"<boolean>\",\n  \"accountLockoutAttempts\": \"<integer>\",\n  \"enforceIdleTimeout\": \"<boolean>\",\n  \"idleTimeoutMinutes\": \"<integer>\",\n  \"enforceTwoFactorAuth\": \"<boolean>\",\n  \"enforceLoginIpRanges\": \"<boolean>\",\n  \"loginIpRanges\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"apiAuthentication\": {\n    \"ipRestrictionsForKeys\": {\n      \"enabled\": \"<boolean>\",\n      \"ranges\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/loginSecurity",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"loginSecurity"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Update the login security settings for an organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enforcePasswordExpiration\": true,\n  \"passwordExpirationDays\": 90,\n  \"enforceDifferentPasswords\": true,\n  \"numDifferentPasswords\": 3,\n  \"enforceStrongPasswords\": true,\n  \"minimumPasswordLength\": 12,\n  \"enforceAccountLockout\": true,\n  \"accountLockoutAttempts\": 3,\n  \"enforceIdleTimeout\": true,\n  \"idleTimeoutMinutes\": 30,\n  \"enforceTwoFactorAuth\": true,\n  \"enforceLoginIpRanges\": true,\n  \"loginIpRanges\": [\n    \"192.195.83.1\",\n    \"192.195.83.255\"\n  ],\n  \"apiAuthentication\": {\n    \"ipRestrictionsForKeys\": {\n      \"enabled\": true,\n      \"ranges\": [\n        \"192.195.83.1\",\n        \"192.168.33.33\"\n      ]\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/loginSecurity",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"loginSecurity"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"enforcePasswordExpiration\": true,\n  \"passwordExpirationDays\": 90,\n  \"enforceDifferentPasswords\": true,\n  \"numDifferentPasswords\": 3,\n  \"enforceStrongPasswords\": true,\n  \"minimumPasswordLength\": 12,\n  \"enforceAccountLockout\": true,\n  \"accountLockoutAttempts\": 3,\n  \"enforceIdleTimeout\": true,\n  \"idleTimeoutMinutes\": 30,\n  \"enforceTwoFactorAuth\": true,\n  \"enforceLoginIpRanges\": true,\n  \"loginIpRanges\": [\n    \"192.195.83.1\",\n    \"192.195.83.255\"\n  ],\n  \"apiAuthentication\": {\n    \"ipRestrictionsForKeys\": {\n      \"enabled\": true,\n      \"ranges\": [\n        \"192.195.83.1\",\n        \"192.168.33.33\"\n      ]\n    }\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "managementInterface",
							"item": [
								{
									"name": "getDeviceManagementInterface",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/devices/:serial/managementInterface",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":serial",
												"managementInterface"
											],
											"variable": [
												{
													"key": "serial",
													"value": "{{serial}}",
													"description": "(Required) Serial"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return the management interface settings for a device"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/managementInterface",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"managementInterface"
													],
													"variable": [
														{
															"key": "serial",
															"value": "<string>",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"ddnsHostnames\": {\n    \"activeDdnsHostname\": \"mx1-sample.dynamic-m.com\",\n    \"ddnsHostnameWan1\": \"mx1-sample-1.dynamic-m.com\",\n    \"ddnsHostnameWan2\": \"mx1-sample-2.dynamic-m.com\"\n  },\n  \"wan1\": {\n    \"wanEnabled\": \"not configured\",\n    \"usingStaticIp\": true,\n    \"staticIp\": \"1.2.3.4\",\n    \"staticSubnetMask\": \"255.255.255.0\",\n    \"staticGatewayIp\": \"1.2.3.1\",\n    \"staticDns\": [\n      \"1.2.3.2\",\n      \"1.2.3.3\"\n    ],\n    \"vlan\": 7\n  },\n  \"wan2\": {\n    \"wanEnabled\": \"enabled\",\n    \"usingStaticIp\": false,\n    \"staticIp\": \"1.2.3.4\",\n    \"staticSubnetMask\": \"255.255.255.0\",\n    \"staticGatewayIp\": \"1.2.3.1\",\n    \"staticDns\": [\n      \"1.2.3.2\",\n      \"1.2.3.3\"\n    ],\n    \"vlan\": 2\n  }\n}"
										}
									]
								},
								{
									"name": "updateDeviceManagementInterface",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"wan1\": {\n    \"wanEnabled\": \"<string>\",\n    \"usingStaticIp\": \"<boolean>\",\n    \"staticIp\": \"<string>\",\n    \"staticGatewayIp\": \"<string>\",\n    \"staticSubnetMask\": \"<string>\",\n    \"staticDns\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"vlan\": \"<integer>\"\n  },\n  \"wan2\": {\n    \"wanEnabled\": \"<string>\",\n    \"usingStaticIp\": \"<boolean>\",\n    \"staticIp\": \"<string>\",\n    \"staticGatewayIp\": \"<string>\",\n    \"staticSubnetMask\": \"<string>\",\n    \"staticDns\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"vlan\": \"<integer>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/devices/:serial/managementInterface",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":serial",
												"managementInterface"
											],
											"variable": [
												{
													"key": "serial",
													"value": "{{serial}}",
													"description": "(Required) Serial"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Update the management interface settings for a device"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"wan1\": {\n    \"wanEnabled\": \"not configured\",\n    \"usingStaticIp\": true,\n    \"staticIp\": \"1.2.3.4\",\n    \"staticGatewayIp\": \"1.2.3.1\",\n    \"staticSubnetMask\": \"255.255.255.0\",\n    \"staticDns\": [\n      \"1.2.3.2\",\n      \"1.2.3.3\"\n    ],\n    \"vlan\": 7\n  },\n  \"wan2\": {\n    \"wanEnabled\": \"enabled\",\n    \"usingStaticIp\": false,\n    \"staticIp\": \"1.2.3.4\",\n    \"staticGatewayIp\": \"1.2.3.1\",\n    \"staticSubnetMask\": \"255.255.255.0\",\n    \"staticDns\": [\n      \"1.2.3.2\",\n      \"1.2.3.3\"\n    ],\n    \"vlan\": 2\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/managementInterface",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"managementInterface"
													],
													"variable": [
														{
															"key": "serial",
															"value": "<string>",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"ddnsHostnames\": {\n    \"activeDdnsHostname\": \"mx1-sample.dynamic-m.com\",\n    \"ddnsHostnameWan1\": \"mx1-sample-1.dynamic-m.com\",\n    \"ddnsHostnameWan2\": \"mx1-sample-2.dynamic-m.com\"\n  },\n  \"wan1\": {\n    \"wanEnabled\": \"not configured\",\n    \"usingStaticIp\": true,\n    \"staticIp\": \"1.2.3.4\",\n    \"staticSubnetMask\": \"255.255.255.0\",\n    \"staticGatewayIp\": \"1.2.3.1\",\n    \"staticDns\": [\n      \"1.2.3.2\",\n      \"1.2.3.3\"\n    ],\n    \"vlan\": 7\n  },\n  \"wan2\": {\n    \"wanEnabled\": \"enabled\",\n    \"usingStaticIp\": false,\n    \"staticIp\": \"1.2.3.4\",\n    \"staticSubnetMask\": \"255.255.255.0\",\n    \"staticGatewayIp\": \"1.2.3.1\",\n    \"staticDns\": [\n      \"1.2.3.2\",\n      \"1.2.3.3\"\n    ],\n    \"vlan\": 2\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "merakiAuthUsers",
							"item": [
								{
									"name": "createNetworkMerakiAuthUser",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"authorizations\": [\n    {\n      \"ssidNumber\": \"<integer>\",\n      \"expiresAt\": \"Never\"\n    },\n    {\n      \"ssidNumber\": \"<integer>\",\n      \"expiresAt\": \"Never\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"password\": \"<string>\",\n  \"accountType\": \"802.1X\",\n  \"emailPasswordToUser\": \"<boolean>\",\n  \"isAdmin\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/merakiAuthUsers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"merakiAuthUsers"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Authorize a user configured with Meraki Authentication for a network (currently supports 802.1X, splash guest, and client VPN users, and currently, organizations have a 50,000 user cap)"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"authorizations\": [\n    {\n      \"ssidNumber\": \"<integer>\",\n      \"expiresAt\": \"Never\"\n    },\n    {\n      \"ssidNumber\": \"<integer>\",\n      \"expiresAt\": \"Never\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"password\": \"<string>\",\n  \"accountType\": \"802.1X\",\n  \"emailPasswordToUser\": \"<boolean>\",\n  \"isAdmin\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/merakiAuthUsers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"merakiAuthUsers"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"aGlAaGkuY29t\",\n  \"email\": \"miles@meraki.com\",\n  \"name\": \"Miles Meraki\",\n  \"createdAt\": \"2018-02-11T00:00:00.090210Z\",\n  \"accountType\": \"802.1X\",\n  \"isAdmin\": false,\n  \"authorizations\": [\n    {\n      \"ssidNumber\": 1,\n      \"authorizedZone\": \"Store WiFi\",\n      \"expiresAt\": \"2018-03-13T00:00:00.090210Z\",\n      \"authorizedByName\": \"Miles Meraki\",\n      \"authorizedByEmail\": \"miles@meraki.com\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "deleteNetworkMerakiAuthUser",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/merakiAuthUsers/:merakiAuthUserId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"merakiAuthUsers",
												":merakiAuthUserId"
											],
											"query": [
												{
													"key": "delete",
													"value": "{{delete}}",
													"description": "If the ID supplied is for a splash guest or client VPN user, and that user is not authorized for any other networks in the organization, then also delete the user. 802.1X RADIUS users are always deleted regardless of this optional attribute.",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "merakiAuthUserId",
													"value": "{{merakiAuthUserId}}",
													"description": "(Required) Meraki auth user ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Delete an 802.1X RADIUS user, or deauthorize and optionally delete a splash guest or client VPN user."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/merakiAuthUsers/:merakiAuthUserId?delete=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"merakiAuthUsers",
														":merakiAuthUserId"
													],
													"query": [
														{
															"key": "delete",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "merakiAuthUserId",
															"value": "<string>",
															"description": "(Required) Meraki auth user ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "getNetworkMerakiAuthUser",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/merakiAuthUsers/:merakiAuthUserId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"merakiAuthUsers",
												":merakiAuthUserId"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "merakiAuthUserId",
													"value": "{{merakiAuthUserId}}",
													"description": "(Required) Meraki auth user ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return the Meraki Auth splash guest, RADIUS, or client VPN user"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/merakiAuthUsers/:merakiAuthUserId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"merakiAuthUsers",
														":merakiAuthUserId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "merakiAuthUserId",
															"value": "<string>",
															"description": "(Required) Meraki auth user ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"aGlAaGkuY29t\",\n  \"email\": \"miles@meraki.com\",\n  \"name\": \"Miles Meraki\",\n  \"createdAt\": \"2018-02-11T00:00:00.090210Z\",\n  \"accountType\": \"802.1X\",\n  \"isAdmin\": false,\n  \"authorizations\": [\n    {\n      \"ssidNumber\": 1,\n      \"authorizedZone\": \"Store WiFi\",\n      \"expiresAt\": \"2018-03-13T00:00:00.090210Z\",\n      \"authorizedByName\": \"Miles Meraki\",\n      \"authorizedByEmail\": \"miles@meraki.com\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "getNetworkMerakiAuthUsers",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/merakiAuthUsers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"merakiAuthUsers"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "List the authorized users configured under Meraki Authentication for a network (splash guest or RADIUS users for a wireless network, or client VPN users for a MX network)"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/merakiAuthUsers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"merakiAuthUsers"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"aGlAaGkuY29t\",\n    \"email\": \"miles@meraki.com\",\n    \"name\": \"Miles Meraki\",\n    \"createdAt\": \"2018-02-11T00:00:00.090210Z\",\n    \"accountType\": \"802.1X\",\n    \"isAdmin\": false,\n    \"authorizations\": [\n      {\n        \"ssidNumber\": 1,\n        \"authorizedZone\": \"Store WiFi\",\n        \"expiresAt\": \"2018-03-13T00:00:00.090210Z\",\n        \"authorizedByName\": \"Miles Meraki\",\n        \"authorizedByEmail\": \"miles@meraki.com\"\n      }\n    ]\n  }\n]"
										}
									]
								},
								{
									"name": "updateNetworkMerakiAuthUser",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"password\": \"<string>\",\n  \"emailPasswordToUser\": \"<boolean>\",\n  \"authorizations\": [\n    {\n      \"ssidNumber\": \"<integer>\",\n      \"expiresAt\": \"Never\"\n    },\n    {\n      \"ssidNumber\": \"<integer>\",\n      \"expiresAt\": \"Never\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/merakiAuthUsers/:merakiAuthUserId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"merakiAuthUsers",
												":merakiAuthUserId"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "merakiAuthUserId",
													"value": "{{merakiAuthUserId}}",
													"description": "(Required) Meraki auth user ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Update a user configured with Meraki Authentication (currently, 802.1X RADIUS, splash guest, and client VPN users can be updated)"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"password\": \"<string>\",\n  \"emailPasswordToUser\": \"<boolean>\",\n  \"authorizations\": [\n    {\n      \"ssidNumber\": \"<integer>\",\n      \"expiresAt\": \"Never\"\n    },\n    {\n      \"ssidNumber\": \"<integer>\",\n      \"expiresAt\": \"Never\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/merakiAuthUsers/:merakiAuthUserId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"merakiAuthUsers",
														":merakiAuthUserId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "merakiAuthUserId",
															"value": "<string>",
															"description": "(Required) Meraki auth user ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"aGlAaGkuY29t\",\n  \"email\": \"miles@meraki.com\",\n  \"name\": \"Miles Meraki\",\n  \"createdAt\": \"2018-02-11T00:00:00.090210Z\",\n  \"accountType\": \"802.1X\",\n  \"isAdmin\": false,\n  \"authorizations\": [\n    {\n      \"ssidNumber\": 1,\n      \"authorizedZone\": \"Store WiFi\",\n      \"expiresAt\": \"2018-03-13T00:00:00.090210Z\",\n      \"authorizedByName\": \"Miles Meraki\",\n      \"authorizedByEmail\": \"miles@meraki.com\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "mqttBrokers",
							"item": [
								{
									"name": "createNetworkMqttBroker",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"host\": \"<string>\",\n  \"port\": \"<integer>\",\n  \"security\": {\n    \"mode\": \"<string>\",\n    \"tls\": {\n      \"caCertificate\": \"<string>\",\n      \"verifyHostnames\": \"<boolean>\"\n    }\n  },\n  \"authentication\": {\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/mqttBrokers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"mqttBrokers"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Add an MQTT broker"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"MQTT_Broker_1\",\n  \"host\": \"1.2.3.4\",\n  \"port\": 443,\n  \"security\": {\n    \"mode\": \"tls\",\n    \"tls\": {\n      \"caCertificate\": \"*****\",\n      \"verifyHostnames\": true\n    }\n  },\n  \"authentication\": {\n    \"username\": \"milesmeraki\",\n    \"password\": \"*****\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/mqttBrokers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"mqttBrokers"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1234\",\n  \"name\": \"MQTT_Broker_1\",\n  \"host\": \"1.2.3.4\",\n  \"port\": 443,\n  \"security\": {\n    \"mode\": \"tls\",\n    \"tls\": {\n      \"hasCaCertificate\": true,\n      \"verifyHostnames\": true\n    }\n  },\n  \"authentication\": {\n    \"username\": \"milesmeraki\"\n  }\n}"
										}
									]
								},
								{
									"name": "deleteNetworkMqttBroker",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/mqttBrokers/:mqttBrokerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"mqttBrokers",
												":mqttBrokerId"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "mqttBrokerId",
													"value": "{{mqttBrokerId}}",
													"description": "(Required) Mqtt broker ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Delete an MQTT broker"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/mqttBrokers/:mqttBrokerId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"mqttBrokers",
														":mqttBrokerId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "mqttBrokerId",
															"value": "<string>",
															"description": "(Required) Mqtt broker ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "getNetworkMqttBroker",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/mqttBrokers/:mqttBrokerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"mqttBrokers",
												":mqttBrokerId"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "mqttBrokerId",
													"value": "{{mqttBrokerId}}",
													"description": "(Required) Mqtt broker ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return an MQTT broker"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/mqttBrokers/:mqttBrokerId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"mqttBrokers",
														":mqttBrokerId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "mqttBrokerId",
															"value": "<string>",
															"description": "(Required) Mqtt broker ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1234\",\n  \"name\": \"MQTT_Broker_1\",\n  \"host\": \"1.2.3.4\",\n  \"port\": 443,\n  \"security\": {\n    \"mode\": \"tls\",\n    \"tls\": {\n      \"hasCaCertificate\": true,\n      \"verifyHostnames\": true\n    }\n  },\n  \"authentication\": {\n    \"username\": \"milesmeraki\"\n  }\n}"
										}
									]
								},
								{
									"name": "getNetworkMqttBrokers",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/mqttBrokers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"mqttBrokers"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "List the MQTT brokers for this network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/mqttBrokers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"mqttBrokers"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"1234\",\n    \"name\": \"MQTT_Broker_1\",\n    \"host\": \"1.2.3.4\",\n    \"port\": 443,\n    \"security\": {\n      \"mode\": \"tls\",\n      \"tls\": {\n        \"hasCaCertificate\": true,\n        \"verifyHostnames\": true\n      }\n    },\n    \"authentication\": {\n      \"username\": \"milesmeraki\"\n    }\n  }\n]"
										}
									]
								},
								{
									"name": "updateNetworkMqttBroker",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"host\": \"<string>\",\n  \"port\": \"<integer>\",\n  \"security\": {\n    \"mode\": \"<string>\",\n    \"tls\": {\n      \"caCertificate\": \"<string>\",\n      \"verifyHostnames\": \"<boolean>\"\n    }\n  },\n  \"authentication\": {\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/mqttBrokers/:mqttBrokerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"mqttBrokers",
												":mqttBrokerId"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "mqttBrokerId",
													"value": "{{mqttBrokerId}}",
													"description": "(Required) Mqtt broker ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Update an MQTT broker"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"MQTT_Broker_1\",\n  \"host\": \"1.2.3.4\",\n  \"port\": 443,\n  \"security\": {\n    \"mode\": \"tls\",\n    \"tls\": {\n      \"caCertificate\": \"******\",\n      \"verifyHostnames\": true\n    }\n  },\n  \"authentication\": {\n    \"username\": \"milesmeraki\",\n    \"password\": \"*****\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/mqttBrokers/:mqttBrokerId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"mqttBrokers",
														":mqttBrokerId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "mqttBrokerId",
															"value": "<string>",
															"description": "(Required) Mqtt broker ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1234\",\n  \"name\": \"MQTT_Broker_1\",\n  \"host\": \"1.2.3.4\",\n  \"port\": 443,\n  \"security\": {\n    \"mode\": \"tls\",\n    \"tls\": {\n      \"hasCaCertificate\": true,\n      \"verifyHostnames\": true\n    }\n  },\n  \"authentication\": {\n    \"username\": \"milesmeraki\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "netflow",
							"item": [
								{
									"name": "getNetworkNetflow",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/netflow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"netflow"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return the NetFlow traffic reporting settings for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/netflow",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"netflow"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"reportingEnabled\": true,\n  \"collectorIp\": \"1.2.3.4\",\n  \"collectorPort\": 443,\n  \"etaEnabled\": true,\n  \"etaDstPort\": 443\n}"
										}
									]
								},
								{
									"name": "updateNetworkNetflow",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"reportingEnabled\": \"<boolean>\",\n  \"collectorIp\": \"<string>\",\n  \"collectorPort\": \"<integer>\",\n  \"etaEnabled\": \"<boolean>\",\n  \"etaDstPort\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/netflow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"netflow"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Update the NetFlow traffic reporting settings for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/netflow",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"netflow"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"reportingEnabled\": true,\n  \"collectorIp\": \"1.2.3.4\",\n  \"collectorPort\": 443,\n  \"etaEnabled\": true,\n  \"etaDstPort\": 443\n}"
										}
									]
								}
							]
						},
						{
							"name": "networks",
							"item": [
								{
									"name": "combineOrganizationNetworks",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"networkIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"enrollmentString\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/networks/combine",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"networks",
												"combine"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Combine multiple networks into a single network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Long Island Office\",\n  \"networkIds\": [\n    \"N_1234\",\n    \"N_5678\"\n  ],\n  \"enrollmentString\": \"my-enrollment-string\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/networks/combine",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"networks",
														"combine"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"resultingNetwork\": {\n    \"id\": \"N_24329156\",\n    \"organizationId\": \"2930418\",\n    \"name\": \"Main Office\",\n    \"productTypes\": [\n      \"appliance\",\n      \"switch\",\n      \"wireless\"\n    ],\n    \"timeZone\": \"America/Los_Angeles\",\n    \"tags\": [\n      \"tag1\",\n      \"tag2\"\n    ],\n    \"enrollmentString\": \"my-enrollment-string\",\n    \"url\": \"https://n1.meraki.com//n//manage/nodes/list\",\n    \"notes\": \"Additional description of the network\",\n    \"isBoundToConfigTemplate\": false\n  }\n}"
										}
									]
								},
								{
									"name": "createOrganizationNetwork",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"productTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"timeZone\": \"<string>\",\n  \"copyFromNetworkId\": \"<string>\",\n  \"notes\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/networks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"networks"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Create a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"productTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"timeZone\": \"<string>\",\n  \"copyFromNetworkId\": \"<string>\",\n  \"notes\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/networks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"networks"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"N_24329156\",\n  \"organizationId\": \"2930418\",\n  \"name\": \"Main Office\",\n  \"productTypes\": [\n    \"appliance\",\n    \"switch\",\n    \"wireless\"\n  ],\n  \"timeZone\": \"America/Los_Angeles\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"enrollmentString\": \"my-enrollment-string\",\n  \"url\": \"https://n1.meraki.com//n//manage/nodes/list\",\n  \"notes\": \"Additional description of the network\",\n  \"isBoundToConfigTemplate\": false\n}"
										}
									]
								},
								{
									"name": "getOrganizationNetworks",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/networks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"networks"
											],
											"query": [
												{
													"key": "configTemplateId",
													"value": "{{configTemplateId}}",
													"description": "An optional parameter that is the ID of a config template. Will return all networks bound to that template.",
													"disabled": true
												},
												{
													"key": "isBoundToConfigTemplate",
													"value": "{{isBoundToConfigTemplate}}",
													"description": "An optional parameter to filter config template bound networks. If configTemplateId is set, this cannot be false.",
													"disabled": true
												},
												{
													"key": "tags",
													"value": "{{tags}}",
													"description": "An optional parameter to filter networks by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).",
													"disabled": true
												},
												{
													"key": "tags",
													"value": "{{tags}}",
													"description": "An optional parameter to filter networks by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).",
													"disabled": true
												},
												{
													"key": "tagsFilterType",
													"value": "{{tagsFilterType}}",
													"description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.",
													"disabled": true
												},
												{
													"key": "productTypes",
													"value": "{{productTypes}}",
													"description": "An optional parameter to filter networks by product type. Results will have at least one of the included product types.",
													"disabled": true
												},
												{
													"key": "productTypes",
													"value": "{{productTypes}}",
													"description": "An optional parameter to filter networks by product type. Results will have at least one of the included product types.",
													"disabled": true
												},
												{
													"key": "perPage",
													"value": "{{perPage}}",
													"description": "The number of entries per page returned. Acceptable range is 3 - 100000. Default is 1000.",
													"disabled": true
												},
												{
													"key": "startingAfter",
													"value": "{{startingAfter}}",
													"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
													"disabled": true
												},
												{
													"key": "endingBefore",
													"value": "{{endingBefore}}",
													"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "List the networks that the user has privileges on in an organization"
									},
									"response": []
								}
							]
						},
						{
							"name": "pii",
							"item": [
								{
									"name": "piiKeys",
									"item": [
										{
											"name": "getNetworkPiiPiiKeys",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/pii/piiKeys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"pii",
														"piiKeys"
													],
													"query": [
														{
															"key": "username",
															"value": "{{username}}",
															"description": "The username of a Systems Manager user",
															"disabled": true
														},
														{
															"key": "email",
															"value": "{{email}}",
															"description": "The email of a network user account or a Systems Manager device",
															"disabled": true
														},
														{
															"key": "mac",
															"value": "{{mac}}",
															"description": "The MAC of a network client device or a Systems Manager device",
															"disabled": true
														},
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "The serial of a Systems Manager device",
															"disabled": true
														},
														{
															"key": "imei",
															"value": "{{imei}}",
															"description": "The IMEI of a Systems Manager device",
															"disabled": true
														},
														{
															"key": "bluetoothMac",
															"value": "{{bluetoothMac}}",
															"description": "The MAC of a Bluetooth client",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the keys required to access Personally Identifiable Information (PII) for a given identifier. Exactly one identifier will be accepted. If the organization contains org-wide Systems Manager users matching the key provided then there will be an entry with the key \"0\" containing the applicable keys.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/piiKeys\n```"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/pii/piiKeys?username=<string>&email=<string>&mac=<string>&serial=<string>&imei=<string>&bluetoothMac=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"pii",
																"piiKeys"
															],
															"query": [
																{
																	"key": "username",
																	"value": "<string>"
																},
																{
																	"key": "email",
																	"value": "<string>"
																},
																{
																	"key": "mac",
																	"value": "<string>"
																},
																{
																	"key": "serial",
																	"value": "<string>"
																},
																{
																	"key": "imei",
																	"value": "<string>"
																},
																{
																	"key": "bluetoothMac",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"N_1234\": {\n    \"macs\": [\n      \"00:77:00:77:00:77\"\n    ],\n    \"emails\": [\n      \"fake@example.com\"\n    ],\n    \"usernames\": [\n      \"fakename\"\n    ],\n    \"serials\": [\n      \"Q234-ABCD-0001\"\n    ],\n    \"imeis\": [\n      \"990000862471854\"\n    ],\n    \"bluetoothMacs\": [\n      \"00:77:00:77:00:77\"\n    ]\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "requests",
									"item": [
										{
											"name": "createNetworkPiiRequest",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"<string>\",\n  \"datasets\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"username\": \"<string>\",\n  \"email\": \"<string>\",\n  \"mac\": \"<string>\",\n  \"smDeviceId\": \"<string>\",\n  \"smUserId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/pii/requests",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"pii",
														"requests"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Submit a new delete or restrict processing PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests\n```"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"type\": \"delete\",\n  \"datasets\": [\n    \"usage\",\n    \"events\"\n  ],\n  \"username\": \"milesmeraki\",\n  \"email\": \"miles@meraki.com\",\n  \"mac\": \"00:11:22:33:44:55\",\n  \"smDeviceId\": \"15551677676480\",\n  \"smUserId\": \"212406\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/pii/requests",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"pii",
																"requests"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"organizationWide\": false,\n  \"networkId\": \"N_1234\",\n  \"type\": \"delete\",\n  \"mac\": \"00:77:00:77:00:77\",\n  \"datasets\": \"['usage', 'events']\",\n  \"status\": \"Completed\",\n  \"createdAt\": 1524692227,\n  \"completedAt\": 1524702227\n}"
												}
											]
										},
										{
											"name": "deleteNetworkPiiRequest",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/pii/requests/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"pii",
														"requests",
														":requestId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "requestId",
															"value": "{{requestId}}",
															"description": "(Required) Request ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Delete a restrict processing PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests/{requestId}\n```"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/pii/requests/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"pii",
																"requests",
																":requestId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "requestId",
																	"value": "<string>",
																	"description": "(Required) Request ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getNetworkPiiRequest",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/pii/requests/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"pii",
														"requests",
														":requestId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "requestId",
															"value": "{{requestId}}",
															"description": "(Required) Request ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return a PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests/{requestId}\n```"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/pii/requests/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"pii",
																"requests",
																":requestId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "requestId",
																	"value": "<string>",
																	"description": "(Required) Request ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"organizationWide\": false,\n  \"networkId\": \"N_1234\",\n  \"type\": \"delete\",\n  \"mac\": \"00:77:00:77:00:77\",\n  \"datasets\": \"['usage', 'events']\",\n  \"status\": \"Completed\",\n  \"createdAt\": 1524692227,\n  \"completedAt\": 1524702227\n}"
												}
											]
										},
										{
											"name": "getNetworkPiiRequests",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/pii/requests",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"pii",
														"requests"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the PII requests for this network or organization\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests\n```"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/pii/requests",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"pii",
																"requests"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"1234\",\n    \"organizationWide\": false,\n    \"networkId\": \"N_1234\",\n    \"type\": \"delete\",\n    \"mac\": \"00:77:00:77:00:77\",\n    \"datasets\": \"['usage', 'events']\",\n    \"status\": \"Completed\",\n    \"createdAt\": 1524692227,\n    \"completedAt\": 1524702227\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "smDevicesForKey",
									"item": [
										{
											"name": "getNetworkPiiSmDevicesForKey",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/pii/smDevicesForKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"pii",
														"smDevicesForKey"
													],
													"query": [
														{
															"key": "username",
															"value": "{{username}}",
															"description": "The username of a Systems Manager user",
															"disabled": true
														},
														{
															"key": "email",
															"value": "{{email}}",
															"description": "The email of a network user account or a Systems Manager device",
															"disabled": true
														},
														{
															"key": "mac",
															"value": "{{mac}}",
															"description": "The MAC of a network client device or a Systems Manager device",
															"disabled": true
														},
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "The serial of a Systems Manager device",
															"disabled": true
														},
														{
															"key": "imei",
															"value": "{{imei}}",
															"description": "The IMEI of a Systems Manager device",
															"disabled": true
														},
														{
															"key": "bluetoothMac",
															"value": "{{bluetoothMac}}",
															"description": "The MAC of a Bluetooth client",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier. These device IDs can be used with the Systems Manager API endpoints to retrieve device details. Exactly one identifier will be accepted.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/smDevicesForKey\n```"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/pii/smDevicesForKey?username=<string>&email=<string>&mac=<string>&serial=<string>&imei=<string>&bluetoothMac=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"pii",
																"smDevicesForKey"
															],
															"query": [
																{
																	"key": "username",
																	"value": "<string>"
																},
																{
																	"key": "email",
																	"value": "<string>"
																},
																{
																	"key": "mac",
																	"value": "<string>"
																},
																{
																	"key": "serial",
																	"value": "<string>"
																},
																{
																	"key": "imei",
																	"value": "<string>"
																},
																{
																	"key": "bluetoothMac",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"N_1234\": [\n    \"1099541095293\"\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "smOwnersForKey",
									"item": [
										{
											"name": "getNetworkPiiSmOwnersForKey",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/pii/smOwnersForKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"pii",
														"smOwnersForKey"
													],
													"query": [
														{
															"key": "username",
															"value": "{{username}}",
															"description": "The username of a Systems Manager user",
															"disabled": true
														},
														{
															"key": "email",
															"value": "{{email}}",
															"description": "The email of a network user account or a Systems Manager device",
															"disabled": true
														},
														{
															"key": "mac",
															"value": "{{mac}}",
															"description": "The MAC of a network client device or a Systems Manager device",
															"disabled": true
														},
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "The serial of a Systems Manager device",
															"disabled": true
														},
														{
															"key": "imei",
															"value": "{{imei}}",
															"description": "The IMEI of a Systems Manager device",
															"disabled": true
														},
														{
															"key": "bluetoothMac",
															"value": "{{bluetoothMac}}",
															"description": "The MAC of a Bluetooth client",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier. These owner IDs can be used with the Systems Manager API endpoints to retrieve owner details. Exactly one identifier will be accepted.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/smOwnersForKey\n```"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/pii/smOwnersForKey?username=<string>&email=<string>&mac=<string>&serial=<string>&imei=<string>&bluetoothMac=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"pii",
																"smOwnersForKey"
															],
															"query": [
																{
																	"key": "username",
																	"value": "<string>"
																},
																{
																	"key": "email",
																	"value": "<string>"
																},
																{
																	"key": "mac",
																	"value": "<string>"
																},
																{
																	"key": "serial",
																	"value": "<string>"
																},
																{
																	"key": "imei",
																	"value": "<string>"
																},
																{
																	"key": "bluetoothMac",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"N_1234\": [\n    \"1099541095293\"\n  ]\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "policies",
							"item": [
								{
									"name": "byClient",
									"item": [
										{
											"name": "getNetworkPoliciesByClient",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/policies/byClient",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"policies",
														"byClient"
													],
													"query": [
														{
															"key": "perPage",
															"value": "{{perPage}}",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.",
															"disabled": true
														},
														{
															"key": "startingAfter",
															"value": "{{startingAfter}}",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "endingBefore",
															"value": "{{endingBefore}}",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Get policies for all clients with policies"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/policies/byClient?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&timespan=<float>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"policies",
																"byClient"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>"
																},
																{
																	"key": "startingAfter",
																	"value": "<string>"
																},
																{
																	"key": "endingBefore",
																	"value": "<string>"
																},
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Link",
															"value": "Lorem nisi fugiat",
															"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"name\": \"my phone\",\n    \"clientId\": \"abc\",\n    \"assigned\": [\n      {\n        \"name\": \"Allowed\",\n        \"type\": \"ssid\",\n        \"groupPolicyId\": \"100\",\n        \"ssid\": [\n          {\n            \"ssidNumber\": 1\n          }\n        ]\n      }\n    ]\n  }\n]"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "policyObjects",
							"item": [
								{
									"name": "groups",
									"item": [
										{
											"name": "createOrganizationPolicyObjectsGroup",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"category\": \"<string>\",\n  \"objectIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/policyObjects/groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"policyObjects",
														"groups"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Creates a new Policy Object Group."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"category\": \"<string>\",\n  \"objectIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/policyObjects/groups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"policyObjects",
																"groups"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"name\": \"Web Servers - Datacenter 10\",\n  \"category\": \"NetworkObjectGroup\",\n  \"createdAt\": \"2018-05-12T00:00:00Z\",\n  \"updatedAt\": \"2018-05-12T00:00:00Z\",\n  \"objectIds\": [\n    100\n  ],\n  \"networkIds\": [\n    \"L_12345\",\n    \"N_123456\"\n  ]\n}"
												}
											]
										},
										{
											"name": "deleteOrganizationPolicyObjectsGroup",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/policyObjects/groups/:policyObjectGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"policyObjects",
														"groups",
														":policyObjectGroupId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "policyObjectGroupId",
															"value": "{{policyObjectGroupId}}",
															"description": "(Required) Policy object group ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Deletes a Policy Object Group."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/policyObjects/groups/:policyObjectGroupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"policyObjects",
																"groups",
																":policyObjectGroupId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "policyObjectGroupId",
																	"value": "<string>",
																	"description": "(Required) Policy object group ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getOrganizationPolicyObjectsGroup",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/policyObjects/groups/:policyObjectGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"policyObjects",
														"groups",
														":policyObjectGroupId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "policyObjectGroupId",
															"value": "{{policyObjectGroupId}}",
															"description": "(Required) Policy object group ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Shows details of a Policy Object Group."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/policyObjects/groups/:policyObjectGroupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"policyObjects",
																"groups",
																":policyObjectGroupId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "policyObjectGroupId",
																	"value": "<string>",
																	"description": "(Required) Policy object group ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"name\": \"Web Servers - Datacenter 10\",\n  \"category\": \"NetworkObjectGroup\",\n  \"createdAt\": \"2018-05-12T00:00:00Z\",\n  \"updatedAt\": \"2018-05-12T00:00:00Z\",\n  \"objectIds\": [\n    100\n  ],\n  \"networkIds\": [\n    \"L_12345\",\n    \"N_123456\"\n  ]\n}"
												}
											]
										},
										{
											"name": "getOrganizationPolicyObjectsGroups",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/policyObjects/groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"policyObjects",
														"groups"
													],
													"query": [
														{
															"key": "perPage",
															"value": "{{perPage}}",
															"description": "The number of entries per page returned. Acceptable range is 10 - 1000. Default is 1000.",
															"disabled": true
														},
														{
															"key": "startingAfter",
															"value": "{{startingAfter}}",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "endingBefore",
															"value": "{{endingBefore}}",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Lists Policy Object Groups belonging to the organization."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/policyObjects/groups?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"policyObjects",
																"groups"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>"
																},
																{
																	"key": "startingAfter",
																	"value": "<string>"
																},
																{
																	"key": "endingBefore",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Link",
															"value": "Lorem nisi fugiat",
															"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"name\": \"Web Servers - Datacenter 10\",\n  \"category\": \"NetworkObjectGroup\",\n  \"createdAt\": \"2018-05-12T00:00:00Z\",\n  \"updatedAt\": \"2018-05-12T00:00:00Z\",\n  \"objectIds\": [\n    100\n  ],\n  \"networkIds\": [\n    \"L_12345\",\n    \"N_123456\"\n  ]\n}"
												}
											]
										},
										{
											"name": "updateOrganizationPolicyObjectsGroup",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"objectIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/policyObjects/groups/:policyObjectGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"policyObjects",
														"groups",
														":policyObjectGroupId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "policyObjectGroupId",
															"value": "{{policyObjectGroupId}}",
															"description": "(Required) Policy object group ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Updates a Policy Object Group."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"objectIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/policyObjects/groups/:policyObjectGroupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"policyObjects",
																"groups",
																":policyObjectGroupId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "policyObjectGroupId",
																	"value": "<string>",
																	"description": "(Required) Policy object group ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"name\": \"Web Servers - Datacenter 10\",\n  \"category\": \"NetworkObjectGroup\",\n  \"createdAt\": \"2018-05-12T00:00:00Z\",\n  \"updatedAt\": \"2018-05-12T00:00:00Z\",\n  \"objectIds\": [\n    100\n  ],\n  \"networkIds\": [\n    \"L_12345\",\n    \"N_123456\"\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "createOrganizationPolicyObject",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"category\": \"<string>\",\n  \"type\": \"<string>\",\n  \"cidr\": \"<string>\",\n  \"fqdn\": \"<string>\",\n  \"mask\": \"<string>\",\n  \"ip\": \"<string>\",\n  \"groupIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/policyObjects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"policyObjects"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Creates a new Policy Object."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"category\": \"<string>\",\n  \"type\": \"<string>\",\n  \"cidr\": \"<string>\",\n  \"fqdn\": \"<string>\",\n  \"mask\": \"<string>\",\n  \"ip\": \"<string>\",\n  \"groupIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/policyObjects",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"policyObjects"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1234\",\n  \"name\": \"Web Servers - Datacenter 10\",\n  \"category\": \"network\",\n  \"type\": \"cidr\",\n  \"cidr\": \"10.0.0.0/24\",\n  \"createdAt\": \"2018-05-12T00:00:00Z\",\n  \"updatedAt\": \"2018-05-12T00:00:00Z\",\n  \"groupIds\": [\n    \"8\"\n  ],\n  \"networkIds\": [\n    \"L_12345\",\n    \"N_123456\"\n  ]\n}"
										}
									]
								},
								{
									"name": "deleteOrganizationPolicyObject",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/policyObjects/:policyObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"policyObjects",
												":policyObjectId"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "policyObjectId",
													"value": "{{policyObjectId}}",
													"description": "(Required) Policy object ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Deletes a Policy Object."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/policyObjects/:policyObjectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"policyObjects",
														":policyObjectId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "policyObjectId",
															"value": "<string>",
															"description": "(Required) Policy object ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "getOrganizationPolicyObject",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/policyObjects/:policyObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"policyObjects",
												":policyObjectId"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "policyObjectId",
													"value": "{{policyObjectId}}",
													"description": "(Required) Policy object ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Shows details of a Policy Object."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/policyObjects/:policyObjectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"policyObjects",
														":policyObjectId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "policyObjectId",
															"value": "<string>",
															"description": "(Required) Policy object ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1234\",\n  \"name\": \"Web Servers - Datacenter 10\",\n  \"category\": \"network\",\n  \"type\": \"cidr\",\n  \"cidr\": \"10.0.0.0/24\",\n  \"createdAt\": \"2018-05-12T00:00:00Z\",\n  \"updatedAt\": \"2018-05-12T00:00:00Z\",\n  \"groupIds\": [\n    \"8\"\n  ],\n  \"networkIds\": [\n    \"L_12345\",\n    \"N_123456\"\n  ]\n}"
										}
									]
								},
								{
									"name": "getOrganizationPolicyObjects",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/policyObjects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"policyObjects"
											],
											"query": [
												{
													"key": "perPage",
													"value": "{{perPage}}",
													"description": "The number of entries per page returned. Acceptable range is 10 - 5000. Default is 5000.",
													"disabled": true
												},
												{
													"key": "startingAfter",
													"value": "{{startingAfter}}",
													"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
													"disabled": true
												},
												{
													"key": "endingBefore",
													"value": "{{endingBefore}}",
													"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Lists Policy Objects belonging to the organization."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/policyObjects?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"policyObjects"
													],
													"query": [
														{
															"key": "perPage",
															"value": "<integer>"
														},
														{
															"key": "startingAfter",
															"value": "<string>"
														},
														{
															"key": "endingBefore",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Link",
													"value": "Lorem nisi fugiat",
													"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1234\",\n  \"name\": \"Web Servers - Datacenter 10\",\n  \"category\": \"network\",\n  \"type\": \"cidr\",\n  \"cidr\": \"10.0.0.0/24\",\n  \"createdAt\": \"2018-05-12T00:00:00Z\",\n  \"updatedAt\": \"2018-05-12T00:00:00Z\",\n  \"groupIds\": [\n    \"8\"\n  ],\n  \"networkIds\": [\n    \"L_12345\",\n    \"N_123456\"\n  ]\n}"
										}
									]
								},
								{
									"name": "updateOrganizationPolicyObject",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"cidr\": \"<string>\",\n  \"fqdn\": \"<string>\",\n  \"mask\": \"<string>\",\n  \"ip\": \"<string>\",\n  \"groupIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/policyObjects/:policyObjectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"policyObjects",
												":policyObjectId"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "policyObjectId",
													"value": "{{policyObjectId}}",
													"description": "(Required) Policy object ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Updates a Policy Object."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"cidr\": \"<string>\",\n  \"fqdn\": \"<string>\",\n  \"mask\": \"<string>\",\n  \"ip\": \"<string>\",\n  \"groupIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/policyObjects/:policyObjectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"policyObjects",
														":policyObjectId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "policyObjectId",
															"value": "<string>",
															"description": "(Required) Policy object ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1234\",\n  \"name\": \"Web Servers - Datacenter 10\",\n  \"category\": \"network\",\n  \"type\": \"cidr\",\n  \"cidr\": \"10.0.0.0/24\",\n  \"createdAt\": \"2018-05-12T00:00:00Z\",\n  \"updatedAt\": \"2018-05-12T00:00:00Z\",\n  \"groupIds\": [\n    \"8\"\n  ],\n  \"networkIds\": [\n    \"L_12345\",\n    \"N_123456\"\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "saml",
							"item": [
								{
									"name": "idps",
									"item": [
										{
											"name": "createOrganizationSamlIdp",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"x509certSha1Fingerprint\": \"<string>\",\n  \"sloLogoutUrl\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/saml/idps",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"saml",
														"idps"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Create a SAML IdP for your organization."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"x509certSha1Fingerprint\": \"00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99\",\n  \"sloLogoutUrl\": \"https://somewhere.com\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/saml/idps",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"saml",
																"idps"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"idpId\": \"1284392014819\",\n    \"consumerUrl\": \"https://n7.meraki.com/saml/login/XXX\",\n    \"x509certSha1Fingerprint\": \"00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99\",\n    \"sloLogoutUrl\": \"https://somewhere.com\"\n  }\n]"
												}
											]
										},
										{
											"name": "deleteOrganizationSamlIdp",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/saml/idps/:idpId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"saml",
														"idps",
														":idpId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "idpId",
															"value": "{{idpId}}",
															"description": "(Required) Idp ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Remove a SAML IdP in your organization."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/saml/idps/:idpId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"saml",
																"idps",
																":idpId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "idpId",
																	"value": "<string>",
																	"description": "(Required) Idp ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getOrganizationSamlIdp",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/saml/idps/:idpId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"saml",
														"idps",
														":idpId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "idpId",
															"value": "{{idpId}}",
															"description": "(Required) Idp ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Get a SAML IdP from your organization."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/saml/idps/:idpId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"saml",
																"idps",
																":idpId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "idpId",
																	"value": "<string>",
																	"description": "(Required) Idp ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"idpId\": \"1284392014819\",\n  \"consumerUrl\": \"https://n7.meraki.com/saml/login/XXX\",\n  \"x509certSha1Fingerprint\": \"00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99\",\n  \"sloLogoutUrl\": \"https://somewhere.com\"\n}"
												}
											]
										},
										{
											"name": "getOrganizationSamlIdps",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/saml/idps",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"saml",
														"idps"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the SAML IdPs in your organization."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/saml/idps",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"saml",
																"idps"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"idpId\": \"1284392014819\",\n    \"consumerUrl\": \"https://n7.meraki.com/saml/login/XXX\",\n    \"x509certSha1Fingerprint\": \"00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99\",\n    \"sloLogoutUrl\": \"https://somewhere.com\"\n  }\n]"
												}
											]
										},
										{
											"name": "updateOrganizationSamlIdp",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"x509certSha1Fingerprint\": \"<string>\",\n  \"sloLogoutUrl\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/saml/idps/:idpId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"saml",
														"idps",
														":idpId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "idpId",
															"value": "{{idpId}}",
															"description": "(Required) Idp ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update a SAML IdP in your organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"x509certSha1Fingerprint\": \"00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99\",\n  \"sloLogoutUrl\": \"https://somewhere.com\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/saml/idps/:idpId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"saml",
																"idps",
																":idpId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "idpId",
																	"value": "<string>",
																	"description": "(Required) Idp ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"idpId\": \"1284392014819\",\n    \"consumerUrl\": \"https://n7.meraki.com/saml/login/XXX\",\n    \"x509certSha1Fingerprint\": \"00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99\",\n    \"sloLogoutUrl\": \"https://somewhere.com\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "getOrganizationSaml",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/saml",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"saml"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Returns the SAML SSO enabled settings for an organization."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/saml",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"saml"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"enabled\": true\n}"
										}
									]
								},
								{
									"name": "updateOrganizationSaml",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/saml",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"saml"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Updates the SAML SSO enabled settings for an organization."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/saml",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"saml"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"enabled\": true\n}"
										}
									]
								}
							]
						},
						{
							"name": "samlRoles",
							"item": [
								{
									"name": "createOrganizationSamlRole",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"role\": \"<string>\",\n  \"orgAccess\": \"<string>\",\n  \"tags\": [\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ],\n  \"networks\": [\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/samlRoles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"samlRoles"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Create a SAML role"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"role\": \"<string>\",\n  \"orgAccess\": \"<string>\",\n  \"tags\": [\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ],\n  \"networks\": [\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/samlRoles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"samlRoles"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1284392014819\",\n  \"role\": \"myrole\",\n  \"orgAccess\": \"none\",\n  \"networks\": [\n    {\n      \"id\": \"N_24329156\",\n      \"access\": \"full\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"tag\": \"west\",\n      \"access\": \"read-only\"\n    }\n  ],\n  \"camera\": [\n    {\n      \"orgWide\": true,\n      \"access\": \"viewAndExport\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "deleteOrganizationSamlRole",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/samlRoles/:samlRoleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"samlRoles",
												":samlRoleId"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "samlRoleId",
													"value": "{{samlRoleId}}",
													"description": "(Required) Saml role ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Remove a SAML role"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/samlRoles/:samlRoleId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"samlRoles",
														":samlRoleId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "samlRoleId",
															"value": "<string>",
															"description": "(Required) Saml role ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "getOrganizationSamlRole",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/samlRoles/:samlRoleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"samlRoles",
												":samlRoleId"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "samlRoleId",
													"value": "{{samlRoleId}}",
													"description": "(Required) Saml role ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return a SAML role"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/samlRoles/:samlRoleId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"samlRoles",
														":samlRoleId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "samlRoleId",
															"value": "<string>",
															"description": "(Required) Saml role ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1284392014819\",\n  \"role\": \"myrole\",\n  \"orgAccess\": \"none\",\n  \"networks\": [\n    {\n      \"id\": \"N_24329156\",\n      \"access\": \"full\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"tag\": \"west\",\n      \"access\": \"read-only\"\n    }\n  ],\n  \"camera\": [\n    {\n      \"orgWide\": true,\n      \"access\": \"viewAndExport\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "getOrganizationSamlRoles",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/samlRoles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"samlRoles"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "List the SAML roles for this organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/samlRoles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"samlRoles"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"1284392014819\",\n    \"role\": \"myrole\",\n    \"orgAccess\": \"none\",\n    \"networks\": [\n      {\n        \"id\": \"N_24329156\",\n        \"access\": \"full\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"tag\": \"west\",\n        \"access\": \"read-only\"\n      }\n    ],\n    \"camera\": [\n      {\n        \"orgWide\": true,\n        \"access\": \"viewAndExport\"\n      }\n    ]\n  }\n]"
										}
									]
								},
								{
									"name": "updateOrganizationSamlRole",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"role\": \"<string>\",\n  \"orgAccess\": \"<string>\",\n  \"tags\": [\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ],\n  \"networks\": [\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/samlRoles/:samlRoleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"samlRoles",
												":samlRoleId"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "samlRoleId",
													"value": "{{samlRoleId}}",
													"description": "(Required) Saml role ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Update a SAML role"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"role\": \"<string>\",\n  \"orgAccess\": \"<string>\",\n  \"tags\": [\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ],\n  \"networks\": [\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/samlRoles/:samlRoleId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"samlRoles",
														":samlRoleId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "samlRoleId",
															"value": "<string>",
															"description": "(Required) Saml role ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1284392014819\",\n  \"role\": \"myrole\",\n  \"orgAccess\": \"none\",\n  \"networks\": [\n    {\n      \"id\": \"N_24329156\",\n      \"access\": \"full\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"tag\": \"west\",\n      \"access\": \"read-only\"\n    }\n  ],\n  \"camera\": [\n    {\n      \"orgWide\": true,\n      \"access\": \"viewAndExport\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "settings",
							"item": [
								{
									"name": "getNetworkSettings",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"settings"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return the settings for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"settings"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"localStatusPageEnabled\": true,\n  \"remoteStatusPageEnabled\": true,\n  \"localStatusPage\": {\n    \"authentication\": {\n      \"enabled\": false,\n      \"username\": \"admin\"\n    }\n  },\n  \"securePort\": {\n    \"enabled\": false\n  },\n  \"fips\": {\n    \"enabled\": true\n  },\n  \"namedVlans\": {\n    \"enabled\": true\n  }\n}"
										}
									]
								},
								{
									"name": "updateNetworkSettings",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"localStatusPageEnabled\": \"<boolean>\",\n  \"remoteStatusPageEnabled\": \"<boolean>\",\n  \"localStatusPage\": {\n    \"authentication\": {\n      \"enabled\": \"<boolean>\",\n      \"username\": \"<string>\",\n      \"password\": \"<string>\"\n    }\n  },\n  \"securePort\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"namedVlans\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"settings"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Update the settings for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"localStatusPageEnabled\": true,\n  \"remoteStatusPageEnabled\": true,\n  \"localStatusPage\": {\n    \"authentication\": {\n      \"enabled\": false,\n      \"username\": \"admin\",\n      \"password\": \"miles123\"\n    }\n  },\n  \"securePort\": {\n    \"enabled\": false\n  },\n  \"namedVlans\": {\n    \"enabled\": true\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"settings"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"localStatusPageEnabled\": true,\n  \"remoteStatusPageEnabled\": true,\n  \"localStatusPage\": {\n    \"authentication\": {\n      \"enabled\": false,\n      \"username\": \"admin\"\n    }\n  },\n  \"securePort\": {\n    \"enabled\": false\n  },\n  \"fips\": {\n    \"enabled\": true\n  },\n  \"namedVlans\": {\n    \"enabled\": true\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "snmp",
							"item": [
								{
									"name": "getNetworkSnmp",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/snmp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"snmp"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return the SNMP settings for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/snmp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"snmp"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"access\": \"users\",\n  \"communityString\": \"sample\",\n  \"users\": [\n    {\n      \"username\": \"AzureDiamond\",\n      \"passphrase\": \"hunter2\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "getOrganizationSnmp",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/snmp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"snmp"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return the SNMP settings for an organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/snmp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"snmp"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"v2cEnabled\": false,\n  \"v2CommunityString\": \"o/ABCDEF\",\n  \"v3Enabled\": true,\n  \"v3User\": \"o/ABCDEF\",\n  \"v3AuthMode\": \"SHA\",\n  \"v3PrivMode\": \"AES128\",\n  \"peerIps\": [\n    \"123.123.123.1\"\n  ],\n  \"hostname\": \"snmp.meraki.com\",\n  \"port\": 443\n}"
										}
									]
								},
								{
									"name": "updateNetworkSnmp",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"access\": \"<string>\",\n  \"communityString\": \"<string>\",\n  \"users\": [\n    {\n      \"username\": \"<string>\",\n      \"passphrase\": \"<string>\"\n    },\n    {\n      \"username\": \"<string>\",\n      \"passphrase\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/snmp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"snmp"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Update the SNMP settings for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"access\": \"<string>\",\n  \"communityString\": \"<string>\",\n  \"users\": [\n    {\n      \"username\": \"<string>\",\n      \"passphrase\": \"<string>\"\n    },\n    {\n      \"username\": \"<string>\",\n      \"passphrase\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/snmp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"snmp"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"access\": \"users\",\n  \"communityString\": \"sample\",\n  \"users\": [\n    {\n      \"username\": \"AzureDiamond\",\n      \"passphrase\": \"hunter2\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "updateOrganizationSnmp",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"v2cEnabled\": \"<boolean>\",\n  \"v3Enabled\": \"<boolean>\",\n  \"v3AuthMode\": \"<string>\",\n  \"v3AuthPass\": \"<string>\",\n  \"v3PrivMode\": \"<string>\",\n  \"v3PrivPass\": \"<string>\",\n  \"peerIps\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/snmp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"snmp"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Update the SNMP settings for an organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"v2cEnabled\": \"<boolean>\",\n  \"v3Enabled\": \"<boolean>\",\n  \"v3AuthMode\": \"<string>\",\n  \"v3AuthPass\": \"<string>\",\n  \"v3PrivMode\": \"<string>\",\n  \"v3PrivPass\": \"<string>\",\n  \"peerIps\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/snmp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"snmp"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"v2cEnabled\": false,\n  \"v2CommunityString\": \"o/ABCDEF\",\n  \"v3Enabled\": true,\n  \"v3User\": \"o/ABCDEF\",\n  \"v3AuthMode\": \"SHA\",\n  \"v3PrivMode\": \"AES128\",\n  \"peerIps\": [\n    \"123.123.123.1\"\n  ],\n  \"hostname\": \"snmp.meraki.com\",\n  \"port\": 443\n}"
										}
									]
								}
							]
						},
						{
							"name": "splash",
							"item": [
								{
									"name": "assets",
									"item": [
										{
											"name": "deleteOrganizationSplashAsset",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/splash/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"splash",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "id",
															"value": "",
															"description": "(Required) ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Delete a Splash Theme Asset"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/splash/assets/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"splash",
																"assets",
																":id"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getOrganizationSplashAsset",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/splash/assets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"splash",
														"assets",
														":id"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "id",
															"value": "",
															"description": "(Required) ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Get a Splash Theme Asset"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/splash/assets/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"splash",
																"assets",
																":id"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1284392014819\",\n  \"name\": \"continue.html\",\n  \"fileData\": \"PGh0bWw+PC9odG1sPg==\\n\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "themes",
									"item": [
										{
											"name": "assets",
											"item": [
												{
													"name": "createOrganizationSplashThemeAsset",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"content\": \"<byte>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/splash/themes/:themeIdentifier/assets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"splash",
																"themes",
																":themeIdentifier",
																"assets"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "themeIdentifier",
																	"value": "{{themeIdentifier}}",
																	"description": "(Required) Theme identifier"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Create a Splash Theme Asset"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/splash/themes/:themeIdentifier/assets",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"splash",
																		"themes",
																		":themeIdentifier",
																		"assets"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "themeIdentifier",
																			"value": "<string>",
																			"description": "(Required) Theme identifier"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"1284392014819\",\n  \"name\": \"continue.html\",\n  \"fileData\": \"PGh0bWw+PC9odG1sPg==\\n\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "createOrganizationSplashTheme",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"baseTheme\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/splash/themes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"splash",
														"themes"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Create a Splash Theme"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/splash/themes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"splash",
																"themes"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"482367494044dbbb1d2cc8579d967cef5b4ce59f\",\n  \"name\": \"My Custom Splash Theme\",\n  \"themeAssets\": [\n    {\n      \"id\": \"1284392014819\",\n      \"name\": \"continue.html\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "deleteOrganizationSplashTheme",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/splash/themes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"splash",
														"themes",
														":id"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "id",
															"value": "",
															"description": "(Required) ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Delete a Splash Theme"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/splash/themes/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"splash",
																"themes",
																":id"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getOrganizationSplashThemes",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/splash/themes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"splash",
														"themes"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List Splash Themes"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/splash/themes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"splash",
																"themes"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"482367494044dbbb1d2cc8579d967cef5b4ce59f\",\n    \"name\": \"My Custom Splash Theme\",\n    \"themeAssets\": [\n      {\n        \"id\": \"1284392014819\",\n        \"name\": \"continue.html\"\n      }\n    ]\n  }\n]"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "syslogServers",
							"item": [
								{
									"name": "getNetworkSyslogServers",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/syslogServers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"syslogServers"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "List the syslog servers for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/syslogServers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"syslogServers"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"servers\": [\n    {\n      \"host\": \"1.2.3.4\",\n      \"port\": 443,\n      \"roles\": [\n        \"Wireless event log\",\n        \"URLs\"\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "updateNetworkSyslogServers",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"servers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/syslogServers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"syslogServers"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Update the syslog servers for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"servers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/syslogServers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"syslogServers"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"servers\": [\n    {\n      \"host\": \"1.2.3.4\",\n      \"port\": 443,\n      \"roles\": [\n        \"Wireless event log\",\n        \"URLs\"\n      ]\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "trafficAnalysis",
							"item": [
								{
									"name": "getNetworkTrafficAnalysis",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/trafficAnalysis",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"trafficAnalysis"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return the traffic analysis settings for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/trafficAnalysis",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"trafficAnalysis"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"mode\": \"disabled\",\n  \"customPieChartItems\": [\n    {\n      \"name\": \"Item from hostname\",\n      \"type\": \"host\",\n      \"value\": \"example.com\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "updateNetworkTrafficAnalysis",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mode\": \"<string>\",\n  \"customPieChartItems\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/trafficAnalysis",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"trafficAnalysis"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Update the traffic analysis settings for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"mode\": \"<string>\",\n  \"customPieChartItems\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/trafficAnalysis",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"trafficAnalysis"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"mode\": \"disabled\",\n  \"customPieChartItems\": [\n    {\n      \"name\": \"Item from hostname\",\n      \"type\": \"host\",\n      \"value\": \"example.com\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "trafficShaping",
							"item": [
								{
									"name": "applicationCategories",
									"item": [
										{
											"name": "getNetworkTrafficShapingApplicationCategories",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/trafficShaping/applicationCategories",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"trafficShaping",
														"applicationCategories"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Returns the application categories for traffic shaping rules. Only applicable on networks with a security applicance."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/trafficShaping/applicationCategories",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"trafficShaping",
																"applicationCategories"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"applicationCategories\": [\n    {\n      \"id\": \"meraki:layer7/category/24\",\n      \"name\": \"Advertising\",\n      \"applications\": [\n        {\n          \"id\": \"meraki:layer7/application/5\",\n          \"name\": \"Advertising.com\"\n        },\n        {\n          \"id\": \"meraki:layer7/application/0\",\n          \"name\": \"AppNexus\"\n        },\n        {\n          \"id\": \"meraki:layer7/application/1\",\n          \"name\": \"Brightroll\"\n        }\n      ]\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "dscpTaggingOptions",
									"item": [
										{
											"name": "getNetworkTrafficShapingDscpTaggingOptions",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/trafficShaping/dscpTaggingOptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"trafficShaping",
														"dscpTaggingOptions"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Returns the available DSCP tagging options for your traffic shaping rules."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/trafficShaping/dscpTaggingOptions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"trafficShaping",
																"dscpTaggingOptions"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"dscpTagValue\": 10,\n    \"description\": \"AF11 - High Throughput, Latency Insensitive, Low Drop\"\n  },\n  {\n    \"dscpTagValue\": 12,\n    \"description\": \"AF12 - High Throughput, Latency Insensitive, Medium Drop\"\n  },\n  {\n    \"dscpTagValue\": 14,\n    \"description\": \"AF13 - High Throughput, Latency Insensitive, High Drop\"\n  },\n  {\n    \"dscpTagValue\": 18,\n    \"description\": \"AF21 - Low Latency Data, Low Drop\"\n  }\n]"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "vlanProfiles",
							"item": [
								{
									"name": "assignments",
									"item": [
										{
											"name": "byDevice",
											"item": [
												{
													"name": "getNetworkVlanProfilesAssignmentsByDevice",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/vlanProfiles/assignments/byDevice",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"vlanProfiles",
																"assignments",
																"byDevice"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Optional parameter to filter devices by serials. All devices returned belong to serial numbers that are an exact match.",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Optional parameter to filter devices by serials. All devices returned belong to serial numbers that are an exact match.",
																	"disabled": true
																},
																{
																	"key": "productTypes",
																	"value": "{{productTypes}}",
																	"description": "Optional parameter to filter devices by product types.",
																	"disabled": true
																},
																{
																	"key": "productTypes",
																	"value": "{{productTypes}}",
																	"description": "Optional parameter to filter devices by product types.",
																	"disabled": true
																},
																{
																	"key": "stackIds",
																	"value": "{{stackIds}}",
																	"description": "Optional parameter to filter devices by Switch Stack ids.",
																	"disabled": true
																},
																{
																	"key": "stackIds",
																	"value": "{{stackIds}}",
																	"description": "Optional parameter to filter devices by Switch Stack ids.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Get the assigned VLAN Profiles for devices in a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/vlanProfiles/assignments/byDevice?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&serials=<string>&serials=<string>&productTypes=<string>&productTypes=<string>&stackIds=<string>&stackIds=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"vlanProfiles",
																		"assignments",
																		"byDevice"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "productTypes",
																			"value": "<string>"
																		},
																		{
																			"key": "productTypes",
																			"value": "<string>"
																		},
																		{
																			"key": "stackIds",
																			"value": "<string>"
																		},
																		{
																			"key": "stackIds",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"name\": \"My switch\",\n    \"serial\": \"Q234-ABCD-5678\",\n    \"mac\": \"00:11:22:33:44:55\",\n    \"productType\": \"switch\",\n    \"vlanProfile\": {\n      \"iname\": \"Profile1\",\n      \"name\": \"My VLAN Profile\",\n      \"isDefault\": true\n    },\n    \"stack\": {\n      \"id\": \"1234\"\n    }\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "reassignNetworkVlanProfilesAssignments",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"stackIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"vlanProfile\": {\n    \"iname\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/vlanProfiles/assignments/reassign",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"vlanProfiles",
														"assignments",
														"reassign"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the assigned VLAN Profile for devices in a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"stackIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"vlanProfile\": {\n    \"iname\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/vlanProfiles/assignments/reassign",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"vlanProfiles",
																"assignments",
																"reassign"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"vlanProfile\": {\n    \"iname\": \"Profile1\",\n    \"name\": \"My VLAN Profile\"\n  },\n  \"serials\": [\n    \"Q234-ABCD-5678\"\n  ],\n  \"stackIds\": [\n    \"1234\"\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "createNetworkVlanProfile",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"vlanNames\": [\n    {\n      \"name\": \"<string>\",\n      \"vlanId\": \"<string>\",\n      \"adaptivePolicyGroup\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"vlanId\": \"<string>\",\n      \"adaptivePolicyGroup\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ],\n  \"vlanGroups\": [\n    {\n      \"name\": \"<string>\",\n      \"vlanIds\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"vlanIds\": \"<string>\"\n    }\n  ],\n  \"iname\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/vlanProfiles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"vlanProfiles"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Create a VLAN profile for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"vlanNames\": [\n    {\n      \"name\": \"<string>\",\n      \"vlanId\": \"<string>\",\n      \"adaptivePolicyGroup\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"vlanId\": \"<string>\",\n      \"adaptivePolicyGroup\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ],\n  \"vlanGroups\": [\n    {\n      \"name\": \"<string>\",\n      \"vlanIds\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"vlanIds\": \"<string>\"\n    }\n  ],\n  \"iname\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/vlanProfiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"vlanProfiles"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"iname\": \"Profile1\",\n  \"name\": \"My VLAN profile name\",\n  \"isDefault\": false,\n  \"vlanNames\": [\n    {\n      \"name\": \"named-1\",\n      \"vlanId\": \"1\",\n      \"adaptivePolicyGroup\": {\n        \"id\": \"791\",\n        \"name\": \"Infrastructure\"\n      }\n    }\n  ],\n  \"vlanGroups\": [\n    {\n      \"name\": \"named-group-1\",\n      \"vlanIds\": \"2,5-7\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "deleteNetworkVlanProfile",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/vlanProfiles/:iname",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"vlanProfiles",
												":iname"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "iname",
													"value": "{{iname}}",
													"description": "(Required) Iname"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Delete a VLAN profile of a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/vlanProfiles/:iname",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"vlanProfiles",
														":iname"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "iname",
															"value": "<string>",
															"description": "(Required) Iname"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "getNetworkVlanProfile",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/vlanProfiles/:iname",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"vlanProfiles",
												":iname"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "iname",
													"value": "{{iname}}",
													"description": "(Required) Iname"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Get an existing VLAN profile of a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/vlanProfiles/:iname",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"vlanProfiles",
														":iname"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "iname",
															"value": "<string>",
															"description": "(Required) Iname"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"iname\": \"Profile1\",\n  \"name\": \"My VLAN profile name\",\n  \"isDefault\": false,\n  \"vlanNames\": [\n    {\n      \"name\": \"named-1\",\n      \"vlanId\": \"1\",\n      \"adaptivePolicyGroup\": {\n        \"id\": \"791\",\n        \"name\": \"Infrastructure\"\n      }\n    }\n  ],\n  \"vlanGroups\": [\n    {\n      \"name\": \"named-group-1\",\n      \"vlanIds\": \"2,5-7\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "getNetworkVlanProfiles",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/vlanProfiles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"vlanProfiles"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "List VLAN profiles for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/vlanProfiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"vlanProfiles"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"iname\": \"Profile1\",\n    \"name\": \"My VLAN profile name\",\n    \"isDefault\": false,\n    \"vlanNames\": [\n      {\n        \"name\": \"named-1\",\n        \"vlanId\": \"1\",\n        \"adaptivePolicyGroup\": {\n          \"id\": \"791\",\n          \"name\": \"Infrastructure\"\n        }\n      }\n    ],\n    \"vlanGroups\": [\n      {\n        \"name\": \"named-group-1\",\n        \"vlanIds\": \"2,5-7\"\n      }\n    ]\n  }\n]"
										}
									]
								},
								{
									"name": "updateNetworkVlanProfile",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"vlanNames\": [\n    {\n      \"name\": \"<string>\",\n      \"vlanId\": \"<string>\",\n      \"adaptivePolicyGroup\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"vlanId\": \"<string>\",\n      \"adaptivePolicyGroup\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ],\n  \"vlanGroups\": [\n    {\n      \"name\": \"<string>\",\n      \"vlanIds\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"vlanIds\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/vlanProfiles/:iname",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"vlanProfiles",
												":iname"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "iname",
													"value": "{{iname}}",
													"description": "(Required) Iname"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Update an existing VLAN profile of a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"vlanNames\": [\n    {\n      \"name\": \"<string>\",\n      \"vlanId\": \"<string>\",\n      \"adaptivePolicyGroup\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"vlanId\": \"<string>\",\n      \"adaptivePolicyGroup\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ],\n  \"vlanGroups\": [\n    {\n      \"name\": \"<string>\",\n      \"vlanIds\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"vlanIds\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/vlanProfiles/:iname",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"vlanProfiles",
														":iname"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "iname",
															"value": "<string>",
															"description": "(Required) Iname"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"iname\": \"Profile1\",\n  \"name\": \"My VLAN profile name\",\n  \"isDefault\": false,\n  \"vlanNames\": [\n    {\n      \"name\": \"named-1\",\n      \"vlanId\": \"1\",\n      \"adaptivePolicyGroup\": {\n        \"id\": \"791\",\n        \"name\": \"Infrastructure\"\n      }\n    }\n  ],\n  \"vlanGroups\": [\n    {\n      \"name\": \"named-group-1\",\n      \"vlanIds\": \"2,5-7\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "webhooks",
							"item": [
								{
									"name": "callbacks",
									"item": [
										{
											"name": "statuses",
											"item": [
												{
													"name": "getOrganizationWebhooksCallbacksStatus",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/webhooks/callbacks/statuses/:callbackId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"webhooks",
																"callbacks",
																"statuses",
																":callbackId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "callbackId",
																	"value": "{{callbackId}}",
																	"description": "(Required) Callback ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the status of an API callback"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/webhooks/callbacks/statuses/:callbackId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"webhooks",
																		"callbacks",
																		"statuses",
																		":callbackId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "callbackId",
																			"value": "<string>",
																			"description": "(Required) Callback ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"callbackId\": \"1284392014819\",\n  \"status\": \"completed\",\n  \"errors\": [\n    \"Callback failed\"\n  ],\n  \"createdBy\": {\n    \"adminId\": \"212406\"\n  },\n  \"webhook\": {\n    \"url\": \"https://webhook.site/28efa24e-f830-4d9f-a12b-fbb9e5035031\",\n    \"httpServer\": {\n      \"id\": \"aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=\"\n    },\n    \"payloadTemplate\": {\n      \"id\": \"wpt_2100\"\n    },\n    \"sentAt\": \"2018-02-11T00:00:00.090210Z\"\n  }\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "httpServers",
									"item": [
										{
											"name": "createNetworkWebhooksHttpServer",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"url\": \"<string>\",\n  \"sharedSecret\": \"<string>\",\n  \"payloadTemplate\": {\n    \"payloadTemplateId\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/webhooks/httpServers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"webhooks",
														"httpServers"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Add an HTTP server to a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"Example Webhook Server\",\n  \"url\": \"https://example.com\",\n  \"sharedSecret\": \"shhh\",\n  \"payloadTemplate\": {\n    \"payloadTemplateId\": \"wpt_00001\",\n    \"name\": \"Meraki (included)\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/webhooks/httpServers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"webhooks",
																"httpServers"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vbXlfY3VzdG9tX3dlYmhvb2s=\",\n  \"name\": \"Example Webhook Server\",\n  \"url\": \"https://www.example.com/my_custom_webhook\",\n  \"networkId\": \"N_12345678\",\n  \"payloadTemplate\": {\n    \"payloadTemplateId\": \"wpt_00001\",\n    \"name\": \"Meraki (included)\"\n  }\n}"
												}
											]
										},
										{
											"name": "deleteNetworkWebhooksHttpServer",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/webhooks/httpServers/:httpServerId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"webhooks",
														"httpServers",
														":httpServerId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "httpServerId",
															"value": "{{httpServerId}}",
															"description": "(Required) Http server ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Delete an HTTP server from a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/webhooks/httpServers/:httpServerId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"webhooks",
																"httpServers",
																":httpServerId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "httpServerId",
																	"value": "<string>",
																	"description": "(Required) Http server ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getNetworkWebhooksHttpServer",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/webhooks/httpServers/:httpServerId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"webhooks",
														"httpServers",
														":httpServerId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "httpServerId",
															"value": "{{httpServerId}}",
															"description": "(Required) Http server ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return an HTTP server for a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/webhooks/httpServers/:httpServerId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"webhooks",
																"httpServers",
																":httpServerId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "httpServerId",
																	"value": "<string>",
																	"description": "(Required) Http server ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vbXlfY3VzdG9tX3dlYmhvb2s=\",\n  \"name\": \"Example Webhook Server\",\n  \"url\": \"https://www.example.com/my_custom_webhook\",\n  \"networkId\": \"N_12345678\",\n  \"payloadTemplate\": {\n    \"payloadTemplateId\": \"wpt_00001\",\n    \"name\": \"Meraki (included)\"\n  }\n}"
												}
											]
										},
										{
											"name": "getNetworkWebhooksHttpServers",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/webhooks/httpServers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"webhooks",
														"httpServers"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the HTTP servers for a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/webhooks/httpServers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"webhooks",
																"httpServers"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vbXlfY3VzdG9tX3dlYmhvb2s=\",\n    \"name\": \"Example Webhook Server\",\n    \"url\": \"https://www.example.com/my_custom_webhook\",\n    \"networkId\": \"N_12345678\",\n    \"payloadTemplate\": {\n      \"payloadTemplateId\": \"wpt_00001\",\n      \"name\": \"Meraki (included)\"\n    }\n  }\n]"
												}
											]
										},
										{
											"name": "updateNetworkWebhooksHttpServer",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"sharedSecret\": \"<string>\",\n  \"payloadTemplate\": {\n    \"payloadTemplateId\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/webhooks/httpServers/:httpServerId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"webhooks",
														"httpServers",
														":httpServerId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "httpServerId",
															"value": "{{httpServerId}}",
															"description": "(Required) Http server ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update an HTTP server. To change a URL, create a new HTTP server."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"Example Webhook Server\",\n  \"sharedSecret\": \"shhh\",\n  \"payloadTemplate\": {\n    \"payloadTemplateId\": \"wpt_00001\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/webhooks/httpServers/:httpServerId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"webhooks",
																"httpServers",
																":httpServerId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "httpServerId",
																	"value": "<string>",
																	"description": "(Required) Http server ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vbXlfY3VzdG9tX3dlYmhvb2s=\",\n  \"name\": \"Example Webhook Server\",\n  \"url\": \"https://www.example.com/my_custom_webhook\",\n  \"networkId\": \"N_12345678\",\n  \"payloadTemplate\": {\n    \"payloadTemplateId\": \"wpt_00001\",\n    \"name\": \"Meraki (included)\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "payloadTemplates",
									"item": [
										{
											"name": "createNetworkWebhooksPayloadTemplate",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"body\": \"<string>\",\n  \"headers\": [\n    {\n      \"name\": \"<string>\",\n      \"template\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"template\": \"<string>\"\n    }\n  ],\n  \"bodyFile\": \"<byte>\",\n  \"headersFile\": \"<byte>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/webhooks/payloadTemplates",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"webhooks",
														"payloadTemplates"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Create a webhook payload template for a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"body\": \"<string>\",\n  \"headers\": [\n    {\n      \"name\": \"<string>\",\n      \"template\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"template\": \"<string>\"\n    }\n  ],\n  \"bodyFile\": \"<byte>\",\n  \"headersFile\": \"<byte>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/webhooks/payloadTemplates",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"webhooks",
																"payloadTemplates"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"payloadTemplateId\": \"wpt_343\",\n  \"type\": \"custom\",\n  \"name\": \"Custom Template\",\n  \"headers\": [\n    {\n      \"name\": \"Authorization\",\n      \"template\": \"Bearer {{sharedSecret}}\"\n    }\n  ],\n  \"body\": \"{\\\"event_type\\\":\\\"{{alertTypeId}}\\\",\\\"client_payload\\\":{\\\"text\\\":\\\"{{alertData}}\\\"}}\",\n  \"sharing\": {\n    \"byNetwork\": {\n      \"adminsCanModify\": false\n    }\n  }\n}"
												}
											]
										},
										{
											"name": "deleteNetworkWebhooksPayloadTemplate",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/webhooks/payloadTemplates/:payloadTemplateId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"webhooks",
														"payloadTemplates",
														":payloadTemplateId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "payloadTemplateId",
															"value": "{{payloadTemplateId}}",
															"description": "(Required) Payload template ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Destroy a webhook payload template for a network. Does not work for included templates ('wpt_00001', 'wpt_00002', 'wpt_00003', 'wpt_00004', 'wpt_00005' or 'wpt_00006')"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/webhooks/payloadTemplates/:payloadTemplateId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"webhooks",
																"payloadTemplates",
																":payloadTemplateId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "payloadTemplateId",
																	"value": "<string>",
																	"description": "(Required) Payload template ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getNetworkWebhooksPayloadTemplate",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/webhooks/payloadTemplates/:payloadTemplateId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"webhooks",
														"payloadTemplates",
														":payloadTemplateId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "payloadTemplateId",
															"value": "{{payloadTemplateId}}",
															"description": "(Required) Payload template ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Get the webhook payload template for a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/webhooks/payloadTemplates/:payloadTemplateId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"webhooks",
																"payloadTemplates",
																":payloadTemplateId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "payloadTemplateId",
																	"value": "<string>",
																	"description": "(Required) Payload template ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"payloadTemplateId\": \"wpt_343\",\n  \"type\": \"custom\",\n  \"name\": \"Custom Template\",\n  \"headers\": [\n    {\n      \"name\": \"Authorization\",\n      \"template\": \"Bearer {{sharedSecret}}\"\n    }\n  ],\n  \"body\": \"{\\\"event_type\\\":\\\"{{alertTypeId}}\\\",\\\"client_payload\\\":{\\\"text\\\":\\\"{{alertData}}\\\"}}\",\n  \"sharing\": {\n    \"byNetwork\": {\n      \"adminsCanModify\": false\n    }\n  }\n}"
												}
											]
										},
										{
											"name": "getNetworkWebhooksPayloadTemplates",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/webhooks/payloadTemplates",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"webhooks",
														"payloadTemplates"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the webhook payload templates for a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/webhooks/payloadTemplates",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"webhooks",
																"payloadTemplates"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"payloadTemplateId\": \"wpt_343\",\n    \"type\": \"custom\",\n    \"name\": \"Custom Template\",\n    \"headers\": [\n      {\n        \"name\": \"Authorization\",\n        \"template\": \"Bearer {{sharedSecret}}\"\n      }\n    ],\n    \"body\": \"{\\\"event_type\\\":\\\"{{alertTypeId}}\\\",\\\"client_payload\\\":{\\\"text\\\":\\\"{{alertData}}\\\"}}\",\n    \"sharing\": {\n      \"byNetwork\": {\n        \"adminsCanModify\": false\n      }\n    }\n  }\n]"
												}
											]
										},
										{
											"name": "updateNetworkWebhooksPayloadTemplate",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"body\": \"<string>\",\n  \"headers\": [\n    {\n      \"name\": \"<string>\",\n      \"template\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"template\": \"<string>\"\n    }\n  ],\n  \"bodyFile\": \"<byte>\",\n  \"headersFile\": \"<byte>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/webhooks/payloadTemplates/:payloadTemplateId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"webhooks",
														"payloadTemplates",
														":payloadTemplateId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "payloadTemplateId",
															"value": "{{payloadTemplateId}}",
															"description": "(Required) Payload template ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update a webhook payload template for a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"body\": \"<string>\",\n  \"headers\": [\n    {\n      \"name\": \"<string>\",\n      \"template\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"template\": \"<string>\"\n    }\n  ],\n  \"bodyFile\": \"<byte>\",\n  \"headersFile\": \"<byte>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/webhooks/payloadTemplates/:payloadTemplateId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"webhooks",
																"payloadTemplates",
																":payloadTemplateId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "payloadTemplateId",
																	"value": "<string>",
																	"description": "(Required) Payload template ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"payloadTemplateId\": \"wpt_343\",\n  \"type\": \"custom\",\n  \"name\": \"Custom Template\",\n  \"headers\": [\n    {\n      \"name\": \"Authorization\",\n      \"template\": \"Bearer {{sharedSecret}}\"\n    }\n  ],\n  \"body\": \"{\\\"event_type\\\":\\\"{{alertTypeId}}\\\",\\\"client_payload\\\":{\\\"text\\\":\\\"{{alertData}}\\\"}}\",\n  \"sharing\": {\n    \"byNetwork\": {\n      \"adminsCanModify\": false\n    }\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "webhookTests",
									"item": [
										{
											"name": "createNetworkWebhooksWebhookTest",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"url\": \"<string>\",\n  \"sharedSecret\": \"\",\n  \"payloadTemplateId\": \"<string>\",\n  \"payloadTemplateName\": \"<string>\",\n  \"alertTypeId\": \"power_supply_down\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/webhooks/webhookTests",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"webhooks",
														"webhookTests"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Send a test webhook for a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"url\": \"https://www.example.com/path\",\n  \"sharedSecret\": \"shhh\",\n  \"payloadTemplateId\": \"wpt_00001\",\n  \"payloadTemplateName\": \"Payload Template\",\n  \"alertTypeId\": \"power_supply_down\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/webhooks/webhookTests",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"webhooks",
																"webhookTests"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"url\": \"https://www.example.com/path\",\n  \"status\": \"enqueued\"\n}"
												}
											]
										},
										{
											"name": "getNetworkWebhooksWebhookTest",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/webhooks/webhookTests/:webhookTestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"webhooks",
														"webhookTests",
														":webhookTestId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "webhookTestId",
															"value": "{{webhookTestId}}",
															"description": "(Required) Webhook test ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the status of a webhook test for a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/webhooks/webhookTests/:webhookTestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"webhooks",
																"webhookTests",
																":webhookTestId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "webhookTestId",
																	"value": "<string>",
																	"description": "(Required) Webhook test ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"url\": \"https://www.example.com/path\",\n  \"status\": \"enqueued\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "bindNetwork",
							"protocolProfileBehavior": {
								"followAuthorizationHeader": false
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"configTemplateId\": \"<string>\",\n  \"autoBind\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/bind",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"bind"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}",
											"description": "(Required) Network ID"
										},
										{
											"key": "basePath",
											"value": "{{basePath}}"
										}
									]
								},
								"description": "Bind a network to a template."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Cisco-Meraki-API-Key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"configTemplateId\": \"N_23952905\",\n  \"autoBind\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/bind",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"bind"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "<string>",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"N_24329156\",\n  \"organizationId\": \"2930418\",\n  \"name\": \"Main Office\",\n  \"productTypes\": [\n    \"appliance\",\n    \"switch\",\n    \"wireless\"\n  ],\n  \"timeZone\": \"America/Los_Angeles\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"enrollmentString\": \"my-enrollment-string\",\n  \"url\": \"https://n1.meraki.com//n//manage/nodes/list\",\n  \"notes\": \"Additional description of the network\",\n  \"isBoundToConfigTemplate\": false,\n  \"configTemplateId\": \"N_24329156\"\n}"
								}
							]
						},
						{
							"name": "claimIntoOrganization",
							"protocolProfileBehavior": {
								"followAuthorizationHeader": false
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"orders\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"licenses\": [\n    {\n      \"key\": \"<string>\",\n      \"mode\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"mode\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/claim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"claim"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}",
											"description": "(Required) Organization ID"
										},
										{
											"key": "basePath",
											"value": "{{basePath}}"
										}
									]
								},
								"description": "Claim a list of devices, licenses, and/or orders into an organization inventory. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory. This operation can be used up to ten times within a single five minute window."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Cisco-Meraki-API-Key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"orders\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"licenses\": [\n    {\n      \"key\": \"<string>\",\n      \"mode\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"mode\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/claim",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"claim"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "<string>",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"orders\": [\n    \"4CXXXXXXX\"\n  ],\n  \"serials\": [\n    \"Q234-ABCD-5678\"\n  ],\n  \"licenses\": [\n    {\n      \"key\": \"Z2XXXXXXXXXX\",\n      \"mode\": \"addDevices\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "cloneOrganization",
							"protocolProfileBehavior": {
								"followAuthorizationHeader": false
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId/clone",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId",
										"clone"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}",
											"description": "(Required) Organization ID"
										},
										{
											"key": "basePath",
											"value": "{{basePath}}"
										}
									]
								},
								"description": "Create a new organization by cloning the addressed organization"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Cisco-Meraki-API-Key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"My organization\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"clone"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "<string>",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2930418\",\n  \"name\": \"My organization\",\n  \"url\": \"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview\",\n  \"api\": {\n    \"enabled\": true\n  },\n  \"licensing\": {\n    \"model\": \"co-term\"\n  },\n  \"cloud\": {\n    \"region\": {\n      \"name\": \"North America\",\n      \"host\": {\n        \"name\": \"United States\"\n      }\n    }\n  },\n  \"management\": {\n    \"details\": [\n      {\n        \"name\": \"MSP ID\",\n        \"value\": \"123456\"\n      }\n    ]\n  }\n}"
								}
							]
						},
						{
							"name": "createOrganization",
							"protocolProfileBehavior": {
								"followAuthorizationHeader": false
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"management\": {\n    \"details\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"variable": [
										{
											"key": "basePath",
											"value": "{{basePath}}"
										}
									]
								},
								"description": "Create a new organization"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Cisco-Meraki-API-Key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"management\": {\n    \"details\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations"
											],
											"variable": [
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2930418\",\n  \"name\": \"My organization\",\n  \"url\": \"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview\",\n  \"api\": {\n    \"enabled\": true\n  },\n  \"licensing\": {\n    \"model\": \"co-term\"\n  },\n  \"cloud\": {\n    \"region\": {\n      \"name\": \"North America\",\n      \"host\": {\n        \"name\": \"United States\"\n      }\n    }\n  },\n  \"management\": {\n    \"details\": [\n      {\n        \"name\": \"MSP ID\",\n        \"value\": \"123456\"\n      }\n    ]\n  }\n}"
								}
							]
						},
						{
							"name": "deleteNetwork",
							"protocolProfileBehavior": {
								"followAuthorizationHeader": false
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}",
											"description": "(Required) Network ID"
										},
										{
											"key": "basePath",
											"value": "{{basePath}}"
										}
									]
								},
								"description": "Delete a network"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Cisco-Meraki-API-Key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "<string>",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "deleteOrganization",
							"protocolProfileBehavior": {
								"followAuthorizationHeader": false
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}",
											"description": "(Required) Organization ID"
										},
										{
											"key": "basePath",
											"value": "{{basePath}}"
										}
									]
								},
								"description": "Delete an organization"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Cisco-Meraki-API-Key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "<string>",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "getDevice",
							"protocolProfileBehavior": {
								"followAuthorizationHeader": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices/:serial",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":serial"
									],
									"variable": [
										{
											"key": "serial",
											"value": "{{serial}}",
											"description": "(Required) Serial"
										},
										{
											"key": "basePath",
											"value": "{{basePath}}"
										}
									]
								},
								"description": "Return a single device"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Cisco-Meraki-API-Key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/devices/:serial",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":serial"
											],
											"variable": [
												{
													"key": "serial",
													"value": "<string>",
													"description": "(Required) Serial"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"My AP\",\n  \"lat\": 37.4180951010362,\n  \"lng\": -122.098531723022,\n  \"address\": \"1600 Pennsylvania Ave\",\n  \"notes\": \"My AP's note\",\n  \"tags\": [\n    \" recently-added \"\n  ],\n  \"networkId\": \"N_24329156\",\n  \"serial\": \"Q234-ABCD-5678\",\n  \"model\": \"MR34\",\n  \"mac\": \"00:11:22:33:44:55\",\n  \"lanIp\": \"1.2.3.4\",\n  \"firmware\": \"wireless-25-14\",\n  \"floorPlanId\": \"g_2176982374\",\n  \"details\": [\n    {\n      \"name\": \"Catalyst serial\",\n      \"value\": \"123ABC\"\n    }\n  ],\n  \"beaconIdParams\": {\n    \"uuid\": \"00000000-0000-0000-0000-000000000000\",\n    \"major\": 5,\n    \"minor\": 3\n  }\n}"
								}
							]
						},
						{
							"name": "getNetwork",
							"protocolProfileBehavior": {
								"followAuthorizationHeader": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}",
											"description": "(Required) Network ID"
										},
										{
											"key": "basePath",
											"value": "{{basePath}}"
										}
									]
								},
								"description": "Return a network"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Cisco-Meraki-API-Key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "<string>",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"N_24329156\",\n  \"organizationId\": \"2930418\",\n  \"name\": \"Main Office\",\n  \"productTypes\": [\n    \"appliance\",\n    \"switch\",\n    \"wireless\"\n  ],\n  \"timeZone\": \"America/Los_Angeles\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"enrollmentString\": \"my-enrollment-string\",\n  \"url\": \"https://n1.meraki.com//n//manage/nodes/list\",\n  \"notes\": \"Additional description of the network\",\n  \"isBoundToConfigTemplate\": false\n}"
								}
							]
						},
						{
							"name": "getOrganization",
							"protocolProfileBehavior": {
								"followAuthorizationHeader": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}",
											"description": "(Required) Organization ID"
										},
										{
											"key": "basePath",
											"value": "{{basePath}}"
										}
									]
								},
								"description": "Return an organization"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Cisco-Meraki-API-Key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "<string>",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2930418\",\n  \"name\": \"My organization\",\n  \"url\": \"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview\",\n  \"api\": {\n    \"enabled\": true\n  },\n  \"licensing\": {\n    \"model\": \"co-term\"\n  },\n  \"cloud\": {\n    \"region\": {\n      \"name\": \"North America\",\n      \"host\": {\n        \"name\": \"United States\"\n      }\n    }\n  },\n  \"management\": {\n    \"details\": [\n      {\n        \"name\": \"MSP ID\",\n        \"value\": \"123456\"\n      }\n    ]\n  }\n}"
								}
							]
						},
						{
							"name": "getOrganizations",
							"protocolProfileBehavior": {
								"followAuthorizationHeader": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "perPage",
											"value": "{{perPage}}",
											"description": "The number of entries per page returned. Acceptable range is 3 - 9000. Default is 9000.",
											"disabled": true
										},
										{
											"key": "startingAfter",
											"value": "{{startingAfter}}",
											"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
											"disabled": true
										},
										{
											"key": "endingBefore",
											"value": "{{endingBefore}}",
											"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "basePath",
											"value": "{{basePath}}"
										}
									]
								},
								"description": "List the organizations that the user has privileges on"
							},
							"response": []
						},
						{
							"name": "splitNetwork",
							"protocolProfileBehavior": {
								"followAuthorizationHeader": false
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/split",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"split"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}",
											"description": "(Required) Network ID"
										},
										{
											"key": "basePath",
											"value": "{{basePath}}"
										}
									]
								},
								"description": "Split a combined network into individual networks for each type of device"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Cisco-Meraki-API-Key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/split",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"split"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "<string>",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"resultingNetworks\": [\n    {\n      \"id\": \"N_24329156\",\n      \"organizationId\": \"2930418\",\n      \"name\": \"Main Office - switch\",\n      \"productTypes\": [\n        \"switch\"\n      ],\n      \"timeZone\": \"America/Los_Angeles\",\n      \"tags\": [\n        \"tag1\",\n        \"tag2\"\n      ],\n      \"enrollmentString\": \"my-enrollment-string\",\n      \"url\": \"https://n1.meraki.com//n//manage/nodes/list\",\n      \"notes\": \"Additional description of the network\",\n      \"isBoundToConfigTemplate\": false\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "unbindNetwork",
							"protocolProfileBehavior": {
								"followAuthorizationHeader": false
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"retainConfigs\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId/unbind",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId",
										"unbind"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}",
											"description": "(Required) Network ID"
										},
										{
											"key": "basePath",
											"value": "{{basePath}}"
										}
									]
								},
								"description": "Unbind a network from a template."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Cisco-Meraki-API-Key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"retainConfigs\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/unbind",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"unbind"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "<string>",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"N_24329156\",\n  \"organizationId\": \"2930418\",\n  \"name\": \"Main Office\",\n  \"productTypes\": [\n    \"appliance\",\n    \"switch\",\n    \"wireless\"\n  ],\n  \"timeZone\": \"America/Los_Angeles\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"enrollmentString\": \"my-enrollment-string\",\n  \"url\": \"https://n1.meraki.com//n//manage/nodes/list\",\n  \"notes\": \"Additional description of the network\",\n  \"isBoundToConfigTemplate\": false\n}"
								}
							]
						},
						{
							"name": "updateDevice",
							"protocolProfileBehavior": {
								"followAuthorizationHeader": false
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"lat\": \"<float>\",\n  \"lng\": \"<float>\",\n  \"address\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"moveMapMarker\": \"<boolean>\",\n  \"switchProfileId\": \"<string>\",\n  \"floorPlanId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/devices/:serial",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":serial"
									],
									"variable": [
										{
											"key": "serial",
											"value": "{{serial}}",
											"description": "(Required) Serial"
										},
										{
											"key": "basePath",
											"value": "{{basePath}}"
										}
									]
								},
								"description": "Update the attributes of a device"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Cisco-Meraki-API-Key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"lat\": \"<float>\",\n  \"lng\": \"<float>\",\n  \"address\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"moveMapMarker\": \"<boolean>\",\n  \"switchProfileId\": \"<string>\",\n  \"floorPlanId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/devices/:serial",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":serial"
											],
											"variable": [
												{
													"key": "serial",
													"value": "<string>",
													"description": "(Required) Serial"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"My AP\",\n  \"lat\": 37.4180951010362,\n  \"lng\": -122.098531723022,\n  \"address\": \"1600 Pennsylvania Ave\",\n  \"notes\": \"My AP's note\",\n  \"tags\": [\n    \" recently-added \"\n  ],\n  \"networkId\": \"N_24329156\",\n  \"serial\": \"Q234-ABCD-5678\",\n  \"model\": \"MR34\",\n  \"mac\": \"00:11:22:33:44:55\",\n  \"lanIp\": \"1.2.3.4\",\n  \"firmware\": \"wireless-25-14\",\n  \"floorPlanId\": \"g_2176982374\",\n  \"details\": [\n    {\n      \"name\": \"Catalyst serial\",\n      \"value\": \"123ABC\"\n    }\n  ],\n  \"beaconIdParams\": {\n    \"uuid\": \"00000000-0000-0000-0000-000000000000\",\n    \"major\": 5,\n    \"minor\": 3\n  }\n}"
								}
							]
						},
						{
							"name": "updateNetwork",
							"protocolProfileBehavior": {
								"followAuthorizationHeader": false
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"timeZone\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"enrollmentString\": \"<string>\",\n  \"notes\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/networks/:networkId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":networkId"
									],
									"variable": [
										{
											"key": "networkId",
											"value": "{{networkId}}",
											"description": "(Required) Network ID"
										},
										{
											"key": "basePath",
											"value": "{{basePath}}"
										}
									]
								},
								"description": "Update a network"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Cisco-Meraki-API-Key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Main Office\",\n  \"timeZone\": \"America/Los_Angeles\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"enrollmentString\": \"my-enrollment-string\",\n  \"notes\": \"Additional description of the network\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "<string>",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"N_24329156\",\n  \"organizationId\": \"2930418\",\n  \"name\": \"Main Office\",\n  \"productTypes\": [\n    \"appliance\",\n    \"switch\",\n    \"wireless\"\n  ],\n  \"timeZone\": \"America/Los_Angeles\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"enrollmentString\": \"my-enrollment-string\",\n  \"url\": \"https://n1.meraki.com//n//manage/nodes/list\",\n  \"notes\": \"Additional description of the network\",\n  \"isBoundToConfigTemplate\": false\n}"
								}
							]
						},
						{
							"name": "updateOrganization",
							"protocolProfileBehavior": {
								"followAuthorizationHeader": false
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"management\": {\n    \"details\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ]\n  },\n  \"api\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organizationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organizationId"
									],
									"variable": [
										{
											"key": "organizationId",
											"value": "{{organizationId}}",
											"description": "(Required) Organization ID"
										},
										{
											"key": "basePath",
											"value": "{{basePath}}"
										}
									]
								},
								"description": "Update an organization"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "X-Cisco-Meraki-API-Key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"management\": {\n    \"details\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ]\n  },\n  \"api\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "<string>",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"2930418\",\n  \"name\": \"My organization\",\n  \"url\": \"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview\",\n  \"api\": {\n    \"enabled\": true\n  },\n  \"licensing\": {\n    \"model\": \"co-term\"\n  },\n  \"cloud\": {\n    \"region\": {\n      \"name\": \"North America\",\n      \"host\": {\n        \"name\": \"United States\"\n      }\n    }\n  },\n  \"management\": {\n    \"details\": [\n      {\n        \"name\": \"MSP ID\",\n        \"value\": \"123456\"\n      }\n    ]\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "liveTools",
					"item": [
						{
							"name": "arpTable",
							"item": [
								{
									"name": "createDeviceLiveToolsArpTable",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"callback\": {\n    \"url\": \"<string>\",\n    \"sharedSecret\": \"<string>\",\n    \"httpServer\": {\n      \"id\": \"<string>\"\n    },\n    \"payloadTemplate\": {\n      \"id\": \"<string>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/devices/:serial/liveTools/arpTable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":serial",
												"liveTools",
												"arpTable"
											],
											"variable": [
												{
													"key": "serial",
													"value": "{{serial}}",
													"description": "(Required) Serial"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Enqueue a job to perform a ARP table request for the device. This endpoint currently supports switches. This endpoint has a sustained rate limit of one request every five seconds per device, with an allowed burst of five requests."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"callback\": {\n    \"url\": \"https://webhook.site/28efa24e-f830-4d9f-a12b-fbb9e5035031\",\n    \"sharedSecret\": \"secret\",\n    \"httpServer\": {},\n    \"payloadTemplate\": {}\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/liveTools/arpTable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"liveTools",
														"arpTable"
													],
													"variable": [
														{
															"key": "serial",
															"value": "<string>",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"arpTableId\": \"1284392014819\",\n  \"url\": \"/devices/Q234-ABCD-5678/liveTools/arpTable/1284392014819\",\n  \"request\": {\n    \"serial\": \"Q234-ABCD-5678\"\n  },\n  \"status\": \"complete\",\n  \"callback\": {\n    \"id\": \"1284392014819\",\n    \"url\": \"https://webhook.site/28efa24e-f830-4d9f-a12b-fbb9e5035031\",\n    \"status\": \"new\"\n  }\n}"
										}
									]
								},
								{
									"name": "getDeviceLiveToolsArpTable",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/devices/:serial/liveTools/arpTable/:arpTableId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":serial",
												"liveTools",
												"arpTable",
												":arpTableId"
											],
											"variable": [
												{
													"key": "serial",
													"value": "{{serial}}",
													"description": "(Required) Serial"
												},
												{
													"key": "arpTableId",
													"value": "{{arpTableId}}",
													"description": "(Required) Arp table ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return an ARP table live tool job."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/liveTools/arpTable/:arpTableId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"liveTools",
														"arpTable",
														":arpTableId"
													],
													"variable": [
														{
															"key": "serial",
															"value": "<string>",
															"description": "(Required) Serial"
														},
														{
															"key": "arpTableId",
															"value": "<string>",
															"description": "(Required) Arp table ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"arpTableId\": \"1284392014819\",\n  \"url\": \"/devices/Q234-ABCD-5678/liveTools/arpTable/1284392014819\",\n  \"request\": {\n    \"serial\": \"Q234-ABCD-5678\"\n  },\n  \"status\": \"complete\",\n  \"entries\": [\n    {\n      \"ip\": \"10.0.0.0/24\",\n      \"mac\": \"00:11:22:33:44:55\",\n      \"vlanId\": 100,\n      \"lastUpdatedAt\": \"2018-02-11T00:00:00.090210Z\"\n    }\n  ],\n  \"error\": \"The device is unreachable.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "cableTest",
							"item": [
								{
									"name": "createDeviceLiveToolsCableTest",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ports\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"callback\": {\n    \"url\": \"<string>\",\n    \"sharedSecret\": \"<string>\",\n    \"httpServer\": {\n      \"id\": \"<string>\"\n    },\n    \"payloadTemplate\": {\n      \"id\": \"<string>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/devices/:serial/liveTools/cableTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":serial",
												"liveTools",
												"cableTest"
											],
											"variable": [
												{
													"key": "serial",
													"value": "{{serial}}",
													"description": "(Required) Serial"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Enqueue a job to perform a cable test for the device on the specified ports. This endpoint has a sustained rate limit of one request every five seconds per device, with an allowed burst of five requests."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ports\": [\n    \"2\",\n    \"8\"\n  ],\n  \"callback\": {\n    \"url\": \"https://webhook.site/28efa24e-f830-4d9f-a12b-fbb9e5035031\",\n    \"sharedSecret\": \"secret\",\n    \"httpServer\": {},\n    \"payloadTemplate\": {}\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/liveTools/cableTest",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"liveTools",
														"cableTest"
													],
													"variable": [
														{
															"key": "serial",
															"value": "<string>",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"cableTestId\": \"1284392014819\",\n  \"url\": \"/devices/Q234-ABCD-5678/liveTools/cableTest/1284392014819\",\n  \"request\": {\n    \"serial\": \"Q234-ABCD-5678\",\n    \"ports\": [\n      \"2\",\n      \"8\"\n    ]\n  },\n  \"status\": \"complete\",\n  \"callback\": {\n    \"id\": \"1284392014819\",\n    \"url\": \"https://webhook.site/28efa24e-f830-4d9f-a12b-fbb9e5035031\",\n    \"status\": \"new\"\n  }\n}"
										}
									]
								},
								{
									"name": "getDeviceLiveToolsCableTest",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/devices/:serial/liveTools/cableTest/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":serial",
												"liveTools",
												"cableTest",
												":id"
											],
											"variable": [
												{
													"key": "serial",
													"value": "{{serial}}",
													"description": "(Required) Serial"
												},
												{
													"key": "id",
													"value": "",
													"description": "(Required) ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return a cable test live tool job."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/liveTools/cableTest/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"liveTools",
														"cableTest",
														":id"
													],
													"variable": [
														{
															"key": "serial",
															"value": "<string>",
															"description": "(Required) Serial"
														},
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"cableTestId\": \"1284392014819\",\n  \"url\": \"/devices/Q234-ABCD-5678/liveTools/cableTest/1284392014819\",\n  \"request\": {\n    \"serial\": \"Q234-ABCD-5678\",\n    \"ports\": [\n      \"2\",\n      \"8\"\n    ]\n  },\n  \"status\": \"complete\",\n  \"results\": [\n    {\n      \"port\": \"2\",\n      \"status\": \"up\",\n      \"speedMbps\": 10000,\n      \"error\": \"An unexpected error occurred during the execution of the cable test.\",\n      \"pairs\": [\n        {\n          \"index\": 0,\n          \"status\": \"ok\",\n          \"lengthMeters\": 1\n        }\n      ]\n    }\n  ],\n  \"error\": \"The device is unreachable.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "leds",
							"item": [
								{
									"name": "blink",
									"item": [
										{
											"name": "createDeviceLiveToolsLedsBlink",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"duration\": \"<integer>\",\n  \"callback\": {\n    \"url\": \"<string>\",\n    \"sharedSecret\": \"<string>\",\n    \"httpServer\": {\n      \"id\": \"<string>\"\n    },\n    \"payloadTemplate\": {\n      \"id\": \"<string>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/liveTools/leds/blink",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"liveTools",
														"leds",
														"blink"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Enqueue a job to blink LEDs on a device. This endpoint has a rate limit of one request every 10 seconds."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"duration\": 30,\n  \"callback\": {\n    \"url\": \"https://webhook.site/28efa24e-f830-4d9f-a12b-fbb9e5035031\",\n    \"sharedSecret\": \"secret\",\n    \"httpServer\": {},\n    \"payloadTemplate\": {}\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/liveTools/leds/blink",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"liveTools",
																"leds",
																"blink"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ledsBlinkId\": \"123\",\n  \"url\": \"/devices/QXXX-YYYY-ZZZZ/liveTools/leds/blink/1738\",\n  \"status\": \"complete\",\n  \"request\": {\n    \"serial\": \"Q234-ABCD-5678\",\n    \"duration\": 30\n  },\n  \"error\": \"error description\",\n  \"callback\": {\n    \"id\": \"1284392014819\",\n    \"url\": \"https://webhook.site/28efa24e-f830-4d9f-a12b-fbb9e5035031\",\n    \"status\": \"new\"\n  }\n}"
												}
											]
										},
										{
											"name": "getDeviceLiveToolsLedsBlink",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/liveTools/leds/blink/:ledsBlinkId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"liveTools",
														"leds",
														"blink",
														":ledsBlinkId"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "ledsBlinkId",
															"value": "{{ledsBlinkId}}",
															"description": "(Required) Leds blink ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return a blink LEDs job"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/liveTools/leds/blink/:ledsBlinkId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"liveTools",
																"leds",
																"blink",
																":ledsBlinkId"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "ledsBlinkId",
																	"value": "<string>",
																	"description": "(Required) Leds blink ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ledsBlinkId\": \"123\",\n  \"url\": \"/devices/QXXX-YYYY-ZZZZ/liveTools/leds/blink/1738\",\n  \"status\": \"complete\",\n  \"request\": {\n    \"serial\": \"Q234-ABCD-5678\",\n    \"duration\": 30\n  },\n  \"error\": \"error description\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "macTable",
							"item": [
								{
									"name": "createDeviceLiveToolsMacTable",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"callback\": {\n    \"url\": \"<string>\",\n    \"sharedSecret\": \"<string>\",\n    \"httpServer\": {\n      \"id\": \"<string>\"\n    },\n    \"payloadTemplate\": {\n      \"id\": \"<string>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/devices/:serial/liveTools/macTable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":serial",
												"liveTools",
												"macTable"
											],
											"variable": [
												{
													"key": "serial",
													"value": "{{serial}}",
													"description": "(Required) Serial"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Enqueue a job to request the MAC table from the device. Switches currently support this feature. This endpoint has a sustained rate limit of one request every five seconds per device, with an allowed burst of five requests."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"callback\": {\n    \"url\": \"https://webhook.site/28efa24e-f830-4d9f-a12b-fbb9e5035031\",\n    \"sharedSecret\": \"secret\",\n    \"httpServer\": {},\n    \"payloadTemplate\": {}\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/liveTools/macTable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"liveTools",
														"macTable"
													],
													"variable": [
														{
															"key": "serial",
															"value": "<string>",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"macTableId\": \"1284392014819\",\n  \"url\": \"/devices/Q234-ABCD-5678/liveTools/macTable/1284392014819\",\n  \"request\": {\n    \"serial\": \"Q234-ABCD-5678\"\n  },\n  \"status\": \"complete\",\n  \"callback\": {\n    \"id\": \"1284392014819\",\n    \"url\": \"https://webhook.site/28efa24e-f830-4d9f-a12b-fbb9e5035031\",\n    \"status\": \"new\"\n  }\n}"
										}
									]
								},
								{
									"name": "getDeviceLiveToolsMacTable",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/devices/:serial/liveTools/macTable/:macTableId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":serial",
												"liveTools",
												"macTable",
												":macTableId"
											],
											"variable": [
												{
													"key": "serial",
													"value": "{{serial}}",
													"description": "(Required) Serial"
												},
												{
													"key": "macTableId",
													"value": "{{macTableId}}",
													"description": "(Required) Mac table ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return a MAC table live tool job."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/liveTools/macTable/:macTableId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"liveTools",
														"macTable",
														":macTableId"
													],
													"variable": [
														{
															"key": "serial",
															"value": "<string>",
															"description": "(Required) Serial"
														},
														{
															"key": "macTableId",
															"value": "<string>",
															"description": "(Required) Mac table ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"macTableId\": \"1284392014819\",\n  \"url\": \"/devices/Q234-ABCD-5678/liveTools/macTable/1284392014819\",\n  \"request\": {\n    \"serial\": \"Q234-ABCD-5678\"\n  },\n  \"status\": \"complete\",\n  \"entries\": [\n    {\n      \"mac\": \"00:11:22:33:44:55\",\n      \"port\": \"Tw1/0/9\",\n      \"vlanId\": 100\n    }\n  ],\n  \"error\": \"The device is unreachable.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "ping",
							"item": [
								{
									"name": "createDeviceLiveToolsPing",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"target\": \"<string>\",\n  \"count\": \"<integer>\",\n  \"callback\": {\n    \"url\": \"<string>\",\n    \"sharedSecret\": \"<string>\",\n    \"httpServer\": {\n      \"id\": \"<string>\"\n    },\n    \"payloadTemplate\": {\n      \"id\": \"<string>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/devices/:serial/liveTools/ping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":serial",
												"liveTools",
												"ping"
											],
											"variable": [
												{
													"key": "serial",
													"value": "{{serial}}",
													"description": "(Required) Serial"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Enqueue a job to ping a target host from the device. This endpoint has a sustained rate limit of one request every five seconds per device, with an allowed burst of five requests."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"target\": \"75.75.75.75\",\n  \"count\": 2,\n  \"callback\": {\n    \"url\": \"https://webhook.site/28efa24e-f830-4d9f-a12b-fbb9e5035031\",\n    \"sharedSecret\": \"secret\",\n    \"httpServer\": {},\n    \"payloadTemplate\": {}\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/liveTools/ping",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"liveTools",
														"ping"
													],
													"variable": [
														{
															"key": "serial",
															"value": "<string>",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"pingId\": \"1284392014819\",\n  \"url\": \"/devices/SERIAL/liveTools/ping/1284392014819\",\n  \"request\": {\n    \"serial\": \"Q234-ABCD-5678\",\n    \"target\": \"75.75.75.75\",\n    \"count\": 2\n  },\n  \"status\": \"complete\",\n  \"callback\": {\n    \"id\": \"1284392014819\",\n    \"url\": \"https://webhook.site/28efa24e-f830-4d9f-a12b-fbb9e5035031\",\n    \"status\": \"new\"\n  }\n}"
										}
									]
								},
								{
									"name": "getDeviceLiveToolsPing",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/devices/:serial/liveTools/ping/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":serial",
												"liveTools",
												"ping",
												":id"
											],
											"variable": [
												{
													"key": "serial",
													"value": "{{serial}}",
													"description": "(Required) Serial"
												},
												{
													"key": "id",
													"value": "",
													"description": "(Required) ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return a ping job. Latency unit in response is in milliseconds. Size is in bytes."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/liveTools/ping/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"liveTools",
														"ping",
														":id"
													],
													"variable": [
														{
															"key": "serial",
															"value": "<string>",
															"description": "(Required) Serial"
														},
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"pingId\": \"1284392014819\",\n  \"url\": \"/devices/SERIAL/liveTools/ping/1284392014819\",\n  \"request\": {\n    \"serial\": \"Q234-ABCD-5678\",\n    \"target\": \"75.75.75.75\",\n    \"count\": 2\n  },\n  \"status\": \"complete\",\n  \"results\": {\n    \"sent\": 5,\n    \"received\": 5,\n    \"loss\": {\n      \"percentage\": 0\n    },\n    \"latencies\": {\n      \"minimum\": 15.8,\n      \"average\": 15.8,\n      \"maximum\": 15.9\n    },\n    \"replies\": [\n      {\n        \"sequenceId\": 1,\n        \"size\": 84,\n        \"latency\": 15.7\n      }\n    ]\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "pingDevice",
							"item": [
								{
									"name": "createDeviceLiveToolsPingDevice",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"count\": \"<integer>\",\n  \"callback\": {\n    \"url\": \"<string>\",\n    \"sharedSecret\": \"<string>\",\n    \"httpServer\": {\n      \"id\": \"<string>\"\n    },\n    \"payloadTemplate\": {\n      \"id\": \"<string>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/devices/:serial/liveTools/pingDevice",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":serial",
												"liveTools",
												"pingDevice"
											],
											"variable": [
												{
													"key": "serial",
													"value": "{{serial}}",
													"description": "(Required) Serial"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Enqueue a job to check connectivity status to the device. This endpoint has a sustained rate limit of one request every five seconds per device, with an allowed burst of five requests."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"count\": 3,\n  \"callback\": {\n    \"url\": \"https://webhook.site/28efa24e-f830-4d9f-a12b-fbb9e5035031\",\n    \"sharedSecret\": \"secret\",\n    \"httpServer\": {},\n    \"payloadTemplate\": {}\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/liveTools/pingDevice",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"liveTools",
														"pingDevice"
													],
													"variable": [
														{
															"key": "serial",
															"value": "<string>",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"pingId\": \"1284392014819\",\n  \"url\": \"/devices/SERIAL/liveTools/pingDevice/1284392014819\",\n  \"request\": {\n    \"serial\": \"Q234-ABCD-5678\",\n    \"count\": 2\n  },\n  \"status\": \"complete\",\n  \"callback\": {\n    \"id\": \"1284392014819\",\n    \"url\": \"https://webhook.site/28efa24e-f830-4d9f-a12b-fbb9e5035031\",\n    \"status\": \"new\"\n  }\n}"
										}
									]
								},
								{
									"name": "getDeviceLiveToolsPingDevice",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/devices/:serial/liveTools/pingDevice/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":serial",
												"liveTools",
												"pingDevice",
												":id"
											],
											"variable": [
												{
													"key": "serial",
													"value": "{{serial}}",
													"description": "(Required) Serial"
												},
												{
													"key": "id",
													"value": "",
													"description": "(Required) ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return a ping device job. Latency unit in response is in milliseconds. Size is in bytes."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/liveTools/pingDevice/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"liveTools",
														"pingDevice",
														":id"
													],
													"variable": [
														{
															"key": "serial",
															"value": "<string>",
															"description": "(Required) Serial"
														},
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"pingId\": \"1284392014819\",\n  \"url\": \"/devices/SERIAL/liveTools/pingDevice/1284392014819\",\n  \"request\": {\n    \"serial\": \"Q234-ABCD-5678\",\n    \"count\": 2\n  },\n  \"status\": \"complete\",\n  \"results\": {\n    \"sent\": 5,\n    \"received\": 5,\n    \"loss\": {\n      \"percentage\": 0\n    },\n    \"latencies\": {\n      \"minimum\": 15.8,\n      \"average\": 15.8,\n      \"maximum\": 15.9\n    },\n    \"replies\": [\n      {\n        \"sequenceId\": 1,\n        \"size\": 84,\n        \"latency\": 15.7\n      }\n    ]\n  },\n  \"callback\": {\n    \"id\": \"1284392014819\",\n    \"url\": \"https://webhook.site/28efa24e-f830-4d9f-a12b-fbb9e5035031\",\n    \"status\": \"new\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "throughputTest",
							"item": [
								{
									"name": "createDeviceLiveToolsThroughputTest",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"callback\": {\n    \"url\": \"<string>\",\n    \"sharedSecret\": \"<string>\",\n    \"httpServer\": {\n      \"id\": \"<string>\"\n    },\n    \"payloadTemplate\": {\n      \"id\": \"<string>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/devices/:serial/liveTools/throughputTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":serial",
												"liveTools",
												"throughputTest"
											],
											"variable": [
												{
													"key": "serial",
													"value": "{{serial}}",
													"description": "(Required) Serial"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Enqueue a job to test a device throughput, the test will run for 10 secs to test throughput. This endpoint has a rate limit of one request every five seconds per device."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"callback\": {\n    \"url\": \"https://webhook.site/28efa24e-f830-4d9f-a12b-fbb9e5035031\",\n    \"sharedSecret\": \"secret\",\n    \"httpServer\": {},\n    \"payloadTemplate\": {}\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/liveTools/throughputTest",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"liveTools",
														"throughputTest"
													],
													"variable": [
														{
															"key": "serial",
															"value": "<string>",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"throughputTestId\": \"123\",\n  \"url\": \"/devices/QXXX-YYYY-ZZZZ/liveTools/throughputTest/123\",\n  \"status\": \"complete\",\n  \"result\": {\n    \"speeds\": {\n      \"downstream\": 123.456789\n    }\n  },\n  \"request\": {\n    \"serial\": \"Q234-ABCD-5678\"\n  },\n  \"error\": \"error description\",\n  \"callback\": {\n    \"id\": \"1284392014819\",\n    \"url\": \"https://webhook.site/28efa24e-f830-4d9f-a12b-fbb9e5035031\",\n    \"status\": \"new\"\n  }\n}"
										}
									]
								},
								{
									"name": "getDeviceLiveToolsThroughputTest",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/devices/:serial/liveTools/throughputTest/:throughputTestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":serial",
												"liveTools",
												"throughputTest",
												":throughputTestId"
											],
											"variable": [
												{
													"key": "serial",
													"value": "{{serial}}",
													"description": "(Required) Serial"
												},
												{
													"key": "throughputTestId",
													"value": "{{throughputTestId}}",
													"description": "(Required) Throughput test ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return a throughput test job"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/liveTools/throughputTest/:throughputTestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"liveTools",
														"throughputTest",
														":throughputTestId"
													],
													"variable": [
														{
															"key": "serial",
															"value": "<string>",
															"description": "(Required) Serial"
														},
														{
															"key": "throughputTestId",
															"value": "<string>",
															"description": "(Required) Throughput test ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"throughputTestId\": \"123\",\n  \"url\": \"/devices/QXXX-YYYY-ZZZZ/liveTools/throughputTest/123\",\n  \"status\": \"complete\",\n  \"result\": {\n    \"speeds\": {\n      \"downstream\": 123.456789\n    }\n  },\n  \"request\": {\n    \"serial\": \"Q234-ABCD-5678\"\n  },\n  \"error\": \"error description\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "wakeOnLan",
							"item": [
								{
									"name": "createDeviceLiveToolsWakeOnLan",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"vlanId\": \"<integer>\",\n  \"mac\": \"<string>\",\n  \"callback\": {\n    \"url\": \"<string>\",\n    \"sharedSecret\": \"<string>\",\n    \"httpServer\": {\n      \"id\": \"<string>\"\n    },\n    \"payloadTemplate\": {\n      \"id\": \"<string>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/devices/:serial/liveTools/wakeOnLan",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":serial",
												"liveTools",
												"wakeOnLan"
											],
											"variable": [
												{
													"key": "serial",
													"value": "{{serial}}",
													"description": "(Required) Serial"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Enqueue a job to send a Wake-on-LAN packet from the device. This endpoint has a sustained rate limit of one request every five seconds per device, with an allowed burst of five requests."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"vlanId\": 12,\n  \"mac\": \"00:11:22:33:44:55\",\n  \"callback\": {\n    \"url\": \"https://webhook.site/28efa24e-f830-4d9f-a12b-fbb9e5035031\",\n    \"sharedSecret\": \"secret\",\n    \"httpServer\": {},\n    \"payloadTemplate\": {}\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/liveTools/wakeOnLan",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"liveTools",
														"wakeOnLan"
													],
													"variable": [
														{
															"key": "serial",
															"value": "<string>",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"wakeOnLanId\": \"123\",\n  \"url\": \"/devices/QXXX-YYYY-ZZZZ/liveTools/wakeOnLan/1738\",\n  \"status\": \"complete\",\n  \"request\": {\n    \"serial\": \"Q234-ABCD-5678\",\n    \"vlanId\": 12,\n    \"mac\": \"00:11:22:33:44:55\"\n  },\n  \"error\": \"The device is unreachable.\",\n  \"callback\": {\n    \"id\": \"1284392014819\",\n    \"url\": \"https://webhook.site/28efa24e-f830-4d9f-a12b-fbb9e5035031\",\n    \"status\": \"new\"\n  }\n}"
										}
									]
								},
								{
									"name": "getDeviceLiveToolsWakeOnLan",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/devices/:serial/liveTools/wakeOnLan/:wakeOnLanId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":serial",
												"liveTools",
												"wakeOnLan",
												":wakeOnLanId"
											],
											"variable": [
												{
													"key": "serial",
													"value": "{{serial}}",
													"description": "(Required) Serial"
												},
												{
													"key": "wakeOnLanId",
													"value": "{{wakeOnLanId}}",
													"description": "(Required) Wake on lan ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return a Wake-on-LAN job"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/liveTools/wakeOnLan/:wakeOnLanId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"liveTools",
														"wakeOnLan",
														":wakeOnLanId"
													],
													"variable": [
														{
															"key": "serial",
															"value": "<string>",
															"description": "(Required) Serial"
														},
														{
															"key": "wakeOnLanId",
															"value": "<string>",
															"description": "(Required) Wake on lan ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"wakeOnLanId\": \"123\",\n  \"url\": \"/devices/QXXX-YYYY-ZZZZ/liveTools/wakeOnLan/1738\",\n  \"status\": \"complete\",\n  \"request\": {\n    \"serial\": \"Q234-ABCD-5678\",\n    \"vlanId\": 12,\n    \"mac\": \"00:11:22:33:44:55\"\n  },\n  \"error\": \"The device is unreachable.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "blinkDeviceLeds",
							"protocolProfileBehavior": {
								"followAuthorizationHeader": false
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"duration\": \"<integer>\",\n  \"period\": \"<integer>\",\n  \"duty\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/devices/:serial/blinkLeds",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":serial",
										"blinkLeds"
									],
									"variable": [
										{
											"key": "serial",
											"value": "{{serial}}",
											"description": "(Required) Serial"
										},
										{
											"key": "basePath",
											"value": "{{basePath}}"
										}
									]
								},
								"description": "Blink the LEDs on a device.  This endpoint is deprecrated in favor of \"/devices/{serial}/liveTools/leds/blink\"."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Cisco-Meraki-API-Key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"duration\": 20,\n  \"period\": 160,\n  \"duty\": 50\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/devices/:serial/blinkLeds",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":serial",
												"blinkLeds"
											],
											"variable": [
												{
													"key": "serial",
													"value": "<string>",
													"description": "(Required) Serial"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"duration\": 20,\n  \"period\": 160,\n  \"duty\": 50\n}"
								}
							]
						},
						{
							"name": "rebootDevice",
							"protocolProfileBehavior": {
								"followAuthorizationHeader": false
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices/:serial/reboot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":serial",
										"reboot"
									],
									"variable": [
										{
											"key": "serial",
											"value": "{{serial}}",
											"description": "(Required) Serial"
										},
										{
											"key": "basePath",
											"value": "{{basePath}}"
										}
									]
								},
								"description": "Reboot a device. This endpoint has a sustained rate limit of one request every 60 seconds."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-Cisco-Meraki-API-Key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/devices/:serial/reboot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":serial",
												"reboot"
											],
											"variable": [
												{
													"key": "serial",
													"value": "<string>",
													"description": "(Required) Serial"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": true\n}"
								}
							]
						}
					]
				},
				{
					"name": "monitor",
					"item": [
						{
							"name": "adaptivePolicy",
							"item": [
								{
									"name": "overview",
									"item": [
										{
											"name": "getOrganizationAdaptivePolicyOverview",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/overview",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"adaptivePolicy",
														"overview"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Returns adaptive policy aggregate statistics for an organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/adaptivePolicy/overview",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"adaptivePolicy",
																"overview"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"counts\": {\n    \"groups\": 10,\n    \"customGroups\": 8,\n    \"customAcls\": 12,\n    \"policies\": 100,\n    \"denyPolicies\": 30,\n    \"allowPolicies\": 70,\n    \"policyObjects\": 13\n  },\n  \"limits\": {\n    \"customGroups\": 60,\n    \"rulesInAnAcl\": 16,\n    \"aclsInAPolicy\": 7,\n    \"policyObjects\": 8000\n  }\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "alerts",
							"item": [
								{
									"name": "history",
									"item": [
										{
											"name": "getNetworkAlertsHistory",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/alerts/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"alerts",
														"history"
													],
													"query": [
														{
															"key": "perPage",
															"value": "{{perPage}}",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.",
															"disabled": true
														},
														{
															"key": "startingAfter",
															"value": "{{startingAfter}}",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "endingBefore",
															"value": "{{endingBefore}}",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the alert history for this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/alerts/history?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"alerts",
																"history"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>"
																},
																{
																	"key": "startingAfter",
																	"value": "<string>"
																},
																{
																	"key": "endingBefore",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Link",
															"value": "Lorem nisi fugiat",
															"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"occurredAt\": \"2022-07-11T22:35:34Z\",\n    \"alertTypeId\": \"settings_changed\",\n    \"alertType\": \"Settings changed\",\n    \"device\": {\n      \"serial\": \"Q3CG-G6W8-BEVR\"\n    },\n    \"destinations\": {\n      \"email\": {\n        \"sentAt\": \"2022-07-11T22:40:34Z\"\n      },\n      \"push\": {\n        \"sentAt\": \"2022-07-11T22:40:34Z\"\n      },\n      \"sms\": {\n        \"sentAt\": \"2022-07-11T22:40:34Z\"\n      },\n      \"webhook\": {\n        \"sentAt\": \"2022-07-11T22:40:34Z\"\n      }\n    }\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "overview",
									"item": [
										{
											"name": "byNetwork",
											"item": [
												{
													"name": "getOrganizationAssuranceAlertsOverviewByNetwork",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/assurance/alerts/overview/byNetwork",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"assurance",
																"alerts",
																"overview",
																"byNetwork"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "sortOrder",
																	"value": "{{sortOrder}}",
																	"description": "Sorted order of entries. Order options are 'ascending' and 'descending'. Default is 'ascending'.",
																	"disabled": true
																},
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "Optional parameter to filter alerts overview by network id.",
																	"disabled": true
																},
																{
																	"key": "severity",
																	"value": "{{severity}}",
																	"description": "Optional parameter to filter alerts overview by severity type.",
																	"disabled": true
																},
																{
																	"key": "types",
																	"value": "{{types}}",
																	"description": "Optional parameter to filter by alert type.",
																	"disabled": true
																},
																{
																	"key": "types",
																	"value": "{{types}}",
																	"description": "Optional parameter to filter by alert type.",
																	"disabled": true
																},
																{
																	"key": "tsStart",
																	"value": "{{tsStart}}",
																	"description": "Optional parameter to filter by starting timestamp",
																	"disabled": true
																},
																{
																	"key": "tsEnd",
																	"value": "{{tsEnd}}",
																	"description": "Optional parameter to filter by end timestamp",
																	"disabled": true
																},
																{
																	"key": "category",
																	"value": "{{category}}",
																	"description": "Optional parameter to filter by category.",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Optional parameter to filter by primary device serial",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Optional parameter to filter by primary device serial",
																	"disabled": true
																},
																{
																	"key": "deviceTypes",
																	"value": "{{deviceTypes}}",
																	"description": "Optional parameter to filter by device types",
																	"disabled": true
																},
																{
																	"key": "deviceTypes",
																	"value": "{{deviceTypes}}",
																	"description": "Optional parameter to filter by device types",
																	"disabled": true
																},
																{
																	"key": "deviceTags",
																	"value": "{{deviceTags}}",
																	"description": "Optional parameter to filter by device tags",
																	"disabled": true
																},
																{
																	"key": "deviceTags",
																	"value": "{{deviceTags}}",
																	"description": "Optional parameter to filter by device tags",
																	"disabled": true
																},
																{
																	"key": "active",
																	"value": "{{active}}",
																	"description": "Optional parameter to filter by active alerts defaults to true",
																	"disabled": true
																},
																{
																	"key": "dismissed",
																	"value": "{{dismissed}}",
																	"description": "Optional parameter to filter by dismissed alerts defaults to false",
																	"disabled": true
																},
																{
																	"key": "resolved",
																	"value": "{{resolved}}",
																	"description": "Optional parameter to filter by resolved alerts defaults to false",
																	"disabled": true
																},
																{
																	"key": "suppressAlertsForOfflineNodes",
																	"value": "{{suppressAlertsForOfflineNodes}}",
																	"description": "When set to true the api will only return connectivity alerts for a given device if that device is in an offline state. This only applies to devices. This is ignored when resolved is true. Example:  If a Switch has a VLan Mismatch and is Unreachable. only the Unreachable alert will be returned. Defaults to false.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return a Summary of Alerts grouped by network and severity"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/assurance/alerts/overview/byNetwork?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&sortOrder=<string>&networkId=<string>&severity=<string>&types=<string>&types=<string>&tsStart=<dateTime>&tsEnd=<dateTime>&category=<string>&serials=<string>&serials=<string>&deviceTypes=<string>&deviceTypes=<string>&deviceTags=<string>&deviceTags=<string>&active=<boolean>&dismissed=<boolean>&resolved=<boolean>&suppressAlertsForOfflineNodes=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"assurance",
																		"alerts",
																		"overview",
																		"byNetwork"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		},
																		{
																			"key": "sortOrder",
																			"value": "<string>"
																		},
																		{
																			"key": "networkId",
																			"value": "<string>"
																		},
																		{
																			"key": "severity",
																			"value": "<string>"
																		},
																		{
																			"key": "types",
																			"value": "<string>"
																		},
																		{
																			"key": "types",
																			"value": "<string>"
																		},
																		{
																			"key": "tsStart",
																			"value": "<dateTime>"
																		},
																		{
																			"key": "tsEnd",
																			"value": "<dateTime>"
																		},
																		{
																			"key": "category",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "deviceTypes",
																			"value": "<string>"
																		},
																		{
																			"key": "deviceTypes",
																			"value": "<string>"
																		},
																		{
																			"key": "deviceTags",
																			"value": "<string>"
																		},
																		{
																			"key": "deviceTags",
																			"value": "<string>"
																		},
																		{
																			"key": "active",
																			"value": "<boolean>"
																		},
																		{
																			"key": "dismissed",
																			"value": "<boolean>"
																		},
																		{
																			"key": "resolved",
																			"value": "<boolean>"
																		},
																		{
																			"key": "suppressAlertsForOfflineNodes",
																			"value": "<boolean>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": [\n    {\n      \"networkId\": \"L_30618\",\n      \"networkName\": \"s01797.us\",\n      \"alertCount\": 3,\n      \"severityCounts\": [\n        {\n          \"type\": \"warning\",\n          \"count\": 3\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": 2\n    }\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "byType",
											"item": [
												{
													"name": "getOrganizationAssuranceAlertsOverviewByType",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/assurance/alerts/overview/byType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"assurance",
																"alerts",
																"overview",
																"byType"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "sortOrder",
																	"value": "{{sortOrder}}",
																	"description": "Sorted order of entries. Order options are 'ascending' and 'descending'. Default is 'ascending'.",
																	"disabled": true
																},
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "Optional parameter to filter alerts overview by network ids.",
																	"disabled": true
																},
																{
																	"key": "severity",
																	"value": "{{severity}}",
																	"description": "Optional parameter to filter alerts overview by severity type.",
																	"disabled": true
																},
																{
																	"key": "types",
																	"value": "{{types}}",
																	"description": "Optional parameter to filter by alert type.",
																	"disabled": true
																},
																{
																	"key": "types",
																	"value": "{{types}}",
																	"description": "Optional parameter to filter by alert type.",
																	"disabled": true
																},
																{
																	"key": "tsStart",
																	"value": "{{tsStart}}",
																	"description": "Optional parameter to filter by starting timestamp",
																	"disabled": true
																},
																{
																	"key": "tsEnd",
																	"value": "{{tsEnd}}",
																	"description": "Optional parameter to filter by end timestamp",
																	"disabled": true
																},
																{
																	"key": "category",
																	"value": "{{category}}",
																	"description": "Optional parameter to filter by category.",
																	"disabled": true
																},
																{
																	"key": "sortBy",
																	"value": "{{sortBy}}",
																	"description": "Optional parameter to set column to sort by.",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Optional parameter to filter by primary device serial",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Optional parameter to filter by primary device serial",
																	"disabled": true
																},
																{
																	"key": "deviceTypes",
																	"value": "{{deviceTypes}}",
																	"description": "Optional parameter to filter by device types",
																	"disabled": true
																},
																{
																	"key": "deviceTypes",
																	"value": "{{deviceTypes}}",
																	"description": "Optional parameter to filter by device types",
																	"disabled": true
																},
																{
																	"key": "deviceTags",
																	"value": "{{deviceTags}}",
																	"description": "Optional parameter to filter by device tags",
																	"disabled": true
																},
																{
																	"key": "deviceTags",
																	"value": "{{deviceTags}}",
																	"description": "Optional parameter to filter by device tags",
																	"disabled": true
																},
																{
																	"key": "active",
																	"value": "{{active}}",
																	"description": "Optional parameter to filter by active alerts defaults to true",
																	"disabled": true
																},
																{
																	"key": "dismissed",
																	"value": "{{dismissed}}",
																	"description": "Optional parameter to filter by dismissed alerts defaults to false",
																	"disabled": true
																},
																{
																	"key": "resolved",
																	"value": "{{resolved}}",
																	"description": "Optional parameter to filter by resolved alerts defaults to false",
																	"disabled": true
																},
																{
																	"key": "suppressAlertsForOfflineNodes",
																	"value": "{{suppressAlertsForOfflineNodes}}",
																	"description": "When set to true the api will only return connectivity alerts for a given device if that device is in an offline state. This only applies to devices. This is ignored when resolved is true. Example:  If a Switch has a VLan Mismatch and is Unreachable. only the Unreachable alert will be returned. Defaults to false.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return a Summary of Alerts grouped by type and severity"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/assurance/alerts/overview/byType?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&sortOrder=<string>&networkId=<string>&severity=<string>&types=<string>&types=<string>&tsStart=<dateTime>&tsEnd=<dateTime>&category=<string>&sortBy=<string>&serials=<string>&serials=<string>&deviceTypes=<string>&deviceTypes=<string>&deviceTags=<string>&deviceTags=<string>&active=<boolean>&dismissed=<boolean>&resolved=<boolean>&suppressAlertsForOfflineNodes=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"assurance",
																		"alerts",
																		"overview",
																		"byType"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		},
																		{
																			"key": "sortOrder",
																			"value": "<string>"
																		},
																		{
																			"key": "networkId",
																			"value": "<string>"
																		},
																		{
																			"key": "severity",
																			"value": "<string>"
																		},
																		{
																			"key": "types",
																			"value": "<string>"
																		},
																		{
																			"key": "types",
																			"value": "<string>"
																		},
																		{
																			"key": "tsStart",
																			"value": "<dateTime>"
																		},
																		{
																			"key": "tsEnd",
																			"value": "<dateTime>"
																		},
																		{
																			"key": "category",
																			"value": "<string>"
																		},
																		{
																			"key": "sortBy",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "deviceTypes",
																			"value": "<string>"
																		},
																		{
																			"key": "deviceTypes",
																			"value": "<string>"
																		},
																		{
																			"key": "deviceTags",
																			"value": "<string>"
																		},
																		{
																			"key": "deviceTags",
																			"value": "<string>"
																		},
																		{
																			"key": "active",
																			"value": "<boolean>"
																		},
																		{
																			"key": "dismissed",
																			"value": "<boolean>"
																		},
																		{
																			"key": "resolved",
																			"value": "<boolean>"
																		},
																		{
																			"key": "suppressAlertsForOfflineNodes",
																			"value": "<boolean>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": [\n    {\n      \"type\": \"vlan_mismatch\",\n      \"count\": 3\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": 4\n    }\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "historical",
											"item": [
												{
													"name": "getOrganizationAssuranceAlertsOverviewHistorical",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/assurance/alerts/overview/historical",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"assurance",
																"alerts",
																"overview",
																"historical"
															],
															"query": [
																{
																	"key": "segmentDuration",
																	"value": "{{segmentDuration}}",
																	"description": "(Required) Amount of time in seconds for each segment in the returned dataset",
																	"disabled": true
																},
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "Optional parameter to filter alerts overview by network ids.",
																	"disabled": true
																},
																{
																	"key": "severity",
																	"value": "{{severity}}",
																	"description": "Optional parameter to filter alerts overview by severity type.",
																	"disabled": true
																},
																{
																	"key": "types",
																	"value": "{{types}}",
																	"description": "Optional parameter to filter by alert type.",
																	"disabled": true
																},
																{
																	"key": "types",
																	"value": "{{types}}",
																	"description": "Optional parameter to filter by alert type.",
																	"disabled": true
																},
																{
																	"key": "tsStart",
																	"value": "{{tsStart}}",
																	"description": "(Required) Parameter to define starting timestamp of historical totals",
																	"disabled": true
																},
																{
																	"key": "tsEnd",
																	"value": "{{tsEnd}}",
																	"description": "Optional parameter to filter by end timestamp defaults to the current time",
																	"disabled": true
																},
																{
																	"key": "category",
																	"value": "{{category}}",
																	"description": "Optional parameter to filter by category.",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Optional parameter to filter by primary device serial",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Optional parameter to filter by primary device serial",
																	"disabled": true
																},
																{
																	"key": "deviceTypes",
																	"value": "{{deviceTypes}}",
																	"description": "Optional parameter to filter by device types",
																	"disabled": true
																},
																{
																	"key": "deviceTypes",
																	"value": "{{deviceTypes}}",
																	"description": "Optional parameter to filter by device types",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Returns historical health alert overviews"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/assurance/alerts/overview/historical?segmentDuration=<integer>&networkId=<string>&severity=<string>&types=<string>&types=<string>&tsStart=<dateTime>&tsEnd=<dateTime>&category=<string>&serials=<string>&serials=<string>&deviceTypes=<string>&deviceTypes=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"assurance",
																		"alerts",
																		"overview",
																		"historical"
																	],
																	"query": [
																		{
																			"key": "segmentDuration",
																			"value": "<integer>"
																		},
																		{
																			"key": "networkId",
																			"value": "<string>"
																		},
																		{
																			"key": "severity",
																			"value": "<string>"
																		},
																		{
																			"key": "types",
																			"value": "<string>"
																		},
																		{
																			"key": "types",
																			"value": "<string>"
																		},
																		{
																			"key": "tsStart",
																			"value": "<dateTime>"
																		},
																		{
																			"key": "tsEnd",
																			"value": "<dateTime>"
																		},
																		{
																			"key": "category",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "deviceTypes",
																			"value": "<string>"
																		},
																		{
																			"key": "deviceTypes",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": [\n    {\n      \"segmentStart\": \"2018-02-11T00:00:00Z\",\n      \"totals\": {\n        \"informational\": 1,\n        \"warning\": 1,\n        \"critical\": 1\n      },\n      \"byAlertType\": [\n        {\n          \"type\": \"vlan_mismatch\",\n          \"informational\": 1,\n          \"warning\": 1,\n          \"critical\": 1\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": 4\n    }\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "getOrganizationAssuranceAlertsOverview",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/assurance/alerts/overview",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"assurance",
														"alerts",
														"overview"
													],
													"query": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "Optional parameter to filter alerts overview by network ids.",
															"disabled": true
														},
														{
															"key": "severity",
															"value": "{{severity}}",
															"description": "Optional parameter to filter alerts overview by severity type.",
															"disabled": true
														},
														{
															"key": "types",
															"value": "{{types}}",
															"description": "Optional parameter to filter by alert type.",
															"disabled": true
														},
														{
															"key": "types",
															"value": "{{types}}",
															"description": "Optional parameter to filter by alert type.",
															"disabled": true
														},
														{
															"key": "tsStart",
															"value": "{{tsStart}}",
															"description": "Optional parameter to filter by starting timestamp",
															"disabled": true
														},
														{
															"key": "tsEnd",
															"value": "{{tsEnd}}",
															"description": "Optional parameter to filter by end timestamp",
															"disabled": true
														},
														{
															"key": "category",
															"value": "{{category}}",
															"description": "Optional parameter to filter by category.",
															"disabled": true
														},
														{
															"key": "serials",
															"value": "{{serials}}",
															"description": "Optional parameter to filter by primary device serial",
															"disabled": true
														},
														{
															"key": "serials",
															"value": "{{serials}}",
															"description": "Optional parameter to filter by primary device serial",
															"disabled": true
														},
														{
															"key": "deviceTypes",
															"value": "{{deviceTypes}}",
															"description": "Optional parameter to filter by device types",
															"disabled": true
														},
														{
															"key": "deviceTypes",
															"value": "{{deviceTypes}}",
															"description": "Optional parameter to filter by device types",
															"disabled": true
														},
														{
															"key": "deviceTags",
															"value": "{{deviceTags}}",
															"description": "Optional parameter to filter by device tags",
															"disabled": true
														},
														{
															"key": "deviceTags",
															"value": "{{deviceTags}}",
															"description": "Optional parameter to filter by device tags",
															"disabled": true
														},
														{
															"key": "active",
															"value": "{{active}}",
															"description": "Optional parameter to filter by active alerts defaults to true",
															"disabled": true
														},
														{
															"key": "dismissed",
															"value": "{{dismissed}}",
															"description": "Optional parameter to filter by dismissed alerts defaults to false",
															"disabled": true
														},
														{
															"key": "resolved",
															"value": "{{resolved}}",
															"description": "Optional parameter to filter by resolved alerts defaults to false",
															"disabled": true
														},
														{
															"key": "suppressAlertsForOfflineNodes",
															"value": "{{suppressAlertsForOfflineNodes}}",
															"description": "When set to true the api will only return connectivity alerts for a given device if that device is in an offline state. This only applies to devices. This is ignored when resolved is true. Example:  If a Switch has a VLan Mismatch and is Unreachable. only the Unreachable alert will be returned. Defaults to false.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return overview of active health alerts for an organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/assurance/alerts/overview?networkId=<string>&severity=<string>&types=<string>&types=<string>&tsStart=<dateTime>&tsEnd=<dateTime>&category=<string>&serials=<string>&serials=<string>&deviceTypes=<string>&deviceTypes=<string>&deviceTags=<string>&deviceTags=<string>&active=<boolean>&dismissed=<boolean>&resolved=<boolean>&suppressAlertsForOfflineNodes=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"assurance",
																"alerts",
																"overview"
															],
															"query": [
																{
																	"key": "networkId",
																	"value": "<string>"
																},
																{
																	"key": "severity",
																	"value": "<string>"
																},
																{
																	"key": "types",
																	"value": "<string>"
																},
																{
																	"key": "types",
																	"value": "<string>"
																},
																{
																	"key": "tsStart",
																	"value": "<dateTime>"
																},
																{
																	"key": "tsEnd",
																	"value": "<dateTime>"
																},
																{
																	"key": "category",
																	"value": "<string>"
																},
																{
																	"key": "serials",
																	"value": "<string>"
																},
																{
																	"key": "serials",
																	"value": "<string>"
																},
																{
																	"key": "deviceTypes",
																	"value": "<string>"
																},
																{
																	"key": "deviceTypes",
																	"value": "<string>"
																},
																{
																	"key": "deviceTags",
																	"value": "<string>"
																},
																{
																	"key": "deviceTags",
																	"value": "<string>"
																},
																{
																	"key": "active",
																	"value": "<boolean>"
																},
																{
																	"key": "dismissed",
																	"value": "<boolean>"
																},
																{
																	"key": "resolved",
																	"value": "<boolean>"
																},
																{
																	"key": "suppressAlertsForOfflineNodes",
																	"value": "<boolean>"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"counts\": {\n    \"total\": 14,\n    \"bySeverity\": [\n      {\n        \"type\": \"critical\",\n        \"count\": 1\n      }\n    ]\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "dismissOrganizationAssuranceAlerts",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"alertIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/assurance/alerts/dismiss",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"assurance",
												"alerts",
												"dismiss"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Dismiss health alerts"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"alertIds\": [\n    \"1234\",\n    \"4567\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/assurance/alerts/dismiss",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"assurance",
														"alerts",
														"dismiss"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "getOrganizationAssuranceAlert",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/assurance/alerts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"assurance",
												"alerts",
												":id"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "id",
													"value": "",
													"description": "(Required) ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return a singular Health Alert by its id"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/assurance/alerts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"assurance",
														"alerts",
														":id"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1234\",\n  \"categoryType\": \"connectivity\",\n  \"network\": {\n    \"name\": \"Network 2\",\n    \"id\": \"L_1020981\"\n  },\n  \"startedAt\": \"2022-04-01T15:48:57Z\",\n  \"resolvedAt\": \"2022-04-02T15:48:57Z\",\n  \"dismissedAt\": \"2022-04-02T15:48:57Z\",\n  \"deviceType\": \"MS\",\n  \"type\": \"crc_errors_error\",\n  \"title\": \"CRC errors detected\",\n  \"description\": \"Very high proportion of CRC errors on port id\",\n  \"severity\": \"warning\",\n  \"scope\": {\n    \"devices\": [\n      {\n        \"url\": \"https://n237.meraki.com/MS-PM-First-Floo/n/_5kUKaTd/manage/nodes/new_list/7911238\",\n        \"name\": \"Device 1\",\n        \"order\": 0,\n        \"productType\": \"switch\",\n        \"serial\": \"Q2QP-5VYM-YM8H\",\n        \"mac\": \"aa:bb:cd:dd\",\n        \"imei\": \"353593090031649\",\n        \"lldp\": {\n          \"port\": \"33\"\n        }\n      }\n    ]\n  }\n}"
										}
									]
								},
								{
									"name": "getOrganizationAssuranceAlerts",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/assurance/alerts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"assurance",
												"alerts"
											],
											"query": [
												{
													"key": "perPage",
													"value": "{{perPage}}",
													"description": "The number of entries per page returned. Acceptable range is 4 - 300. Default is 30.",
													"disabled": true
												},
												{
													"key": "startingAfter",
													"value": "{{startingAfter}}",
													"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
													"disabled": true
												},
												{
													"key": "endingBefore",
													"value": "{{endingBefore}}",
													"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
													"disabled": true
												},
												{
													"key": "sortOrder",
													"value": "{{sortOrder}}",
													"description": "Sorted order of entries. Order options are 'ascending' and 'descending'. Default is 'ascending'.",
													"disabled": true
												},
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "Optional parameter to filter alerts by network ids.",
													"disabled": true
												},
												{
													"key": "severity",
													"value": "{{severity}}",
													"description": "Optional parameter to filter by severity type.",
													"disabled": true
												},
												{
													"key": "types",
													"value": "{{types}}",
													"description": "Optional parameter to filter by alert type.",
													"disabled": true
												},
												{
													"key": "types",
													"value": "{{types}}",
													"description": "Optional parameter to filter by alert type.",
													"disabled": true
												},
												{
													"key": "tsStart",
													"value": "{{tsStart}}",
													"description": "Optional parameter to filter by starting timestamp",
													"disabled": true
												},
												{
													"key": "tsEnd",
													"value": "{{tsEnd}}",
													"description": "Optional parameter to filter by end timestamp",
													"disabled": true
												},
												{
													"key": "category",
													"value": "{{category}}",
													"description": "Optional parameter to filter by category.",
													"disabled": true
												},
												{
													"key": "sortBy",
													"value": "{{sortBy}}",
													"description": "Optional parameter to set column to sort by.",
													"disabled": true
												},
												{
													"key": "serials",
													"value": "{{serials}}",
													"description": "Optional parameter to filter by primary device serial",
													"disabled": true
												},
												{
													"key": "serials",
													"value": "{{serials}}",
													"description": "Optional parameter to filter by primary device serial",
													"disabled": true
												},
												{
													"key": "deviceTypes",
													"value": "{{deviceTypes}}",
													"description": "Optional parameter to filter by device types",
													"disabled": true
												},
												{
													"key": "deviceTypes",
													"value": "{{deviceTypes}}",
													"description": "Optional parameter to filter by device types",
													"disabled": true
												},
												{
													"key": "deviceTags",
													"value": "{{deviceTags}}",
													"description": "Optional parameter to filter by device tags",
													"disabled": true
												},
												{
													"key": "deviceTags",
													"value": "{{deviceTags}}",
													"description": "Optional parameter to filter by device tags",
													"disabled": true
												},
												{
													"key": "active",
													"value": "{{active}}",
													"description": "Optional parameter to filter by active alerts defaults to true",
													"disabled": true
												},
												{
													"key": "dismissed",
													"value": "{{dismissed}}",
													"description": "Optional parameter to filter by dismissed alerts defaults to false",
													"disabled": true
												},
												{
													"key": "resolved",
													"value": "{{resolved}}",
													"description": "Optional parameter to filter by resolved alerts defaults to false",
													"disabled": true
												},
												{
													"key": "suppressAlertsForOfflineNodes",
													"value": "{{suppressAlertsForOfflineNodes}}",
													"description": "When set to true the api will only return connectivity alerts for a given device if that device is in an offline state. This only applies to devices. This is ignored when resolved is true. Example:  If a Switch has a VLan Mismatch and is Unreachable. only the Unreachable alert will be returned. Defaults to false.",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return all health alerts for an organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/assurance/alerts?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&sortOrder=<string>&networkId=<string>&severity=<string>&types=<string>&types=<string>&tsStart=<dateTime>&tsEnd=<dateTime>&category=<string>&sortBy=<string>&serials=<string>&serials=<string>&deviceTypes=<string>&deviceTypes=<string>&deviceTags=<string>&deviceTags=<string>&active=<boolean>&dismissed=<boolean>&resolved=<boolean>&suppressAlertsForOfflineNodes=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"assurance",
														"alerts"
													],
													"query": [
														{
															"key": "perPage",
															"value": "<integer>"
														},
														{
															"key": "startingAfter",
															"value": "<string>"
														},
														{
															"key": "endingBefore",
															"value": "<string>"
														},
														{
															"key": "sortOrder",
															"value": "<string>"
														},
														{
															"key": "networkId",
															"value": "<string>"
														},
														{
															"key": "severity",
															"value": "<string>"
														},
														{
															"key": "types",
															"value": "<string>"
														},
														{
															"key": "types",
															"value": "<string>"
														},
														{
															"key": "tsStart",
															"value": "<dateTime>"
														},
														{
															"key": "tsEnd",
															"value": "<dateTime>"
														},
														{
															"key": "category",
															"value": "<string>"
														},
														{
															"key": "sortBy",
															"value": "<string>"
														},
														{
															"key": "serials",
															"value": "<string>"
														},
														{
															"key": "serials",
															"value": "<string>"
														},
														{
															"key": "deviceTypes",
															"value": "<string>"
														},
														{
															"key": "deviceTypes",
															"value": "<string>"
														},
														{
															"key": "deviceTags",
															"value": "<string>"
														},
														{
															"key": "deviceTags",
															"value": "<string>"
														},
														{
															"key": "active",
															"value": "<boolean>"
														},
														{
															"key": "dismissed",
															"value": "<boolean>"
														},
														{
															"key": "resolved",
															"value": "<boolean>"
														},
														{
															"key": "suppressAlertsForOfflineNodes",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Link",
													"value": "Lorem nisi fugiat",
													"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"1234\",\n    \"categoryType\": \"connectivity\",\n    \"network\": {\n      \"name\": \"Network 2\",\n      \"id\": \"L_1020981\"\n    },\n    \"startedAt\": \"2022-04-01T15:48:57Z\",\n    \"resolvedAt\": \"2022-04-02T15:48:57Z\",\n    \"dismissedAt\": \"2022-04-02T15:48:57Z\",\n    \"deviceType\": \"MS\",\n    \"type\": \"crc_errors_error\",\n    \"title\": \"CRC errors detected\",\n    \"description\": \"Very high proportion of CRC errors on port id\",\n    \"severity\": \"warning\",\n    \"scope\": {\n      \"devices\": [\n        {\n          \"url\": \"https://n237.meraki.com/MS-PM-First-Floo/n/_5kUKaTd/manage/nodes/new_list/7911238\",\n          \"name\": \"Device 1\",\n          \"order\": 0,\n          \"productType\": \"switch\",\n          \"serial\": \"Q2QP-5VYM-YM8H\",\n          \"mac\": \"aa:bb:cd:dd\",\n          \"imei\": \"353593090031649\",\n          \"lldp\": {\n            \"port\": \"33\"\n          }\n        }\n      ]\n    }\n  }\n]"
										}
									]
								},
								{
									"name": "restoreOrganizationAssuranceAlerts",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"alertIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/assurance/alerts/restore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"assurance",
												"alerts",
												"restore"
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Restore health alerts from dismissed"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"alertIds\": [\n    \"1234\",\n    \"4567\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/assurance/alerts/restore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"assurance",
														"alerts",
														"restore"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "apiRequests",
							"item": [
								{
									"name": "overview",
									"item": [
										{
											"name": "responseCodes",
											"item": [
												{
													"name": "byInterval",
													"item": [
														{
															"name": "getOrganizationApiRequestsOverviewResponseCodesByInterval",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/apiRequests/overview/responseCodes/byInterval",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"apiRequests",
																		"overview",
																		"responseCodes",
																		"byInterval"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "{{t0}}",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
																			"disabled": true
																		},
																		{
																			"key": "t1",
																			"value": "{{t1}}",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
																			"disabled": true
																		},
																		{
																			"key": "timespan",
																			"value": "{{timespan}}",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days. If interval is provided, the timespan will be autocalculated.",
																			"disabled": true
																		},
																		{
																			"key": "interval",
																			"value": "{{interval}}",
																			"description": "The time interval in seconds for returned data. The valid intervals are: 120, 3600, 14400, 21600. The default is 21600. Interval is calculated if time params are provided.",
																			"disabled": true
																		},
																		{
																			"key": "version",
																			"value": "{{version}}",
																			"description": "Filter by API version of the endpoint. Allowable values are: [0, 1]",
																			"disabled": true
																		},
																		{
																			"key": "operationIds",
																			"value": "{{operationIds}}",
																			"description": "Filter by operation ID of the endpoint",
																			"disabled": true
																		},
																		{
																			"key": "operationIds",
																			"value": "{{operationIds}}",
																			"description": "Filter by operation ID of the endpoint",
																			"disabled": true
																		},
																		{
																			"key": "sourceIps",
																			"value": "{{sourceIps}}",
																			"description": "Filter by source IP that made the API request",
																			"disabled": true
																		},
																		{
																			"key": "sourceIps",
																			"value": "{{sourceIps}}",
																			"description": "Filter by source IP that made the API request",
																			"disabled": true
																		},
																		{
																			"key": "adminIds",
																			"value": "{{adminIds}}",
																			"description": "Filter by admin ID of user that made the API request",
																			"disabled": true
																		},
																		{
																			"key": "adminIds",
																			"value": "{{adminIds}}",
																			"description": "Filter by admin ID of user that made the API request",
																			"disabled": true
																		},
																		{
																			"key": "userAgent",
																			"value": "{{userAgent}}",
																			"description": "Filter by user agent string for API request. This will filter by a complete or partial match.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Tracks organizations' API requests by response code across a given time period"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/apiRequests/overview/responseCodes/byInterval?t0=<string>&t1=<string>&timespan=<float>&interval=<integer>&version=<integer>&operationIds=<string>&operationIds=<string>&sourceIps=<string>&sourceIps=<string>&adminIds=<string>&adminIds=<string>&userAgent=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"apiRequests",
																				"overview",
																				"responseCodes",
																				"byInterval"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>"
																				},
																				{
																					"key": "t1",
																					"value": "<string>"
																				},
																				{
																					"key": "timespan",
																					"value": "<float>"
																				},
																				{
																					"key": "interval",
																					"value": "<integer>"
																				},
																				{
																					"key": "version",
																					"value": "<integer>"
																				},
																				{
																					"key": "operationIds",
																					"value": "<string>"
																				},
																				{
																					"key": "operationIds",
																					"value": "<string>"
																				},
																				{
																					"key": "sourceIps",
																					"value": "<string>"
																				},
																				{
																					"key": "sourceIps",
																					"value": "<string>"
																				},
																				{
																					"key": "adminIds",
																					"value": "<string>"
																				},
																				{
																					"key": "adminIds",
																					"value": "<string>"
																				},
																				{
																					"key": "userAgent",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"startTs\": \"2018-02-11T00:00:00Z\",\n    \"endTs\": \"2018-05-12T00:00:00Z\",\n    \"counts\": [\n      {\n        \"code\": 200,\n        \"count\": 198938\n      }\n    ]\n  }\n]"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "getOrganizationApiRequestsOverview",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/apiRequests/overview",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"apiRequests",
														"overview"
													],
													"query": [
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
															"disabled": true
														},
														{
															"key": "t1",
															"value": "{{t1}}",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return an aggregated overview of API requests data"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/apiRequests/overview?t0=<string>&t1=<string>&timespan=<float>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"apiRequests",
																"overview"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "t1",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"responseCodeCounts\": {\n    \"200\": 500,\n    \"201\": 100,\n    \"202\": 20,\n    \"203\": 50,\n    \"204\": 75,\n    \"205\": 0,\n    \"206\": 0,\n    \"207\": 0,\n    \"208\": 0,\n    \"226\": 0,\n    \"300\": 0,\n    \"301\": 60,\n    \"302\": 0,\n    \"303\": 0,\n    \"304\": 0,\n    \"305\": 0,\n    \"306\": 0,\n    \"307\": 0,\n    \"308\": 0,\n    \"400\": 20,\n    \"401\": 0,\n    \"402\": 32,\n    \"403\": 0,\n    \"404\": 55,\n    \"405\": 0,\n    \"406\": 0,\n    \"407\": 0,\n    \"408\": 0,\n    \"409\": 0,\n    \"410\": 0,\n    \"411\": 0,\n    \"412\": 0,\n    \"413\": 0,\n    \"414\": 0,\n    \"415\": 0,\n    \"416\": 0,\n    \"417\": 0,\n    \"421\": 0,\n    \"422\": 0,\n    \"423\": 0,\n    \"424\": 0,\n    \"425\": 0,\n    \"426\": 0,\n    \"428\": 0,\n    \"429\": 0,\n    \"431\": 0,\n    \"451\": 0,\n    \"500\": 3\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "getOrganizationApiRequests",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/apiRequests",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"apiRequests"
											],
											"query": [
												{
													"key": "t0",
													"value": "{{t0}}",
													"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
													"disabled": true
												},
												{
													"key": "t1",
													"value": "{{t1}}",
													"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
													"disabled": true
												},
												{
													"key": "timespan",
													"value": "{{timespan}}",
													"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days.",
													"disabled": true
												},
												{
													"key": "perPage",
													"value": "{{perPage}}",
													"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.",
													"disabled": true
												},
												{
													"key": "startingAfter",
													"value": "{{startingAfter}}",
													"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
													"disabled": true
												},
												{
													"key": "endingBefore",
													"value": "{{endingBefore}}",
													"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
													"disabled": true
												},
												{
													"key": "adminId",
													"value": "{{adminId}}",
													"description": "Filter the results by the ID of the admin who made the API requests",
													"disabled": true
												},
												{
													"key": "path",
													"value": "{{path}}",
													"description": "Filter the results by the path of the API requests",
													"disabled": true
												},
												{
													"key": "method",
													"value": "{{method}}",
													"description": "Filter the results by the method of the API requests (must be 'GET', 'PUT', 'POST' or 'DELETE')",
													"disabled": true
												},
												{
													"key": "responseCode",
													"value": "{{responseCode}}",
													"description": "Filter the results by the response code of the API requests",
													"disabled": true
												},
												{
													"key": "sourceIp",
													"value": "{{sourceIp}}",
													"description": "Filter the results by the IP address of the originating API request",
													"disabled": true
												},
												{
													"key": "userAgent",
													"value": "{{userAgent}}",
													"description": "Filter the results by the user agent string of the API request",
													"disabled": true
												},
												{
													"key": "version",
													"value": "{{version}}",
													"description": "Filter the results by the API version of the API request",
													"disabled": true
												},
												{
													"key": "operationIds",
													"value": "{{operationIds}}",
													"description": "Filter the results by one or more operation IDs for the API request",
													"disabled": true
												},
												{
													"key": "operationIds",
													"value": "{{operationIds}}",
													"description": "Filter the results by one or more operation IDs for the API request",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "List the API requests made by an organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/apiRequests?t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&adminId=<string>&path=<string>&method=<string>&responseCode=<integer>&sourceIp=<string>&userAgent=<string>&version=<integer>&operationIds=<string>&operationIds=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"apiRequests"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>"
														},
														{
															"key": "t1",
															"value": "<string>"
														},
														{
															"key": "timespan",
															"value": "<float>"
														},
														{
															"key": "perPage",
															"value": "<integer>"
														},
														{
															"key": "startingAfter",
															"value": "<string>"
														},
														{
															"key": "endingBefore",
															"value": "<string>"
														},
														{
															"key": "adminId",
															"value": "<string>"
														},
														{
															"key": "path",
															"value": "<string>"
														},
														{
															"key": "method",
															"value": "<string>"
														},
														{
															"key": "responseCode",
															"value": "<integer>"
														},
														{
															"key": "sourceIp",
															"value": "<string>"
														},
														{
															"key": "userAgent",
															"value": "<string>"
														},
														{
															"key": "version",
															"value": "<integer>"
														},
														{
															"key": "operationIds",
															"value": "<string>"
														},
														{
															"key": "operationIds",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Link",
													"value": "Lorem nisi fugiat",
													"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"adminId\": \"212406\",\n    \"method\": \"GET\",\n    \"host\": \"server.example.com\",\n    \"path\": \"/api/v1/organizations/12345/apiRequests\",\n    \"queryString\": \"timespan=604800\",\n    \"userAgent\": \"PostmanRuntime/7.6.0\",\n    \"ts\": \"2018-02-11T00:00:00.090210Z\",\n    \"responseCode\": 200,\n    \"sourceIp\": \"123.123.123.1\",\n    \"version\": 1,\n    \"operationId\": \"getOrganizationApiRequests\",\n    \"client\": {\n      \"id\": \"0hoXjtjX6C-Nk4Nr6kEbCJJFRmIgycaG1HBE572hlIc\",\n      \"type\": \"oauth\"\n    }\n  }\n]"
										}
									]
								}
							]
						},
						{
							"name": "bluetoothClients",
							"item": [
								{
									"name": "getNetworkBluetoothClient",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/bluetoothClients/:bluetoothClientId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"bluetoothClients",
												":bluetoothClientId"
											],
											"query": [
												{
													"key": "includeConnectivityHistory",
													"value": "{{includeConnectivityHistory}}",
													"description": "Include the connectivity history for this client",
													"disabled": true
												},
												{
													"key": "connectivityHistoryTimespan",
													"value": "{{connectivityHistoryTimespan}}",
													"description": "The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used.",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "bluetoothClientId",
													"value": "{{bluetoothClientId}}",
													"description": "(Required) Bluetooth client ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/bluetoothClients/:bluetoothClientId?includeConnectivityHistory=<boolean>&connectivityHistoryTimespan=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"bluetoothClients",
														":bluetoothClientId"
													],
													"query": [
														{
															"key": "includeConnectivityHistory",
															"value": "<boolean>"
														},
														{
															"key": "connectivityHistoryTimespan",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "bluetoothClientId",
															"value": "<string>",
															"description": "(Required) Bluetooth client ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1284392014819\",\n  \"mac\": \"22:33:44:55:66:77\",\n  \"networkId\": \"N_24329156\",\n  \"name\": \"My Device\",\n  \"deviceName\": \"Bose QuietComfort 35\",\n  \"manufacturer\": \"Bose\",\n  \"lastSeen\": 1526087474,\n  \"seenByDeviceMac\": \"00:11:22:33:44:55\",\n  \"inSightAlert\": false,\n  \"outOfSightAlert\": false,\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ]\n}"
										}
									]
								},
								{
									"name": "getNetworkBluetoothClients",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/bluetoothClients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"bluetoothClients"
											],
											"query": [
												{
													"key": "t0",
													"value": "{{t0}}",
													"description": "The beginning of the timespan for the data. The maximum lookback period is 7 days from today.",
													"disabled": true
												},
												{
													"key": "timespan",
													"value": "{{timespan}}",
													"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day.",
													"disabled": true
												},
												{
													"key": "perPage",
													"value": "{{perPage}}",
													"description": "The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10.",
													"disabled": true
												},
												{
													"key": "startingAfter",
													"value": "{{startingAfter}}",
													"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
													"disabled": true
												},
												{
													"key": "endingBefore",
													"value": "{{endingBefore}}",
													"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
													"disabled": true
												},
												{
													"key": "includeConnectivityHistory",
													"value": "{{includeConnectivityHistory}}",
													"description": "Include the connectivity history for this client",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "List the Bluetooth clients seen by APs in this network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/bluetoothClients?t0=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&includeConnectivityHistory=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"bluetoothClients"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>"
														},
														{
															"key": "timespan",
															"value": "<float>"
														},
														{
															"key": "perPage",
															"value": "<integer>"
														},
														{
															"key": "startingAfter",
															"value": "<string>"
														},
														{
															"key": "endingBefore",
															"value": "<string>"
														},
														{
															"key": "includeConnectivityHistory",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Link",
													"value": "Lorem nisi fugiat",
													"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"1284392014819\",\n    \"mac\": \"22:33:44:55:66:77\",\n    \"networkId\": \"N_24329156\",\n    \"name\": \"My Device\",\n    \"deviceName\": \"Bose QuietComfort 35\",\n    \"manufacturer\": \"Bose\",\n    \"lastSeen\": 1526087474,\n    \"seenByDeviceMac\": \"00:11:22:33:44:55\",\n    \"inSightAlert\": false,\n    \"outOfSightAlert\": false,\n    \"tags\": [\n      \"tag1\",\n      \"tag2\"\n    ]\n  }\n]"
										}
									]
								}
							]
						},
						{
							"name": "clients",
							"item": [
								{
									"name": "applicationUsage",
									"item": [
										{
											"name": "getNetworkClientsApplicationUsage",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/clients/applicationUsage",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"clients",
														"applicationUsage"
													],
													"query": [
														{
															"key": "clients",
															"value": "{{clients}}",
															"description": "(Required) A list of client keys, MACs or IPs separated by comma.",
															"disabled": true
														},
														{
															"key": "ssidNumber",
															"value": "{{ssidNumber}}",
															"description": "An SSID number to include. If not specified, eveusage histories application usagents for all SSIDs will be returned.",
															"disabled": true
														},
														{
															"key": "perPage",
															"value": "{{perPage}}",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000.",
															"disabled": true
														},
														{
															"key": "startingAfter",
															"value": "{{startingAfter}}",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "endingBefore",
															"value": "{{endingBefore}}",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
															"disabled": true
														},
														{
															"key": "t1",
															"value": "{{t1}}",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the application usage data for clients. Usage data is in kilobytes. Clients can be identified by client keys or either the MACs or IPs depending on whether the network uses Track-by-IP."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/clients/applicationUsage?clients=<string>&ssidNumber=<integer>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"clients",
																"applicationUsage"
															],
															"query": [
																{
																	"key": "clients",
																	"value": "<string>"
																},
																{
																	"key": "ssidNumber",
																	"value": "<integer>"
																},
																{
																	"key": "perPage",
																	"value": "<integer>"
																},
																{
																	"key": "startingAfter",
																	"value": "<string>"
																},
																{
																	"key": "endingBefore",
																	"value": "<string>"
																},
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "t1",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Link",
															"value": "Lorem nisi fugiat",
															"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"clientId\": \"k74272e\",\n    \"clientIp\": \"1.2.3.4\",\n    \"clientMac\": \"00:11:22:33:44:55\",\n    \"applicationUsage\": [\n      {\n        \"application\": \"Google\",\n        \"recv\": 383,\n        \"sent\": 56\n      }\n    ]\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "bandwidthUsageHistory",
									"item": [
										{
											"name": "getNetworkClientsBandwidthUsageHistory",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/clients/bandwidthUsageHistory",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"clients",
														"bandwidthUsageHistory"
													],
													"query": [
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 30 days from today.",
															"disabled": true
														},
														{
															"key": "t1",
															"value": "{{t1}}",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
															"disabled": true
														},
														{
															"key": "perPage",
															"value": "{{perPage}}",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
															"disabled": true
														},
														{
															"key": "startingAfter",
															"value": "{{startingAfter}}",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "endingBefore",
															"value": "{{endingBefore}}",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Returns a timeseries of total traffic consumption rates for all clients on a network within a given timespan, in megabits per second."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/clients/bandwidthUsageHistory?t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"clients",
																"bandwidthUsageHistory"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "t1",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																},
																{
																	"key": "perPage",
																	"value": "<integer>"
																},
																{
																	"key": "startingAfter",
																	"value": "<string>"
																},
																{
																	"key": "endingBefore",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Link",
															"value": "Lorem nisi fugiat",
															"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"ts\": \"2018-02-11T00:00:00.090210Z\",\n    \"total\": 345,\n    \"upstream\": 200,\n    \"downstream\": 145\n  }\n]"
												}
											]
										},
										{
											"name": "getOrganizationClientsBandwidthUsageHistory",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/clients/bandwidthUsageHistory",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"clients",
														"bandwidthUsageHistory"
													],
													"query": [
														{
															"key": "networkTag",
															"value": "{{networkTag}}",
															"description": "Match result to an exact network tag",
															"disabled": true
														},
														{
															"key": "deviceTag",
															"value": "{{deviceTag}}",
															"description": "Match result to an exact device tag",
															"disabled": true
														},
														{
															"key": "ssidName",
															"value": "{{ssidName}}",
															"description": "Filter results by ssid name",
															"disabled": true
														},
														{
															"key": "usageUplink",
															"value": "{{usageUplink}}",
															"description": "Filter results by usage uplink",
															"disabled": true
														},
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data.",
															"disabled": true
														},
														{
															"key": "t1",
															"value": "{{t1}}",
															"description": "The end of the timespan for the data. t1 can be a maximum of 186 days after t0.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 186 days. The default is 1 day.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return data usage (in megabits per second) over time for all clients in the given organization within a given time range."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/clients/bandwidthUsageHistory?networkTag=<string>&deviceTag=<string>&ssidName=<string>&usageUplink=<string>&t0=<string>&t1=<string>&timespan=<float>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"clients",
																"bandwidthUsageHistory"
															],
															"query": [
																{
																	"key": "networkTag",
																	"value": "<string>"
																},
																{
																	"key": "deviceTag",
																	"value": "<string>"
																},
																{
																	"key": "ssidName",
																	"value": "<string>"
																},
																{
																	"key": "usageUplink",
																	"value": "<string>"
																},
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "t1",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"ts\": \"2021-06-20T01:00:00.000Z\",\n    \"total\": 345,\n    \"upstream\": 60,\n    \"downstream\": 285\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "overview",
									"item": [
										{
											"name": "getNetworkClientsOverview",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/clients/overview",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"clients",
														"overview"
													],
													"query": [
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
															"disabled": true
														},
														{
															"key": "t1",
															"value": "{{t1}}",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
															"disabled": true
														},
														{
															"key": "resolution",
															"value": "{{resolution}}",
															"description": "The time resolution in seconds for returned data. The valid resolutions are: 7200, 86400, 604800, 2592000. The default is 604800.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return overview statistics for network clients"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/clients/overview?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"clients",
																"overview"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "t1",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																},
																{
																	"key": "resolution",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"counts\": {\n    \"total\": 100,\n    \"withHeavyUsage\": 2\n  },\n  \"usages\": {\n    \"average\": 2048,\n    \"withHeavyUsageAverage\": 5345\n  }\n}"
												}
											]
										},
										{
											"name": "getOrganizationClientsOverview",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/clients/overview",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"clients",
														"overview"
													],
													"query": [
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data.",
															"disabled": true
														},
														{
															"key": "t1",
															"value": "{{t1}}",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return summary information around client data usage (in kb) across the given organization."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/clients/overview?t0=<string>&t1=<string>&timespan=<float>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"clients",
																"overview"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "t1",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"usage\": {\n    \"overall\": {\n      \"total\": 18000,\n      \"downstream\": 10000,\n      \"upstream\": 8000\n    },\n    \"average\": 1.37\n  },\n  \"counts\": {\n    \"total\": 20\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "trafficHistory",
									"item": [
										{
											"name": "getNetworkClientTrafficHistory",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/trafficHistory",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"clients",
														":clientId",
														"trafficHistory"
													],
													"query": [
														{
															"key": "perPage",
															"value": "{{perPage}}",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000.",
															"disabled": true
														},
														{
															"key": "startingAfter",
															"value": "{{startingAfter}}",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "endingBefore",
															"value": "{{endingBefore}}",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "clientId",
															"value": "{{clientId}}",
															"description": "(Required) Client ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the client's network traffic data over time. Usage data is in kilobytes. This endpoint requires detailed traffic analysis to be enabled on the Network-wide > General page. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/trafficHistory?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"clients",
																":clientId",
																"trafficHistory"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>"
																},
																{
																	"key": "startingAfter",
																	"value": "<string>"
																},
																{
																	"key": "endingBefore",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "clientId",
																	"value": "<string>",
																	"description": "(Required) Client ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Link",
															"value": "Lorem nisi fugiat",
															"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"ts\": \"2018-02-11T00:00:00.090210Z\",\n    \"application\": \"Google\",\n    \"destination\": \"www.google.com\",\n    \"protocol\": \"TCP\",\n    \"port\": 443,\n    \"recv\": 61,\n    \"sent\": 138,\n    \"numFlows\": 5,\n    \"activeSeconds\": 240\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "usageHistories",
									"item": [
										{
											"name": "getNetworkClientsUsageHistories",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/clients/usageHistories",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"clients",
														"usageHistories"
													],
													"query": [
														{
															"key": "clients",
															"value": "{{clients}}",
															"description": "(Required) A list of client keys, MACs or IPs separated by comma.",
															"disabled": true
														},
														{
															"key": "ssidNumber",
															"value": "{{ssidNumber}}",
															"description": "An SSID number to include. If not specified, events for all SSIDs will be returned.",
															"disabled": true
														},
														{
															"key": "perPage",
															"value": "{{perPage}}",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000.",
															"disabled": true
														},
														{
															"key": "startingAfter",
															"value": "{{startingAfter}}",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "endingBefore",
															"value": "{{endingBefore}}",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
															"disabled": true
														},
														{
															"key": "t1",
															"value": "{{t1}}",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the usage histories for clients. Usage data is in kilobytes. Clients can be identified by client keys or either the MACs or IPs depending on whether the network uses Track-by-IP."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/clients/usageHistories?clients=<string>&ssidNumber=<integer>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"clients",
																"usageHistories"
															],
															"query": [
																{
																	"key": "clients",
																	"value": "<string>"
																},
																{
																	"key": "ssidNumber",
																	"value": "<integer>"
																},
																{
																	"key": "perPage",
																	"value": "<integer>"
																},
																{
																	"key": "startingAfter",
																	"value": "<string>"
																},
																{
																	"key": "endingBefore",
																	"value": "<string>"
																},
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "t1",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Link",
															"value": "Lorem nisi fugiat",
															"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"clientId\": \"k74272e\",\n    \"clientIp\": \"1.2.3.4\",\n    \"clientMac\": \"00:11:22:33:44:55\",\n    \"usageHistory\": [\n      {\n        \"ts\": \"2018-02-11T00:00:00.090210Z\",\n        \"recv\": 383,\n        \"sent\": 56\n      }\n    ]\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "usageHistory",
									"item": [
										{
											"name": "getNetworkClientUsageHistory",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/usageHistory",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"clients",
														":clientId",
														"usageHistory"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "clientId",
															"value": "{{clientId}}",
															"description": "(Required) Client ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the client's daily usage history. Usage data is in kilobytes. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId/usageHistory",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"clients",
																":clientId",
																"usageHistory"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "clientId",
																	"value": "<string>",
																	"description": "(Required) Client ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"received\": 61,\n    \"sent\": 138,\n    \"ts\": \"2018-02-11T00:00:00.090210Z\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "getDeviceClients",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/devices/:serial/clients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":serial",
												"clients"
											],
											"query": [
												{
													"key": "t0",
													"value": "{{t0}}",
													"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
													"disabled": true
												},
												{
													"key": "timespan",
													"value": "{{timespan}}",
													"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "serial",
													"value": "{{serial}}",
													"description": "(Required) Serial"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "List the clients of a device, up to a maximum of a month ago. The usage of each client is returned in kilobytes. If the device is a switch, the switchport is returned; otherwise the switchport field is null."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/clients?t0=<string>&timespan=<float>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"clients"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>"
														},
														{
															"key": "timespan",
															"value": "<float>"
														}
													],
													"variable": [
														{
															"key": "serial",
															"value": "<string>",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"k74272e\",\n    \"mac\": \"22:33:44:55:66:77\",\n    \"description\": \"Miles's phone\",\n    \"mdnsName\": \"Miles's phone\",\n    \"dhcpHostname\": \"MilesPhone\",\n    \"user\": \"milesmeraki\",\n    \"ip\": \"1.2.3.4\",\n    \"vlan\": \"100\",\n    \"namedVlan\": \"My VLAN\",\n    \"switchport\": \"My switch port\",\n    \"adaptivePolicyGroup\": \"101\",\n    \"usage\": {\n      \"sent\": 138,\n      \"recv\": 61\n    }\n  }\n]"
										}
									]
								},
								{
									"name": "getNetworkClient",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"clients",
												":clientId"
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "clientId",
													"value": "{{clientId}}",
													"description": "(Required) Client ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return the client associated with the given identifier. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "clientId",
															"value": "<string>",
															"description": "(Required) Client ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"k74272e\",\n  \"mac\": \"22:33:44:55:66:77\",\n  \"ip\": \"1.2.3.4\",\n  \"ip6\": \"2001:db8:3c4d:15::1\",\n  \"description\": \"Miles's phone\",\n  \"firstSeen\": 1518365681,\n  \"lastSeen\": 1526087474,\n  \"manufacturer\": \"Apple\",\n  \"os\": \"iOS\",\n  \"user\": \"milesmeraki\",\n  \"vlan\": \"100\",\n  \"namedVlan\": \"100\",\n  \"ssid\": \"My SSID\",\n  \"switchport\": \"My switch port\",\n  \"wirelessCapabilities\": \"802.11b - 2.4 GHz\",\n  \"smInstalled\": true,\n  \"recentDeviceMac\": \"22:33:44:55:66:77\",\n  \"recentDeviceName\": \"00:11:22:33:44:55\",\n  \"recentDeviceSerial\": \"Q234-ABCD-5678\",\n  \"recentDeviceConnection\": \"Wired\",\n  \"clientVpnConnections\": [\n    {\n      \"remoteIp\": \"1.2.3.4\",\n      \"connectedAt\": 1522613355,\n      \"disconnectedAt\": 1522613360\n    }\n  ],\n  \"lldp\": [\n    [\n      \"System name\",\n      \"Some system name\"\n    ],\n    [\n      \"System description\",\n      \"Some system description\"\n    ],\n    [\n      \"Port ID\",\n      \"1\"\n    ],\n    [\n      \"Chassis ID\",\n      \"00:18:0a:00:00:00\"\n    ],\n    [\n      \"Port description\",\n      \"eth0\"\n    ],\n    [\n      \"System capabilities\",\n      \"Two-port MAC Relay\"\n    ]\n  ],\n  \"cdp\": [\n    [\n      \"System name\",\n      \"Some system name\"\n    ],\n    [\n      \"System description\",\n      \"Some system description\"\n    ],\n    [\n      \"Port ID\",\n      \"1\"\n    ],\n    [\n      \"Chassis ID\",\n      \"00:18:0a:00:00:00\"\n    ],\n    [\n      \"Port description\",\n      \"eth0\"\n    ],\n    [\n      \"System capabilities\",\n      \"Two-port MAC Relay\"\n    ]\n  ],\n  \"status\": \"Online\",\n  \"notes\": \"My client note\",\n  \"deviceTypePrediction\": \"iPhone SE, iOS9.3.5\"\n}"
										}
									]
								},
								{
									"name": "getNetworkClients",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/clients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"clients"
											],
											"query": [
												{
													"key": "t0",
													"value": "{{t0}}",
													"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
													"disabled": true
												},
												{
													"key": "timespan",
													"value": "{{timespan}}",
													"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
													"disabled": true
												},
												{
													"key": "perPage",
													"value": "{{perPage}}",
													"description": "The number of entries per page returned. Acceptable range is 3 - 5000. Default is 10.",
													"disabled": true
												},
												{
													"key": "startingAfter",
													"value": "{{startingAfter}}",
													"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
													"disabled": true
												},
												{
													"key": "endingBefore",
													"value": "{{endingBefore}}",
													"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
													"disabled": true
												},
												{
													"key": "statuses",
													"value": "{{statuses}}",
													"description": "Filters clients based on status. Can be one of 'Online' or 'Offline'.",
													"disabled": true
												},
												{
													"key": "statuses",
													"value": "{{statuses}}",
													"description": "Filters clients based on status. Can be one of 'Online' or 'Offline'.",
													"disabled": true
												},
												{
													"key": "ip",
													"value": "{{ip}}",
													"description": "Filters clients based on a partial or full match for the ip address field.",
													"disabled": true
												},
												{
													"key": "ip6",
													"value": "{{ip6}}",
													"description": "Filters clients based on a partial or full match for the ip6 address field.",
													"disabled": true
												},
												{
													"key": "ip6Local",
													"value": "{{ip6Local}}",
													"description": "Filters clients based on a partial or full match for the ip6Local address field.",
													"disabled": true
												},
												{
													"key": "mac",
													"value": "{{mac}}",
													"description": "Filters clients based on a partial or full match for the mac address field.",
													"disabled": true
												},
												{
													"key": "os",
													"value": "{{os}}",
													"description": "Filters clients based on a partial or full match for the os (operating system) field.",
													"disabled": true
												},
												{
													"key": "pskGroup",
													"value": "{{pskGroup}}",
													"description": "Filters clients based on partial or full match for the iPSK name field.",
													"disabled": true
												},
												{
													"key": "description",
													"value": "{{description}}",
													"description": "Filters clients based on a partial or full match for the description field.",
													"disabled": true
												},
												{
													"key": "vlan",
													"value": "{{vlan}}",
													"description": "Filters clients based on the full match for the VLAN field.",
													"disabled": true
												},
												{
													"key": "namedVlan",
													"value": "{{namedVlan}}",
													"description": "Filters clients based on the partial or full match for the named VLAN field.",
													"disabled": true
												},
												{
													"key": "recentDeviceConnections",
													"value": "{{recentDeviceConnections}}",
													"description": "Filters clients based on recent connection type. Can be one of 'Wired' or 'Wireless'.",
													"disabled": true
												},
												{
													"key": "recentDeviceConnections",
													"value": "{{recentDeviceConnections}}",
													"description": "Filters clients based on recent connection type. Can be one of 'Wired' or 'Wireless'.",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "List the clients that have used this network in the timespan. The data is updated at most once every five minutes."
									},
									"response": []
								}
							]
						},
						{
							"name": "configurationChanges",
							"item": [
								{
									"name": "getOrganizationConfigurationChanges",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/configurationChanges",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"configurationChanges"
											],
											"query": [
												{
													"key": "t0",
													"value": "{{t0}}",
													"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today.",
													"disabled": true
												},
												{
													"key": "t1",
													"value": "{{t1}}",
													"description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0.",
													"disabled": true
												},
												{
													"key": "timespan",
													"value": "{{timespan}}",
													"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 365 days.",
													"disabled": true
												},
												{
													"key": "perPage",
													"value": "{{perPage}}",
													"description": "The number of entries per page returned. Acceptable range is 3 - 5000. Default is 5000.",
													"disabled": true
												},
												{
													"key": "startingAfter",
													"value": "{{startingAfter}}",
													"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
													"disabled": true
												},
												{
													"key": "endingBefore",
													"value": "{{endingBefore}}",
													"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
													"disabled": true
												},
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "Filters on the given network",
													"disabled": true
												},
												{
													"key": "adminId",
													"value": "{{adminId}}",
													"description": "Filters on the given Admin",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "View the Change Log for your organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/configurationChanges?t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkId=<string>&adminId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"configurationChanges"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>"
														},
														{
															"key": "t1",
															"value": "<string>"
														},
														{
															"key": "timespan",
															"value": "<float>"
														},
														{
															"key": "perPage",
															"value": "<integer>"
														},
														{
															"key": "startingAfter",
															"value": "<string>"
														},
														{
															"key": "endingBefore",
															"value": "<string>"
														},
														{
															"key": "networkId",
															"value": "<string>"
														},
														{
															"key": "adminId",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Link",
													"value": "Lorem nisi fugiat",
													"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"ts\": \"2018-02-11T00:00:00.090210Z\",\n    \"adminName\": \"Miles Meraki\",\n    \"adminEmail\": \"miles@meraki.com\",\n    \"adminId\": \"212406\",\n    \"networkName\": \"Main Office\",\n    \"networkId\": \"N_24329156\",\n    \"networkUrl\": \"https://n1.meraki.com//n//manage/nodes/list\",\n    \"ssidName\": \"My SSID\",\n    \"ssidNumber\": 1,\n    \"page\": \"via API\",\n    \"label\": \"PUT /api/v1/organizations/2930418\",\n    \"oldValue\": \"{\\\"id\\\":\\\"2930418\\\",\\\"name\\\":\\\"My organization\\\",\\\"url\\\":\\\"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview\\\"}\",\n    \"newValue\": \"{\\\"id\\\":\\\"2930418\\\",\\\"name\\\":\\\"My organization changed\\\",\\\"url\\\":\\\"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview\\\"}\",\n    \"client\": {\n      \"id\": \"0hoXjtjX6C-Nk4Nr6kEbCJJFRmIgycaG1HBE572hlIc\",\n      \"type\": \"oauth\"\n    }\n  }\n]"
										}
									]
								}
							]
						},
						{
							"name": "devices",
							"item": [
								{
									"name": "availabilities",
									"item": [
										{
											"name": "changeHistory",
											"item": [
												{
													"name": "getOrganizationDevicesAvailabilitiesChangeHistory",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/devices/availabilities/changeHistory",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"devices",
																"availabilities",
																"changeHistory"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "t0",
																	"value": "{{t0}}",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
																	"disabled": true
																},
																{
																	"key": "t1",
																	"value": "{{t1}}",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
																	"disabled": true
																},
																{
																	"key": "timespan",
																	"value": "{{timespan}}",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Optional parameter to filter device availabilities history by device serial numbers",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Optional parameter to filter device availabilities history by device serial numbers",
																	"disabled": true
																},
																{
																	"key": "productTypes",
																	"value": "{{productTypes}}",
																	"description": "Optional parameter to filter device availabilities history by device product types",
																	"disabled": true
																},
																{
																	"key": "productTypes",
																	"value": "{{productTypes}}",
																	"description": "Optional parameter to filter device availabilities history by device product types",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Optional parameter to filter device availabilities history by network IDs",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Optional parameter to filter device availabilities history by network IDs",
																	"disabled": true
																},
																{
																	"key": "statuses",
																	"value": "{{statuses}}",
																	"description": "Optional parameter to filter device availabilities history by device statuses",
																	"disabled": true
																},
																{
																	"key": "statuses",
																	"value": "{{statuses}}",
																	"description": "Optional parameter to filter device availabilities history by device statuses",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the availability history information for devices in an organization."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/devices/availabilities/changeHistory?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>&serials=<string>&serials=<string>&productTypes=<string>&productTypes=<string>&networkIds=<string>&networkIds=<string>&statuses=<string>&statuses=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"devices",
																		"availabilities",
																		"changeHistory"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		},
																		{
																			"key": "t0",
																			"value": "<string>"
																		},
																		{
																			"key": "t1",
																			"value": "<string>"
																		},
																		{
																			"key": "timespan",
																			"value": "<float>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "productTypes",
																			"value": "<string>"
																		},
																		{
																			"key": "productTypes",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "statuses",
																			"value": "<string>"
																		},
																		{
																			"key": "statuses",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"ts\": \"2018-02-11T00:00:00.090210Z\",\n    \"device\": {\n      \"serial\": \"Q234-ABCD-5678\",\n      \"name\": \"My AP\",\n      \"productType\": \"wireless\",\n      \"model\": \"MR34\"\n    },\n    \"details\": {\n      \"old\": [\n        {\n          \"name\": \"status\",\n          \"value\": \"online\"\n        }\n      ],\n      \"new\": [\n        {\n          \"name\": \"status\",\n          \"value\": \"offline\"\n        }\n      ]\n    },\n    \"network\": {\n      \"id\": \"N_24329156\",\n      \"name\": \"Main Office\",\n      \"url\": \"https://n1.meraki.com//n//manage/nodes/list\",\n      \"tags\": [\n        \"tag1\",\n        \"tag2\"\n      ]\n    }\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "getOrganizationDevicesAvailabilities",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/devices/availabilities",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"devices",
														"availabilities"
													],
													"query": [
														{
															"key": "perPage",
															"value": "{{perPage}}",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
															"disabled": true
														},
														{
															"key": "startingAfter",
															"value": "{{startingAfter}}",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "endingBefore",
															"value": "{{endingBefore}}",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "networkIds",
															"value": "{{networkIds}}",
															"description": "Optional parameter to filter device availabilities by network ID. This filter uses multiple exact matches.",
															"disabled": true
														},
														{
															"key": "networkIds",
															"value": "{{networkIds}}",
															"description": "Optional parameter to filter device availabilities by network ID. This filter uses multiple exact matches.",
															"disabled": true
														},
														{
															"key": "productTypes",
															"value": "{{productTypes}}",
															"description": "Optional parameter to filter device availabilities by device product types. This filter uses multiple exact matches. Valid types are wireless, appliance, switch, camera, cellularGateway, sensor, wirelessController, and campusGateway",
															"disabled": true
														},
														{
															"key": "productTypes",
															"value": "{{productTypes}}",
															"description": "Optional parameter to filter device availabilities by device product types. This filter uses multiple exact matches. Valid types are wireless, appliance, switch, camera, cellularGateway, sensor, wirelessController, and campusGateway",
															"disabled": true
														},
														{
															"key": "serials",
															"value": "{{serials}}",
															"description": "Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches.",
															"disabled": true
														},
														{
															"key": "serials",
															"value": "{{serials}}",
															"description": "Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches.",
															"disabled": true
														},
														{
															"key": "tags",
															"value": "{{tags}}",
															"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches.",
															"disabled": true
														},
														{
															"key": "tags",
															"value": "{{tags}}",
															"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches.",
															"disabled": true
														},
														{
															"key": "tagsFilterType",
															"value": "{{tagsFilterType}}",
															"description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.",
															"disabled": true
														},
														{
															"key": "statuses",
															"value": "{{statuses}}",
															"description": "Optional parameter to filter device availabilities by device status. This filter uses multiple exact matches.",
															"disabled": true
														},
														{
															"key": "statuses",
															"value": "{{statuses}}",
															"description": "Optional parameter to filter device availabilities by device status. This filter uses multiple exact matches.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the availability information for devices in an organization. The data returned by this endpoint is updated every 5 minutes."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/devices/availabilities?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&productTypes=<string>&productTypes=<string>&serials=<string>&serials=<string>&tags=<string>&tags=<string>&tagsFilterType=<string>&statuses=<string>&statuses=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"devices",
																"availabilities"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>"
																},
																{
																	"key": "startingAfter",
																	"value": "<string>"
																},
																{
																	"key": "endingBefore",
																	"value": "<string>"
																},
																{
																	"key": "networkIds",
																	"value": "<string>"
																},
																{
																	"key": "networkIds",
																	"value": "<string>"
																},
																{
																	"key": "productTypes",
																	"value": "<string>"
																},
																{
																	"key": "productTypes",
																	"value": "<string>"
																},
																{
																	"key": "serials",
																	"value": "<string>"
																},
																{
																	"key": "serials",
																	"value": "<string>"
																},
																{
																	"key": "tags",
																	"value": "<string>"
																},
																{
																	"key": "tags",
																	"value": "<string>"
																},
																{
																	"key": "tagsFilterType",
																	"value": "<string>"
																},
																{
																	"key": "statuses",
																	"value": "<string>"
																},
																{
																	"key": "statuses",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Link",
															"value": "Lorem nisi fugiat",
															"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"mac\": \"00:11:22:33:44:55\",\n    \"name\": \"My AP\",\n    \"network\": {\n      \"id\": \"N_24329156\"\n    },\n    \"productType\": \"switch\",\n    \"serial\": \"Q234-ABCD-5678\",\n    \"status\": \"online\",\n    \"tags\": [\n      \"tag1\",\n      \"tag2\"\n    ]\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "powerModules",
									"item": [
										{
											"name": "statuses",
											"item": [
												{
													"name": "byDevice",
													"item": [
														{
															"name": "getOrganizationDevicesPowerModulesStatusesByDevice",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/devices/powerModules/statuses/byDevice",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"devices",
																		"powerModules",
																		"statuses",
																		"byDevice"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "{{perPage}}",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																			"disabled": true
																		},
																		{
																			"key": "startingAfter",
																			"value": "{{startingAfter}}",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "endingBefore",
																			"value": "{{endingBefore}}",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Optional parameter to filter device availabilities by network ID. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Optional parameter to filter device availabilities by network ID. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "productTypes",
																			"value": "{{productTypes}}",
																			"description": "Optional parameter to filter device availabilities by device product types. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "productTypes",
																			"value": "{{productTypes}}",
																			"description": "Optional parameter to filter device availabilities by device product types. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "tags",
																			"value": "{{tags}}",
																			"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "tags",
																			"value": "{{tags}}",
																			"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "tagsFilterType",
																			"value": "{{tagsFilterType}}",
																			"description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "List the most recent status information for power modules in rackmount MX and MS devices that support them. The data returned by this endpoint is updated every 5 minutes."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/devices/powerModules/statuses/byDevice?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&productTypes=<string>&productTypes=<string>&serials=<string>&serials=<string>&tags=<string>&tags=<string>&tagsFilterType=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"devices",
																				"powerModules",
																				"statuses",
																				"byDevice"
																			],
																			"query": [
																				{
																					"key": "perPage",
																					"value": "<integer>"
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>"
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "productTypes",
																					"value": "<string>"
																				},
																				{
																					"key": "productTypes",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "tags",
																					"value": "<string>"
																				},
																				{
																					"key": "tags",
																					"value": "<string>"
																				},
																				{
																					"key": "tagsFilterType",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Link",
																			"value": "Lorem nisi fugiat",
																			"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"mac\": \"00:11:22:33:44:55\",\n    \"name\": \"My AP\",\n    \"network\": {\n      \"id\": \"N_24329156\"\n    },\n    \"productType\": \"switch\",\n    \"serial\": \"Q234-ABCD-5678\",\n    \"tags\": [\n      \"tag1\",\n      \"tag2\"\n    ],\n    \"slots\": [\n      {\n        \"number\": 1,\n        \"serial\": \"Q234-ABCD-5678\",\n        \"model\": \"PWR-C5-125WAC\",\n        \"status\": \"not connected\"\n      }\n    ]\n  }\n]"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "provisioning",
									"item": [
										{
											"name": "statuses",
											"item": [
												{
													"name": "getOrganizationDevicesProvisioningStatuses",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/devices/provisioning/statuses",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"devices",
																"provisioning",
																"statuses"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Optional parameter to filter device by network ID. This filter uses multiple exact matches.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Optional parameter to filter device by network ID. This filter uses multiple exact matches.",
																	"disabled": true
																},
																{
																	"key": "productTypes",
																	"value": "{{productTypes}}",
																	"description": "Optional parameter to filter device by device product types. This filter uses multiple exact matches.",
																	"disabled": true
																},
																{
																	"key": "productTypes",
																	"value": "{{productTypes}}",
																	"description": "Optional parameter to filter device by device product types. This filter uses multiple exact matches.",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Optional parameter to filter device by device serial numbers. This filter uses multiple exact matches.",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Optional parameter to filter device by device serial numbers. This filter uses multiple exact matches.",
																	"disabled": true
																},
																{
																	"key": "status",
																	"value": "{{status}}",
																	"description": "An optional parameter to filter devices by the provisioning status. Accepted statuses: unprovisioned, incomplete, complete.",
																	"disabled": true
																},
																{
																	"key": "tags",
																	"value": "{{tags}}",
																	"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches.",
																	"disabled": true
																},
																{
																	"key": "tags",
																	"value": "{{tags}}",
																	"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches.",
																	"disabled": true
																},
																{
																	"key": "tagsFilterType",
																	"value": "{{tagsFilterType}}",
																	"description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the provisioning statuses information for devices in an organization."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/devices/provisioning/statuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&productTypes=<string>&productTypes=<string>&serials=<string>&serials=<string>&status=<string>&tags=<string>&tags=<string>&tagsFilterType=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"devices",
																		"provisioning",
																		"statuses"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "productTypes",
																			"value": "<string>"
																		},
																		{
																			"key": "productTypes",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "status",
																			"value": "<string>"
																		},
																		{
																			"key": "tags",
																			"value": "<string>"
																		},
																		{
																			"key": "tags",
																			"value": "<string>"
																		},
																		{
																			"key": "tagsFilterType",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"mac\": \"00:11:22:33:44:55\",\n    \"name\": \"My AP\",\n    \"network\": {\n      \"id\": \"N_24329156\"\n    },\n    \"productType\": \"switch\",\n    \"serial\": \"Q234-ABCD-5678\",\n    \"status\": \"complete\",\n    \"tags\": [\n      \"tag1\",\n      \"tag2\"\n    ]\n  }\n]"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "statuses",
									"item": [
										{
											"name": "overview",
											"item": [
												{
													"name": "getOrganizationDevicesStatusesOverview",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/devices/statuses/overview",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"devices",
																"statuses",
																"overview"
															],
															"query": [
																{
																	"key": "productTypes",
																	"value": "{{productTypes}}",
																	"description": "An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor, wirelessController, and secureConnect.",
																	"disabled": true
																},
																{
																	"key": "productTypes",
																	"value": "{{productTypes}}",
																	"description": "An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor, wirelessController, and secureConnect.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "An optional parameter to filter device statuses by network.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "An optional parameter to filter device statuses by network.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return an overview of current device statuses"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/devices/statuses/overview?productTypes=<string>&productTypes=<string>&networkIds=<string>&networkIds=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"devices",
																		"statuses",
																		"overview"
																	],
																	"query": [
																		{
																			"key": "productTypes",
																			"value": "<string>"
																		},
																		{
																			"key": "productTypes",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"counts\": {\n    \"byStatus\": {\n      \"online\": 5,\n      \"alerting\": 4,\n      \"offline\": 2,\n      \"dormant\": 1\n    }\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "getOrganizationDevicesStatuses",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/devices/statuses",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"devices",
														"statuses"
													],
													"query": [
														{
															"key": "perPage",
															"value": "{{perPage}}",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
															"disabled": true
														},
														{
															"key": "startingAfter",
															"value": "{{startingAfter}}",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "endingBefore",
															"value": "{{endingBefore}}",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "networkIds",
															"value": "{{networkIds}}",
															"description": "Optional parameter to filter devices by network ids.",
															"disabled": true
														},
														{
															"key": "networkIds",
															"value": "{{networkIds}}",
															"description": "Optional parameter to filter devices by network ids.",
															"disabled": true
														},
														{
															"key": "serials",
															"value": "{{serials}}",
															"description": "Optional parameter to filter devices by serials.",
															"disabled": true
														},
														{
															"key": "serials",
															"value": "{{serials}}",
															"description": "Optional parameter to filter devices by serials.",
															"disabled": true
														},
														{
															"key": "statuses",
															"value": "{{statuses}}",
															"description": "Optional parameter to filter devices by statuses. Valid statuses are [\"online\", \"alerting\", \"offline\", \"dormant\"].",
															"disabled": true
														},
														{
															"key": "statuses",
															"value": "{{statuses}}",
															"description": "Optional parameter to filter devices by statuses. Valid statuses are [\"online\", \"alerting\", \"offline\", \"dormant\"].",
															"disabled": true
														},
														{
															"key": "productTypes",
															"value": "{{productTypes}}",
															"description": "An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor, wirelessController, and secureConnect.",
															"disabled": true
														},
														{
															"key": "productTypes",
															"value": "{{productTypes}}",
															"description": "An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor, wirelessController, and secureConnect.",
															"disabled": true
														},
														{
															"key": "models",
															"value": "{{models}}",
															"description": "Optional parameter to filter devices by models.",
															"disabled": true
														},
														{
															"key": "models",
															"value": "{{models}}",
															"description": "Optional parameter to filter devices by models.",
															"disabled": true
														},
														{
															"key": "tags",
															"value": "{{tags}}",
															"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).",
															"disabled": true
														},
														{
															"key": "tags",
															"value": "{{tags}}",
															"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).",
															"disabled": true
														},
														{
															"key": "tagsFilterType",
															"value": "{{tagsFilterType}}",
															"description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the status of every Meraki device in the organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/devices/statuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&statuses=<string>&statuses=<string>&productTypes=<string>&productTypes=<string>&models=<string>&models=<string>&tags=<string>&tags=<string>&tagsFilterType=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"devices",
																"statuses"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>"
																},
																{
																	"key": "startingAfter",
																	"value": "<string>"
																},
																{
																	"key": "endingBefore",
																	"value": "<string>"
																},
																{
																	"key": "networkIds",
																	"value": "<string>"
																},
																{
																	"key": "networkIds",
																	"value": "<string>"
																},
																{
																	"key": "serials",
																	"value": "<string>"
																},
																{
																	"key": "serials",
																	"value": "<string>"
																},
																{
																	"key": "statuses",
																	"value": "<string>"
																},
																{
																	"key": "statuses",
																	"value": "<string>"
																},
																{
																	"key": "productTypes",
																	"value": "<string>"
																},
																{
																	"key": "productTypes",
																	"value": "<string>"
																},
																{
																	"key": "models",
																	"value": "<string>"
																},
																{
																	"key": "models",
																	"value": "<string>"
																},
																{
																	"key": "tags",
																	"value": "<string>"
																},
																{
																	"key": "tags",
																	"value": "<string>"
																},
																{
																	"key": "tagsFilterType",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Link",
															"value": "Lorem nisi fugiat",
															"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"name\": \"My AP\",\n    \"serial\": \"Q234-ABCD-5678\",\n    \"mac\": \"00:11:22:33:44:55\",\n    \"publicIp\": \"123.123.123.1\",\n    \"networkId\": \"N_24329156\",\n    \"status\": \"online\",\n    \"lastReportedAt\": \"2018-02-11T00:00:00.090210Z\",\n    \"lanIp\": \"1.2.3.4\",\n    \"gateway\": \"1.2.3.5\",\n    \"ipType\": \"dhcp\",\n    \"primaryDns\": \"8.8.8.8\",\n    \"secondaryDns\": \"8.8.4.4\",\n    \"productType\": \"wireless\",\n    \"components\": {\n      \"powerSupplies\": [\n        {\n          \"slot\": 1,\n          \"serial\": \"QABC-1234-5678\",\n          \"model\": \"PWR-MS320-1025WAC\",\n          \"status\": \"powering\",\n          \"poe\": {\n            \"unit\": \"watts\",\n            \"maximum\": 740\n          }\n        }\n      ]\n    },\n    \"model\": \"MR34\",\n    \"tags\": [\n      \"tag1\",\n      \"tag2\"\n    ]\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "system",
									"item": [
										{
											"name": "memory",
											"item": [
												{
													"name": "usage",
													"item": [
														{
															"name": "history",
															"item": [
																{
																	"name": "byInterval",
																	"item": [
																		{
																			"name": "getOrganizationDevicesSystemMemoryUsageHistoryByInterval",
																			"protocolProfileBehavior": {
																				"followAuthorizationHeader": false
																			},
																			"request": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/devices/system/memory/usage/history/byInterval",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"devices",
																						"system",
																						"memory",
																						"usage",
																						"history",
																						"byInterval"
																					],
																					"query": [
																						{
																							"key": "perPage",
																							"value": "{{perPage}}",
																							"description": "The number of entries per page returned. Acceptable range is 3 - 20. Default is 10.",
																							"disabled": true
																						},
																						{
																							"key": "startingAfter",
																							"value": "{{startingAfter}}",
																							"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																							"disabled": true
																						},
																						{
																							"key": "endingBefore",
																							"value": "{{endingBefore}}",
																							"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																							"disabled": true
																						},
																						{
																							"key": "t0",
																							"value": "{{t0}}",
																							"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
																							"disabled": true
																						},
																						{
																							"key": "t1",
																							"value": "{{t1}}",
																							"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
																							"disabled": true
																						},
																						{
																							"key": "timespan",
																							"value": "{{timespan}}",
																							"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 2 hours. If interval is provided, the timespan will be autocalculated.",
																							"disabled": true
																						},
																						{
																							"key": "interval",
																							"value": "{{interval}}",
																							"description": "The time interval in seconds for returned data. The valid intervals are: 300, 1200, 3600, 14400. The default is 300. Interval is calculated if time params are provided.",
																							"disabled": true
																						},
																						{
																							"key": "networkIds",
																							"value": "{{networkIds}}",
																							"description": "Optional parameter to filter the result set by the included set of network IDs",
																							"disabled": true
																						},
																						{
																							"key": "networkIds",
																							"value": "{{networkIds}}",
																							"description": "Optional parameter to filter the result set by the included set of network IDs",
																							"disabled": true
																						},
																						{
																							"key": "serials",
																							"value": "{{serials}}",
																							"description": "Optional parameter to filter device availabilities history by device serial numbers",
																							"disabled": true
																						},
																						{
																							"key": "serials",
																							"value": "{{serials}}",
																							"description": "Optional parameter to filter device availabilities history by device serial numbers",
																							"disabled": true
																						},
																						{
																							"key": "productTypes",
																							"value": "{{productTypes}}",
																							"description": "Optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor, wirelessController, and secureConnect.",
																							"disabled": true
																						},
																						{
																							"key": "productTypes",
																							"value": "{{productTypes}}",
																							"description": "Optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor, wirelessController, and secureConnect.",
																							"disabled": true
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "{{organizationId}}",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				},
																				"description": "Return the memory utilization history in kB for devices in the organization."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>",
																								"description": "Added as a part of security scheme: apikey"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/organizations/:organizationId/devices/system/memory/usage/history/byInterval?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>&interval=<integer>&networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&productTypes=<string>&productTypes=<string>",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"organizations",
																								":organizationId",
																								"devices",
																								"system",
																								"memory",
																								"usage",
																								"history",
																								"byInterval"
																							],
																							"query": [
																								{
																									"key": "perPage",
																									"value": "<integer>"
																								},
																								{
																									"key": "startingAfter",
																									"value": "<string>"
																								},
																								{
																									"key": "endingBefore",
																									"value": "<string>"
																								},
																								{
																									"key": "t0",
																									"value": "<string>"
																								},
																								{
																									"key": "t1",
																									"value": "<string>"
																								},
																								{
																									"key": "timespan",
																									"value": "<float>"
																								},
																								{
																									"key": "interval",
																									"value": "<integer>"
																								},
																								{
																									"key": "networkIds",
																									"value": "<string>"
																								},
																								{
																									"key": "networkIds",
																									"value": "<string>"
																								},
																								{
																									"key": "serials",
																									"value": "<string>"
																								},
																								{
																									"key": "serials",
																									"value": "<string>"
																								},
																								{
																									"key": "productTypes",
																									"value": "<string>"
																								},
																								{
																									"key": "productTypes",
																									"value": "<string>"
																								}
																							],
																							"variable": [
																								{
																									"key": "organizationId",
																									"value": "<string>",
																									"description": "(Required) Organization ID"
																								},
																								{
																									"key": "basePath",
																									"value": "{{basePath}}"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Link",
																							"value": "Lorem nisi fugiat",
																							"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																						},
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"items\": [\n    {\n      \"serial\": \"Q234-ABCD-0001\",\n      \"model\": \"MS\",\n      \"name\": \"My switch\",\n      \"mac\": \"00:11:22:33:44:55\",\n      \"tags\": [\n        \"tag1\",\n        \"tag2\"\n      ],\n      \"provisioned\": 300,\n      \"used\": {\n        \"median\": 100\n      },\n      \"free\": {\n        \"median\": 150\n      },\n      \"network\": {\n        \"id\": \"N_24329156\",\n        \"name\": \"Main Office\",\n        \"tags\": [\n          \"tag1\",\n          \"tag2\"\n        ]\n      },\n      \"intervals\": [\n        {\n          \"startTs\": \"2018-02-11T00:00:00.090210Z\",\n          \"endTs\": \"2018-02-11T00:00:00.090210Z\",\n          \"memory\": {\n            \"used\": {\n              \"minimum\": 50,\n              \"maximum\": 150,\n              \"median\": 100,\n              \"percentages\": {\n                \"maximum\": 60\n              }\n            },\n            \"free\": {\n              \"minimum\": 100,\n              \"maximum\": 200,\n              \"median\": 150\n            }\n          }\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 4,\n        \"remaining\": 2\n      }\n    }\n  }\n}"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "uplinks",
									"item": [
										{
											"name": "addresses",
											"item": [
												{
													"name": "byDevice",
													"item": [
														{
															"name": "getOrganizationDevicesUplinksAddressesByDevice",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/devices/uplinks/addresses/byDevice",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"devices",
																		"uplinks",
																		"addresses",
																		"byDevice"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "{{perPage}}",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																			"disabled": true
																		},
																		{
																			"key": "startingAfter",
																			"value": "{{startingAfter}}",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "endingBefore",
																			"value": "{{endingBefore}}",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Optional parameter to filter device uplinks by network ID. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Optional parameter to filter device uplinks by network ID. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "productTypes",
																			"value": "{{productTypes}}",
																			"description": "Optional parameter to filter device uplinks by device product types. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "productTypes",
																			"value": "{{productTypes}}",
																			"description": "Optional parameter to filter device uplinks by device product types. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "tags",
																			"value": "{{tags}}",
																			"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "tags",
																			"value": "{{tags}}",
																			"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "tagsFilterType",
																			"value": "{{tagsFilterType}}",
																			"description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "List the current uplink addresses for devices in an organization."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/devices/uplinks/addresses/byDevice?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&productTypes=<string>&productTypes=<string>&serials=<string>&serials=<string>&tags=<string>&tags=<string>&tagsFilterType=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"devices",
																				"uplinks",
																				"addresses",
																				"byDevice"
																			],
																			"query": [
																				{
																					"key": "perPage",
																					"value": "<integer>"
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>"
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "productTypes",
																					"value": "<string>"
																				},
																				{
																					"key": "productTypes",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "tags",
																					"value": "<string>"
																				},
																				{
																					"key": "tags",
																					"value": "<string>"
																				},
																				{
																					"key": "tagsFilterType",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Link",
																			"value": "Lorem nisi fugiat",
																			"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"mac\": \"00:11:22:33:44:55\",\n    \"name\": \"My AP\",\n    \"network\": {\n      \"id\": \"N_24329156\"\n    },\n    \"productType\": \"switch\",\n    \"serial\": \"Q234-ABCD-5678\",\n    \"tags\": [\n      \"tag1\",\n      \"tag2\"\n    ],\n    \"uplinks\": [\n      {\n        \"interface\": \"wan1\",\n        \"addresses\": [\n          {\n            \"protocol\": \"ipv6\",\n            \"assignmentMode\": \"static\",\n            \"address\": \"2001:db8:c15:c0:d0c::101:ca75\",\n            \"gateway\": \"fe80:db8:c15:c0:d0c::10ca:1d02\",\n            \"nameservers\": {\n              \"addresses\": [\n                \"8.8.8.8\"\n              ]\n            },\n            \"public\": {\n              \"address\": \"2001:db8:c15:c0:d0c:15e:15e:bab1\"\n            },\n            \"vlan\": {\n              \"id\": \"1\"\n            }\n          }\n        ]\n      }\n    ]\n  }\n]"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "uplinksLossAndLatency",
											"item": [
												{
													"name": "getOrganizationDevicesUplinksLossAndLatency",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/devices/uplinksLossAndLatency",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"devices",
																"uplinksLossAndLatency"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "{{t0}}",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 60 days from today.",
																	"disabled": true
																},
																{
																	"key": "t1",
																	"value": "{{t1}}",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past.",
																	"disabled": true
																},
																{
																	"key": "timespan",
																	"value": "{{timespan}}",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes.",
																	"disabled": true
																},
																{
																	"key": "uplink",
																	"value": "{{uplink}}",
																	"description": "Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, wan3, cellular. Default will return all uplinks.",
																	"disabled": true
																},
																{
																	"key": "ip",
																	"value": "{{ip}}",
																	"description": "Optional filter for a specific destination IP. Default will return all destination IPs.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/devices/uplinksLossAndLatency?t0=<string>&t1=<string>&timespan=<float>&uplink=<string>&ip=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"devices",
																		"uplinksLossAndLatency"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>"
																		},
																		{
																			"key": "t1",
																			"value": "<string>"
																		},
																		{
																			"key": "timespan",
																			"value": "<float>"
																		},
																		{
																			"key": "uplink",
																			"value": "<string>"
																		},
																		{
																			"key": "ip",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"networkId\": \"N_24329156\",\n    \"serial\": \"Q234-ABCD-5678\",\n    \"uplink\": \"wan1\",\n    \"ip\": \"1.2.3.4\",\n    \"timeSeries\": [\n      {\n        \"ts\": \"2019-01-31T18:46:13Z\",\n        \"lossPercent\": 5.3,\n        \"latencyMs\": 194.9\n      }\n    ]\n  }\n]"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "events",
							"item": [
								{
									"name": "eventTypes",
									"item": [
										{
											"name": "getNetworkEventsEventTypes",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/events/eventTypes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"events",
														"eventTypes"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the event type to human-readable description"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/events/eventTypes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"events",
																"eventTypes"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"category\": \"802.11\",\n    \"type\": \"association\",\n    \"description\": \"802.11 association\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "getNetworkEvents",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/events",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"events"
											],
											"query": [
												{
													"key": "productType",
													"value": "{{productType}}",
													"description": "The product type to fetch events for. This parameter is required for networks with multiple device types. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, wirelessController, and secureConnect",
													"disabled": true
												},
												{
													"key": "includedEventTypes[]",
													"value": "{{includedEventTypes[]}}",
													"description": "A list of event types. The returned events will be filtered to only include events with these types.",
													"disabled": true
												},
												{
													"key": "includedEventTypes[]",
													"value": "{{includedEventTypes[]}}",
													"description": "A list of event types. The returned events will be filtered to only include events with these types.",
													"disabled": true
												},
												{
													"key": "excludedEventTypes[]",
													"value": "{{excludedEventTypes[]}}",
													"description": "A list of event types. The returned events will be filtered to exclude events with these types.",
													"disabled": true
												},
												{
													"key": "excludedEventTypes[]",
													"value": "{{excludedEventTypes[]}}",
													"description": "A list of event types. The returned events will be filtered to exclude events with these types.",
													"disabled": true
												},
												{
													"key": "deviceMac",
													"value": "{{deviceMac}}",
													"description": "The MAC address of the Meraki device which the list of events will be filtered with",
													"disabled": true
												},
												{
													"key": "deviceSerial",
													"value": "{{deviceSerial}}",
													"description": "The serial of the Meraki device which the list of events will be filtered with",
													"disabled": true
												},
												{
													"key": "deviceName",
													"value": "{{deviceName}}",
													"description": "The name of the Meraki device which the list of events will be filtered with",
													"disabled": true
												},
												{
													"key": "clientIp",
													"value": "{{clientIp}}",
													"description": "The IP of the client which the list of events will be filtered with. Only supported for track-by-IP networks.",
													"disabled": true
												},
												{
													"key": "clientMac",
													"value": "{{clientMac}}",
													"description": "The MAC address of the client which the list of events will be filtered with. Only supported for track-by-MAC networks.",
													"disabled": true
												},
												{
													"key": "clientName",
													"value": "{{clientName}}",
													"description": "The name, or partial name, of the client which the list of events will be filtered with",
													"disabled": true
												},
												{
													"key": "smDeviceMac",
													"value": "{{smDeviceMac}}",
													"description": "The MAC address of the Systems Manager device which the list of events will be filtered with",
													"disabled": true
												},
												{
													"key": "smDeviceName",
													"value": "{{smDeviceName}}",
													"description": "The name of the Systems Manager device which the list of events will be filtered with",
													"disabled": true
												},
												{
													"key": "eventDetails",
													"value": "{{eventDetails}}",
													"description": "The details of the event(Catalyst device only) which the list of events will be filtered with",
													"disabled": true
												},
												{
													"key": "eventSeverity",
													"value": "{{eventSeverity}}",
													"description": "The severity of the event(Catalyst device only) which the list of events will be filtered with",
													"disabled": true
												},
												{
													"key": "isCatalyst",
													"value": "{{isCatalyst}}",
													"description": "Boolean indicating that whether it is a Catalyst device. For Catalyst device, eventDetails and eventSeverity can be used to filter events.",
													"disabled": true
												},
												{
													"key": "perPage",
													"value": "{{perPage}}",
													"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10.",
													"disabled": true
												},
												{
													"key": "startingAfter",
													"value": "{{startingAfter}}",
													"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
													"disabled": true
												},
												{
													"key": "endingBefore",
													"value": "{{endingBefore}}",
													"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "List the events for the network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/events?productType=<string>&includedEventTypes=<string>&includedEventTypes=<string>&excludedEventTypes=<string>&excludedEventTypes=<string>&deviceMac=<string>&deviceSerial=<string>&deviceName=<string>&clientIp=<string>&clientMac=<string>&clientName=<string>&smDeviceMac=<string>&smDeviceName=<string>&eventDetails=<string>&eventSeverity=<string>&isCatalyst=<boolean>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"events"
													],
													"query": [
														{
															"key": "productType",
															"value": "<string>"
														},
														{
															"key": "includedEventTypes",
															"value": "<string>"
														},
														{
															"key": "includedEventTypes",
															"value": "<string>"
														},
														{
															"key": "excludedEventTypes",
															"value": "<string>"
														},
														{
															"key": "excludedEventTypes",
															"value": "<string>"
														},
														{
															"key": "deviceMac",
															"value": "<string>"
														},
														{
															"key": "deviceSerial",
															"value": "<string>"
														},
														{
															"key": "deviceName",
															"value": "<string>"
														},
														{
															"key": "clientIp",
															"value": "<string>"
														},
														{
															"key": "clientMac",
															"value": "<string>"
														},
														{
															"key": "clientName",
															"value": "<string>"
														},
														{
															"key": "smDeviceMac",
															"value": "<string>"
														},
														{
															"key": "smDeviceName",
															"value": "<string>"
														},
														{
															"key": "eventDetails",
															"value": "<string>"
														},
														{
															"key": "eventSeverity",
															"value": "<string>"
														},
														{
															"key": "isCatalyst",
															"value": "<boolean>"
														},
														{
															"key": "perPage",
															"value": "<integer>"
														},
														{
															"key": "startingAfter",
															"value": "<string>"
														},
														{
															"key": "endingBefore",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Link",
													"value": "Lorem nisi fugiat",
													"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Some error\",\n  \"pageStartAt\": \"2018-02-11T00:00:00.090210Z\",\n  \"pageEndAt\": \"2018-02-11T00:00:00.090210Z\",\n  \"events\": [\n    {\n      \"occurredAt\": \"2018-02-11T00:00:00.090210Z\",\n      \"networkId\": \"N_24329156\",\n      \"type\": \"association\",\n      \"description\": \"802.11 association\",\n      \"category\": \"80211\",\n      \"clientId\": \"k74272e\",\n      \"clientDescription\": \"Miles's phone\",\n      \"clientMac\": \"22:33:44:55:66:77\",\n      \"deviceSerial\": \"Q234-ABCD-5678\",\n      \"deviceName\": \"My AP\",\n      \"ssidNumber\": 1,\n      \"eventData\": {\n        \"radio\": \"1\",\n        \"vap\": \"1\",\n        \"client_mac\": \"22:33:44:55:66:77\",\n        \"client_ip\": \"1.2.3.4\",\n        \"channel\": \"36\",\n        \"rssi\": \"12\",\n        \"aid\": \"2104009183\"\n      }\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "identities",
							"item": [
								{
									"name": "me",
									"item": [
										{
											"name": "getAdministeredIdentitiesMe",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/administered/identities/me",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"administered",
														"identities",
														"me"
													],
													"variable": [
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Returns the identity of the current user."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/administered/identities/me",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"administered",
																"identities",
																"me"
															],
															"variable": [
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"Miles Meraki\",\n  \"email\": \"miles@meraki.com\",\n  \"lastUsedDashboardAt\": \"2018-02-11T00:00:00.090210Z\",\n  \"authentication\": {\n    \"mode\": \"email\",\n    \"api\": {\n      \"key\": {\n        \"created\": true\n      }\n    },\n    \"twoFactor\": {\n      \"enabled\": false\n    },\n    \"saml\": {\n      \"enabled\": false\n    }\n  }\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "licenses",
							"item": [
								{
									"name": "overview",
									"item": [
										{
											"name": "getOrganizationLicensesOverview",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/licenses/overview",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"licenses",
														"overview"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return an overview of the license state for an organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/licenses/overview",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"licenses",
																"overview"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"OK\",\n  \"expirationDate\": \"Feb 8, 2020 UTC\",\n  \"licensedDeviceCounts\": {\n    \"MS\": 100\n  },\n  \"licenseCount\": 20,\n  \"states\": {\n    \"active\": {\n      \"count\": 10\n    },\n    \"expired\": {\n      \"count\": 2\n    },\n    \"expiring\": {\n      \"count\": 3,\n      \"critical\": {\n        \"thresholdInDays\": 14,\n        \"expiringCount\": 1\n      },\n      \"warning\": {\n        \"thresholdInDays\": 90,\n        \"expiringCount\": 2\n      }\n    },\n    \"recentlyQueued\": {\n      \"count\": 0\n    },\n    \"unused\": {\n      \"count\": 2,\n      \"soonestActivation\": {\n        \"activationDate\": \"2020-10-30\",\n        \"toActivateCount\": 1\n      }\n    },\n    \"unusedActive\": {\n      \"count\": 3,\n      \"oldestActivation\": {\n        \"activationDate\": \"2019-09-01\",\n        \"activeCount\": 2\n      }\n    }\n  },\n  \"licenseTypes\": [\n    {\n      \"licenseType\": \"ENT\",\n      \"counts\": {\n        \"unassigned\": 2\n      }\n    }\n  ],\n  \"systemsManager\": {\n    \"counts\": {\n      \"totalSeats\": 50,\n      \"activeSeats\": 10,\n      \"unassignedSeats\": 20,\n      \"orgwideEnrolledDevices\": 10\n    }\n  }\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "lldpCdp",
							"item": [
								{
									"name": "getDeviceLldpCdp",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/devices/:serial/lldpCdp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":serial",
												"lldpCdp"
											],
											"variable": [
												{
													"key": "serial",
													"value": "{{serial}}",
													"description": "(Required) Serial"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "List LLDP and CDP information for a device"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/lldpCdp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"lldpCdp"
													],
													"variable": [
														{
															"key": "serial",
															"value": "<string>",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"sourceMac\": \"00:11:22:33:44:55\",\n  \"ports\": {\n    \"22\": {\n      \"lldp\": {\n        \"systemName\": \"Meraki MS350-24X - Phineas\",\n        \"portId\": \"Port 10\",\n        \"managementAddress\": \"192.168.1.128\",\n        \"sourcePort\": \"9\"\n      },\n      \"cdp\": {\n        \"deviceId\": \"e0553d8cdf53\",\n        \"model\": \"cisco C9300-24P\",\n        \"version\": \"Catalyst L3 Switch Software (CAT9K_IOSXE), Experimental Version 17.6.20210422:140402\",\n        \"portId\": \"Port 10\",\n        \"address\": \"192.168.1.128\",\n        \"sourcePort\": \"9\"\n      },\n      \"deviceMac\": \"00:11:22:33:44:55\",\n      \"device\": {\n        \"url\": \"https://dashboard.meraki.com/Wireless-Testing/n/scPLfd/manage/nodes/new_list/194114551275232\"\n      }\n    }\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "networkHealth",
							"item": [
								{
									"name": "channelUtilization",
									"item": [
										{
											"name": "getNetworkNetworkHealthChannelUtilization",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/networkHealth/channelUtilization",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"networkHealth",
														"channelUtilization"
													],
													"query": [
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
															"disabled": true
														},
														{
															"key": "t1",
															"value": "{{t1}}",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
															"disabled": true
														},
														{
															"key": "resolution",
															"value": "{{resolution}}",
															"description": "The time resolution in seconds for returned data. The valid resolutions are: 600. The default is 600.",
															"disabled": true
														},
														{
															"key": "perPage",
															"value": "{{perPage}}",
															"description": "The number of entries per page returned. Acceptable range is 3 - 100. Default is 10.",
															"disabled": true
														},
														{
															"key": "startingAfter",
															"value": "{{startingAfter}}",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "endingBefore",
															"value": "{{endingBefore}}",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Get the channel utilization over each radio for all APs in a network."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/networkHealth/channelUtilization?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"networkHealth",
																"channelUtilization"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "t1",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																},
																{
																	"key": "resolution",
																	"value": "<integer>"
																},
																{
																	"key": "perPage",
																	"value": "<integer>"
																},
																{
																	"key": "startingAfter",
																	"value": "<string>"
																},
																{
																	"key": "endingBefore",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Link",
															"value": "Lorem nisi fugiat",
															"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"serial\": \"Q234-ABCD-5678\",\n    \"model\": \"MR34\",\n    \"tags\": \" recently-added \",\n    \"wifi0\": [\n      {\n        \"startTime\": \"2018-10-09T22:18:27Z\",\n        \"endTime\": \"2018-10-09T22:19:27Z\",\n        \"utilizationTotal\": 33.84,\n        \"utilization80211\": 32,\n        \"utilizationNon80211\": 1.84\n      }\n    ],\n    \"wifi1\": [\n      {\n        \"startTime\": \"2018-10-09T22:18:27Z\",\n        \"endTime\": \"2018-10-09T22:19:27Z\",\n        \"utilizationTotal\": 33.84,\n        \"utilization80211\": 32,\n        \"utilizationNon80211\": 1.84\n      }\n    ]\n  }\n]"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "openapiSpec",
							"item": [
								{
									"name": "getOrganizationOpenapiSpec",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organizationId/openapiSpec",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organizationId",
												"openapiSpec"
											],
											"query": [
												{
													"key": "version",
													"value": "{{version}}",
													"description": "OpenAPI Specification version to return. Default is 2",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "organizationId",
													"value": "{{organizationId}}",
													"description": "(Required) Organization ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return the OpenAPI Specification of the organization's API documentation in JSON"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/openapiSpec?version=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"openapiSpec"
													],
													"query": [
														{
															"key": "version",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "<string>",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"version\": \"v1\",\n    \"title\": \"Meraki Dashboard API\",\n    \"description\": \"This collection of API calls provides an easy way to manage and monitor Cisco Meraki networks at scale\"\n  },\n  \"paths\": {\n    \"/organizations\": {\n      \"get\": {\n        \"description\": \"List the organizations that the user has privileges on\",\n        \"operationId\": \"getOrganizations\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"examples\": {\n              \"application/json\": [\n                {\n                  \"id\": \"2930418\",\n                  \"name\": \"My organization\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "splashLoginAttempts",
							"item": [
								{
									"name": "getNetworkSplashLoginAttempts",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/splashLoginAttempts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"splashLoginAttempts"
											],
											"query": [
												{
													"key": "ssidNumber",
													"value": "{{ssidNumber}}",
													"description": "Only return the login attempts for the specified SSID",
													"disabled": true
												},
												{
													"key": "loginIdentifier",
													"value": "{{loginIdentifier}}",
													"description": "The username, email, or phone number used during login",
													"disabled": true
												},
												{
													"key": "timespan",
													"value": "{{timespan}}",
													"description": "The timespan, in seconds, for the login attempts. The period will be from [timespan] seconds ago until now. The maximum timespan is 3 months",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "List the splash login attempts for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/splashLoginAttempts?ssidNumber=<integer>&loginIdentifier=<string>&timespan=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"splashLoginAttempts"
													],
													"query": [
														{
															"key": "ssidNumber",
															"value": "<integer>"
														},
														{
															"key": "loginIdentifier",
															"value": "<string>"
														},
														{
															"key": "timespan",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"name\": \"Miles Meraki\",\n    \"login\": \"miles@meraki.com\",\n    \"ssid\": \"My SSID\",\n    \"loginAt\": \"2018-02-11T00:00:00.090210Z\",\n    \"gatewayDeviceMac\": \"00:11:22:33:44:55\",\n    \"clientMac\": \"22:33:44:55:66:77\",\n    \"clientId\": \"k74272e\",\n    \"authorization\": \"success\"\n  }\n]"
										}
									]
								}
							]
						},
						{
							"name": "summary",
							"item": [
								{
									"name": "top",
									"item": [
										{
											"name": "appliances",
											"item": [
												{
													"name": "byUtilization",
													"item": [
														{
															"name": "getOrganizationSummaryTopAppliancesByUtilization",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/summary/top/appliances/byUtilization",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"summary",
																		"top",
																		"appliances",
																		"byUtilization"
																	],
																	"query": [
																		{
																			"key": "networkTag",
																			"value": "{{networkTag}}",
																			"description": "Match result to an exact network tag",
																			"disabled": true
																		},
																		{
																			"key": "deviceTag",
																			"value": "{{deviceTag}}",
																			"description": "Match result to an exact device tag",
																			"disabled": true
																		},
																		{
																			"key": "quantity",
																			"value": "{{quantity}}",
																			"description": "Set number of desired results to return. Default is 10.",
																			"disabled": true
																		},
																		{
																			"key": "ssidName",
																			"value": "{{ssidName}}",
																			"description": "Filter results by ssid name",
																			"disabled": true
																		},
																		{
																			"key": "usageUplink",
																			"value": "{{usageUplink}}",
																			"description": "Filter results by usage uplink",
																			"disabled": true
																		},
																		{
																			"key": "t0",
																			"value": "{{t0}}",
																			"description": "The beginning of the timespan for the data.",
																			"disabled": true
																		},
																		{
																			"key": "t1",
																			"value": "{{t1}}",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 186 days after t0.",
																			"disabled": true
																		},
																		{
																			"key": "timespan",
																			"value": "{{timespan}}",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 25 minutes and be less than or equal to 186 days. The default is 1 day.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Return the top 10 appliances sorted by utilization over given time range."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/summary/top/appliances/byUtilization?networkTag=<string>&deviceTag=<string>&quantity=<integer>&ssidName=<string>&usageUplink=<string>&t0=<string>&t1=<string>&timespan=<float>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"summary",
																				"top",
																				"appliances",
																				"byUtilization"
																			],
																			"query": [
																				{
																					"key": "networkTag",
																					"value": "<string>"
																				},
																				{
																					"key": "deviceTag",
																					"value": "<string>"
																				},
																				{
																					"key": "quantity",
																					"value": "<integer>"
																				},
																				{
																					"key": "ssidName",
																					"value": "<string>"
																				},
																				{
																					"key": "usageUplink",
																					"value": "<string>"
																				},
																				{
																					"key": "t0",
																					"value": "<string>"
																				},
																				{
																					"key": "t1",
																					"value": "<string>"
																				},
																				{
																					"key": "timespan",
																					"value": "<float>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"network\": {\n      \"name\": \"Main Office\",\n      \"id\": \"N_24329156\"\n    },\n    \"name\": \"My appliance\",\n    \"mac\": \"00:11:22:33:44:55\",\n    \"serial\": \"Q234-ABCD-5678\",\n    \"model\": \"MX\",\n    \"utilization\": {\n      \"average\": {\n        \"percentage\": 7.3\n      }\n    }\n  }\n]"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "applications",
											"item": [
												{
													"name": "byUsage",
													"item": [
														{
															"name": "getOrganizationSummaryTopApplicationsByUsage",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/summary/top/applications/byUsage",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"summary",
																		"top",
																		"applications",
																		"byUsage"
																	],
																	"query": [
																		{
																			"key": "networkTag",
																			"value": "{{networkTag}}",
																			"description": "Match result to an exact network tag",
																			"disabled": true
																		},
																		{
																			"key": "device",
																			"value": "{{device}}",
																			"description": "Match result to an exact device tag",
																			"disabled": true
																		},
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "Match result to an exact network id",
																			"disabled": true
																		},
																		{
																			"key": "quantity",
																			"value": "{{quantity}}",
																			"description": "Set number of desired results to return. Default is 10.",
																			"disabled": true
																		},
																		{
																			"key": "ssidName",
																			"value": "{{ssidName}}",
																			"description": "Filter results by ssid name",
																			"disabled": true
																		},
																		{
																			"key": "usageUplink",
																			"value": "{{usageUplink}}",
																			"description": "Filter results by usage uplink",
																			"disabled": true
																		},
																		{
																			"key": "t0",
																			"value": "{{t0}}",
																			"description": "The beginning of the timespan for the data.",
																			"disabled": true
																		},
																		{
																			"key": "t1",
																			"value": "{{t1}}",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 186 days after t0.",
																			"disabled": true
																		},
																		{
																			"key": "timespan",
																			"value": "{{timespan}}",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 25 minutes and be less than or equal to 186 days. The default is 1 day.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Return the top applications sorted by data usage over given time range. Default unit is megabytes."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/summary/top/applications/byUsage?networkTag=<string>&device=<string>&networkId=<string>&quantity=<integer>&ssidName=<string>&usageUplink=<string>&t0=<string>&t1=<string>&timespan=<float>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"summary",
																				"top",
																				"applications",
																				"byUsage"
																			],
																			"query": [
																				{
																					"key": "networkTag",
																					"value": "<string>"
																				},
																				{
																					"key": "device",
																					"value": "<string>"
																				},
																				{
																					"key": "networkId",
																					"value": "<string>"
																				},
																				{
																					"key": "quantity",
																					"value": "<integer>"
																				},
																				{
																					"key": "ssidName",
																					"value": "<string>"
																				},
																				{
																					"key": "usageUplink",
																					"value": "<string>"
																				},
																				{
																					"key": "t0",
																					"value": "<string>"
																				},
																				{
																					"key": "t1",
																					"value": "<string>"
																				},
																				{
																					"key": "timespan",
																					"value": "<float>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"application\": \"sample name\",\n    \"total\": 18000,\n    \"downstream\": 10000,\n    \"upstream\": 8000,\n    \"percentage\": 80.223456789\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "categories",
													"item": [
														{
															"name": "byUsage",
															"item": [
																{
																	"name": "getOrganizationSummaryTopApplicationsCategoriesByUsage",
																	"protocolProfileBehavior": {
																		"followAuthorizationHeader": false
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/summary/top/applications/categories/byUsage",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"summary",
																				"top",
																				"applications",
																				"categories",
																				"byUsage"
																			],
																			"query": [
																				{
																					"key": "networkTag",
																					"value": "{{networkTag}}",
																					"description": "Match result to an exact network tag",
																					"disabled": true
																				},
																				{
																					"key": "deviceTag",
																					"value": "{{deviceTag}}",
																					"description": "Match result to an exact device tag",
																					"disabled": true
																				},
																				{
																					"key": "networkId",
																					"value": "{{networkId}}",
																					"description": "Match result to an exact network id",
																					"disabled": true
																				},
																				{
																					"key": "quantity",
																					"value": "{{quantity}}",
																					"description": "Set number of desired results to return. Default is 10.",
																					"disabled": true
																				},
																				{
																					"key": "ssidName",
																					"value": "{{ssidName}}",
																					"description": "Filter results by ssid name",
																					"disabled": true
																				},
																				{
																					"key": "usageUplink",
																					"value": "{{usageUplink}}",
																					"description": "Filter results by usage uplink",
																					"disabled": true
																				},
																				{
																					"key": "t0",
																					"value": "{{t0}}",
																					"description": "The beginning of the timespan for the data.",
																					"disabled": true
																				},
																				{
																					"key": "t1",
																					"value": "{{t1}}",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 186 days after t0.",
																					"disabled": true
																				},
																				{
																					"key": "timespan",
																					"value": "{{timespan}}",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 25 minutes and be less than or equal to 186 days. The default is 1 day.",
																					"disabled": true
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "{{organizationId}}",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		},
																		"description": "Return the top application categories sorted by data usage over given time range. Default unit is megabytes."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/summary/top/applications/categories/byUsage?networkTag=<string>&deviceTag=<string>&networkId=<string>&quantity=<integer>&ssidName=<string>&usageUplink=<string>&t0=<string>&t1=<string>&timespan=<float>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"summary",
																						"top",
																						"applications",
																						"categories",
																						"byUsage"
																					],
																					"query": [
																						{
																							"key": "networkTag",
																							"value": "<string>"
																						},
																						{
																							"key": "deviceTag",
																							"value": "<string>"
																						},
																						{
																							"key": "networkId",
																							"value": "<string>"
																						},
																						{
																							"key": "quantity",
																							"value": "<integer>"
																						},
																						{
																							"key": "ssidName",
																							"value": "<string>"
																						},
																						{
																							"key": "usageUplink",
																							"value": "<string>"
																						},
																						{
																							"key": "t0",
																							"value": "<string>"
																						},
																						{
																							"key": "t1",
																							"value": "<string>"
																						},
																						{
																							"key": "timespan",
																							"value": "<float>"
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "<string>",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "[\n  {\n    \"category\": \"other\",\n    \"total\": 18000,\n    \"downstream\": 10000,\n    \"upstream\": 8000,\n    \"percentage\": 80.223456789\n  }\n]"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "clients",
											"item": [
												{
													"name": "byUsage",
													"item": [
														{
															"name": "getOrganizationSummaryTopClientsByUsage",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/summary/top/clients/byUsage",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"summary",
																		"top",
																		"clients",
																		"byUsage"
																	],
																	"query": [
																		{
																			"key": "networkTag",
																			"value": "{{networkTag}}",
																			"description": "Match result to an exact network tag",
																			"disabled": true
																		},
																		{
																			"key": "deviceTag",
																			"value": "{{deviceTag}}",
																			"description": "Match result to an exact device tag",
																			"disabled": true
																		},
																		{
																			"key": "quantity",
																			"value": "{{quantity}}",
																			"description": "Set number of desired results to return. Default is 10.",
																			"disabled": true
																		},
																		{
																			"key": "ssidName",
																			"value": "{{ssidName}}",
																			"description": "Filter results by ssid name",
																			"disabled": true
																		},
																		{
																			"key": "usageUplink",
																			"value": "{{usageUplink}}",
																			"description": "Filter results by usage uplink",
																			"disabled": true
																		},
																		{
																			"key": "t0",
																			"value": "{{t0}}",
																			"description": "The beginning of the timespan for the data.",
																			"disabled": true
																		},
																		{
																			"key": "t1",
																			"value": "{{t1}}",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 186 days after t0.",
																			"disabled": true
																		},
																		{
																			"key": "timespan",
																			"value": "{{timespan}}",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 8 hours and be less than or equal to 186 days. The default is 1 day.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Return metrics for organization's top 10 clients by data usage (in mb) over given time range."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/summary/top/clients/byUsage?networkTag=<string>&deviceTag=<string>&quantity=<integer>&ssidName=<string>&usageUplink=<string>&t0=<string>&t1=<string>&timespan=<float>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"summary",
																				"top",
																				"clients",
																				"byUsage"
																			],
																			"query": [
																				{
																					"key": "networkTag",
																					"value": "<string>"
																				},
																				{
																					"key": "deviceTag",
																					"value": "<string>"
																				},
																				{
																					"key": "quantity",
																					"value": "<integer>"
																				},
																				{
																					"key": "ssidName",
																					"value": "<string>"
																				},
																				{
																					"key": "usageUplink",
																					"value": "<string>"
																				},
																				{
																					"key": "t0",
																					"value": "<string>"
																				},
																				{
																					"key": "t1",
																					"value": "<string>"
																				},
																				{
																					"key": "timespan",
																					"value": "<float>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"name\": \"Office Switch\",\n    \"mac\": \"22:33:44:55:66:77\",\n    \"id\": \"k74272e\",\n    \"network\": {\n      \"name\": \"Main Office\",\n      \"id\": \"N_24329156\"\n    },\n    \"usage\": {\n      \"total\": 18000,\n      \"upstream\": 8000,\n      \"downstream\": 10000,\n      \"percentage\": 80.2\n    }\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "manufacturers",
													"item": [
														{
															"name": "byUsage",
															"item": [
																{
																	"name": "getOrganizationSummaryTopClientsManufacturersByUsage",
																	"protocolProfileBehavior": {
																		"followAuthorizationHeader": false
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/summary/top/clients/manufacturers/byUsage",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"summary",
																				"top",
																				"clients",
																				"manufacturers",
																				"byUsage"
																			],
																			"query": [
																				{
																					"key": "networkTag",
																					"value": "{{networkTag}}",
																					"description": "Match result to an exact network tag",
																					"disabled": true
																				},
																				{
																					"key": "deviceTag",
																					"value": "{{deviceTag}}",
																					"description": "Match result to an exact device tag",
																					"disabled": true
																				},
																				{
																					"key": "quantity",
																					"value": "{{quantity}}",
																					"description": "Set number of desired results to return. Default is 10.",
																					"disabled": true
																				},
																				{
																					"key": "ssidName",
																					"value": "{{ssidName}}",
																					"description": "Filter results by ssid name",
																					"disabled": true
																				},
																				{
																					"key": "usageUplink",
																					"value": "{{usageUplink}}",
																					"description": "Filter results by usage uplink",
																					"disabled": true
																				},
																				{
																					"key": "t0",
																					"value": "{{t0}}",
																					"description": "The beginning of the timespan for the data.",
																					"disabled": true
																				},
																				{
																					"key": "t1",
																					"value": "{{t1}}",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 186 days after t0.",
																					"disabled": true
																				},
																				{
																					"key": "timespan",
																					"value": "{{timespan}}",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 186 days. The default is 1 day.",
																					"disabled": true
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "{{organizationId}}",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		},
																		"description": "Return metrics for organization's top clients by data usage (in mb) over given time range, grouped by manufacturer."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/summary/top/clients/manufacturers/byUsage?networkTag=<string>&deviceTag=<string>&quantity=<integer>&ssidName=<string>&usageUplink=<string>&t0=<string>&t1=<string>&timespan=<float>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"summary",
																						"top",
																						"clients",
																						"manufacturers",
																						"byUsage"
																					],
																					"query": [
																						{
																							"key": "networkTag",
																							"value": "<string>"
																						},
																						{
																							"key": "deviceTag",
																							"value": "<string>"
																						},
																						{
																							"key": "quantity",
																							"value": "<integer>"
																						},
																						{
																							"key": "ssidName",
																							"value": "<string>"
																						},
																						{
																							"key": "usageUplink",
																							"value": "<string>"
																						},
																						{
																							"key": "t0",
																							"value": "<string>"
																						},
																						{
																							"key": "t1",
																							"value": "<string>"
																						},
																						{
																							"key": "timespan",
																							"value": "<float>"
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "<string>",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "[\n  {\n    \"name\": \"Manufacturer Name\",\n    \"clients\": {\n      \"counts\": {\n        \"total\": 3\n      }\n    },\n    \"usage\": {\n      \"total\": 9000,\n      \"upstream\": 1000,\n      \"downstream\": 8000\n    }\n  }\n]"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "devices",
											"item": [
												{
													"name": "byUsage",
													"item": [
														{
															"name": "getOrganizationSummaryTopDevicesByUsage",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/summary/top/devices/byUsage",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"summary",
																		"top",
																		"devices",
																		"byUsage"
																	],
																	"query": [
																		{
																			"key": "networkTag",
																			"value": "{{networkTag}}",
																			"description": "Match result to an exact network tag",
																			"disabled": true
																		},
																		{
																			"key": "deviceTag",
																			"value": "{{deviceTag}}",
																			"description": "Match result to an exact device tag",
																			"disabled": true
																		},
																		{
																			"key": "quantity",
																			"value": "{{quantity}}",
																			"description": "Set number of desired results to return. Default is 10.",
																			"disabled": true
																		},
																		{
																			"key": "ssidName",
																			"value": "{{ssidName}}",
																			"description": "Filter results by ssid name",
																			"disabled": true
																		},
																		{
																			"key": "usageUplink",
																			"value": "{{usageUplink}}",
																			"description": "Filter results by usage uplink",
																			"disabled": true
																		},
																		{
																			"key": "t0",
																			"value": "{{t0}}",
																			"description": "The beginning of the timespan for the data.",
																			"disabled": true
																		},
																		{
																			"key": "t1",
																			"value": "{{t1}}",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 186 days after t0.",
																			"disabled": true
																		},
																		{
																			"key": "timespan",
																			"value": "{{timespan}}",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 8 hours and be less than or equal to 186 days. The default is 1 day.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Return metrics for organization's top 10 devices sorted by data usage over given time range. Default unit is megabytes."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/summary/top/devices/byUsage?networkTag=<string>&deviceTag=<string>&quantity=<integer>&ssidName=<string>&usageUplink=<string>&t0=<string>&t1=<string>&timespan=<float>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"summary",
																				"top",
																				"devices",
																				"byUsage"
																			],
																			"query": [
																				{
																					"key": "networkTag",
																					"value": "<string>"
																				},
																				{
																					"key": "deviceTag",
																					"value": "<string>"
																				},
																				{
																					"key": "quantity",
																					"value": "<integer>"
																				},
																				{
																					"key": "ssidName",
																					"value": "<string>"
																				},
																				{
																					"key": "usageUplink",
																					"value": "<string>"
																				},
																				{
																					"key": "t0",
																					"value": "<string>"
																				},
																				{
																					"key": "t1",
																					"value": "<string>"
																				},
																				{
																					"key": "timespan",
																					"value": "<float>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"name\": \"My AP\",\n    \"model\": \"MR34\",\n    \"serial\": \"Q234-ABCD-5678\",\n    \"mac\": \"00:11:22:33:44:55\",\n    \"productType\": \"switch\",\n    \"network\": {\n      \"name\": \"Main Office\",\n      \"id\": \"N_24329156\"\n    },\n    \"usage\": {\n      \"total\": 18000.111,\n      \"percentage\": 80.223456789\n    },\n    \"clients\": {\n      \"counts\": {\n        \"total\": 4\n      }\n    }\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "models",
													"item": [
														{
															"name": "byUsage",
															"item": [
																{
																	"name": "getOrganizationSummaryTopDevicesModelsByUsage",
																	"protocolProfileBehavior": {
																		"followAuthorizationHeader": false
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/summary/top/devices/models/byUsage",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"summary",
																				"top",
																				"devices",
																				"models",
																				"byUsage"
																			],
																			"query": [
																				{
																					"key": "networkTag",
																					"value": "{{networkTag}}",
																					"description": "Match result to an exact network tag",
																					"disabled": true
																				},
																				{
																					"key": "deviceTag",
																					"value": "{{deviceTag}}",
																					"description": "Match result to an exact device tag",
																					"disabled": true
																				},
																				{
																					"key": "quantity",
																					"value": "{{quantity}}",
																					"description": "Set number of desired results to return. Default is 10.",
																					"disabled": true
																				},
																				{
																					"key": "ssidName",
																					"value": "{{ssidName}}",
																					"description": "Filter results by ssid name",
																					"disabled": true
																				},
																				{
																					"key": "usageUplink",
																					"value": "{{usageUplink}}",
																					"description": "Filter results by usage uplink",
																					"disabled": true
																				},
																				{
																					"key": "t0",
																					"value": "{{t0}}",
																					"description": "The beginning of the timespan for the data.",
																					"disabled": true
																				},
																				{
																					"key": "t1",
																					"value": "{{t1}}",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 186 days after t0.",
																					"disabled": true
																				},
																				{
																					"key": "timespan",
																					"value": "{{timespan}}",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 8 hours and be less than or equal to 186 days. The default is 1 day.",
																					"disabled": true
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "{{organizationId}}",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		},
																		"description": "Return metrics for organization's top 10 device models sorted by data usage over given time range. Default unit is megabytes."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/summary/top/devices/models/byUsage?networkTag=<string>&deviceTag=<string>&quantity=<integer>&ssidName=<string>&usageUplink=<string>&t0=<string>&t1=<string>&timespan=<float>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"summary",
																						"top",
																						"devices",
																						"models",
																						"byUsage"
																					],
																					"query": [
																						{
																							"key": "networkTag",
																							"value": "<string>"
																						},
																						{
																							"key": "deviceTag",
																							"value": "<string>"
																						},
																						{
																							"key": "quantity",
																							"value": "<integer>"
																						},
																						{
																							"key": "ssidName",
																							"value": "<string>"
																						},
																						{
																							"key": "usageUplink",
																							"value": "<string>"
																						},
																						{
																							"key": "t0",
																							"value": "<string>"
																						},
																						{
																							"key": "t1",
																							"value": "<string>"
																						},
																						{
																							"key": "timespan",
																							"value": "<float>"
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "<string>",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "[\n  {\n    \"model\": \"MR34\",\n    \"count\": 2,\n    \"usage\": {\n      \"total\": 2000,\n      \"average\": 1000\n    }\n  }\n]"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "networks",
											"item": [
												{
													"name": "byStatus",
													"item": [
														{
															"name": "getOrganizationSummaryTopNetworksByStatus",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/summary/top/networks/byStatus",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"summary",
																		"top",
																		"networks",
																		"byStatus"
																	],
																	"query": [
																		{
																			"key": "networkTag",
																			"value": "{{networkTag}}",
																			"description": "Match result to an exact network tag",
																			"disabled": true
																		},
																		{
																			"key": "deviceTag",
																			"value": "{{deviceTag}}",
																			"description": "Match result to an exact device tag",
																			"disabled": true
																		},
																		{
																			"key": "quantity",
																			"value": "{{quantity}}",
																			"description": "Set number of desired results to return. Default is 10.",
																			"disabled": true
																		},
																		{
																			"key": "ssidName",
																			"value": "{{ssidName}}",
																			"description": "Filter results by ssid name",
																			"disabled": true
																		},
																		{
																			"key": "usageUplink",
																			"value": "{{usageUplink}}",
																			"description": "Filter results by usage uplink",
																			"disabled": true
																		},
																		{
																			"key": "perPage",
																			"value": "{{perPage}}",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 5000.",
																			"disabled": true
																		},
																		{
																			"key": "startingAfter",
																			"value": "{{startingAfter}}",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "endingBefore",
																			"value": "{{endingBefore}}",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "List the client and status overview information for the networks in an organization. Usage is measured in kilobytes and from the last seven days."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/summary/top/networks/byStatus?networkTag=<string>&deviceTag=<string>&quantity=<integer>&ssidName=<string>&usageUplink=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"summary",
																				"top",
																				"networks",
																				"byStatus"
																			],
																			"query": [
																				{
																					"key": "networkTag",
																					"value": "<string>"
																				},
																				{
																					"key": "deviceTag",
																					"value": "<string>"
																				},
																				{
																					"key": "quantity",
																					"value": "<integer>"
																				},
																				{
																					"key": "ssidName",
																					"value": "<string>"
																				},
																				{
																					"key": "usageUplink",
																					"value": "<string>"
																				},
																				{
																					"key": "perPage",
																					"value": "<integer>"
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>"
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Link",
																			"value": "Lorem nisi fugiat",
																			"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"networkId\": \"N_24329156\",\n    \"name\": \"Main Office\",\n    \"url\": \"https://n1.meraki.com//n//manage/nodes/list\",\n    \"tags\": [\n      \"tag1\",\n      \"tag2\"\n    ],\n    \"clients\": {\n      \"counts\": {\n        \"total\": 72\n      },\n      \"usage\": {\n        \"upstream\": 3732658.44,\n        \"downstream\": 983732658.87\n      }\n    },\n    \"statuses\": {\n      \"overall\": \"online\",\n      \"byProductType\": [\n        {\n          \"productType\": \"wireless\",\n          \"counts\": {\n            \"online\": 2,\n            \"offline\": 1,\n            \"alerting\": 0,\n            \"dormant\": 3\n          }\n        }\n      ]\n    },\n    \"devices\": {\n      \"byProductType\": [\n        {\n          \"productType\": \"wireless\",\n          \"url\": \"https://n1.meraki.com//n//manage/nodes/new_list/000000000000\"\n        }\n      ]\n    },\n    \"productTypes\": [\n      \"appliance\",\n      \"switch\",\n      \"wireless\"\n    ]\n  }\n]"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "ssids",
											"item": [
												{
													"name": "byUsage",
													"item": [
														{
															"name": "getOrganizationSummaryTopSsidsByUsage",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/summary/top/ssids/byUsage",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"summary",
																		"top",
																		"ssids",
																		"byUsage"
																	],
																	"query": [
																		{
																			"key": "networkTag",
																			"value": "{{networkTag}}",
																			"description": "Match result to an exact network tag",
																			"disabled": true
																		},
																		{
																			"key": "deviceTag",
																			"value": "{{deviceTag}}",
																			"description": "Match result to an exact device tag",
																			"disabled": true
																		},
																		{
																			"key": "quantity",
																			"value": "{{quantity}}",
																			"description": "Set number of desired results to return. Default is 10.",
																			"disabled": true
																		},
																		{
																			"key": "ssidName",
																			"value": "{{ssidName}}",
																			"description": "Filter results by ssid name",
																			"disabled": true
																		},
																		{
																			"key": "usageUplink",
																			"value": "{{usageUplink}}",
																			"description": "Filter results by usage uplink",
																			"disabled": true
																		},
																		{
																			"key": "t0",
																			"value": "{{t0}}",
																			"description": "The beginning of the timespan for the data.",
																			"disabled": true
																		},
																		{
																			"key": "t1",
																			"value": "{{t1}}",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 186 days after t0.",
																			"disabled": true
																		},
																		{
																			"key": "timespan",
																			"value": "{{timespan}}",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 8 hours and be less than or equal to 186 days. The default is 1 day.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Return metrics for organization's top 10 ssids by data usage over given time range. Default unit is megabytes."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/summary/top/ssids/byUsage?networkTag=<string>&deviceTag=<string>&quantity=<integer>&ssidName=<string>&usageUplink=<string>&t0=<string>&t1=<string>&timespan=<float>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"summary",
																				"top",
																				"ssids",
																				"byUsage"
																			],
																			"query": [
																				{
																					"key": "networkTag",
																					"value": "<string>"
																				},
																				{
																					"key": "deviceTag",
																					"value": "<string>"
																				},
																				{
																					"key": "quantity",
																					"value": "<integer>"
																				},
																				{
																					"key": "ssidName",
																					"value": "<string>"
																				},
																				{
																					"key": "usageUplink",
																					"value": "<string>"
																				},
																				{
																					"key": "t0",
																					"value": "<string>"
																				},
																				{
																					"key": "t1",
																					"value": "<string>"
																				},
																				{
																					"key": "timespan",
																					"value": "<float>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"name\": \"My SSID\",\n    \"usage\": {\n      \"total\": 18000,\n      \"downstream\": 10000,\n      \"upstream\": 8000,\n      \"percentage\": 80.223456789\n    },\n    \"clients\": {\n      \"counts\": {\n        \"total\": 4\n      }\n    }\n  }\n]"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "switches",
											"item": [
												{
													"name": "byEnergyUsage",
													"item": [
														{
															"name": "getOrganizationSummaryTopSwitchesByEnergyUsage",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/summary/top/switches/byEnergyUsage",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"summary",
																		"top",
																		"switches",
																		"byEnergyUsage"
																	],
																	"query": [
																		{
																			"key": "networkTag",
																			"value": "{{networkTag}}",
																			"description": "Match result to an exact network tag",
																			"disabled": true
																		},
																		{
																			"key": "deviceTag",
																			"value": "{{deviceTag}}",
																			"description": "Match result to an exact device tag",
																			"disabled": true
																		},
																		{
																			"key": "quantity",
																			"value": "{{quantity}}",
																			"description": "Set number of desired results to return. Default is 10.",
																			"disabled": true
																		},
																		{
																			"key": "ssidName",
																			"value": "{{ssidName}}",
																			"description": "Filter results by ssid name",
																			"disabled": true
																		},
																		{
																			"key": "usageUplink",
																			"value": "{{usageUplink}}",
																			"description": "Filter results by usage uplink",
																			"disabled": true
																		},
																		{
																			"key": "t0",
																			"value": "{{t0}}",
																			"description": "The beginning of the timespan for the data.",
																			"disabled": true
																		},
																		{
																			"key": "t1",
																			"value": "{{t1}}",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 186 days after t0.",
																			"disabled": true
																		},
																		{
																			"key": "timespan",
																			"value": "{{timespan}}",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 25 minutes and be less than or equal to 186 days. The default is 1 day.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Return metrics for organization's top 10 switches by energy usage over given time range. Default unit is joules."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/summary/top/switches/byEnergyUsage?networkTag=<string>&deviceTag=<string>&quantity=<integer>&ssidName=<string>&usageUplink=<string>&t0=<string>&t1=<string>&timespan=<float>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"summary",
																				"top",
																				"switches",
																				"byEnergyUsage"
																			],
																			"query": [
																				{
																					"key": "networkTag",
																					"value": "<string>"
																				},
																				{
																					"key": "deviceTag",
																					"value": "<string>"
																				},
																				{
																					"key": "quantity",
																					"value": "<integer>"
																				},
																				{
																					"key": "ssidName",
																					"value": "<string>"
																				},
																				{
																					"key": "usageUplink",
																					"value": "<string>"
																				},
																				{
																					"key": "t0",
																					"value": "<string>"
																				},
																				{
																					"key": "t1",
																					"value": "<string>"
																				},
																				{
																					"key": "timespan",
																					"value": "<float>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"network\": {\n      \"name\": \"Main Office\",\n      \"id\": \"N_24329156\"\n    },\n    \"name\": \"My switch\",\n    \"mac\": \"00:11:22:33:44:55\",\n    \"model\": \"MS\",\n    \"usage\": {\n      \"total\": 800.021\n    }\n  }\n]"
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "topology",
							"item": [
								{
									"name": "linkLayer",
									"item": [
										{
											"name": "getNetworkTopologyLinkLayer",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/topology/linkLayer",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"topology",
														"linkLayer"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the LLDP and CDP information for all discovered devices and connections in a network. At least one MX or MS device must be in the network in order to build the topology."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/topology/linkLayer",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"topology",
																"linkLayer"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"nodes\": [\n    {\n      \"derivedId\": \"ccddeeffgghh\",\n      \"mac\": \"CC:DD:EE:FF:GG:HH\",\n      \"type\": \"discovered\",\n      \"root\": true,\n      \"discovered\": {\n        \"lldp\": {\n          \"chassisId\": \"12345\",\n          \"systemName\": \"Non-Meraki device\",\n          \"systemDescription\": \"Router and Switch Device\",\n          \"systemCapabilities\": [\n            \"router\",\n            \"switch\"\n          ],\n          \"managementAddress\": \"10.130.105.154\"\n        },\n        \"cdp\": \"null\"\n      }\n    },\n    {\n      \"derivedId\": \"34564\",\n      \"mac\": \"null\",\n      \"type\": \"stack\",\n      \"stack\": {\n        \"id\": 98765,\n        \"name\": \"Corp Stack\",\n        \"members\": [\n          {\n            \"derivedId\": \"4567\",\n            \"mac\": \"EE:FF:GG:HH:II:JJ\",\n            \"type\": \"device\",\n            \"device\": {\n              \"serial\": \"Q2UN-A44e-CU4L\",\n              \"name\": \"Study Switch\",\n              \"product\": \"switch\",\n              \"model\": \"GS110\",\n              \"status\": \"online\",\n              \"lastReportedAt\": \"2021-06-24T10:23:12z\",\n              \"clients\": {\n                \"counts\": {\n                  \"total\": 8\n                }\n              },\n              \"switch\": {\n                \"ports\": {\n                  \"counts\": {\n                    \"byStatus\": {\n                      \"active\": 11\n                    }\n                  }\n                }\n              },\n              \"uplinks\": [\n                {\n                  \"vlanId\": 0\n                }\n              ]\n            }\n          },\n          {\n            \"derivedId\": \"4567\",\n            \"mac\": \"GG:HH:II:JJ:KK:LL\",\n            \"type\": \"device\",\n            \"device\": {\n              \"serial\": \"Q2UN-E55e-KO6L\",\n              \"name\": \"Study Switch 2\",\n              \"model\": \"GS110\",\n              \"productType\": \"switch\",\n              \"status\": \"online\",\n              \"lastReportedAt\": \"2021-06-24T10:23:12z\",\n              \"clients\": {\n                \"counts\": {\n                  \"total\": 8\n                }\n              },\n              \"switch\": {\n                \"ports\": {\n                  \"counts\": {\n                    \"byStatus\": {\n                      \"active\": 11\n                    }\n                  }\n                }\n              },\n              \"uplinks\": [\n                {\n                  \"vlanId\": 0\n                }\n              ]\n            }\n          }\n        ],\n        \"clients\": {\n          \"counts\": {\n            \"total\": 14\n          }\n        }\n      }\n    },\n    {\n      \"derivedId\": \"aabbccddeeff\",\n      \"mac\": \"AA:BB:CC:DD:EE:FF\",\n      \"type\": \"device\",\n      \"device\": {\n        \"serial\": \"Q2UN-A44e-CU4L\",\n        \"name\": \"Living Room Gateway\",\n        \"model\": \"GX20\",\n        \"productType\": \"appliance\",\n        \"status\": \"online\",\n        \"lastReportedAt\": \"2021-06-24T10:23:12z\",\n        \"uplinks\": [\n          {\n            \"vlanId\": 0,\n            \"pppoe\": {\n              \"enabled\": true\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"derivedId\": \"140933967342368\",\n      \"mac\": \"80:2d:bf:0f:6b:20\",\n      \"type\": \"device\",\n      \"root\": true,\n      \"device\": {\n        \"serial\": \"Q4GF-GAHY-ZE2B\",\n        \"name\": \"WLC-Mars\",\n        \"model\": \"C9800-40-K9\",\n        \"productType\": \"wirelessController\",\n        \"status\": \"online\",\n        \"lastReportedAt\": \"2024-07-29T01:36:03Z\",\n        \"clients\": {\n          \"counts\": {\n            \"total\": 0\n          }\n        },\n        \"wlc\": {\n          \"ap_networks\": {\n            \"counts\": 1\n          },\n          \"connected_aps\": {\n            \"counts\": 12\n          }\n        },\n        \"uplinks\": [\n          {\n            \"vlanId\": \"203\"\n          }\n        ]\n      }\n    }\n  ],\n  \"links\": [\n    {\n      \"ends\": [\n        {\n          \"node\": {\n            \"derivedId\": \"34564\",\n            \"type\": \"stack\"\n          },\n          \"device\": {\n            \"serial\": \"Q2UN-E55e-KO6L\",\n            \"name\": \"Study Switch 2\"\n          },\n          \"discovered\": {\n            \"lldp\": {\n              \"portId\": \"Port 20\",\n              \"portDescription\": \"eth0\"\n            },\n            \"cdp\": {\n              \"portId\": \"Port 20\",\n              \"nativeVlan\": 102\n            }\n          }\n        },\n        {\n          \"node\": {\n            \"derivedId\": \"ccddeeffgghh\",\n            \"type\": \"discovered\"\n          },\n          \"discovered\": {\n            \"lldp\": {\n              \"portId\": \"0010.7fdb.51f7\",\n              \"portDescription\": \"eth1\"\n            },\n            \"cdp\": \"null\"\n          }\n        }\n      ],\n      \"lastReportedAt\": \"2021-06-25T14:56:27z\"\n    }\n  ],\n  \"errors\": []\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "traffic",
							"item": [
								{
									"name": "getNetworkTraffic",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/traffic",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"traffic"
											],
											"query": [
												{
													"key": "t0",
													"value": "{{t0}}",
													"description": "The beginning of the timespan for the data. The maximum lookback period is 30 days from today.",
													"disabled": true
												},
												{
													"key": "timespan",
													"value": "{{timespan}}",
													"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 30 days.",
													"disabled": true
												},
												{
													"key": "deviceType",
													"value": "{{deviceType}}",
													"description": "Filter the data by device type: 'combined', 'wireless', 'switch' or 'appliance'. Defaults to 'combined'. When using 'combined', for each rule the data will come from the device type with the most usage.",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Return the traffic analysis data for this network. Traffic analysis with hostname visibility must be enabled on the network."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/traffic?t0=<string>&timespan=<float>&deviceType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"traffic"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>"
														},
														{
															"key": "timespan",
															"value": "<float>"
														},
														{
															"key": "deviceType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"application\": \"Gmail\",\n    \"destination\": \"2.3.4.5\",\n    \"protocol\": \"TCP\",\n    \"port\": 443,\n    \"sent\": 138,\n    \"recv\": 61,\n    \"numClients\": 7,\n    \"activeTime\": 77000,\n    \"flows\": 300\n  }\n]"
										}
									]
								}
							]
						},
						{
							"name": "uplinks",
							"item": [
								{
									"name": "lossAndLatencyHistory",
									"item": [
										{
											"name": "getDeviceLossAndLatencyHistory",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/lossAndLatencyHistory",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"lossAndLatencyHistory"
													],
													"query": [
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 60 days from today.",
															"disabled": true
														},
														{
															"key": "t1",
															"value": "{{t1}}",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
															"disabled": true
														},
														{
															"key": "resolution",
															"value": "{{resolution}}",
															"description": "The time resolution in seconds for returned data. The valid resolutions are: 60, 600, 3600, 86400. The default is 60.",
															"disabled": true
														},
														{
															"key": "uplink",
															"value": "{{uplink}}",
															"description": "The WAN uplink used to obtain the requested stats. Valid uplinks are wan1, wan2, wan3, cellular. The default is wan1.",
															"disabled": true
														},
														{
															"key": "ip",
															"value": "{{ip}}",
															"description": "(Required) The destination IP used to obtain the requested stats. This is required.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Get the uplink loss percentage and latency in milliseconds, and goodput in kilobits per second for MX, MG and Z devices."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/lossAndLatencyHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&uplink=<string>&ip=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"lossAndLatencyHistory"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "t1",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																},
																{
																	"key": "resolution",
																	"value": "<integer>"
																},
																{
																	"key": "uplink",
																	"value": "<string>"
																},
																{
																	"key": "ip",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"startTime\": \"2018-10-09T22:18:27Z\",\n    \"endTime\": \"2018-10-09T22:19:27Z\",\n    \"lossPercent\": 5.23,\n    \"latencyMs\": 324.12,\n    \"goodput\": 1493,\n    \"jitter\": 11.2\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "statuses",
									"item": [
										{
											"name": "getOrganizationUplinksStatuses",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/uplinks/statuses",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"uplinks",
														"statuses"
													],
													"query": [
														{
															"key": "perPage",
															"value": "{{perPage}}",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
															"disabled": true
														},
														{
															"key": "startingAfter",
															"value": "{{startingAfter}}",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "endingBefore",
															"value": "{{endingBefore}}",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "networkIds",
															"value": "{{networkIds}}",
															"description": "A list of network IDs. The returned devices will be filtered to only include these networks.",
															"disabled": true
														},
														{
															"key": "networkIds",
															"value": "{{networkIds}}",
															"description": "A list of network IDs. The returned devices will be filtered to only include these networks.",
															"disabled": true
														},
														{
															"key": "serials",
															"value": "{{serials}}",
															"description": "A list of serial numbers. The returned devices will be filtered to only include these serials.",
															"disabled": true
														},
														{
															"key": "serials",
															"value": "{{serials}}",
															"description": "A list of serial numbers. The returned devices will be filtered to only include these serials.",
															"disabled": true
														},
														{
															"key": "iccids",
															"value": "{{iccids}}",
															"description": "A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs.",
															"disabled": true
														},
														{
															"key": "iccids",
															"value": "{{iccids}}",
															"description": "A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the uplink status of every Meraki MX, MG and Z series devices in the organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/uplinks/statuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&iccids=<string>&iccids=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"uplinks",
																"statuses"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>"
																},
																{
																	"key": "startingAfter",
																	"value": "<string>"
																},
																{
																	"key": "endingBefore",
																	"value": "<string>"
																},
																{
																	"key": "networkIds",
																	"value": "<string>"
																},
																{
																	"key": "networkIds",
																	"value": "<string>"
																},
																{
																	"key": "serials",
																	"value": "<string>"
																},
																{
																	"key": "serials",
																	"value": "<string>"
																},
																{
																	"key": "iccids",
																	"value": "<string>"
																},
																{
																	"key": "iccids",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Link",
															"value": "Lorem nisi fugiat",
															"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"networkId\": \"N_24329156\",\n    \"serial\": \"Q234-ABCD-5678\",\n    \"model\": \"MX68C\",\n    \"lastReportedAt\": \"2018-02-11T00:00:00Z\",\n    \"highAvailability\": {\n      \"enabled\": true,\n      \"role\": \"primary\"\n    },\n    \"uplinks\": [\n      {\n        \"interface\": \"wan1\",\n        \"status\": \"active\",\n        \"ip\": \"1.2.3.4\",\n        \"gateway\": \"1.2.3.5\",\n        \"publicIp\": \"123.123.123.1\",\n        \"primaryDns\": \"8.8.8.8\",\n        \"secondaryDns\": \"8.8.4.4\",\n        \"ipAssignedBy\": \"static\",\n        \"provider\": \"at&t\",\n        \"signalStat\": {\n          \"rsrp\": \"-120\",\n          \"rsrq\": \"-13\"\n        },\n        \"mcc\": \"123\",\n        \"mnc\": \"123\",\n        \"roaming\": {\n          \"status\": \"home\"\n        },\n        \"connectionType\": \"4g\",\n        \"apn\": \"internet\",\n        \"dns1\": \"111.111.111.111\",\n        \"dns2\": \"222.222.222.222\",\n        \"signalType\": \"4G\",\n        \"mtu\": 1500,\n        \"iccid\": \"123456789\",\n        \"imsi\": \"123456789012345\",\n        \"msisdn\": \"123456789012345\"\n      }\n    ]\n  }\n]"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "webhooks",
							"item": [
								{
									"name": "alertTypes",
									"item": [
										{
											"name": "getOrganizationWebhooksAlertTypes",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/webhooks/alertTypes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"webhooks",
														"alertTypes"
													],
													"query": [
														{
															"key": "productType",
															"value": "{{productType}}",
															"description": "Filter sample alerts to a specific product type",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return a list of alert types to be used with managing webhook alerts"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/webhooks/alertTypes?productType=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"webhooks",
																"alertTypes"
															],
															"query": [
																{
																	"key": "productType",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"alertTypeId\": \"stopped_reporting\",\n  \"alertType\": \"APs went down\",\n  \"example\": {\n    \"version\": \"0.1\",\n    \"sharedSecret\": \"secret\",\n    \"sentAt\": \"2018-02-11T00:00:00.090210Z\",\n    \"alertId\": \"0000000000000000\",\n    \"alertLevel\": \"warning\",\n    \"occurredAt\": \"2018-02-11T00:00:00.090210Z\",\n    \"organizationId\": \"2930418\",\n    \"organizationName\": \"My organization\",\n    \"organizationUrl\": \"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview\",\n    \"deviceSerial\": \"Q234-ABCD-5678\",\n    \"deviceMac\": \"00:11:22:33:44:55\",\n    \"deviceName\": \"My AP\",\n    \"deviceUrl\": \"https://n1.meraki.com//n//manage/nodes/new_list/000000000000\",\n    \"deviceTags\": [\n      \"tag1\",\n      \"tag2\"\n    ],\n    \"deviceModel\": \"MR34\",\n    \"networkId\": \"N_24329156\",\n    \"networkName\": \"Main Office\",\n    \"networkUrl\": \"https://n1.meraki.com//n//manage/nodes/list\",\n    \"enrollmentString\": \"my-enrollment-string\",\n    \"notes\": \"Additional description of the network\",\n    \"productTypes\": [\n      \"appliance\",\n      \"switch\",\n      \"wireless\"\n    ],\n    \"encryptedId\": \"6GREra\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "logs",
									"item": [
										{
											"name": "getOrganizationWebhooksLogs",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/webhooks/logs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"webhooks",
														"logs"
													],
													"query": [
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 90 days from today.",
															"disabled": true
														},
														{
															"key": "t1",
															"value": "{{t1}}",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
															"disabled": true
														},
														{
															"key": "perPage",
															"value": "{{perPage}}",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.",
															"disabled": true
														},
														{
															"key": "startingAfter",
															"value": "{{startingAfter}}",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "endingBefore",
															"value": "{{endingBefore}}",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "url",
															"value": "https://api.postman.com",
															"description": "The URL the webhook was sent to",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the log of webhook POSTs sent"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/webhooks/logs?t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&url=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"webhooks",
																"logs"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "t1",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																},
																{
																	"key": "perPage",
																	"value": "<integer>"
																},
																{
																	"key": "startingAfter",
																	"value": "<string>"
																},
																{
																	"key": "endingBefore",
																	"value": "<string>"
																},
																{
																	"key": "url",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Link",
															"value": "Lorem nisi fugiat",
															"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"alertType\": \"Settings changed\",\n    \"loggedAt\": \"2019-01-01T13:37:28.423456Z\",\n    \"networkId\": \"N_24329156\",\n    \"organizationId\": \"2930418\",\n    \"responseCode\": 200,\n    \"responseDuration\": 244,\n    \"sentAt\": \"2019-01-01T13:37:28.123456Z\",\n    \"url\": \"https://www.example.com/path\"\n  }\n]"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "products",
			"item": [
				{
					"name": "appliance",
					"item": [
						{
							"name": "configure",
							"item": [
								{
									"name": "connectivityMonitoringDestinations",
									"item": [
										{
											"name": "getNetworkApplianceConnectivityMonitoringDestinations",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/connectivityMonitoringDestinations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"connectivityMonitoringDestinations"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the connectivity testing destinations for an MX network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/connectivityMonitoringDestinations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"connectivityMonitoringDestinations"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"destinations\": [\n    {\n      \"ip\": \"1.2.3.4\",\n      \"description\": \"Google\",\n      \"default\": false\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "updateNetworkApplianceConnectivityMonitoringDestinations",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"destinations\": [\n    {\n      \"ip\": \"<string>\",\n      \"description\": \"<string>\",\n      \"default\": \"<boolean>\"\n    },\n    {\n      \"ip\": \"<string>\",\n      \"description\": \"<string>\",\n      \"default\": \"<boolean>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/connectivityMonitoringDestinations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"connectivityMonitoringDestinations"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the connectivity testing destinations for an MX network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"destinations\": [\n    {\n      \"ip\": \"<string>\",\n      \"description\": \"<string>\",\n      \"default\": \"<boolean>\"\n    },\n    {\n      \"ip\": \"<string>\",\n      \"description\": \"<string>\",\n      \"default\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/connectivityMonitoringDestinations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"connectivityMonitoringDestinations"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"destinations\": [\n    {\n      \"ip\": \"1.2.3.4\",\n      \"description\": \"Google\",\n      \"default\": false\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "contentFiltering",
									"item": [
										{
											"name": "categories",
											"item": [
												{
													"name": "getNetworkApplianceContentFilteringCategories",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/contentFiltering/categories",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"contentFiltering",
																"categories"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List all available content filtering categories for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/contentFiltering/categories",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"contentFiltering",
																		"categories"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"categories\": [\n    {\n      \"id\": \"meraki:contentFiltering/category/1\",\n      \"name\": \"Real Estate\"\n    },\n    {\n      \"id\": \"meraki:contentFiltering/category/3\",\n      \"name\": \"Financial Services\"\n    },\n    \"...\",\n    {\n      \"id\": \"meraki:contentFiltering/category/11\",\n      \"name\": \"Adult and Pornography\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "getNetworkApplianceContentFiltering",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/contentFiltering",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"contentFiltering"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the content filtering settings for an MX network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/contentFiltering",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"contentFiltering"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"allowedUrlPatterns\": [\n    \"http://www.example.org\",\n    \"http://help.com.au\"\n  ],\n  \"blockedUrlPatterns\": [\n    \"http://www.example.com\",\n    \"http://www.betting.com\"\n  ],\n  \"blockedUrlCategories\": [\n    {\n      \"id\": \"meraki:contentFiltering/category/1\",\n      \"name\": \"Real Estate\"\n    },\n    {\n      \"id\": \"meraki:contentFiltering/category/7\",\n      \"name\": \"Shopping\"\n    }\n  ],\n  \"urlCategoryListSize\": \"topSites\"\n}"
												}
											]
										},
										{
											"name": "updateNetworkApplianceContentFiltering",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"allowedUrlPatterns\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"blockedUrlPatterns\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"blockedUrlCategories\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"urlCategoryListSize\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/contentFiltering",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"contentFiltering"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the content filtering settings for an MX network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"allowedUrlPatterns\": [\n    \"http://www.example.org\",\n    \"http://help.com.au\"\n  ],\n  \"blockedUrlPatterns\": [\n    \"http://www.example.com\",\n    \"http://www.betting.com\"\n  ],\n  \"blockedUrlCategories\": [\n    \"meraki:contentFiltering/category/1\",\n    \"meraki:contentFiltering/category/7\"\n  ],\n  \"urlCategoryListSize\": \"topSites\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/contentFiltering",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"contentFiltering"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"allowedUrlPatterns\": [\n    \"http://www.example.org\",\n    \"http://help.com.au\"\n  ],\n  \"blockedUrlPatterns\": [\n    \"http://www.example.com\",\n    \"http://www.betting.com\"\n  ],\n  \"blockedUrlCategories\": [\n    {\n      \"id\": \"meraki:contentFiltering/category/1\",\n      \"name\": \"Real Estate\"\n    },\n    {\n      \"id\": \"meraki:contentFiltering/category/7\",\n      \"name\": \"Shopping\"\n    }\n  ],\n  \"urlCategoryListSize\": \"topSites\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "dns",
									"item": [
										{
											"name": "local",
											"item": [
												{
													"name": "profiles",
													"item": [
														{
															"name": "assignments",
															"item": [
																{
																	"name": "bulkDelete",
																	"item": [
																		{
																			"name": "createOrganizationApplianceDnsLocalProfilesAssignmentsBulkDelete",
																			"protocolProfileBehavior": {
																				"followAuthorizationHeader": false
																			},
																			"request": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"items\": [\n    {\n      \"assignmentId\": \"<string>\"\n    },\n    {\n      \"assignmentId\": \"<string>\"\n    }\n  ]\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/local/profiles/assignments/bulkDelete",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"appliance",
																						"dns",
																						"local",
																						"profiles",
																						"assignments",
																						"bulkDelete"
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "{{organizationId}}",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				},
																				"description": "Unassign the local DNS profile to networks in the organization"
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "POST",
																						"header": [
																							{
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>",
																								"description": "Added as a part of security scheme: apikey"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n  \"items\": [\n    {\n      \"assignmentId\": \"<string>\"\n    },\n    {\n      \"assignmentId\": \"<string>\"\n    }\n  ]\n}",
																							"options": {
																								"raw": {
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/local/profiles/assignments/bulkDelete",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"organizations",
																								":organizationId",
																								"appliance",
																								"dns",
																								"local",
																								"profiles",
																								"assignments",
																								"bulkDelete"
																							],
																							"variable": [
																								{
																									"key": "organizationId",
																									"value": "<string>",
																									"description": "(Required) Organization ID"
																								},
																								{
																									"key": "basePath",
																									"value": "{{basePath}}"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"items\": [\n    {\n      \"assignmentId\": \"123456\",\n      \"network\": {\n        \"id\": \"N_123456\"\n      },\n      \"profile\": {\n        \"id\": \"1234\"\n      }\n    }\n  ]\n}"
																				}
																			]
																		}
																	]
																},
																{
																	"name": "bulkOrganizationApplianceDnsLocalProfilesAssignmentsCreate",
																	"protocolProfileBehavior": {
																		"followAuthorizationHeader": false
																	},
																	"request": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"items\": [\n    {\n      \"network\": {\n        \"id\": \"<string>\"\n      },\n      \"profile\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"network\": {\n        \"id\": \"<string>\"\n      },\n      \"profile\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/local/profiles/assignments/bulkCreate",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"appliance",
																				"dns",
																				"local",
																				"profiles",
																				"assignments",
																				"bulkCreate"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "{{organizationId}}",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		},
																		"description": "Assign the local DNS profile to networks in the organization"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"items\": [\n    {\n      \"network\": {\n        \"id\": \"<string>\"\n      },\n      \"profile\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"network\": {\n        \"id\": \"<string>\"\n      },\n      \"profile\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/local/profiles/assignments/bulkCreate",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"appliance",
																						"dns",
																						"local",
																						"profiles",
																						"assignments",
																						"bulkCreate"
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "<string>",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"items\": [\n    {\n      \"assignmentId\": \"123456\",\n      \"network\": {\n        \"id\": \"N_123456\"\n      },\n      \"profile\": {\n        \"id\": \"1234\"\n      }\n    }\n  ]\n}"
																		}
																	]
																},
																{
																	"name": "getOrganizationApplianceDnsLocalProfilesAssignments",
																	"protocolProfileBehavior": {
																		"followAuthorizationHeader": false
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/local/profiles/assignments",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"appliance",
																				"dns",
																				"local",
																				"profiles",
																				"assignments"
																			],
																			"query": [
																				{
																					"key": "profileIds",
																					"value": "{{profileIds}}",
																					"description": "Optional parameter to filter the results by profile IDs",
																					"disabled": true
																				},
																				{
																					"key": "profileIds",
																					"value": "{{profileIds}}",
																					"description": "Optional parameter to filter the results by profile IDs",
																					"disabled": true
																				},
																				{
																					"key": "networkIds",
																					"value": "{{networkIds}}",
																					"description": "Optional parameter to filter the results by network IDs",
																					"disabled": true
																				},
																				{
																					"key": "networkIds",
																					"value": "{{networkIds}}",
																					"description": "Optional parameter to filter the results by network IDs",
																					"disabled": true
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "{{organizationId}}",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		},
																		"description": "Fetch the local DNS profile assignments in the organization"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/local/profiles/assignments?profileIds=<string>&profileIds=<string>&networkIds=<string>&networkIds=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"appliance",
																						"dns",
																						"local",
																						"profiles",
																						"assignments"
																					],
																					"query": [
																						{
																							"key": "profileIds",
																							"value": "<string>"
																						},
																						{
																							"key": "profileIds",
																							"value": "<string>"
																						},
																						{
																							"key": "networkIds",
																							"value": "<string>"
																						},
																						{
																							"key": "networkIds",
																							"value": "<string>"
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "<string>",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"items\": [\n    {\n      \"assignmentId\": \"123456\",\n      \"network\": {\n        \"id\": \"N_123456\"\n      },\n      \"profile\": {\n        \"id\": \"1234\"\n      }\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 10,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "createOrganizationApplianceDnsLocalProfile",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/local/profiles",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"dns",
																		"local",
																		"profiles"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Create a new local DNS profile"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"Default profile\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/local/profiles",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"appliance",
																				"dns",
																				"local",
																				"profiles"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"profileId\": \"123456\",\n  \"name\": \"Default profile\"\n}"
																}
															]
														},
														{
															"name": "deleteOrganizationApplianceDnsLocalProfile",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/local/profiles/:profileId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"dns",
																		"local",
																		"profiles",
																		":profileId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "profileId",
																			"value": "{{profileId}}",
																			"description": "(Required) Profile ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Deletes a local DNS profile"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/local/profiles/:profileId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"appliance",
																				"dns",
																				"local",
																				"profiles",
																				":profileId"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "profileId",
																					"value": "<string>",
																					"description": "(Required) Profile ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "getOrganizationApplianceDnsLocalProfiles",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/local/profiles",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"dns",
																		"local",
																		"profiles"
																	],
																	"query": [
																		{
																			"key": "profileIds",
																			"value": "{{profileIds}}",
																			"description": "Optional parameter to filter the results by profile IDs",
																			"disabled": true
																		},
																		{
																			"key": "profileIds",
																			"value": "{{profileIds}}",
																			"description": "Optional parameter to filter the results by profile IDs",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Fetch the local DNS profiles used in the organization"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/local/profiles?profileIds=<string>&profileIds=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"appliance",
																				"dns",
																				"local",
																				"profiles"
																			],
																			"query": [
																				{
																					"key": "profileIds",
																					"value": "<string>"
																				},
																				{
																					"key": "profileIds",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"profileId\": \"123456\",\n    \"name\": \"Default profile\"\n  }\n]"
																}
															]
														},
														{
															"name": "updateOrganizationApplianceDnsLocalProfile",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/local/profiles/:profileId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"dns",
																		"local",
																		"profiles",
																		":profileId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "profileId",
																			"value": "{{profileId}}",
																			"description": "(Required) Profile ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Update a local DNS profile"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"Default profile\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/local/profiles/:profileId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"appliance",
																				"dns",
																				"local",
																				"profiles",
																				":profileId"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "profileId",
																					"value": "<string>",
																					"description": "(Required) Profile ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"profileId\": \"123456\",\n  \"name\": \"Default profile\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "records",
													"item": [
														{
															"name": "createOrganizationApplianceDnsLocalRecord",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"hostname\": \"<string>\",\n  \"address\": \"<string>\",\n  \"profile\": {\n    \"id\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/local/records",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"dns",
																		"local",
																		"records"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Create a new local DNS record"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"hostname\": \"www.test.com\",\n  \"address\": \"10.1.1.0\",\n  \"profile\": {}\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/local/records",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"appliance",
																				"dns",
																				"local",
																				"records"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"recordId\": \"12345\",\n    \"hostname\": \"www.test.com\",\n    \"address\": \"10.1.1.0\",\n    \"profile\": {\n      \"id\": \"1\"\n    }\n  }\n]"
																}
															]
														},
														{
															"name": "deleteOrganizationApplianceDnsLocalRecord",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/local/records/:recordId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"dns",
																		"local",
																		"records",
																		":recordId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "recordId",
																			"value": "{{recordId}}",
																			"description": "(Required) Record ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Deletes a local DNS record"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/local/records/:recordId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"appliance",
																				"dns",
																				"local",
																				"records",
																				":recordId"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "recordId",
																					"value": "<string>",
																					"description": "(Required) Record ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "getOrganizationApplianceDnsLocalRecords",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/local/records",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"dns",
																		"local",
																		"records"
																	],
																	"query": [
																		{
																			"key": "profileIds",
																			"value": "{{profileIds}}",
																			"description": "Optional parameter to filter the results by profile IDs",
																			"disabled": true
																		},
																		{
																			"key": "profileIds",
																			"value": "{{profileIds}}",
																			"description": "Optional parameter to filter the results by profile IDs",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Fetch the DNS records used in local DNS profiles"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/local/records?profileIds=<string>&profileIds=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"appliance",
																				"dns",
																				"local",
																				"records"
																			],
																			"query": [
																				{
																					"key": "profileIds",
																					"value": "<string>"
																				},
																				{
																					"key": "profileIds",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"recordId\": \"12345\",\n    \"hostname\": \"www.test.com\",\n    \"address\": \"10.1.1.0\",\n    \"profile\": {\n      \"id\": \"1\"\n    }\n  }\n]"
																}
															]
														},
														{
															"name": "updateOrganizationApplianceDnsLocalRecord",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"hostname\": \"<string>\",\n  \"address\": \"<string>\",\n  \"profile\": {\n    \"id\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/local/records/:recordId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"dns",
																		"local",
																		"records",
																		":recordId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "recordId",
																			"value": "{{recordId}}",
																			"description": "(Required) Record ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Updates a local DNS record"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"hostname\": \"www.test.com\",\n  \"address\": \"10.1.1.0\",\n  \"profile\": {}\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/local/records/:recordId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"appliance",
																				"dns",
																				"local",
																				"records",
																				":recordId"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "recordId",
																					"value": "<string>",
																					"description": "(Required) Record ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"recordId\": \"12345\",\n  \"hostname\": \"www.test.com\",\n  \"address\": \"10.1.1.0\",\n  \"profile\": {\n    \"id\": \"1\"\n  }\n}"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "split",
											"item": [
												{
													"name": "profiles",
													"item": [
														{
															"name": "assignments",
															"item": [
																{
																	"name": "bulkCreate",
																	"item": [
																		{
																			"name": "createOrganizationApplianceDnsSplitProfilesAssignmentsBulkCreate",
																			"protocolProfileBehavior": {
																				"followAuthorizationHeader": false
																			},
																			"request": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"items\": [\n    {\n      \"network\": {\n        \"id\": \"<string>\"\n      },\n      \"profile\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"network\": {\n        \"id\": \"<string>\"\n      },\n      \"profile\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/split/profiles/assignments/bulkCreate",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"appliance",
																						"dns",
																						"split",
																						"profiles",
																						"assignments",
																						"bulkCreate"
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "{{organizationId}}",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				},
																				"description": "Assign the split DNS profile to networks in the organization"
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "POST",
																						"header": [
																							{
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>",
																								"description": "Added as a part of security scheme: apikey"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n  \"items\": [\n    {\n      \"network\": {\n        \"id\": \"<string>\"\n      },\n      \"profile\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"network\": {\n        \"id\": \"<string>\"\n      },\n      \"profile\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
																							"options": {
																								"raw": {
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/split/profiles/assignments/bulkCreate",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"organizations",
																								":organizationId",
																								"appliance",
																								"dns",
																								"split",
																								"profiles",
																								"assignments",
																								"bulkCreate"
																							],
																							"variable": [
																								{
																									"key": "organizationId",
																									"value": "<string>",
																									"description": "(Required) Organization ID"
																								},
																								{
																									"key": "basePath",
																									"value": "{{basePath}}"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"items\": [\n    {\n      \"assignmentId\": \"123456\",\n      \"network\": {\n        \"id\": \"N_123456\"\n      },\n      \"profile\": {\n        \"id\": \"1234\"\n      }\n    }\n  ]\n}"
																				}
																			]
																		}
																	]
																},
																{
																	"name": "bulkDelete",
																	"item": [
																		{
																			"name": "createOrganizationApplianceDnsSplitProfilesAssignmentsBulkDelete",
																			"protocolProfileBehavior": {
																				"followAuthorizationHeader": false
																			},
																			"request": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"items\": [\n    {\n      \"assignmentId\": \"<string>\"\n    },\n    {\n      \"assignmentId\": \"<string>\"\n    }\n  ]\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/split/profiles/assignments/bulkDelete",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"appliance",
																						"dns",
																						"split",
																						"profiles",
																						"assignments",
																						"bulkDelete"
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "{{organizationId}}",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				},
																				"description": "Unassign the split DNS profile to networks in the organization"
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "POST",
																						"header": [
																							{
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>",
																								"description": "Added as a part of security scheme: apikey"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n  \"items\": [\n    {\n      \"assignmentId\": \"<string>\"\n    },\n    {\n      \"assignmentId\": \"<string>\"\n    }\n  ]\n}",
																							"options": {
																								"raw": {
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/split/profiles/assignments/bulkDelete",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"organizations",
																								":organizationId",
																								"appliance",
																								"dns",
																								"split",
																								"profiles",
																								"assignments",
																								"bulkDelete"
																							],
																							"variable": [
																								{
																									"key": "organizationId",
																									"value": "<string>",
																									"description": "(Required) Organization ID"
																								},
																								{
																									"key": "basePath",
																									"value": "{{basePath}}"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"items\": [\n    {\n      \"assignmentId\": \"123456\",\n      \"network\": {\n        \"id\": \"N_123456\"\n      },\n      \"profile\": {\n        \"id\": \"1234\"\n      }\n    }\n  ]\n}"
																				}
																			]
																		}
																	]
																},
																{
																	"name": "getOrganizationApplianceDnsSplitProfilesAssignments",
																	"protocolProfileBehavior": {
																		"followAuthorizationHeader": false
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/split/profiles/assignments",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"appliance",
																				"dns",
																				"split",
																				"profiles",
																				"assignments"
																			],
																			"query": [
																				{
																					"key": "profileIds",
																					"value": "{{profileIds}}",
																					"description": "Optional parameter to filter the results by profile IDs",
																					"disabled": true
																				},
																				{
																					"key": "profileIds",
																					"value": "{{profileIds}}",
																					"description": "Optional parameter to filter the results by profile IDs",
																					"disabled": true
																				},
																				{
																					"key": "networkIds",
																					"value": "{{networkIds}}",
																					"description": "Optional parameter to filter the results by network IDs",
																					"disabled": true
																				},
																				{
																					"key": "networkIds",
																					"value": "{{networkIds}}",
																					"description": "Optional parameter to filter the results by network IDs",
																					"disabled": true
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "{{organizationId}}",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		},
																		"description": "Fetch the split DNS profile assignments in the organization"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/split/profiles/assignments?profileIds=<string>&profileIds=<string>&networkIds=<string>&networkIds=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"appliance",
																						"dns",
																						"split",
																						"profiles",
																						"assignments"
																					],
																					"query": [
																						{
																							"key": "profileIds",
																							"value": "<string>"
																						},
																						{
																							"key": "profileIds",
																							"value": "<string>"
																						},
																						{
																							"key": "networkIds",
																							"value": "<string>"
																						},
																						{
																							"key": "networkIds",
																							"value": "<string>"
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "<string>",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"items\": [\n    {\n      \"assignmentId\": \"123456\",\n      \"network\": {\n        \"id\": \"N_123456\"\n      },\n      \"profile\": {\n        \"id\": \"1234\"\n      }\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 10,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "createOrganizationApplianceDnsSplitProfile",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"hostnames\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"nameservers\": {\n    \"addresses\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/split/profiles",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"dns",
																		"split",
																		"profiles"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Create a new split DNS profile"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"<string>\",\n  \"hostnames\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"nameservers\": {\n    \"addresses\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/split/profiles",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"appliance",
																				"dns",
																				"split",
																				"profiles"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"profileId\": \"123456\",\n  \"name\": \"Default profile\",\n  \"hostnames\": [\n    \"*.test1.com\",\n    \"*.test2.com\"\n  ],\n  \"nameservers\": {\n    \"addresses\": [\n      \"12.1.10.1\"\n    ]\n  }\n}"
																}
															]
														},
														{
															"name": "deleteOrganizationApplianceDnsSplitProfile",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/split/profiles/:profileId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"dns",
																		"split",
																		"profiles",
																		":profileId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "profileId",
																			"value": "{{profileId}}",
																			"description": "(Required) Profile ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Deletes a split DNS profile"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/split/profiles/:profileId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"appliance",
																				"dns",
																				"split",
																				"profiles",
																				":profileId"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "profileId",
																					"value": "<string>",
																					"description": "(Required) Profile ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "getOrganizationApplianceDnsSplitProfiles",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/split/profiles",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"dns",
																		"split",
																		"profiles"
																	],
																	"query": [
																		{
																			"key": "profileIds",
																			"value": "{{profileIds}}",
																			"description": "Optional parameter to filter the results by profile IDs",
																			"disabled": true
																		},
																		{
																			"key": "profileIds",
																			"value": "{{profileIds}}",
																			"description": "Optional parameter to filter the results by profile IDs",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Fetch the split DNS profiles used in the organization"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/split/profiles?profileIds=<string>&profileIds=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"appliance",
																				"dns",
																				"split",
																				"profiles"
																			],
																			"query": [
																				{
																					"key": "profileIds",
																					"value": "<string>"
																				},
																				{
																					"key": "profileIds",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"profileId\": \"123456\",\n    \"name\": \"Default profile\",\n    \"hostnames\": [\n      \"*.test1.com\",\n      \"*.test2.com\"\n    ],\n    \"nameservers\": {\n      \"addresses\": [\n        \"12.1.10.1\"\n      ]\n    }\n  }\n]"
																}
															]
														},
														{
															"name": "updateOrganizationApplianceDnsSplitProfile",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"hostnames\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"nameservers\": {\n    \"addresses\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/split/profiles/:profileId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"dns",
																		"split",
																		"profiles",
																		":profileId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "profileId",
																			"value": "{{profileId}}",
																			"description": "(Required) Profile ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Update a split DNS profile"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"<string>\",\n  \"hostnames\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"nameservers\": {\n    \"addresses\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/appliance/dns/split/profiles/:profileId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"appliance",
																				"dns",
																				"split",
																				"profiles",
																				":profileId"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "profileId",
																					"value": "<string>",
																					"description": "(Required) Profile ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"profileId\": \"123456\",\n  \"name\": \"Default profile\",\n  \"hostnames\": [\n    \"*.test1.com\",\n    \"*.test2.com\"\n  ],\n  \"nameservers\": {\n    \"addresses\": [\n      \"12.1.10.1\"\n    ]\n  }\n}"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "firewall",
									"item": [
										{
											"name": "cellularFirewallRules",
											"item": [
												{
													"name": "getNetworkApplianceFirewallCellularFirewallRules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/cellularFirewallRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"firewall",
																"cellularFirewallRules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the cellular firewall rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/cellularFirewallRules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"firewall",
																		"cellularFirewallRules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"rules\": [\n    {\n      \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\n      \"policy\": \"allow\",\n      \"protocol\": \"tcp\",\n      \"destPort\": \"443\",\n      \"destCidr\": \"192.168.1.0/24\",\n      \"srcPort\": \"Any\",\n      \"srcCidr\": \"Any\",\n      \"syslogEnabled\": false\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "updateNetworkApplianceFirewallCellularFirewallRules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/cellularFirewallRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"firewall",
																"cellularFirewallRules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the cellular firewall rules of an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/cellularFirewallRules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"firewall",
																		"cellularFirewallRules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"rules\": [\n    {\n      \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\n      \"policy\": \"allow\",\n      \"protocol\": \"tcp\",\n      \"destPort\": \"443\",\n      \"destCidr\": \"192.168.1.0/24\",\n      \"srcPort\": \"Any\",\n      \"srcCidr\": \"Any\",\n      \"syslogEnabled\": false\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "firewalledServices",
											"item": [
												{
													"name": "getNetworkApplianceFirewallFirewalledService",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/firewalledServices/:service",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"firewall",
																"firewalledServices",
																":service"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "service",
																	"value": "{{service}}",
																	"description": "(Required) Service"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/firewalledServices/:service",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"firewall",
																		"firewalledServices",
																		":service"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "service",
																			"value": "<string>",
																			"description": "(Required) Service"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"service\": \"web\",\n  \"access\": \"restricted\",\n  \"allowedIps\": [\n    \"123.123.123.1\"\n  ]\n}"
														}
													]
												},
												{
													"name": "getNetworkApplianceFirewallFirewalledServices",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/firewalledServices",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"firewall",
																"firewalledServices"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the appliance services and their accessibility rules"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/firewalledServices",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"firewall",
																		"firewalledServices"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"service\": \"web\",\n    \"access\": \"restricted\",\n    \"allowedIps\": [\n      \"123.123.123.1\"\n    ]\n  }\n]"
														}
													]
												},
												{
													"name": "updateNetworkApplianceFirewallFirewalledService",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"access\": \"<string>\",\n  \"allowedIps\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/firewalledServices/:service",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"firewall",
																"firewalledServices",
																":service"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "service",
																	"value": "{{service}}",
																	"description": "(Required) Service"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"access\": \"<string>\",\n  \"allowedIps\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/firewalledServices/:service",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"firewall",
																		"firewalledServices",
																		":service"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "service",
																			"value": "<string>",
																			"description": "(Required) Service"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"service\": \"web\",\n  \"access\": \"restricted\",\n  \"allowedIps\": [\n    \"123.123.123.1\"\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "inboundCellularFirewallRules",
											"item": [
												{
													"name": "getNetworkApplianceFirewallInboundCellularFirewallRules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/inboundCellularFirewallRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"firewall",
																"inboundCellularFirewallRules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the inbound cellular firewall rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/inboundCellularFirewallRules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"firewall",
																		"inboundCellularFirewallRules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"rules\": [\n    {\n      \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\n      \"policy\": \"allow\",\n      \"protocol\": \"tcp\",\n      \"srcPort\": \"Any\",\n      \"srcCidr\": \"Any\",\n      \"destPort\": \"443\",\n      \"destCidr\": \"192.168.1.0/24\",\n      \"syslogEnabled\": false\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "updateNetworkApplianceFirewallInboundCellularFirewallRules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/inboundCellularFirewallRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"firewall",
																"inboundCellularFirewallRules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the inbound cellular firewall rules of an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/inboundCellularFirewallRules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"firewall",
																		"inboundCellularFirewallRules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"rules\": [\n    {\n      \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\n      \"policy\": \"allow\",\n      \"protocol\": \"tcp\",\n      \"srcPort\": \"Any\",\n      \"srcCidr\": \"Any\",\n      \"destPort\": \"443\",\n      \"destCidr\": \"192.168.1.0/24\",\n      \"syslogEnabled\": false\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "inboundFirewallRules",
											"item": [
												{
													"name": "getNetworkApplianceFirewallInboundFirewallRules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/inboundFirewallRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"firewall",
																"inboundFirewallRules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the inbound firewall rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/inboundFirewallRules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"firewall",
																		"inboundFirewallRules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"rules\": [\n    {\n      \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\n      \"policy\": \"allow\",\n      \"protocol\": \"tcp\",\n      \"srcPort\": \"Any\",\n      \"srcCidr\": \"Any\",\n      \"destPort\": \"443\",\n      \"destCidr\": \"192.168.1.0/24\",\n      \"syslogEnabled\": false\n    }\n  ],\n  \"syslogDefaultRule\": false\n}"
														}
													]
												},
												{
													"name": "updateNetworkApplianceFirewallInboundFirewallRules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    }\n  ],\n  \"syslogDefaultRule\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/inboundFirewallRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"firewall",
																"inboundFirewallRules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the inbound firewall rules of an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    }\n  ],\n  \"syslogDefaultRule\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/inboundFirewallRules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"firewall",
																		"inboundFirewallRules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"rules\": [\n    {\n      \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\n      \"policy\": \"allow\",\n      \"protocol\": \"tcp\",\n      \"srcPort\": \"Any\",\n      \"srcCidr\": \"Any\",\n      \"destPort\": \"443\",\n      \"destCidr\": \"192.168.1.0/24\",\n      \"syslogEnabled\": false\n    }\n  ],\n  \"syslogDefaultRule\": false\n}"
														}
													]
												}
											]
										},
										{
											"name": "l3FirewallRules",
											"item": [
												{
													"name": "getNetworkApplianceFirewallL3FirewallRules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/l3FirewallRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"firewall",
																"l3FirewallRules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the L3 firewall rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/l3FirewallRules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"firewall",
																		"l3FirewallRules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"rules\": [\n    {\n      \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\n      \"policy\": \"allow\",\n      \"protocol\": \"tcp\",\n      \"destPort\": \"443\",\n      \"destCidr\": \"192.168.1.0/24\",\n      \"srcPort\": \"Any\",\n      \"srcCidr\": \"Any\",\n      \"syslogEnabled\": false\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "updateNetworkApplianceFirewallL3FirewallRules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    }\n  ],\n  \"syslogDefaultRule\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/l3FirewallRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"firewall",
																"l3FirewallRules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the L3 firewall rules of an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    }\n  ],\n  \"syslogDefaultRule\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/l3FirewallRules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"firewall",
																		"l3FirewallRules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"rules\": [\n    {\n      \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\n      \"policy\": \"allow\",\n      \"protocol\": \"tcp\",\n      \"destPort\": \"443\",\n      \"destCidr\": \"192.168.1.0/24\",\n      \"srcPort\": \"Any\",\n      \"srcCidr\": \"Any\",\n      \"syslogEnabled\": false\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "l7FirewallRules",
											"item": [
												{
													"name": "applicationCategories",
													"item": [
														{
															"name": "getNetworkApplianceFirewallL7FirewallRulesApplicationCategories",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/l7FirewallRules/applicationCategories",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"firewall",
																		"l7FirewallRules",
																		"applicationCategories"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Return the L7 firewall application categories and their associated applications for an MX network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/l7FirewallRules/applicationCategories",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"appliance",
																				"firewall",
																				"l7FirewallRules",
																				"applicationCategories"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"applicationCategories\": [\n    {\n      \"id\": \"meraki:layer7/category/24\",\n      \"name\": \"Advertising\",\n      \"applications\": [\n        {\n          \"id\": \"meraki:layer7/application/5\",\n          \"name\": \"Advertising.com\"\n        }\n      ]\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "getNetworkApplianceFirewallL7FirewallRules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/l7FirewallRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"firewall",
																"l7FirewallRules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the MX L7 firewall rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/l7FirewallRules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"firewall",
																		"l7FirewallRules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"rules\": [\n    {\n      \"policy\": \"deny\",\n      \"type\": \"host\",\n      \"value\": \"google.com\"\n    },\n    {\n      \"policy\": \"deny\",\n      \"type\": \"port\",\n      \"value\": \"23\"\n    },\n    {\n      \"policy\": \"deny\",\n      \"type\": \"ipRange\",\n      \"value\": \"10.11.12.00/24\"\n    },\n    {\n      \"policy\": \"deny\",\n      \"type\": \"ipRange\",\n      \"value\": \"10.11.12.00/24:5555\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "updateNetworkApplianceFirewallL7FirewallRules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/l7FirewallRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"firewall",
																"l7FirewallRules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the MX L7 firewall rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/l7FirewallRules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"firewall",
																		"l7FirewallRules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"rules\": [\n    {\n      \"policy\": \"deny\",\n      \"type\": \"host\",\n      \"value\": \"google.com\"\n    },\n    {\n      \"policy\": \"deny\",\n      \"type\": \"port\",\n      \"value\": \"23\"\n    },\n    {\n      \"policy\": \"deny\",\n      \"type\": \"ipRange\",\n      \"value\": \"10.11.12.00/24\"\n    },\n    {\n      \"policy\": \"deny\",\n      \"type\": \"ipRange\",\n      \"value\": \"10.11.12.00/24:5555\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "multicastForwarding",
											"item": [
												{
													"name": "byNetwork",
													"item": [
														{
															"name": "getOrganizationApplianceFirewallMulticastForwardingByNetwork",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/firewall/multicastForwarding/byNetwork",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"firewall",
																		"multicastForwarding",
																		"byNetwork"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "{{perPage}}",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																			"disabled": true
																		},
																		{
																			"key": "startingAfter",
																			"value": "{{startingAfter}}",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "endingBefore",
																			"value": "{{endingBefore}}",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Optional parameter to filter the results by network IDs",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Optional parameter to filter the results by network IDs",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "List Static Multicasting forwarding settings for MX networks"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/appliance/firewall/multicastForwarding/byNetwork?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"appliance",
																				"firewall",
																				"multicastForwarding",
																				"byNetwork"
																			],
																			"query": [
																				{
																					"key": "perPage",
																					"value": "<integer>"
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>"
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Link",
																			"value": "Lorem nisi fugiat",
																			"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"items\": [\n    {\n      \"network\": {\n        \"id\": \"N_24329156\",\n        \"name\": \"Main Office\"\n      },\n      \"rules\": [\n        {\n          \"description\": \"test\",\n          \"address\": \"224.0.0.1\",\n          \"vlanIds\": [\n            \"1\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 1,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "updateNetworkApplianceFirewallMulticastForwarding",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"description\": \"<string>\",\n      \"address\": \"<string>\",\n      \"vlanIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"description\": \"<string>\",\n      \"address\": \"<string>\",\n      \"vlanIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/multicastForwarding",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"firewall",
																"multicastForwarding"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update static multicast forward rules for a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rules\": [\n    {\n      \"description\": \"<string>\",\n      \"address\": \"<string>\",\n      \"vlanIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"description\": \"<string>\",\n      \"address\": \"<string>\",\n      \"vlanIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/multicastForwarding",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"firewall",
																		"multicastForwarding"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"network\": {\n    \"id\": \"N_24329156\",\n    \"name\": \"Main Office\"\n  },\n  \"rules\": [\n    {\n      \"description\": \"test\",\n      \"address\": \"224.0.0.1\",\n      \"vlanIds\": [\n        \"1\"\n      ]\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "oneToManyNatRules",
											"item": [
												{
													"name": "getNetworkApplianceFirewallOneToManyNatRules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/oneToManyNatRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"firewall",
																"oneToManyNatRules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the 1:Many NAT mapping rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/oneToManyNatRules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"firewall",
																		"oneToManyNatRules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"rules\": [\n    {\n      \"publicIp\": \"146.11.11.13\",\n      \"uplink\": \"internet1\",\n      \"portRules\": [\n        {\n          \"name\": \"Rule 1\",\n          \"protocol\": \"tcp\",\n          \"publicPort\": \"9443\",\n          \"localIp\": \"192.168.128.1\",\n          \"localPort\": \"443\",\n          \"allowedIps\": [\n            \"any\"\n          ]\n        },\n        {\n          \"name\": \"Rule 2\",\n          \"protocol\": \"tcp\",\n          \"publicPort\": \"8080\",\n          \"localIp\": \"192.168.128.1\",\n          \"localPort\": \"80\",\n          \"allowedIps\": [\n            \"10.82.110.0/24\",\n            \"10.82.111.0/24\"\n          ]\n        }\n      ]\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "updateNetworkApplianceFirewallOneToManyNatRules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"publicIp\": \"<string>\",\n      \"uplink\": \"<string>\",\n      \"portRules\": [\n        {\n          \"name\": \"<string>\",\n          \"protocol\": \"<string>\",\n          \"publicPort\": \"<string>\",\n          \"localIp\": \"<string>\",\n          \"localPort\": \"<string>\",\n          \"allowedIps\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"protocol\": \"<string>\",\n          \"publicPort\": \"<string>\",\n          \"localIp\": \"<string>\",\n          \"localPort\": \"<string>\",\n          \"allowedIps\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"publicIp\": \"<string>\",\n      \"uplink\": \"<string>\",\n      \"portRules\": [\n        {\n          \"name\": \"<string>\",\n          \"protocol\": \"<string>\",\n          \"publicPort\": \"<string>\",\n          \"localIp\": \"<string>\",\n          \"localPort\": \"<string>\",\n          \"allowedIps\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"protocol\": \"<string>\",\n          \"publicPort\": \"<string>\",\n          \"localIp\": \"<string>\",\n          \"localPort\": \"<string>\",\n          \"allowedIps\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/oneToManyNatRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"firewall",
																"oneToManyNatRules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Set the 1:Many NAT mapping rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rules\": [\n    {\n      \"publicIp\": \"<string>\",\n      \"uplink\": \"<string>\",\n      \"portRules\": [\n        {\n          \"name\": \"<string>\",\n          \"protocol\": \"<string>\",\n          \"publicPort\": \"<string>\",\n          \"localIp\": \"<string>\",\n          \"localPort\": \"<string>\",\n          \"allowedIps\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"protocol\": \"<string>\",\n          \"publicPort\": \"<string>\",\n          \"localIp\": \"<string>\",\n          \"localPort\": \"<string>\",\n          \"allowedIps\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"publicIp\": \"<string>\",\n      \"uplink\": \"<string>\",\n      \"portRules\": [\n        {\n          \"name\": \"<string>\",\n          \"protocol\": \"<string>\",\n          \"publicPort\": \"<string>\",\n          \"localIp\": \"<string>\",\n          \"localPort\": \"<string>\",\n          \"allowedIps\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"protocol\": \"<string>\",\n          \"publicPort\": \"<string>\",\n          \"localIp\": \"<string>\",\n          \"localPort\": \"<string>\",\n          \"allowedIps\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/oneToManyNatRules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"firewall",
																		"oneToManyNatRules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"rules\": [\n    {\n      \"publicIp\": \"146.11.11.13\",\n      \"uplink\": \"internet1\",\n      \"portRules\": [\n        {\n          \"name\": \"Rule 1\",\n          \"protocol\": \"tcp\",\n          \"publicPort\": \"9443\",\n          \"localIp\": \"192.168.128.1\",\n          \"localPort\": \"443\",\n          \"allowedIps\": [\n            \"any\"\n          ]\n        },\n        {\n          \"name\": \"Rule 2\",\n          \"protocol\": \"tcp\",\n          \"publicPort\": \"8080\",\n          \"localIp\": \"192.168.128.1\",\n          \"localPort\": \"80\",\n          \"allowedIps\": [\n            \"10.82.110.0/24\",\n            \"10.82.111.0/24\"\n          ]\n        }\n      ]\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "oneToOneNatRules",
											"item": [
												{
													"name": "getNetworkApplianceFirewallOneToOneNatRules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/oneToOneNatRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"firewall",
																"oneToOneNatRules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the 1:1 NAT mapping rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/oneToOneNatRules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"firewall",
																		"oneToOneNatRules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"rules\": [\n    {\n      \"name\": \"Service behind NAT\",\n      \"lanIp\": \"192.168.128.22\",\n      \"publicIp\": \"146.12.3.33\",\n      \"uplink\": \"internet1\",\n      \"allowedInbound\": [\n        {\n          \"protocol\": \"tcp\",\n          \"destinationPorts\": [\n            \"80\"\n          ],\n          \"allowedIps\": [\n            \"10.82.112.0/24\",\n            \"10.82.0.0/16\"\n          ]\n        },\n        {\n          \"protocol\": \"udp\",\n          \"destinationPorts\": [\n            \"8080\"\n          ],\n          \"allowedIps\": [\n            \"10.81.110.5\",\n            \"10.81.0.0/16\"\n          ]\n        }\n      ]\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "updateNetworkApplianceFirewallOneToOneNatRules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"lanIp\": \"<string>\",\n      \"name\": \"<string>\",\n      \"publicIp\": \"<string>\",\n      \"uplink\": \"<string>\",\n      \"allowedInbound\": [\n        {\n          \"protocol\": \"<string>\",\n          \"destinationPorts\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"allowedIps\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"protocol\": \"<string>\",\n          \"destinationPorts\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"allowedIps\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"lanIp\": \"<string>\",\n      \"name\": \"<string>\",\n      \"publicIp\": \"<string>\",\n      \"uplink\": \"<string>\",\n      \"allowedInbound\": [\n        {\n          \"protocol\": \"<string>\",\n          \"destinationPorts\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"allowedIps\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"protocol\": \"<string>\",\n          \"destinationPorts\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"allowedIps\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/oneToOneNatRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"firewall",
																"oneToOneNatRules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Set the 1:1 NAT mapping rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rules\": [\n    {\n      \"lanIp\": \"<string>\",\n      \"name\": \"<string>\",\n      \"publicIp\": \"<string>\",\n      \"uplink\": \"<string>\",\n      \"allowedInbound\": [\n        {\n          \"protocol\": \"<string>\",\n          \"destinationPorts\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"allowedIps\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"protocol\": \"<string>\",\n          \"destinationPorts\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"allowedIps\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"lanIp\": \"<string>\",\n      \"name\": \"<string>\",\n      \"publicIp\": \"<string>\",\n      \"uplink\": \"<string>\",\n      \"allowedInbound\": [\n        {\n          \"protocol\": \"<string>\",\n          \"destinationPorts\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"allowedIps\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"protocol\": \"<string>\",\n          \"destinationPorts\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"allowedIps\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/oneToOneNatRules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"firewall",
																		"oneToOneNatRules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"rules\": [\n    {\n      \"name\": \"Service behind NAT\",\n      \"lanIp\": \"192.168.128.22\",\n      \"publicIp\": \"146.12.3.33\",\n      \"uplink\": \"internet1\",\n      \"allowedInbound\": [\n        {\n          \"protocol\": \"tcp\",\n          \"destinationPorts\": [\n            \"80\"\n          ],\n          \"allowedIps\": [\n            \"10.82.112.0/24\",\n            \"10.82.0.0/16\"\n          ]\n        },\n        {\n          \"protocol\": \"udp\",\n          \"destinationPorts\": [\n            \"8080\"\n          ],\n          \"allowedIps\": [\n            \"10.81.110.5\",\n            \"10.81.0.0/16\"\n          ]\n        }\n      ]\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "portForwardingRules",
											"item": [
												{
													"name": "getNetworkApplianceFirewallPortForwardingRules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/portForwardingRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"firewall",
																"portForwardingRules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the port forwarding rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/portForwardingRules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"firewall",
																		"portForwardingRules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"rules\": [\n    {\n      \"lanIp\": \"192.168.128.1\",\n      \"allowedIps\": [\n        \"any\"\n      ],\n      \"name\": \"Description of Port Forwarding Rule\",\n      \"protocol\": \"tcp\",\n      \"publicPort\": \"8100-8101\",\n      \"localPort\": \"442-443\",\n      \"uplink\": \"both\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "updateNetworkApplianceFirewallPortForwardingRules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"lanIp\": \"<string>\",\n      \"publicPort\": \"<string>\",\n      \"localPort\": \"<string>\",\n      \"allowedIps\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"protocol\": \"<string>\",\n      \"name\": \"<string>\",\n      \"uplink\": \"<string>\"\n    },\n    {\n      \"lanIp\": \"<string>\",\n      \"publicPort\": \"<string>\",\n      \"localPort\": \"<string>\",\n      \"allowedIps\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"protocol\": \"<string>\",\n      \"name\": \"<string>\",\n      \"uplink\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/portForwardingRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"firewall",
																"portForwardingRules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the port forwarding rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rules\": [\n    {\n      \"lanIp\": \"<string>\",\n      \"publicPort\": \"<string>\",\n      \"localPort\": \"<string>\",\n      \"allowedIps\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"protocol\": \"<string>\",\n      \"name\": \"<string>\",\n      \"uplink\": \"<string>\"\n    },\n    {\n      \"lanIp\": \"<string>\",\n      \"publicPort\": \"<string>\",\n      \"localPort\": \"<string>\",\n      \"allowedIps\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"protocol\": \"<string>\",\n      \"name\": \"<string>\",\n      \"uplink\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/portForwardingRules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"firewall",
																		"portForwardingRules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"rules\": [\n    {\n      \"lanIp\": \"192.168.128.1\",\n      \"allowedIps\": [\n        \"any\"\n      ],\n      \"name\": \"Description of Port Forwarding Rule\",\n      \"protocol\": \"tcp\",\n      \"publicPort\": \"8100-8101\",\n      \"localPort\": \"442-443\",\n      \"uplink\": \"both\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "settings",
											"item": [
												{
													"name": "getNetworkApplianceFirewallSettings",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"firewall",
																"settings"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the firewall settings for this network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"firewall",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"spoofingProtection\": {\n    \"ipSourceGuard\": {\n      \"mode\": \"block\"\n    }\n  }\n}"
														}
													]
												},
												{
													"name": "updateNetworkApplianceFirewallSettings",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"spoofingProtection\": {\n    \"ipSourceGuard\": {\n      \"mode\": \"<string>\"\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"firewall",
																"settings"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the firewall settings for this network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"spoofingProtection\": {\n    \"ipSourceGuard\": {\n      \"mode\": \"block\"\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/firewall/settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"firewall",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"spoofingProtection\": {\n    \"ipSourceGuard\": {\n      \"mode\": \"block\"\n    }\n  }\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "ports",
									"item": [
										{
											"name": "getNetworkAppliancePort",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/ports/:portId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"ports",
														":portId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "portId",
															"value": "{{portId}}",
															"description": "(Required) Port ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return per-port VLAN settings for a single MX port."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/ports/:portId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"ports",
																":portId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "portId",
																	"value": "<string>",
																	"description": "(Required) Port ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"number\": 1,\n  \"enabled\": true,\n  \"type\": \"access\",\n  \"dropUntaggedTraffic\": false,\n  \"vlan\": 3,\n  \"allowedVlans\": \"all\",\n  \"accessPolicy\": \"open\"\n}"
												}
											]
										},
										{
											"name": "getNetworkAppliancePorts",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/ports",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"ports"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List per-port VLAN settings for all ports of a MX."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/ports",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"ports"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"number\": 1,\n    \"enabled\": true,\n    \"type\": \"access\",\n    \"dropUntaggedTraffic\": false,\n    \"vlan\": 3,\n    \"allowedVlans\": \"all\",\n    \"accessPolicy\": \"open\"\n  }\n]"
												}
											]
										},
										{
											"name": "updateNetworkAppliancePort",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"dropUntaggedTraffic\": \"<boolean>\",\n  \"type\": \"<string>\",\n  \"vlan\": \"<integer>\",\n  \"allowedVlans\": \"<string>\",\n  \"accessPolicy\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/ports/:portId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"ports",
														":portId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "portId",
															"value": "{{portId}}",
															"description": "(Required) Port ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the per-port VLAN settings for a single MX port."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": true,\n  \"dropUntaggedTraffic\": false,\n  \"type\": \"access\",\n  \"vlan\": 3,\n  \"allowedVlans\": \"all\",\n  \"accessPolicy\": \"open\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/ports/:portId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"ports",
																":portId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "portId",
																	"value": "<string>",
																	"description": "(Required) Port ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"number\": 1,\n  \"enabled\": true,\n  \"type\": \"access\",\n  \"dropUntaggedTraffic\": false,\n  \"vlan\": 3,\n  \"allowedVlans\": \"all\",\n  \"accessPolicy\": \"open\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "prefixes",
									"item": [
										{
											"name": "delegated",
											"item": [
												{
													"name": "statics",
													"item": [
														{
															"name": "createNetworkAppliancePrefixesDelegatedStatic",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"prefix\": \"<string>\",\n  \"origin\": {\n    \"type\": \"<string>\",\n    \"interfaces\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/prefixes/delegated/statics",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"prefixes",
																		"delegated",
																		"statics"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Add a static delegated prefix from a network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"prefix\": \"<string>\",\n  \"origin\": {\n    \"type\": \"<string>\",\n    \"interfaces\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"description\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/appliance/prefixes/delegated/statics",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"appliance",
																				"prefixes",
																				"delegated",
																				"statics"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"staticDelegatedPrefixId\": \"1284392014819\",\n  \"prefix\": \"2001:db8:3c4d:15::/64\",\n  \"origin\": {\n    \"type\": \"internet\",\n    \"interfaces\": [\n      \"wan1\"\n    ]\n  },\n  \"description\": \"Prefix on WAN 1 of Long Island Office network\",\n  \"createdAt\": \"2018-05-12T00:00:00Z\",\n  \"updatedAt\": \"2018-05-12T00:00:00Z\"\n}"
																}
															]
														},
														{
															"name": "deleteNetworkAppliancePrefixesDelegatedStatic",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/prefixes/delegated/statics/:staticDelegatedPrefixId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"prefixes",
																		"delegated",
																		"statics",
																		":staticDelegatedPrefixId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "staticDelegatedPrefixId",
																			"value": "{{staticDelegatedPrefixId}}",
																			"description": "(Required) Static delegated prefix ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Delete a static delegated prefix from a network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/appliance/prefixes/delegated/statics/:staticDelegatedPrefixId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"appliance",
																				"prefixes",
																				"delegated",
																				"statics",
																				":staticDelegatedPrefixId"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "staticDelegatedPrefixId",
																					"value": "<string>",
																					"description": "(Required) Static delegated prefix ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "getNetworkAppliancePrefixesDelegatedStatic",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/prefixes/delegated/statics/:staticDelegatedPrefixId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"prefixes",
																		"delegated",
																		"statics",
																		":staticDelegatedPrefixId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "staticDelegatedPrefixId",
																			"value": "{{staticDelegatedPrefixId}}",
																			"description": "(Required) Static delegated prefix ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Return a static delegated prefix from a network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/appliance/prefixes/delegated/statics/:staticDelegatedPrefixId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"appliance",
																				"prefixes",
																				"delegated",
																				"statics",
																				":staticDelegatedPrefixId"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "staticDelegatedPrefixId",
																					"value": "<string>",
																					"description": "(Required) Static delegated prefix ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"staticDelegatedPrefixId\": \"1284392014819\",\n  \"prefix\": \"2001:db8:3c4d:15::/64\",\n  \"origin\": {\n    \"type\": \"internet\",\n    \"interfaces\": [\n      \"wan1\"\n    ]\n  },\n  \"description\": \"Prefix on WAN 1 of Long Island Office network\",\n  \"createdAt\": \"2018-05-12T00:00:00Z\",\n  \"updatedAt\": \"2018-05-12T00:00:00Z\"\n}"
																}
															]
														},
														{
															"name": "getNetworkAppliancePrefixesDelegatedStatics",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/prefixes/delegated/statics",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"prefixes",
																		"delegated",
																		"statics"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "List static delegated prefixes for a network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/appliance/prefixes/delegated/statics",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"appliance",
																				"prefixes",
																				"delegated",
																				"statics"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"staticDelegatedPrefixId\": \"1284392014819\",\n    \"prefix\": \"2001:db8:3c4d:15::/64\",\n    \"origin\": {\n      \"type\": \"internet\",\n      \"interfaces\": [\n        \"wan1\"\n      ]\n    },\n    \"description\": \"Prefix on WAN 1 of Long Island Office network\",\n    \"createdAt\": \"2018-05-12T00:00:00Z\",\n    \"updatedAt\": \"2018-05-12T00:00:00Z\"\n  }\n]"
																}
															]
														},
														{
															"name": "updateNetworkAppliancePrefixesDelegatedStatic",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"prefix\": \"<string>\",\n  \"origin\": {\n    \"type\": \"<string>\",\n    \"interfaces\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/prefixes/delegated/statics/:staticDelegatedPrefixId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"prefixes",
																		"delegated",
																		"statics",
																		":staticDelegatedPrefixId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "staticDelegatedPrefixId",
																			"value": "{{staticDelegatedPrefixId}}",
																			"description": "(Required) Static delegated prefix ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Update a static delegated prefix from a network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"prefix\": \"<string>\",\n  \"origin\": {\n    \"type\": \"<string>\",\n    \"interfaces\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"description\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/appliance/prefixes/delegated/statics/:staticDelegatedPrefixId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"appliance",
																				"prefixes",
																				"delegated",
																				"statics",
																				":staticDelegatedPrefixId"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "staticDelegatedPrefixId",
																					"value": "<string>",
																					"description": "(Required) Static delegated prefix ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"staticDelegatedPrefixId\": \"1284392014819\",\n  \"prefix\": \"2001:db8:3c4d:15::/64\",\n  \"origin\": {\n    \"type\": \"internet\",\n    \"interfaces\": [\n      \"wan1\"\n    ]\n  },\n  \"description\": \"Prefix on WAN 1 of Long Island Office network\",\n  \"createdAt\": \"2018-05-12T00:00:00Z\",\n  \"updatedAt\": \"2018-05-12T00:00:00Z\"\n}"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "radio",
									"item": [
										{
											"name": "settings",
											"item": [
												{
													"name": "getDeviceApplianceRadioSettings",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/appliance/radio/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"appliance",
																"radio",
																"settings"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the radio settings of an appliance"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/appliance/radio/settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"appliance",
																		"radio",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"serial\": \"Q234-ABCD-5678\",\n  \"rfProfileId\": \"1234\",\n  \"twoFourGhzSettings\": {\n    \"channel\": 11,\n    \"targetPower\": 21\n  },\n  \"fiveGhzSettings\": {\n    \"channel\": 149,\n    \"channelWidth\": 20,\n    \"targetPower\": 15\n  }\n}"
														}
													]
												},
												{
													"name": "updateDeviceApplianceRadioSettings",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rfProfileId\": \"<string>\",\n  \"twoFourGhzSettings\": {\n    \"channel\": \"<integer>\",\n    \"targetPower\": \"<integer>\"\n  },\n  \"fiveGhzSettings\": {\n    \"channel\": \"<integer>\",\n    \"channelWidth\": \"<integer>\",\n    \"targetPower\": \"<integer>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/appliance/radio/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"appliance",
																"radio",
																"settings"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the radio settings of an appliance"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rfProfileId\": \"1234\",\n  \"twoFourGhzSettings\": {\n    \"channel\": 11,\n    \"targetPower\": 21\n  },\n  \"fiveGhzSettings\": {\n    \"channel\": 149,\n    \"channelWidth\": 20,\n    \"targetPower\": 15\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/appliance/radio/settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"appliance",
																		"radio",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"serial\": \"Q234-ABCD-5678\",\n  \"rfProfileId\": \"1234\",\n  \"twoFourGhzSettings\": {\n    \"channel\": 11,\n    \"targetPower\": 21\n  },\n  \"fiveGhzSettings\": {\n    \"channel\": 149,\n    \"channelWidth\": 20,\n    \"targetPower\": 15\n  }\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "rfProfiles",
									"item": [
										{
											"name": "createNetworkApplianceRfProfile",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"twoFourGhzSettings\": {\n    \"minBitrate\": \"<float>\",\n    \"axEnabled\": \"<boolean>\"\n  },\n  \"fiveGhzSettings\": {\n    \"minBitrate\": \"<integer>\",\n    \"axEnabled\": \"<boolean>\"\n  },\n  \"perSsidSettings\": {\n    \"1\": {\n      \"bandOperationMode\": \"<string>\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"2\": {\n      \"bandOperationMode\": \"<string>\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"3\": {\n      \"bandOperationMode\": \"<string>\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"4\": {\n      \"bandOperationMode\": \"<string>\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/rfProfiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"rfProfiles"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Creates new RF profile for this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"MX RF Profile\",\n  \"twoFourGhzSettings\": {\n    \"minBitrate\": 12,\n    \"axEnabled\": true\n  },\n  \"fiveGhzSettings\": {\n    \"minBitrate\": 48,\n    \"axEnabled\": true\n  },\n  \"perSsidSettings\": {\n    \"1\": {\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": true\n    },\n    \"2\": {\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": true\n    },\n    \"3\": {\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": true\n    },\n    \"4\": {\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": true\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/rfProfiles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"rfProfiles"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"networkId\": \"N_24329156\",\n  \"name\": \"Some Custom RF Profile\",\n  \"twoFourGhzSettings\": {\n    \"minBitrate\": 11,\n    \"axEnabled\": true\n  },\n  \"fiveGhzSettings\": {\n    \"minBitrate\": 12,\n    \"axEnabled\": true\n  },\n  \"perSsidSettings\": {\n    \"1\": {\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": true\n    },\n    \"2\": {\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": true\n    },\n    \"3\": {\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": true\n    },\n    \"4\": {\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": true\n    }\n  }\n}"
												}
											]
										},
										{
											"name": "deleteNetworkApplianceRfProfile",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/rfProfiles/:rfProfileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"rfProfiles",
														":rfProfileId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "rfProfileId",
															"value": "{{rfProfileId}}",
															"description": "(Required) Rf profile ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Delete a RF Profile"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/rfProfiles/:rfProfileId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"rfProfiles",
																":rfProfileId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "rfProfileId",
																	"value": "<string>",
																	"description": "(Required) Rf profile ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getNetworkApplianceRfProfile",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/rfProfiles/:rfProfileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"rfProfiles",
														":rfProfileId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "rfProfileId",
															"value": "{{rfProfileId}}",
															"description": "(Required) Rf profile ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return a RF profile"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/rfProfiles/:rfProfileId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"rfProfiles",
																":rfProfileId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "rfProfileId",
																	"value": "<string>",
																	"description": "(Required) Rf profile ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"networkId\": \"N_24329156\",\n  \"name\": \"Some Custom RF Profile\",\n  \"twoFourGhzSettings\": {\n    \"minBitrate\": 11,\n    \"axEnabled\": true\n  },\n  \"fiveGhzSettings\": {\n    \"minBitrate\": 12,\n    \"axEnabled\": true\n  },\n  \"perSsidSettings\": {\n    \"1\": {\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": true\n    },\n    \"2\": {\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": true\n    },\n    \"3\": {\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": true\n    },\n    \"4\": {\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": true\n    }\n  }\n}"
												}
											]
										},
										{
											"name": "getNetworkApplianceRfProfiles",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/rfProfiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"rfProfiles"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the RF profiles for this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/rfProfiles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"rfProfiles"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"assigned\": [\n    {\n      \"id\": \"1234\",\n      \"networkId\": \"N_24329156\",\n      \"name\": \"Some Custom RF Profile\",\n      \"twoFourGhzSettings\": {\n        \"minBitrate\": 11,\n        \"axEnabled\": true\n      },\n      \"fiveGhzSettings\": {\n        \"minBitrate\": 12,\n        \"axEnabled\": true\n      },\n      \"perSsidSettings\": {\n        \"1\": {\n          \"bandOperationMode\": \"dual\",\n          \"bandSteeringEnabled\": true\n        },\n        \"2\": {\n          \"bandOperationMode\": \"dual\",\n          \"bandSteeringEnabled\": true\n        },\n        \"3\": {\n          \"bandOperationMode\": \"dual\",\n          \"bandSteeringEnabled\": true\n        },\n        \"4\": {\n          \"bandOperationMode\": \"dual\",\n          \"bandSteeringEnabled\": true\n        }\n      }\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "updateNetworkApplianceRfProfile",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"twoFourGhzSettings\": {\n    \"minBitrate\": \"<float>\",\n    \"axEnabled\": \"<boolean>\"\n  },\n  \"fiveGhzSettings\": {\n    \"minBitrate\": \"<integer>\",\n    \"axEnabled\": \"<boolean>\"\n  },\n  \"perSsidSettings\": {\n    \"1\": {\n      \"bandOperationMode\": \"<string>\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"2\": {\n      \"bandOperationMode\": \"<string>\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"3\": {\n      \"bandOperationMode\": \"<string>\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"4\": {\n      \"bandOperationMode\": \"<string>\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/rfProfiles/:rfProfileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"rfProfiles",
														":rfProfileId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "rfProfileId",
															"value": "{{rfProfileId}}",
															"description": "(Required) Rf profile ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Updates specified RF profile for this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"MX RF Profile\",\n  \"twoFourGhzSettings\": {\n    \"minBitrate\": 12,\n    \"axEnabled\": true\n  },\n  \"fiveGhzSettings\": {\n    \"minBitrate\": 48,\n    \"axEnabled\": true\n  },\n  \"perSsidSettings\": {\n    \"1\": {\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": true\n    },\n    \"2\": {\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": true\n    },\n    \"3\": {\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": true\n    },\n    \"4\": {\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": true\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/rfProfiles/:rfProfileId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"rfProfiles",
																":rfProfileId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "rfProfileId",
																	"value": "<string>",
																	"description": "(Required) Rf profile ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"networkId\": \"N_24329156\",\n  \"name\": \"Some Custom RF Profile\",\n  \"twoFourGhzSettings\": {\n    \"minBitrate\": 11,\n    \"axEnabled\": true\n  },\n  \"fiveGhzSettings\": {\n    \"minBitrate\": 12,\n    \"axEnabled\": true\n  },\n  \"perSsidSettings\": {\n    \"1\": {\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": true\n    },\n    \"2\": {\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": true\n    },\n    \"3\": {\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": true\n    },\n    \"4\": {\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": true\n    }\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "sdwan",
									"item": [
										{
											"name": "internetPolicies",
											"item": [
												{
													"name": "updateNetworkApplianceSdwanInternetPolicies",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"wanTrafficUplinkPreferences\": [\n    {\n      \"preferredUplink\": \"<string>\",\n      \"trafficFilters\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": {\n            \"source\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"destination\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protocol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": {\n            \"source\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"destination\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protocol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"failOverCriterion\": \"<string>\",\n      \"performanceClass\": {\n        \"type\": \"<string>\",\n        \"builtinPerformanceClassName\": \"<string>\",\n        \"customPerformanceClassId\": \"<string>\"\n      }\n    },\n    {\n      \"preferredUplink\": \"<string>\",\n      \"trafficFilters\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": {\n            \"source\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"destination\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protocol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": {\n            \"source\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"destination\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protocol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"failOverCriterion\": \"<string>\",\n      \"performanceClass\": {\n        \"type\": \"<string>\",\n        \"builtinPerformanceClassName\": \"<string>\",\n        \"customPerformanceClassId\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/sdwan/internetPolicies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"sdwan",
																"internetPolicies"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update SDWAN internet traffic preferences for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"wanTrafficUplinkPreferences\": [\n    {\n      \"preferredUplink\": \"<string>\",\n      \"trafficFilters\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": {\n            \"source\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"destination\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protocol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": {\n            \"source\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"destination\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protocol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"failOverCriterion\": \"<string>\",\n      \"performanceClass\": {\n        \"type\": \"<string>\",\n        \"builtinPerformanceClassName\": \"<string>\",\n        \"customPerformanceClassId\": \"<string>\"\n      }\n    },\n    {\n      \"preferredUplink\": \"<string>\",\n      \"trafficFilters\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": {\n            \"source\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"destination\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protocol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": {\n            \"source\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"destination\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protocol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"failOverCriterion\": \"<string>\",\n      \"performanceClass\": {\n        \"type\": \"<string>\",\n        \"builtinPerformanceClassName\": \"<string>\",\n        \"customPerformanceClassId\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/sdwan/internetPolicies",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"sdwan",
																		"internetPolicies"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"wanTrafficUplinkPreferences\": [\n    {\n      \"preferredUplink\": \"wan1\",\n      \"failOverCriterion\": \"poorPerformance\",\n      \"performanceClass\": {\n        \"type\": \"custom\",\n        \"builtinPerformanceClassName\": \"VoIP\",\n        \"customPerformanceClassId\": \"123456\"\n      },\n      \"trafficFilters\": [\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"protocol\": \"tcp\",\n            \"source\": {\n              \"port\": \"1-1024\",\n              \"cidr\": \"192.168.1.0/24\",\n              \"vlan\": 10,\n              \"host\": 254\n            },\n            \"destination\": {\n              \"port\": \"any\",\n              \"cidr\": \"any\",\n              \"applications\": [\n                {\n                  \"id\": \"meraki:layer7/application/3\",\n                  \"name\": \"DNS\",\n                  \"type\": \"major\"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    }\n  ]\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "security",
									"item": [
										{
											"name": "intrusion",
											"item": [
												{
													"name": "getNetworkApplianceSecurityIntrusion",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/security/intrusion",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"security",
																"intrusion"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Returns all supported intrusion settings for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/security/intrusion",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"security",
																		"intrusion"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"mode\": \"prevention\",\n  \"idsRulesets\": \"balanced\",\n  \"protectedNetworks\": {\n    \"useDefault\": false,\n    \"includedCidr\": [\n      \"10.0.0.0/8\",\n      \"127.0.0.0/8\",\n      \"169.254.0.0/16\",\n      \"172.16.0.0/12\"\n    ],\n    \"excludedCidr\": [\n      \"10.0.0.0/8\",\n      \"127.0.0.0/8\"\n    ]\n  }\n}"
														}
													]
												},
												{
													"name": "getOrganizationApplianceSecurityIntrusion",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/appliance/security/intrusion",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"appliance",
																"security",
																"intrusion"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Returns all supported intrusion settings for an organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/security/intrusion",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"security",
																		"intrusion"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"allowedRules\": [\n    {\n      \"ruleId\": \"meraki:intrusion/snort/GID/01/SID/688\",\n      \"message\": \"SQL sa login failed\"\n    },\n    {\n      \"ruleId\": \"meraki:intrusion/snort/GID/01/SID/5805\",\n      \"message\": \"MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "updateNetworkApplianceSecurityIntrusion",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"mode\": \"<string>\",\n  \"idsRulesets\": \"<string>\",\n  \"protectedNetworks\": {\n    \"useDefault\": \"<boolean>\",\n    \"includedCidr\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"excludedCidr\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/security/intrusion",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"security",
																"intrusion"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Set the supported intrusion settings for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"mode\": \"<string>\",\n  \"idsRulesets\": \"<string>\",\n  \"protectedNetworks\": {\n    \"useDefault\": \"<boolean>\",\n    \"includedCidr\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"excludedCidr\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/security/intrusion",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"security",
																		"intrusion"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"mode\": \"prevention\",\n  \"idsRulesets\": \"balanced\",\n  \"protectedNetworks\": {\n    \"useDefault\": false,\n    \"includedCidr\": [\n      \"10.0.0.0/8\",\n      \"127.0.0.0/8\",\n      \"169.254.0.0/16\",\n      \"172.16.0.0/12\"\n    ],\n    \"excludedCidr\": [\n      \"10.0.0.0/8\",\n      \"127.0.0.0/8\"\n    ]\n  }\n}"
														}
													]
												},
												{
													"name": "updateOrganizationApplianceSecurityIntrusion",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"allowedRules\": [\n    {\n      \"ruleId\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"ruleId\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/appliance/security/intrusion",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"appliance",
																"security",
																"intrusion"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Sets supported intrusion settings for an organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"allowedRules\": [\n    {\n      \"ruleId\": \"meraki:intrusion/snort/GID/01/SID/688\",\n      \"message\": \"SQL sa login failed\"\n    },\n    {\n      \"ruleId\": \"meraki:intrusion/snort/GID/01/SID/5805\",\n      \"message\": \"MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/security/intrusion",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"security",
																		"intrusion"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"allowedRules\": [\n    {\n      \"ruleId\": \"meraki:intrusion/snort/GID/01/SID/688\",\n      \"message\": \"SQL sa login failed\"\n    },\n    {\n      \"ruleId\": \"meraki:intrusion/snort/GID/01/SID/5805\",\n      \"message\": \"MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "malware",
											"item": [
												{
													"name": "getNetworkApplianceSecurityMalware",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/security/malware",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"security",
																"malware"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Returns all supported malware settings for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/security/malware",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"security",
																		"malware"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"mode\": \"enabled\",\n  \"allowedUrls\": [\n    {\n      \"url\": \"help.com.au\",\n      \"comment\": \"allow help.com.au\"\n    }\n  ],\n  \"allowedFiles\": [\n    {\n      \"sha256\": \"e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503\",\n      \"comment\": \"allow ZIP file\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "updateNetworkApplianceSecurityMalware",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"mode\": \"<string>\",\n  \"allowedUrls\": [\n    {\n      \"url\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"url\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"allowedFiles\": [\n    {\n      \"sha256\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"sha256\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/security/malware",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"security",
																"malware"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Set the supported malware settings for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"mode\": \"<string>\",\n  \"allowedUrls\": [\n    {\n      \"url\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"url\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"allowedFiles\": [\n    {\n      \"sha256\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"sha256\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/security/malware",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"security",
																		"malware"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"mode\": \"enabled\",\n  \"allowedUrls\": [\n    {\n      \"url\": \"help.com.au\",\n      \"comment\": \"allow help.com.au\"\n    }\n  ],\n  \"allowedFiles\": [\n    {\n      \"sha256\": \"e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503\",\n      \"comment\": \"allow ZIP file\"\n    }\n  ]\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "settings",
									"item": [
										{
											"name": "getNetworkApplianceSettings",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"settings"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the appliance settings for a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"settings"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"clientTrackingMethod\": \"MAC address\",\n  \"deploymentMode\": \"routed\",\n  \"dynamicDns\": {\n    \"enabled\": true,\n    \"prefix\": \"test\",\n    \"url\": \"test-adfgnnhjea.meraki.com\"\n  }\n}"
												}
											]
										},
										{
											"name": "updateNetworkApplianceSettings",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"clientTrackingMethod\": \"<string>\",\n  \"deploymentMode\": \"<string>\",\n  \"dynamicDns\": {\n    \"prefix\": \"<string>\",\n    \"enabled\": \"<boolean>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"settings"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the appliance settings for a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"clientTrackingMethod\": \"MAC address\",\n  \"deploymentMode\": \"routed\",\n  \"dynamicDns\": {\n    \"prefix\": \"test\",\n    \"enabled\": true\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"settings"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"clientTrackingMethod\": \"MAC address\",\n  \"deploymentMode\": \"routed\",\n  \"dynamicDns\": {\n    \"enabled\": true,\n    \"prefix\": \"test\",\n    \"url\": \"test-adfgnnhjea.meraki.com\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "singleLan",
									"item": [
										{
											"name": "getNetworkApplianceSingleLan",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/singleLan",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"singleLan"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return single LAN configuration"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/singleLan",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"singleLan"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"subnet\": \"192.168.1.0/24\",\n  \"applianceIp\": \"192.168.1.2\",\n  \"mandatoryDhcp\": {\n    \"enabled\": true\n  },\n  \"ipv6\": {\n    \"enabled\": true,\n    \"prefixAssignments\": [\n      {\n        \"autonomous\": false,\n        \"staticPrefix\": \"2001:db8:3c4d:15::/64\",\n        \"staticApplianceIp6\": \"2001:db8:3c4d:15::1\",\n        \"origin\": {\n          \"type\": \"internet\",\n          \"interfaces\": [\n            \"wan0\"\n          ]\n        }\n      }\n    ]\n  }\n}"
												}
											]
										},
										{
											"name": "updateNetworkApplianceSingleLan",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subnet\": \"<string>\",\n  \"applianceIp\": \"<string>\",\n  \"ipv6\": {\n    \"enabled\": \"<boolean>\",\n    \"prefixAssignments\": [\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"<string>\",\n          \"interfaces\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      },\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"<string>\",\n          \"interfaces\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      }\n    ]\n  },\n  \"mandatoryDhcp\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/singleLan",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"singleLan"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update single LAN configuration"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/singleLan",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"singleLan"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"subnet\": \"192.168.1.0/24\",\n  \"applianceIp\": \"192.168.1.2\",\n  \"mandatoryDhcp\": {\n    \"enabled\": true\n  },\n  \"ipv6\": {\n    \"enabled\": true,\n    \"prefixAssignments\": [\n      {\n        \"autonomous\": false,\n        \"staticPrefix\": \"2001:db8:3c4d:15::/64\",\n        \"staticApplianceIp6\": \"2001:db8:3c4d:15::1\",\n        \"origin\": {\n          \"type\": \"internet\",\n          \"interfaces\": [\n            \"wan0\"\n          ]\n        }\n      }\n    ]\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "ssids",
									"item": [
										{
											"name": "getNetworkApplianceSsid",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/ssids/:number",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"ssids",
														":number"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "number",
															"value": "{{number}}",
															"description": "(Required) Number"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return a single MX SSID"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/ssids/:number",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"ssids",
																":number"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "number",
																	"value": "<string>",
																	"description": "(Required) Number"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"number\": 1,\n  \"name\": \"My SSID\",\n  \"enabled\": true,\n  \"defaultVlanId\": 1,\n  \"authMode\": \"8021x-radius\",\n  \"radiusServers\": [\n    {\n      \"host\": \"0.0.0.0\",\n      \"port\": 1000\n    }\n  ],\n  \"encryptionMode\": \"wpa\",\n  \"wpaEncryptionMode\": \"WPA2 only\",\n  \"visible\": true\n}"
												}
											]
										},
										{
											"name": "getNetworkApplianceSsids",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/ssids",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"ssids"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the MX SSIDs in a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/ssids",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"ssids"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"number\": 1,\n    \"name\": \"My SSID\",\n    \"enabled\": true,\n    \"defaultVlanId\": 1,\n    \"authMode\": \"8021x-radius\",\n    \"radiusServers\": [\n      {\n        \"host\": \"0.0.0.0\",\n        \"port\": 1000\n      }\n    ],\n    \"encryptionMode\": \"wpa\",\n    \"wpaEncryptionMode\": \"WPA2 only\",\n    \"visible\": true\n  }\n]"
												}
											]
										},
										{
											"name": "updateNetworkApplianceSsid",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"defaultVlanId\": \"<integer>\",\n  \"authMode\": \"<string>\",\n  \"psk\": \"<string>\",\n  \"radiusServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    }\n  ],\n  \"encryptionMode\": \"<string>\",\n  \"wpaEncryptionMode\": \"<string>\",\n  \"visible\": \"<boolean>\",\n  \"dhcpEnforcedDeauthentication\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"dot11w\": {\n    \"enabled\": \"<boolean>\",\n    \"required\": \"<boolean>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/ssids/:number",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"ssids",
														":number"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "number",
															"value": "{{number}}",
															"description": "(Required) Number"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the attributes of an MX SSID"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"defaultVlanId\": \"<integer>\",\n  \"authMode\": \"<string>\",\n  \"psk\": \"<string>\",\n  \"radiusServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    }\n  ],\n  \"encryptionMode\": \"<string>\",\n  \"wpaEncryptionMode\": \"<string>\",\n  \"visible\": \"<boolean>\",\n  \"dhcpEnforcedDeauthentication\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"dot11w\": {\n    \"enabled\": \"<boolean>\",\n    \"required\": \"<boolean>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/ssids/:number",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"ssids",
																":number"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "number",
																	"value": "<string>",
																	"description": "(Required) Number"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"number\": 1,\n  \"name\": \"My SSID\",\n  \"enabled\": true,\n  \"defaultVlanId\": 1,\n  \"authMode\": \"8021x-radius\",\n  \"radiusServers\": [\n    {\n      \"host\": \"0.0.0.0\",\n      \"port\": 1000\n    }\n  ],\n  \"encryptionMode\": \"wpa\",\n  \"wpaEncryptionMode\": \"WPA2 only\",\n  \"visible\": true\n}"
												}
											]
										}
									]
								},
								{
									"name": "staticRoutes",
									"item": [
										{
											"name": "createNetworkApplianceStaticRoute",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"gatewayIp\": \"<string>\",\n  \"gatewayVlanId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/staticRoutes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"staticRoutes"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Add a static route for an MX or teleworker network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"My route\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"gatewayIp\": \"1.2.3.5\",\n  \"gatewayVlanId\": \"100\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/staticRoutes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"staticRoutes"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"d7fa4948-7921-4dfa-af6b-ae8b16c20c39\",\n  \"ipVersion\": 4,\n  \"networkId\": \"N_24329156\",\n  \"enabled\": true,\n  \"name\": \"My route\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"gatewayIp\": \"1.2.3.5\",\n  \"fixedIpAssignments\": {\n    \"22:33:44:55:66:77\": {\n      \"ip\": \"1.2.3.4\",\n      \"name\": \"Some client name\"\n    }\n  },\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"192.168.1.0\",\n      \"end\": \"192.168.1.1\",\n      \"comment\": \"A reserved IP range\"\n    }\n  ],\n  \"gatewayVlanId\": 100\n}"
												}
											]
										},
										{
											"name": "deleteNetworkApplianceStaticRoute",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/staticRoutes/:staticRouteId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"staticRoutes",
														":staticRouteId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "staticRouteId",
															"value": "{{staticRouteId}}",
															"description": "(Required) Static route ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Delete a static route from an MX or teleworker network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/staticRoutes/:staticRouteId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"staticRoutes",
																":staticRouteId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "staticRouteId",
																	"value": "<string>",
																	"description": "(Required) Static route ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getNetworkApplianceStaticRoute",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/staticRoutes/:staticRouteId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"staticRoutes",
														":staticRouteId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "staticRouteId",
															"value": "{{staticRouteId}}",
															"description": "(Required) Static route ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return a static route for an MX or teleworker network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/staticRoutes/:staticRouteId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"staticRoutes",
																":staticRouteId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "staticRouteId",
																	"value": "<string>",
																	"description": "(Required) Static route ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"d7fa4948-7921-4dfa-af6b-ae8b16c20c39\",\n  \"ipVersion\": 4,\n  \"networkId\": \"N_24329156\",\n  \"enabled\": true,\n  \"name\": \"My route\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"gatewayIp\": \"1.2.3.5\",\n  \"fixedIpAssignments\": {\n    \"22:33:44:55:66:77\": {\n      \"ip\": \"1.2.3.4\",\n      \"name\": \"Some client name\"\n    }\n  },\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"192.168.1.0\",\n      \"end\": \"192.168.1.1\",\n      \"comment\": \"A reserved IP range\"\n    }\n  ],\n  \"gatewayVlanId\": 100\n}"
												}
											]
										},
										{
											"name": "getNetworkApplianceStaticRoutes",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/staticRoutes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"staticRoutes"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the static routes for an MX or teleworker network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/staticRoutes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"staticRoutes"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"d7fa4948-7921-4dfa-af6b-ae8b16c20c39\",\n    \"ipVersion\": 4,\n    \"networkId\": \"N_24329156\",\n    \"enabled\": true,\n    \"name\": \"My route\",\n    \"subnet\": \"192.168.1.0/24\",\n    \"gatewayIp\": \"1.2.3.5\",\n    \"fixedIpAssignments\": {\n      \"22:33:44:55:66:77\": {\n        \"ip\": \"1.2.3.4\",\n        \"name\": \"Some client name\"\n      }\n    },\n    \"reservedIpRanges\": [\n      {\n        \"start\": \"192.168.1.0\",\n        \"end\": \"192.168.1.1\",\n        \"comment\": \"A reserved IP range\"\n      }\n    ],\n    \"gatewayVlanId\": 100\n  }\n]"
												}
											]
										},
										{
											"name": "updateNetworkApplianceStaticRoute",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"gatewayIp\": \"<string>\",\n  \"gatewayVlanId\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"fixedIpAssignments\": {\n    \"sit_a_\": {\n      \"ip\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  },\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/staticRoutes/:staticRouteId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"staticRoutes",
														":staticRouteId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "staticRouteId",
															"value": "{{staticRouteId}}",
															"description": "(Required) Static route ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update a static route for an MX or teleworker network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"gatewayIp\": \"<string>\",\n  \"gatewayVlanId\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"fixedIpAssignments\": {\n    \"cillum_e\": {\n      \"ip\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"consequat_22_\": {\n      \"ip\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  },\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/staticRoutes/:staticRouteId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"staticRoutes",
																":staticRouteId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "staticRouteId",
																	"value": "<string>",
																	"description": "(Required) Static route ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"d7fa4948-7921-4dfa-af6b-ae8b16c20c39\",\n  \"ipVersion\": 4,\n  \"networkId\": \"N_24329156\",\n  \"enabled\": true,\n  \"name\": \"My route\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"gatewayIp\": \"1.2.3.5\",\n  \"fixedIpAssignments\": {\n    \"22:33:44:55:66:77\": {\n      \"ip\": \"1.2.3.4\",\n      \"name\": \"Some client name\"\n    }\n  },\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"192.168.1.0\",\n      \"end\": \"192.168.1.1\",\n      \"comment\": \"A reserved IP range\"\n    }\n  ],\n  \"gatewayVlanId\": 100\n}"
												}
											]
										}
									]
								},
								{
									"name": "trafficShaping",
									"item": [
										{
											"name": "customPerformanceClasses",
											"item": [
												{
													"name": "createNetworkApplianceTrafficShapingCustomPerformanceClass",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"maxLatency\": \"<integer>\",\n  \"maxJitter\": \"<integer>\",\n  \"maxLossPercentage\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping/customPerformanceClasses",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"trafficShaping",
																"customPerformanceClasses"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Add a custom performance class for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"myCustomPerformanceClass\",\n  \"maxLatency\": 100,\n  \"maxJitter\": 100,\n  \"maxLossPercentage\": 5\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping/customPerformanceClasses",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"trafficShaping",
																		"customPerformanceClasses"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"name\": \"myCustomPerformanceClass\",\n  \"customPerformanceClassId\": \"123\",\n  \"maxLatency\": 100,\n  \"maxJitter\": 100,\n  \"maxLossPercentage\": 5\n}"
														}
													]
												},
												{
													"name": "deleteNetworkApplianceTrafficShapingCustomPerformanceClass",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping/customPerformanceClasses/:customPerformanceClassId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"trafficShaping",
																"customPerformanceClasses",
																":customPerformanceClassId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "customPerformanceClassId",
																	"value": "{{customPerformanceClassId}}",
																	"description": "(Required) Custom performance class ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Delete a custom performance class from an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping/customPerformanceClasses/:customPerformanceClassId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"trafficShaping",
																		"customPerformanceClasses",
																		":customPerformanceClassId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "customPerformanceClassId",
																			"value": "<string>",
																			"description": "(Required) Custom performance class ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "getNetworkApplianceTrafficShapingCustomPerformanceClass",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping/customPerformanceClasses/:customPerformanceClassId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"trafficShaping",
																"customPerformanceClasses",
																":customPerformanceClassId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "customPerformanceClassId",
																	"value": "{{customPerformanceClassId}}",
																	"description": "(Required) Custom performance class ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return a custom performance class for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping/customPerformanceClasses/:customPerformanceClassId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"trafficShaping",
																		"customPerformanceClasses",
																		":customPerformanceClassId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "customPerformanceClassId",
																			"value": "<string>",
																			"description": "(Required) Custom performance class ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"name\": \"myCustomPerformanceClass\",\n  \"customPerformanceClassId\": \"123\",\n  \"maxLatency\": 100,\n  \"maxJitter\": 100,\n  \"maxLossPercentage\": 5\n}"
														}
													]
												},
												{
													"name": "getNetworkApplianceTrafficShapingCustomPerformanceClasses",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping/customPerformanceClasses",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"trafficShaping",
																"customPerformanceClasses"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List all custom performance classes for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping/customPerformanceClasses",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"trafficShaping",
																		"customPerformanceClasses"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"name\": \"myCustomPerformanceClass\",\n    \"customPerformanceClassId\": \"123\",\n    \"maxLatency\": 100,\n    \"maxJitter\": 100,\n    \"maxLossPercentage\": 5\n  }\n]"
														}
													]
												},
												{
													"name": "updateNetworkApplianceTrafficShapingCustomPerformanceClass",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"maxLatency\": \"<integer>\",\n  \"maxJitter\": \"<integer>\",\n  \"maxLossPercentage\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping/customPerformanceClasses/:customPerformanceClassId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"trafficShaping",
																"customPerformanceClasses",
																":customPerformanceClassId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "customPerformanceClassId",
																	"value": "{{customPerformanceClassId}}",
																	"description": "(Required) Custom performance class ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update a custom performance class for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"myCustomPerformanceClass\",\n  \"maxLatency\": 100,\n  \"maxJitter\": 100,\n  \"maxLossPercentage\": 5\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping/customPerformanceClasses/:customPerformanceClassId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"trafficShaping",
																		"customPerformanceClasses",
																		":customPerformanceClassId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "customPerformanceClassId",
																			"value": "<string>",
																			"description": "(Required) Custom performance class ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"name\": \"myCustomPerformanceClass\",\n  \"customPerformanceClassId\": \"123\",\n  \"maxLatency\": 100,\n  \"maxJitter\": 100,\n  \"maxLossPercentage\": 5\n}"
														}
													]
												}
											]
										},
										{
											"name": "rules",
											"item": [
												{
													"name": "getNetworkApplianceTrafficShapingRules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping/rules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"trafficShaping",
																"rules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Display the traffic shaping settings rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping/rules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"trafficShaping",
																		"rules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"defaultRulesEnabled\": true,\n  \"rules\": [\n    {\n      \"definitions\": [\n        {\n          \"type\": \"host\",\n          \"value\": \"google.com\"\n        },\n        {\n          \"type\": \"port\",\n          \"value\": \"9090\"\n        },\n        {\n          \"type\": \"ipRange\",\n          \"value\": \"192.1.0.0\"\n        },\n        {\n          \"type\": \"ipRange\",\n          \"value\": \"192.1.0.0/16\"\n        },\n        {\n          \"type\": \"ipRange\",\n          \"value\": \"10.1.0.0/16:80\"\n        },\n        {\n          \"type\": \"localNet\",\n          \"value\": \"192.168.0.0/16\"\n        }\n      ],\n      \"perClientBandwidthLimits\": {\n        \"settings\": \"custom\",\n        \"bandwidthLimits\": {\n          \"limitUp\": 1000000,\n          \"limitDown\": 1000000\n        }\n      },\n      \"dscpTagValue\": 0,\n      \"priority\": \"normal\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "updateNetworkApplianceTrafficShapingRules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"defaultRulesEnabled\": \"<boolean>\",\n  \"rules\": [\n    {\n      \"definitions\": {\n        \"type\": \"array\",\n        \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n        \"maxItems\": 2,\n        \"items\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"type\",\n            \"value\"\n          ],\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"application\",\n                \"applicationCategory\",\n                \"host\",\n                \"ipRange\",\n                \"localNet\",\n                \"port\"\n              ],\n              \"description\": \"The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\",\n              \"default\": \"<string>\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then \\\"value\\\" must be a string, matching either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation, excluding\\n    custom ports.\\n     If \\\"type\\\" is 'application' or 'applicationCategory', then \\\"value\\\" must be an object\\n    with the structure { \\\"id\\\": \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application category or\\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\\n    endpoint).\\n\",\n              \"default\": \"<string>\"\n            }\n          }\n        }\n      },\n      \"perClientBandwidthLimits\": {\n        \"settings\": \"<string>\",\n        \"bandwidthLimits\": {\n          \"limitUp\": \"<integer>\",\n          \"limitDown\": \"<integer>\"\n        }\n      },\n      \"dscpTagValue\": \"<integer>\",\n      \"priority\": \"<string>\"\n    },\n    {\n      \"definitions\": {\n        \"type\": \"array\",\n        \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n        \"maxItems\": 2,\n        \"items\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"type\",\n            \"value\"\n          ],\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"application\",\n                \"applicationCategory\",\n                \"host\",\n                \"ipRange\",\n                \"localNet\",\n                \"port\"\n              ],\n              \"description\": \"The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\",\n              \"default\": \"<string>\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then \\\"value\\\" must be a string, matching either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation, excluding\\n    custom ports.\\n     If \\\"type\\\" is 'application' or 'applicationCategory', then \\\"value\\\" must be an object\\n    with the structure { \\\"id\\\": \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application category or\\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\\n    endpoint).\\n\",\n              \"default\": \"<string>\"\n            }\n          }\n        }\n      },\n      \"perClientBandwidthLimits\": {\n        \"settings\": \"<string>\",\n        \"bandwidthLimits\": {\n          \"limitUp\": \"<integer>\",\n          \"limitDown\": \"<integer>\"\n        }\n      },\n      \"dscpTagValue\": \"<integer>\",\n      \"priority\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping/rules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"trafficShaping",
																"rules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the traffic shaping settings rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"defaultRulesEnabled\": \"<boolean>\",\n  \"rules\": [\n    {\n      \"definitions\": {\n        \"type\": \"array\",\n        \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n        \"maxItems\": 2,\n        \"minItems\": 2,\n        \"items\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"type\",\n            \"value\"\n          ],\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"application\",\n                \"applicationCategory\",\n                \"host\",\n                \"ipRange\",\n                \"localNet\",\n                \"port\"\n              ],\n              \"description\": \"The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\",\n              \"default\": \"<string>\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then \\\"value\\\" must be a string, matching either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation, excluding\\n    custom ports.\\n     If \\\"type\\\" is 'application' or 'applicationCategory', then \\\"value\\\" must be an object\\n    with the structure { \\\"id\\\": \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application category or\\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\\n    endpoint).\\n\",\n              \"default\": \"<string>\"\n            }\n          }\n        }\n      },\n      \"perClientBandwidthLimits\": {\n        \"settings\": \"<string>\",\n        \"bandwidthLimits\": {\n          \"limitUp\": \"<integer>\",\n          \"limitDown\": \"<integer>\"\n        }\n      },\n      \"dscpTagValue\": \"<integer>\",\n      \"priority\": \"<string>\"\n    },\n    {\n      \"definitions\": {\n        \"type\": \"array\",\n        \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n        \"maxItems\": 2,\n        \"minItems\": 2,\n        \"items\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"type\",\n            \"value\"\n          ],\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"application\",\n                \"applicationCategory\",\n                \"host\",\n                \"ipRange\",\n                \"localNet\",\n                \"port\"\n              ],\n              \"description\": \"The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\",\n              \"default\": \"<string>\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then \\\"value\\\" must be a string, matching either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation, excluding\\n    custom ports.\\n     If \\\"type\\\" is 'application' or 'applicationCategory', then \\\"value\\\" must be an object\\n    with the structure { \\\"id\\\": \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application category or\\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\\n    endpoint).\\n\",\n              \"default\": \"<string>\"\n            }\n          }\n        }\n      },\n      \"perClientBandwidthLimits\": {\n        \"settings\": \"<string>\",\n        \"bandwidthLimits\": {\n          \"limitUp\": \"<integer>\",\n          \"limitDown\": \"<integer>\"\n        }\n      },\n      \"dscpTagValue\": \"<integer>\",\n      \"priority\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping/rules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"trafficShaping",
																		"rules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"defaultRulesEnabled\": true,\n  \"rules\": [\n    {\n      \"definitions\": [\n        {\n          \"type\": \"host\",\n          \"value\": \"google.com\"\n        },\n        {\n          \"type\": \"port\",\n          \"value\": \"9090\"\n        },\n        {\n          \"type\": \"ipRange\",\n          \"value\": \"192.1.0.0\"\n        },\n        {\n          \"type\": \"ipRange\",\n          \"value\": \"192.1.0.0/16\"\n        },\n        {\n          \"type\": \"ipRange\",\n          \"value\": \"10.1.0.0/16:80\"\n        },\n        {\n          \"type\": \"localNet\",\n          \"value\": \"192.168.0.0/16\"\n        }\n      ],\n      \"perClientBandwidthLimits\": {\n        \"settings\": \"custom\",\n        \"bandwidthLimits\": {\n          \"limitUp\": 1000000,\n          \"limitDown\": 1000000\n        }\n      },\n      \"dscpTagValue\": 0,\n      \"priority\": \"normal\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "uplinkBandwidth",
											"item": [
												{
													"name": "getNetworkApplianceTrafficShapingUplinkBandwidth",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping/uplinkBandwidth",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"trafficShaping",
																"uplinkBandwidth"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Returns the uplink bandwidth limits for your MX network. This may not reflect the affected device's hardware capabilities.  For more information on your device's hardware capabilities, please consult our MX Family Datasheet - [https://meraki.cisco.com/product-collateral/mx-family-datasheet/?file]"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping/uplinkBandwidth",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"trafficShaping",
																		"uplinkBandwidth"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"bandwidthLimits\": {\n    \"wan1\": {\n      \"limitUp\": 1000000,\n      \"limitDown\": 1000000\n    },\n    \"wan2\": {\n      \"limitUp\": 1000000,\n      \"limitDown\": 1000000\n    },\n    \"cellular\": {\n      \"limitUp\": 51200,\n      \"limitDown\": 51200\n    }\n  }\n}"
														}
													]
												},
												{
													"name": "updateNetworkApplianceTrafficShapingUplinkBandwidth",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"bandwidthLimits\": {\n    \"wan1\": {\n      \"limitUp\": \"<integer>\",\n      \"limitDown\": \"<integer>\"\n    },\n    \"wan2\": {\n      \"limitUp\": \"<integer>\",\n      \"limitDown\": \"<integer>\"\n    },\n    \"cellular\": {\n      \"limitUp\": \"<integer>\",\n      \"limitDown\": \"<integer>\"\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping/uplinkBandwidth",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"trafficShaping",
																"uplinkBandwidth"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Updates the uplink bandwidth settings for your MX network."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"bandwidthLimits\": {\n    \"wan1\": {\n      \"limitUp\": 1000000,\n      \"limitDown\": 1000000\n    },\n    \"wan2\": {\n      \"limitUp\": 1000000,\n      \"limitDown\": 1000000\n    },\n    \"cellular\": {\n      \"limitUp\": 1000000,\n      \"limitDown\": 1000000\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping/uplinkBandwidth",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"trafficShaping",
																		"uplinkBandwidth"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"bandwidthLimits\": {\n    \"wan1\": {\n      \"limitUp\": 1000000,\n      \"limitDown\": 1000000\n    },\n    \"wan2\": {\n      \"limitUp\": 1000000,\n      \"limitDown\": 1000000\n    },\n    \"cellular\": {\n      \"limitUp\": 51200,\n      \"limitDown\": 51200\n    }\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "uplinkSelection",
											"item": [
												{
													"name": "getNetworkApplianceTrafficShapingUplinkSelection",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping/uplinkSelection",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"trafficShaping",
																"uplinkSelection"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Show uplink selection settings for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping/uplinkSelection",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"trafficShaping",
																		"uplinkSelection"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"activeActiveAutoVpnEnabled\": true,\n  \"defaultUplink\": \"wan1\",\n  \"loadBalancingEnabled\": true,\n  \"failoverAndFailback\": {\n    \"immediate\": {\n      \"enabled\": true\n    }\n  },\n  \"wanTrafficUplinkPreferences\": [\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"protocol\": \"tcp\",\n            \"source\": {\n              \"port\": \"1-1024\",\n              \"cidr\": \"192.168.1.0/24\",\n              \"vlan\": 10,\n              \"host\": 254\n            },\n            \"destination\": {\n              \"port\": \"any\",\n              \"cidr\": \"any\",\n              \"applications\": [\n                {\n                  \"id\": \"meraki:layer7/application/3\",\n                  \"name\": \"DNS\",\n                  \"type\": \"major\"\n                }\n              ]\n            }\n          }\n        }\n      ],\n      \"preferredUplink\": \"wan1\"\n    }\n  ],\n  \"vpnTrafficUplinkPreferences\": [\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"applicationCategory\",\n          \"value\": {\n            \"id\": \"meraki:layer7/category/1\",\n            \"protocol\": \"tcp\",\n            \"source\": {\n              \"port\": \"any\",\n              \"cidr\": \"192.168.1.0/24\",\n              \"network\": \"L_23456789\",\n              \"vlan\": 20,\n              \"host\": 200\n            },\n            \"destination\": {\n              \"port\": \"1-1024\",\n              \"cidr\": \"any\",\n              \"network\": \"L_12345678\",\n              \"vlan\": 10,\n              \"host\": 254,\n              \"fqdn\": \"www.google.com\"\n            }\n          }\n        }\n      ],\n      \"preferredUplink\": \"bestForVoIP\",\n      \"failOverCriterion\": \"poorPerformance\",\n      \"performanceClass\": {\n        \"type\": \"custom\",\n        \"builtinPerformanceClassName\": \"VoIP\",\n        \"customPerformanceClassId\": \"123456\"\n      }\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "updateNetworkApplianceTrafficShapingUplinkSelection",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"activeActiveAutoVpnEnabled\": \"<boolean>\",\n  \"defaultUplink\": \"<string>\",\n  \"loadBalancingEnabled\": \"<boolean>\",\n  \"failoverAndFailback\": {\n    \"immediate\": {\n      \"enabled\": \"<boolean>\"\n    }\n  },\n  \"wanTrafficUplinkPreferences\": [\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": {\n            \"source\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"destination\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protocol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": {\n            \"source\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"destination\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protocol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"preferredUplink\": \"<string>\"\n    },\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": {\n            \"source\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"destination\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protocol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": {\n            \"source\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"destination\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protocol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"preferredUplink\": \"<string>\"\n    }\n  ],\n  \"vpnTrafficUplinkPreferences\": [\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protocol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"source\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"destination\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protocol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"source\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"destination\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"preferredUplink\": \"<string>\",\n      \"failOverCriterion\": \"<string>\",\n      \"performanceClass\": {\n        \"type\": \"<string>\",\n        \"builtinPerformanceClassName\": \"<string>\",\n        \"customPerformanceClassId\": \"<string>\"\n      }\n    },\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protocol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"source\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"destination\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protocol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"source\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"destination\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"preferredUplink\": \"<string>\",\n      \"failOverCriterion\": \"<string>\",\n      \"performanceClass\": {\n        \"type\": \"<string>\",\n        \"builtinPerformanceClassName\": \"<string>\",\n        \"customPerformanceClassId\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping/uplinkSelection",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"trafficShaping",
																"uplinkSelection"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update uplink selection settings for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"activeActiveAutoVpnEnabled\": \"<boolean>\",\n  \"defaultUplink\": \"<string>\",\n  \"loadBalancingEnabled\": \"<boolean>\",\n  \"failoverAndFailback\": {\n    \"immediate\": {\n      \"enabled\": \"<boolean>\"\n    }\n  },\n  \"wanTrafficUplinkPreferences\": [\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": {\n            \"source\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"destination\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protocol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": {\n            \"source\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"destination\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protocol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"preferredUplink\": \"<string>\"\n    },\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": {\n            \"source\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"destination\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protocol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": {\n            \"source\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"destination\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protocol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"preferredUplink\": \"<string>\"\n    }\n  ],\n  \"vpnTrafficUplinkPreferences\": [\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protocol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"source\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"destination\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protocol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"source\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"destination\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"preferredUplink\": \"<string>\",\n      \"failOverCriterion\": \"<string>\",\n      \"performanceClass\": {\n        \"type\": \"<string>\",\n        \"builtinPerformanceClassName\": \"<string>\",\n        \"customPerformanceClassId\": \"<string>\"\n      }\n    },\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protocol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"source\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"destination\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protocol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"source\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"destination\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"preferredUplink\": \"<string>\",\n      \"failOverCriterion\": \"<string>\",\n      \"performanceClass\": {\n        \"type\": \"<string>\",\n        \"builtinPerformanceClassName\": \"<string>\",\n        \"customPerformanceClassId\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping/uplinkSelection",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"trafficShaping",
																		"uplinkSelection"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"activeActiveAutoVpnEnabled\": true,\n  \"defaultUplink\": \"wan1\",\n  \"loadBalancingEnabled\": true,\n  \"failoverAndFailback\": {\n    \"immediate\": {\n      \"enabled\": true\n    }\n  },\n  \"wanTrafficUplinkPreferences\": [\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"protocol\": \"tcp\",\n            \"source\": {\n              \"port\": \"1-1024\",\n              \"cidr\": \"192.168.1.0/24\",\n              \"vlan\": 10,\n              \"host\": 254\n            },\n            \"destination\": {\n              \"port\": \"any\",\n              \"cidr\": \"any\",\n              \"applications\": [\n                {\n                  \"id\": \"meraki:layer7/application/3\",\n                  \"name\": \"DNS\",\n                  \"type\": \"major\"\n                }\n              ]\n            }\n          }\n        }\n      ],\n      \"preferredUplink\": \"wan1\"\n    }\n  ],\n  \"vpnTrafficUplinkPreferences\": [\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"applicationCategory\",\n          \"value\": {\n            \"id\": \"meraki:layer7/category/1\",\n            \"protocol\": \"tcp\",\n            \"source\": {\n              \"port\": \"any\",\n              \"cidr\": \"192.168.1.0/24\",\n              \"network\": \"L_23456789\",\n              \"vlan\": 20,\n              \"host\": 200\n            },\n            \"destination\": {\n              \"port\": \"1-1024\",\n              \"cidr\": \"any\",\n              \"network\": \"L_12345678\",\n              \"vlan\": 10,\n              \"host\": 254,\n              \"fqdn\": \"www.google.com\"\n            }\n          }\n        }\n      ],\n      \"preferredUplink\": \"bestForVoIP\",\n      \"failOverCriterion\": \"poorPerformance\",\n      \"performanceClass\": {\n        \"type\": \"custom\",\n        \"builtinPerformanceClassName\": \"VoIP\",\n        \"customPerformanceClassId\": \"123456\"\n      }\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "vpnExclusions",
											"item": [
												{
													"name": "byNetwork",
													"item": [
														{
															"name": "getOrganizationApplianceTrafficShapingVpnExclusionsByNetwork",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/trafficShaping/vpnExclusions/byNetwork",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"trafficShaping",
																		"vpnExclusions",
																		"byNetwork"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "{{perPage}}",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.",
																			"disabled": true
																		},
																		{
																			"key": "startingAfter",
																			"value": "{{startingAfter}}",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "endingBefore",
																			"value": "{{endingBefore}}",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Optional parameter to filter the results by network IDs",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Optional parameter to filter the results by network IDs",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Display VPN exclusion rules for MX networks."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/appliance/trafficShaping/vpnExclusions/byNetwork?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"appliance",
																				"trafficShaping",
																				"vpnExclusions",
																				"byNetwork"
																			],
																			"query": [
																				{
																					"key": "perPage",
																					"value": "<integer>"
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>"
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Link",
																			"value": "Lorem nisi fugiat",
																			"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"items\": [\n    {\n      \"networkId\": \"N_24329156\",\n      \"networkName\": \"Main Office\",\n      \"custom\": [\n        {\n          \"protocol\": \"tcp\",\n          \"destination\": \"192.168.3.0/24\",\n          \"port\": \"8000\"\n        }\n      ],\n      \"majorApplications\": [\n        {\n          \"id\": \"meraki:vpnExclusion/application/2\",\n          \"name\": \"Office 365 Sharepoint\"\n        }\n      ]\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "updateNetworkApplianceTrafficShapingVpnExclusions",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"custom\": [\n    {\n      \"protocol\": \"<string>\",\n      \"destination\": \"<string>\",\n      \"port\": \"<string>\"\n    },\n    {\n      \"protocol\": \"<string>\",\n      \"destination\": \"<string>\",\n      \"port\": \"<string>\"\n    }\n  ],\n  \"majorApplications\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping/vpnExclusions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"trafficShaping",
																"vpnExclusions"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update VPN exclusion rules for an MX network."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"custom\": [\n    {\n      \"protocol\": \"<string>\",\n      \"destination\": \"<string>\",\n      \"port\": \"<string>\"\n    },\n    {\n      \"protocol\": \"<string>\",\n      \"destination\": \"<string>\",\n      \"port\": \"<string>\"\n    }\n  ],\n  \"majorApplications\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping/vpnExclusions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"trafficShaping",
																		"vpnExclusions"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"networkId\": \"N_24329156\",\n  \"networkName\": \"Main Office\",\n  \"custom\": [\n    {\n      \"protocol\": \"tcp\",\n      \"destination\": \"192.168.3.0/24\",\n      \"port\": \"8000\"\n    }\n  ],\n  \"majorApplications\": [\n    {\n      \"id\": \"meraki:vpnExclusion/application/2\",\n      \"name\": \"Office 365 Sharepoint\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "getNetworkApplianceTrafficShaping",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"trafficShaping"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Display the traffic shaping settings for an MX network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"trafficShaping"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"globalBandwidthLimits\": {\n    \"limitUp\": 2048,\n    \"limitDown\": 5120\n  }\n}"
												}
											]
										},
										{
											"name": "updateNetworkApplianceTrafficShaping",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"globalBandwidthLimits\": {\n    \"limitUp\": \"<integer>\",\n    \"limitDown\": \"<integer>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"trafficShaping"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the traffic shaping settings for an MX network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"globalBandwidthLimits\": {\n    \"limitUp\": 2048,\n    \"limitDown\": 5120\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/trafficShaping",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"trafficShaping"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"globalBandwidthLimits\": {\n    \"limitUp\": 2048,\n    \"limitDown\": 5120\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "uplinks",
									"item": [
										{
											"name": "settings",
											"item": [
												{
													"name": "getDeviceApplianceUplinksSettings",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/appliance/uplinks/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"appliance",
																"uplinks",
																"settings"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the uplink settings for an MX appliance"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/appliance/uplinks/settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"appliance",
																		"uplinks",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"interfaces\": {\n    \"wan1\": {\n      \"enabled\": true,\n      \"vlanTagging\": {\n        \"enabled\": true,\n        \"vlanId\": 1\n      },\n      \"svis\": {\n        \"ipv4\": {\n          \"assignmentMode\": \"static\",\n          \"address\": \"9.10.11.10/16\",\n          \"gateway\": \"13.14.15.16\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"1.2.3.4\"\n            ]\n          }\n        },\n        \"ipv6\": {\n          \"assignmentMode\": \"static\",\n          \"address\": \"1:2:3::4\",\n          \"gateway\": \"1:2:3::5\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"1001:4860:4860::8888\",\n              \"1001:4860:4860::8844\"\n            ]\n          }\n        }\n      },\n      \"pppoe\": {\n        \"enabled\": true,\n        \"authentication\": {\n          \"enabled\": true,\n          \"username\": \"username\"\n        }\n      }\n    },\n    \"wan2\": {\n      \"enabled\": true,\n      \"vlanTagging\": {\n        \"enabled\": true,\n        \"vlanId\": 1\n      },\n      \"svis\": {\n        \"ipv4\": {\n          \"assignmentMode\": \"static\",\n          \"address\": \"9.10.11.10/16\",\n          \"gateway\": \"13.14.15.16\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"1.2.3.4\"\n            ]\n          }\n        },\n        \"ipv6\": {\n          \"assignmentMode\": \"static\",\n          \"address\": \"1:2:3::4\",\n          \"gateway\": \"1:2:3::5\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"1001:4860:4860::8888\",\n              \"1001:4860:4860::8844\"\n            ]\n          }\n        }\n      },\n      \"pppoe\": {\n        \"enabled\": true,\n        \"authentication\": {\n          \"enabled\": true,\n          \"username\": \"username\"\n        }\n      }\n    }\n  }\n}"
														}
													]
												},
												{
													"name": "updateDeviceApplianceUplinksSettings",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"interfaces\": {\n    \"wan1\": {\n      \"enabled\": \"<boolean>\",\n      \"vlanTagging\": {\n        \"enabled\": \"<boolean>\",\n        \"vlanId\": \"<integer>\"\n      },\n      \"svis\": {\n        \"ipv4\": {\n          \"assignmentMode\": \"<string>\",\n          \"address\": \"<string>\",\n          \"gateway\": \"<string>\",\n          \"nameservers\": {\n            \"addresses\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"ipv6\": {\n          \"assignmentMode\": \"<string>\",\n          \"address\": \"<string>\",\n          \"gateway\": \"<string>\",\n          \"nameservers\": {\n            \"addresses\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      },\n      \"pppoe\": {\n        \"enabled\": \"<boolean>\",\n        \"authentication\": {\n          \"enabled\": \"<boolean>\",\n          \"username\": \"<string>\",\n          \"password\": \"<string>\"\n        }\n      }\n    },\n    \"wan2\": {\n      \"enabled\": \"<boolean>\",\n      \"vlanTagging\": {\n        \"enabled\": \"<boolean>\",\n        \"vlanId\": \"<integer>\"\n      },\n      \"svis\": {\n        \"ipv4\": {\n          \"assignmentMode\": \"<string>\",\n          \"address\": \"<string>\",\n          \"gateway\": \"<string>\",\n          \"nameservers\": {\n            \"addresses\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"ipv6\": {\n          \"assignmentMode\": \"<string>\",\n          \"address\": \"<string>\",\n          \"gateway\": \"<string>\",\n          \"nameservers\": {\n            \"addresses\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      },\n      \"pppoe\": {\n        \"enabled\": \"<boolean>\",\n        \"authentication\": {\n          \"enabled\": \"<boolean>\",\n          \"username\": \"<string>\",\n          \"password\": \"<string>\"\n        }\n      }\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/appliance/uplinks/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"appliance",
																"uplinks",
																"settings"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the uplink settings for an MX appliance"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"interfaces\": {\n    \"wan1\": {\n      \"enabled\": true,\n      \"vlanTagging\": {\n        \"enabled\": true,\n        \"vlanId\": 1\n      },\n      \"svis\": {\n        \"ipv4\": {\n          \"assignmentMode\": \"static\",\n          \"address\": \"9.10.11.10/16\",\n          \"gateway\": \"13.14.15.16\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"1.2.3.4\"\n            ]\n          }\n        },\n        \"ipv6\": {\n          \"assignmentMode\": \"static\",\n          \"address\": \"1:2:3::4\",\n          \"gateway\": \"1:2:3::5\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"1001:4860:4860::8888\",\n              \"1001:4860:4860::8844\"\n            ]\n          }\n        }\n      },\n      \"pppoe\": {\n        \"enabled\": true,\n        \"authentication\": {\n          \"enabled\": true,\n          \"username\": \"username\",\n          \"password\": \"password\"\n        }\n      }\n    },\n    \"wan2\": {\n      \"enabled\": true,\n      \"vlanTagging\": {\n        \"enabled\": true,\n        \"vlanId\": 1\n      },\n      \"svis\": {\n        \"ipv4\": {\n          \"assignmentMode\": \"static\",\n          \"address\": \"9.10.11.10/16\",\n          \"gateway\": \"13.14.15.16\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"1.2.3.4\"\n            ]\n          }\n        },\n        \"ipv6\": {\n          \"assignmentMode\": \"static\",\n          \"address\": \"1:2:3::4\",\n          \"gateway\": \"1:2:3::5\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"1001:4860:4860::8888\",\n              \"1001:4860:4860::8844\"\n            ]\n          }\n        }\n      },\n      \"pppoe\": {\n        \"enabled\": true,\n        \"authentication\": {\n          \"enabled\": true,\n          \"username\": \"username\",\n          \"password\": \"password\"\n        }\n      }\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/appliance/uplinks/settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"appliance",
																		"uplinks",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"interfaces\": {\n    \"wan1\": {\n      \"enabled\": true,\n      \"vlanTagging\": {\n        \"enabled\": true,\n        \"vlanId\": 1\n      },\n      \"svis\": {\n        \"ipv4\": {\n          \"assignmentMode\": \"static\",\n          \"address\": \"9.10.11.10/16\",\n          \"gateway\": \"13.14.15.16\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"1.2.3.4\"\n            ]\n          }\n        },\n        \"ipv6\": {\n          \"assignmentMode\": \"static\",\n          \"address\": \"1:2:3::4\",\n          \"gateway\": \"1:2:3::5\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"1001:4860:4860::8888\",\n              \"1001:4860:4860::8844\"\n            ]\n          }\n        }\n      },\n      \"pppoe\": {\n        \"enabled\": true,\n        \"authentication\": {\n          \"enabled\": true,\n          \"username\": \"username\"\n        }\n      }\n    },\n    \"wan2\": {\n      \"enabled\": true,\n      \"vlanTagging\": {\n        \"enabled\": true,\n        \"vlanId\": 1\n      },\n      \"svis\": {\n        \"ipv4\": {\n          \"assignmentMode\": \"static\",\n          \"address\": \"9.10.11.10/16\",\n          \"gateway\": \"13.14.15.16\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"1.2.3.4\"\n            ]\n          }\n        },\n        \"ipv6\": {\n          \"assignmentMode\": \"static\",\n          \"address\": \"1:2:3::4\",\n          \"gateway\": \"1:2:3::5\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"1001:4860:4860::8888\",\n              \"1001:4860:4860::8844\"\n            ]\n          }\n        }\n      },\n      \"pppoe\": {\n        \"enabled\": true,\n        \"authentication\": {\n          \"enabled\": true,\n          \"username\": \"username\"\n        }\n      }\n    }\n  }\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "vlans",
									"item": [
										{
											"name": "settings",
											"item": [
												{
													"name": "getNetworkApplianceVlansSettings",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/vlans/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"vlans",
																"settings"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Returns the enabled status of VLANs for the network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/vlans/settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"vlans",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"vlansEnabled\": true\n}"
														}
													]
												},
												{
													"name": "updateNetworkApplianceVlansSettings",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"vlansEnabled\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/vlans/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"vlans",
																"settings"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Enable/Disable VLANs for the given network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"vlansEnabled\": true\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/vlans/settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"vlans",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"vlansEnabled\": true\n}"
														}
													]
												}
											]
										},
										{
											"name": "createNetworkApplianceVlan",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"applianceIp\": \"<string>\",\n  \"groupPolicyId\": \"<string>\",\n  \"templateVlanType\": \"same\",\n  \"cidr\": \"<string>\",\n  \"mask\": \"<integer>\",\n  \"ipv6\": {\n    \"enabled\": \"<boolean>\",\n    \"prefixAssignments\": [\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"<string>\",\n          \"interfaces\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      },\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"<string>\",\n          \"interfaces\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      }\n    ]\n  },\n  \"dhcpHandling\": \"<string>\",\n  \"dhcpLeaseTime\": \"<string>\",\n  \"mandatoryDhcp\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"dhcpBootOptionsEnabled\": \"<boolean>\",\n  \"dhcpOptions\": [\n    {\n      \"code\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/vlans",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"vlans"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Add a VLAN"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"applianceIp\": \"<string>\",\n  \"groupPolicyId\": \"<string>\",\n  \"templateVlanType\": \"same\",\n  \"cidr\": \"<string>\",\n  \"mask\": \"<integer>\",\n  \"ipv6\": {\n    \"enabled\": \"<boolean>\",\n    \"prefixAssignments\": [\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"<string>\",\n          \"interfaces\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      },\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"<string>\",\n          \"interfaces\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      }\n    ]\n  },\n  \"dhcpHandling\": \"<string>\",\n  \"dhcpLeaseTime\": \"<string>\",\n  \"mandatoryDhcp\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"dhcpBootOptionsEnabled\": \"<boolean>\",\n  \"dhcpOptions\": [\n    {\n      \"code\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/vlans",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"vlans"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"interfaceId\": \"1284392014819\",\n  \"name\": \"My VLAN\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"applianceIp\": \"192.168.1.2\",\n  \"groupPolicyId\": \"101\",\n  \"templateVlanType\": \"same\",\n  \"cidr\": \"192.168.1.0/24\",\n  \"mask\": 28,\n  \"mandatoryDhcp\": {\n    \"enabled\": true\n  },\n  \"ipv6\": {\n    \"enabled\": true,\n    \"prefixAssignments\": [\n      {\n        \"autonomous\": false,\n        \"staticPrefix\": \"2001:db8:3c4d:15::/64\",\n        \"staticApplianceIp6\": \"2001:db8:3c4d:15::1\",\n        \"origin\": {\n          \"type\": \"internet\",\n          \"interfaces\": [\n            \"wan0\"\n          ]\n        }\n      }\n    ]\n  }\n}"
												}
											]
										},
										{
											"name": "deleteNetworkApplianceVlan",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/vlans/:vlanId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"vlans",
														":vlanId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "vlanId",
															"value": "{{vlanId}}",
															"description": "(Required) Vlan ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Delete a VLAN from a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/vlans/:vlanId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"vlans",
																":vlanId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "vlanId",
																	"value": "<string>",
																	"description": "(Required) Vlan ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getNetworkApplianceVlan",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/vlans/:vlanId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"vlans",
														":vlanId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "vlanId",
															"value": "{{vlanId}}",
															"description": "(Required) Vlan ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return a VLAN"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/vlans/:vlanId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"vlans",
																":vlanId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "vlanId",
																	"value": "<string>",
																	"description": "(Required) Vlan ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"interfaceId\": \"1284392014819\",\n  \"name\": \"My VLAN\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"applianceIp\": \"192.168.1.2\",\n  \"groupPolicyId\": \"101\",\n  \"templateVlanType\": \"same\",\n  \"cidr\": \"192.168.1.0/24\",\n  \"mask\": 28,\n  \"dhcpRelayServerIps\": [\n    \"192.168.1.0/24\",\n    \"192.168.128.0/24\"\n  ],\n  \"dhcpHandling\": \"Run a DHCP server\",\n  \"dhcpLeaseTime\": \"1 day\",\n  \"dhcpBootOptionsEnabled\": false,\n  \"dhcpBootNextServer\": \"1.2.3.4\",\n  \"dhcpBootFilename\": \"sample.file\",\n  \"fixedIpAssignments\": {\n    \"00:11:22:33:44:55\": {\n      \"ip\": \"1.2.3.4\",\n      \"name\": \"My favorite IP\"\n    }\n  },\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"192.168.1.0\",\n      \"end\": \"192.168.1.1\",\n      \"comment\": \"A reserved IP range\"\n    }\n  ],\n  \"dnsNameservers\": \"google_dns\",\n  \"dhcpOptions\": [\n    {\n      \"code\": \"5\",\n      \"type\": \"text\",\n      \"value\": \"five\"\n    }\n  ],\n  \"vpnNatSubnet\": \"192.168.1.0/24\",\n  \"mandatoryDhcp\": {\n    \"enabled\": true\n  },\n  \"ipv6\": {\n    \"enabled\": true,\n    \"prefixAssignments\": [\n      {\n        \"autonomous\": false,\n        \"staticPrefix\": \"2001:db8:3c4d:15::/64\",\n        \"staticApplianceIp6\": \"2001:db8:3c4d:15::1\",\n        \"origin\": {\n          \"type\": \"internet\",\n          \"interfaces\": [\n            \"wan0\"\n          ]\n        }\n      }\n    ]\n  }\n}"
												}
											]
										},
										{
											"name": "getNetworkApplianceVlans",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/vlans",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"vlans"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the VLANs for an MX network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/vlans",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"vlans"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"1234\",\n    \"interfaceId\": \"1284392014819\",\n    \"name\": \"My VLAN\",\n    \"subnet\": \"192.168.1.0/24\",\n    \"applianceIp\": \"192.168.1.2\",\n    \"groupPolicyId\": \"101\",\n    \"templateVlanType\": \"same\",\n    \"cidr\": \"192.168.1.0/24\",\n    \"mask\": 28,\n    \"dhcpRelayServerIps\": [\n      \"192.168.1.0/24\",\n      \"192.168.128.0/24\"\n    ],\n    \"dhcpHandling\": \"Run a DHCP server\",\n    \"dhcpLeaseTime\": \"1 day\",\n    \"dhcpBootOptionsEnabled\": false,\n    \"dhcpBootNextServer\": \"1.2.3.4\",\n    \"dhcpBootFilename\": \"sample.file\",\n    \"fixedIpAssignments\": {\n      \"00:11:22:33:44:55\": {\n        \"ip\": \"1.2.3.4\",\n        \"name\": \"My favorite IP\"\n      }\n    },\n    \"reservedIpRanges\": [\n      {\n        \"start\": \"192.168.1.0\",\n        \"end\": \"192.168.1.1\",\n        \"comment\": \"A reserved IP range\"\n      }\n    ],\n    \"dnsNameservers\": \"google_dns\",\n    \"dhcpOptions\": [\n      {\n        \"code\": \"5\",\n        \"type\": \"text\",\n        \"value\": \"five\"\n      }\n    ],\n    \"vpnNatSubnet\": \"192.168.1.0/24\",\n    \"mandatoryDhcp\": {\n      \"enabled\": true\n    },\n    \"ipv6\": {\n      \"enabled\": true,\n      \"prefixAssignments\": [\n        {\n          \"autonomous\": false,\n          \"staticPrefix\": \"2001:db8:3c4d:15::/64\",\n          \"staticApplianceIp6\": \"2001:db8:3c4d:15::1\",\n          \"origin\": {\n            \"type\": \"internet\",\n            \"interfaces\": [\n              \"wan0\"\n            ]\n          }\n        }\n      ]\n    }\n  }\n]"
												}
											]
										},
										{
											"name": "updateNetworkApplianceVlan",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"applianceIp\": \"<string>\",\n  \"groupPolicyId\": \"<string>\",\n  \"vpnNatSubnet\": \"<string>\",\n  \"dhcpHandling\": \"<string>\",\n  \"dhcpRelayServerIps\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"dhcpLeaseTime\": \"<string>\",\n  \"dhcpBootOptionsEnabled\": \"<boolean>\",\n  \"dhcpBootNextServer\": \"<string>\",\n  \"dhcpBootFilename\": \"<string>\",\n  \"fixedIpAssignments\": \"<object>\",\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"dnsNameservers\": \"<string>\",\n  \"dhcpOptions\": [\n    {\n      \"code\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"templateVlanType\": \"<string>\",\n  \"cidr\": \"<string>\",\n  \"mask\": \"<integer>\",\n  \"ipv6\": {\n    \"enabled\": \"<boolean>\",\n    \"prefixAssignments\": [\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"<string>\",\n          \"interfaces\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      },\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"<string>\",\n          \"interfaces\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      }\n    ]\n  },\n  \"mandatoryDhcp\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/vlans/:vlanId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"vlans",
														":vlanId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "vlanId",
															"value": "{{vlanId}}",
															"description": "(Required) Vlan ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update a VLAN"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"applianceIp\": \"<string>\",\n  \"groupPolicyId\": \"<string>\",\n  \"vpnNatSubnet\": \"<string>\",\n  \"dhcpHandling\": \"<string>\",\n  \"dhcpRelayServerIps\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"dhcpLeaseTime\": \"<string>\",\n  \"dhcpBootOptionsEnabled\": \"<boolean>\",\n  \"dhcpBootNextServer\": \"<string>\",\n  \"dhcpBootFilename\": \"<string>\",\n  \"fixedIpAssignments\": \"<object>\",\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"dnsNameservers\": \"<string>\",\n  \"dhcpOptions\": [\n    {\n      \"code\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"templateVlanType\": \"<string>\",\n  \"cidr\": \"<string>\",\n  \"mask\": \"<integer>\",\n  \"ipv6\": {\n    \"enabled\": \"<boolean>\",\n    \"prefixAssignments\": [\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"<string>\",\n          \"interfaces\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      },\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"<string>\",\n          \"interfaces\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      }\n    ]\n  },\n  \"mandatoryDhcp\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/vlans/:vlanId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"vlans",
																":vlanId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "vlanId",
																	"value": "<string>",
																	"description": "(Required) Vlan ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"interfaceId\": \"1284392014819\",\n  \"name\": \"My VLAN\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"applianceIp\": \"192.168.1.2\",\n  \"groupPolicyId\": \"101\",\n  \"templateVlanType\": \"same\",\n  \"cidr\": \"192.168.1.0/24\",\n  \"mask\": 28,\n  \"dhcpRelayServerIps\": [\n    \"192.168.1.0/24\",\n    \"192.168.128.0/24\"\n  ],\n  \"dhcpHandling\": \"Run a DHCP server\",\n  \"dhcpLeaseTime\": \"1 day\",\n  \"dhcpBootOptionsEnabled\": false,\n  \"dhcpBootNextServer\": \"1.2.3.4\",\n  \"dhcpBootFilename\": \"sample.file\",\n  \"fixedIpAssignments\": {\n    \"00:11:22:33:44:55\": {\n      \"ip\": \"1.2.3.4\",\n      \"name\": \"My favorite IP\"\n    }\n  },\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"192.168.1.0\",\n      \"end\": \"192.168.1.1\",\n      \"comment\": \"A reserved IP range\"\n    }\n  ],\n  \"dnsNameservers\": \"google_dns\",\n  \"dhcpOptions\": [\n    {\n      \"code\": \"5\",\n      \"type\": \"text\",\n      \"value\": \"five\"\n    }\n  ],\n  \"vpnNatSubnet\": \"192.168.1.0/24\",\n  \"mandatoryDhcp\": {\n    \"enabled\": true\n  },\n  \"ipv6\": {\n    \"enabled\": true,\n    \"prefixAssignments\": [\n      {\n        \"autonomous\": false,\n        \"staticPrefix\": \"2001:db8:3c4d:15::/64\",\n        \"staticApplianceIp6\": \"2001:db8:3c4d:15::1\",\n        \"origin\": {\n          \"type\": \"internet\",\n          \"interfaces\": [\n            \"wan0\"\n          ]\n        }\n      }\n    ]\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "vmx",
									"item": [
										{
											"name": "authenticationToken",
											"item": [
												{
													"name": "createDeviceApplianceVmxAuthenticationToken",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/appliance/vmx/authenticationToken",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"appliance",
																"vmx",
																"authenticationToken"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Generate a new vMX authentication token"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/appliance/vmx/authenticationToken",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"appliance",
																		"vmx",
																		"authenticationToken"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"token\": \"ffc0b7b578b61be5bd1d172132c78044/9af03bd84d474\",\n  \"expiresAt\": \"2021-06-18T12:40:10Z\"\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "vpn",
									"item": [
										{
											"name": "bgp",
											"item": [
												{
													"name": "getNetworkApplianceVpnBgp",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/vpn/bgp",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"vpn",
																"bgp"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return a Hub BGP Configuration"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/vpn/bgp",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"vpn",
																		"bgp"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"enabled\": true,\n  \"asNumber\": 64515,\n  \"ibgpHoldTimer\": 120,\n  \"neighbors\": [\n    {\n      \"ip\": \"10.10.10.22\",\n      \"ipv6\": {\n        \"address\": \"2002::1234:abcd:ffff:c0a8:101\"\n      },\n      \"remoteAsNumber\": 64343,\n      \"receiveLimit\": 120,\n      \"allowTransit\": true,\n      \"ebgpHoldTimer\": 180,\n      \"ebgpMultihop\": 2,\n      \"sourceInterface\": \"wan1\",\n      \"nextHopIp\": \"1.2.3.4\",\n      \"ttlSecurity\": {\n        \"enabled\": false\n      },\n      \"authentication\": {\n        \"password\": \"abc123\"\n      }\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "updateNetworkApplianceVpnBgp",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"asNumber\": \"<integer>\",\n  \"ibgpHoldTimer\": \"<integer>\",\n  \"neighbors\": [\n    {\n      \"remoteAsNumber\": \"<integer>\",\n      \"ebgpHoldTimer\": \"<integer>\",\n      \"ebgpMultihop\": \"<integer>\",\n      \"ip\": \"<string>\",\n      \"ipv6\": {\n        \"address\": \"<string>\"\n      },\n      \"receiveLimit\": \"<integer>\",\n      \"allowTransit\": \"<boolean>\",\n      \"sourceInterface\": \"<string>\",\n      \"nextHopIp\": \"<string>\",\n      \"ttlSecurity\": {\n        \"enabled\": \"<boolean>\"\n      },\n      \"authentication\": {\n        \"password\": \"<string>\"\n      }\n    },\n    {\n      \"remoteAsNumber\": \"<integer>\",\n      \"ebgpHoldTimer\": \"<integer>\",\n      \"ebgpMultihop\": \"<integer>\",\n      \"ip\": \"<string>\",\n      \"ipv6\": {\n        \"address\": \"<string>\"\n      },\n      \"receiveLimit\": \"<integer>\",\n      \"allowTransit\": \"<boolean>\",\n      \"sourceInterface\": \"<string>\",\n      \"nextHopIp\": \"<string>\",\n      \"ttlSecurity\": {\n        \"enabled\": \"<boolean>\"\n      },\n      \"authentication\": {\n        \"password\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/vpn/bgp",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"vpn",
																"bgp"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update a Hub BGP Configuration"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"asNumber\": \"<integer>\",\n  \"ibgpHoldTimer\": \"<integer>\",\n  \"neighbors\": [\n    {\n      \"remoteAsNumber\": \"<integer>\",\n      \"ebgpHoldTimer\": \"<integer>\",\n      \"ebgpMultihop\": \"<integer>\",\n      \"ip\": \"<string>\",\n      \"ipv6\": {\n        \"address\": \"<string>\"\n      },\n      \"receiveLimit\": \"<integer>\",\n      \"allowTransit\": \"<boolean>\",\n      \"sourceInterface\": \"<string>\",\n      \"nextHopIp\": \"<string>\",\n      \"ttlSecurity\": {\n        \"enabled\": \"<boolean>\"\n      },\n      \"authentication\": {\n        \"password\": \"<string>\"\n      }\n    },\n    {\n      \"remoteAsNumber\": \"<integer>\",\n      \"ebgpHoldTimer\": \"<integer>\",\n      \"ebgpMultihop\": \"<integer>\",\n      \"ip\": \"<string>\",\n      \"ipv6\": {\n        \"address\": \"<string>\"\n      },\n      \"receiveLimit\": \"<integer>\",\n      \"allowTransit\": \"<boolean>\",\n      \"sourceInterface\": \"<string>\",\n      \"nextHopIp\": \"<string>\",\n      \"ttlSecurity\": {\n        \"enabled\": \"<boolean>\"\n      },\n      \"authentication\": {\n        \"password\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/vpn/bgp",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"vpn",
																		"bgp"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"enabled\": true,\n  \"asNumber\": 64515,\n  \"ibgpHoldTimer\": 120,\n  \"neighbors\": [\n    {\n      \"ip\": \"10.10.10.22\",\n      \"ipv6\": {\n        \"address\": \"2002::1234:abcd:ffff:c0a8:101\"\n      },\n      \"remoteAsNumber\": 64343,\n      \"receiveLimit\": 120,\n      \"allowTransit\": true,\n      \"ebgpHoldTimer\": 180,\n      \"ebgpMultihop\": 2,\n      \"sourceInterface\": \"wan1\",\n      \"nextHopIp\": \"1.2.3.4\",\n      \"ttlSecurity\": {\n        \"enabled\": false\n      },\n      \"authentication\": {\n        \"password\": \"abc123\"\n      }\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "siteToSiteVpn",
											"item": [
												{
													"name": "getNetworkApplianceVpnSiteToSiteVpn",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/vpn/siteToSiteVpn",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"vpn",
																"siteToSiteVpn"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the site-to-site VPN settings of a network. Only valid for MX networks."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/vpn/siteToSiteVpn",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"vpn",
																		"siteToSiteVpn"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"mode\": \"spoke\",\n  \"hubs\": [\n    {\n      \"hubId\": \"N_4901849\",\n      \"useDefaultRoute\": true\n    }\n  ],\n  \"subnets\": [\n    {\n      \"localSubnet\": \"192.168.1.0/24\",\n      \"useVpn\": true,\n      \"nat\": {\n        \"enabled\": true,\n        \"remoteSubnet\": \"192.168.2.0/24\"\n      }\n    }\n  ],\n  \"subnet\": {\n    \"nat\": {\n      \"isAllowed\": true\n    }\n  }\n}"
														}
													]
												},
												{
													"name": "updateNetworkApplianceVpnSiteToSiteVpn",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"mode\": \"<string>\",\n  \"hubs\": [\n    {\n      \"hubId\": \"<string>\",\n      \"useDefaultRoute\": \"<boolean>\"\n    },\n    {\n      \"hubId\": \"<string>\",\n      \"useDefaultRoute\": \"<boolean>\"\n    }\n  ],\n  \"subnets\": [\n    {\n      \"localSubnet\": \"<string>\",\n      \"useVpn\": \"<boolean>\",\n      \"nat\": {\n        \"enabled\": \"<boolean>\",\n        \"remoteSubnet\": \"<string>\"\n      }\n    },\n    {\n      \"localSubnet\": \"<string>\",\n      \"useVpn\": \"<boolean>\",\n      \"nat\": {\n        \"enabled\": \"<boolean>\",\n        \"remoteSubnet\": \"<string>\"\n      }\n    }\n  ],\n  \"subnet\": {\n    \"nat\": {\n      \"isAllowed\": \"<boolean>\"\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/vpn/siteToSiteVpn",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"vpn",
																"siteToSiteVpn"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"mode\": \"<string>\",\n  \"hubs\": [\n    {\n      \"hubId\": \"<string>\",\n      \"useDefaultRoute\": \"<boolean>\"\n    },\n    {\n      \"hubId\": \"<string>\",\n      \"useDefaultRoute\": \"<boolean>\"\n    }\n  ],\n  \"subnets\": [\n    {\n      \"localSubnet\": \"<string>\",\n      \"useVpn\": \"<boolean>\",\n      \"nat\": {\n        \"enabled\": \"<boolean>\",\n        \"remoteSubnet\": \"<string>\"\n      }\n    },\n    {\n      \"localSubnet\": \"<string>\",\n      \"useVpn\": \"<boolean>\",\n      \"nat\": {\n        \"enabled\": \"<boolean>\",\n        \"remoteSubnet\": \"<string>\"\n      }\n    }\n  ],\n  \"subnet\": {\n    \"nat\": {\n      \"isAllowed\": \"<boolean>\"\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/vpn/siteToSiteVpn",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"vpn",
																		"siteToSiteVpn"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"mode\": \"spoke\",\n  \"hubs\": [\n    {\n      \"hubId\": \"N_4901849\",\n      \"useDefaultRoute\": true\n    }\n  ],\n  \"subnets\": [\n    {\n      \"localSubnet\": \"192.168.1.0/24\",\n      \"useVpn\": true,\n      \"nat\": {\n        \"enabled\": true,\n        \"remoteSubnet\": \"192.168.2.0/24\"\n      }\n    }\n  ],\n  \"subnet\": {\n    \"nat\": {\n      \"isAllowed\": true\n    }\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "thirdPartyVPNPeers",
											"item": [
												{
													"name": "getOrganizationApplianceVpnThirdPartyVPNPeers",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/appliance/vpn/thirdPartyVPNPeers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"appliance",
																"vpn",
																"thirdPartyVPNPeers"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the third party VPN peers for an organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/vpn/thirdPartyVPNPeers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"vpn",
																		"thirdPartyVPNPeers"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"peers\": [\n    {\n      \"name\": \"Peer Name\",\n      \"publicIp\": \"123.123.123.1\",\n      \"remoteId\": \"miles@meraki.com\",\n      \"localId\": \"myMXId@meraki.com\",\n      \"secret\": \"secret\",\n      \"privateSubnets\": [\n        \"192.168.1.0/24\",\n        \"192.168.128.0/24\"\n      ],\n      \"ipsecPolicies\": {\n        \"ikeCipherAlgo\": [\n          \"tripledes\"\n        ],\n        \"ikeAuthAlgo\": [\n          \"sha1\"\n        ],\n        \"ikePrfAlgo\": [\n          \"prfsha1\"\n        ],\n        \"ikeDiffieHellmanGroup\": [\n          \"group2\"\n        ],\n        \"ikeLifetime\": 28800,\n        \"childCipherAlgo\": [\n          \"aes128\"\n        ],\n        \"childAuthAlgo\": [\n          \"sha1\"\n        ],\n        \"childPfsGroup\": [\n          \"disabled\"\n        ],\n        \"childLifetime\": 28800\n      },\n      \"ipsecPoliciesPreset\": \"custom\",\n      \"ikeVersion\": \"1\",\n      \"networkTags\": [\n        \"all\"\n      ]\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "updateOrganizationApplianceVpnThirdPartyVPNPeers",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"peers\": [\n    {\n      \"name\": \"<string>\",\n      \"privateSubnets\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"secret\": \"<string>\",\n      \"publicIp\": \"<string>\",\n      \"publicHostname\": \"<string>\",\n      \"localId\": \"<string>\",\n      \"remoteId\": \"<string>\",\n      \"ipsecPolicies\": {\n        \"ikeCipherAlgo\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ikeAuthAlgo\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ikePrfAlgo\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ikeDiffieHellmanGroup\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ikeLifetime\": \"<integer>\",\n        \"childCipherAlgo\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"childAuthAlgo\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"childPfsGroup\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"childLifetime\": \"<integer>\"\n      },\n      \"ipsecPoliciesPreset\": \"<string>\",\n      \"ikeVersion\": \"1\",\n      \"networkTags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"privateSubnets\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"secret\": \"<string>\",\n      \"publicIp\": \"<string>\",\n      \"publicHostname\": \"<string>\",\n      \"localId\": \"<string>\",\n      \"remoteId\": \"<string>\",\n      \"ipsecPolicies\": {\n        \"ikeCipherAlgo\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ikeAuthAlgo\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ikePrfAlgo\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ikeDiffieHellmanGroup\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ikeLifetime\": \"<integer>\",\n        \"childCipherAlgo\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"childAuthAlgo\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"childPfsGroup\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"childLifetime\": \"<integer>\"\n      },\n      \"ipsecPoliciesPreset\": \"<string>\",\n      \"ikeVersion\": \"1\",\n      \"networkTags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/appliance/vpn/thirdPartyVPNPeers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"appliance",
																"vpn",
																"thirdPartyVPNPeers"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the third party VPN peers for an organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"peers\": [\n    {\n      \"name\": \"<string>\",\n      \"privateSubnets\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"secret\": \"<string>\",\n      \"publicIp\": \"<string>\",\n      \"publicHostname\": \"<string>\",\n      \"localId\": \"<string>\",\n      \"remoteId\": \"<string>\",\n      \"ipsecPolicies\": {\n        \"ikeCipherAlgo\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ikeAuthAlgo\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ikePrfAlgo\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ikeDiffieHellmanGroup\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ikeLifetime\": \"<integer>\",\n        \"childCipherAlgo\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"childAuthAlgo\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"childPfsGroup\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"childLifetime\": \"<integer>\"\n      },\n      \"ipsecPoliciesPreset\": \"<string>\",\n      \"ikeVersion\": \"1\",\n      \"networkTags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"privateSubnets\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"secret\": \"<string>\",\n      \"publicIp\": \"<string>\",\n      \"publicHostname\": \"<string>\",\n      \"localId\": \"<string>\",\n      \"remoteId\": \"<string>\",\n      \"ipsecPolicies\": {\n        \"ikeCipherAlgo\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ikeAuthAlgo\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ikePrfAlgo\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ikeDiffieHellmanGroup\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ikeLifetime\": \"<integer>\",\n        \"childCipherAlgo\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"childAuthAlgo\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"childPfsGroup\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"childLifetime\": \"<integer>\"\n      },\n      \"ipsecPoliciesPreset\": \"<string>\",\n      \"ikeVersion\": \"1\",\n      \"networkTags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/vpn/thirdPartyVPNPeers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"vpn",
																		"thirdPartyVPNPeers"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"peers\": [\n    {\n      \"name\": \"Peer Name\",\n      \"publicIp\": \"123.123.123.1\",\n      \"remoteId\": \"miles@meraki.com\",\n      \"localId\": \"myMXId@meraki.com\",\n      \"secret\": \"secret\",\n      \"privateSubnets\": [\n        \"192.168.1.0/24\",\n        \"192.168.128.0/24\"\n      ],\n      \"ipsecPolicies\": {\n        \"ikeCipherAlgo\": [\n          \"tripledes\"\n        ],\n        \"ikeAuthAlgo\": [\n          \"sha1\"\n        ],\n        \"ikePrfAlgo\": [\n          \"prfsha1\"\n        ],\n        \"ikeDiffieHellmanGroup\": [\n          \"group2\"\n        ],\n        \"ikeLifetime\": 28800,\n        \"childCipherAlgo\": [\n          \"aes128\"\n        ],\n        \"childAuthAlgo\": [\n          \"sha1\"\n        ],\n        \"childPfsGroup\": [\n          \"disabled\"\n        ],\n        \"childLifetime\": 28800\n      },\n      \"ipsecPoliciesPreset\": \"custom\",\n      \"ikeVersion\": \"1\",\n      \"networkTags\": [\n        \"all\"\n      ]\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "vpnFirewallRules",
											"item": [
												{
													"name": "getOrganizationApplianceVpnVpnFirewallRules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/appliance/vpn/vpnFirewallRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"appliance",
																"vpn",
																"vpnFirewallRules"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the firewall rules for an organization's site-to-site VPN"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/vpn/vpnFirewallRules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"vpn",
																		"vpnFirewallRules"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"rules\": [\n    {\n      \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\n      \"policy\": \"allow\",\n      \"protocol\": \"tcp\",\n      \"srcPort\": \"Any\",\n      \"srcCidr\": \"Any\",\n      \"destPort\": \"443\",\n      \"destCidr\": \"192.168.1.0/24\",\n      \"syslogEnabled\": false\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "updateOrganizationApplianceVpnVpnFirewallRules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    }\n  ],\n  \"syslogDefaultRule\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/appliance/vpn/vpnFirewallRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"appliance",
																"vpn",
																"vpnFirewallRules"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the firewall rules of an organization's site-to-site VPN"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    }\n  ],\n  \"syslogDefaultRule\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/vpn/vpnFirewallRules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"vpn",
																		"vpnFirewallRules"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"rules\": [\n    {\n      \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\n      \"policy\": \"allow\",\n      \"protocol\": \"tcp\",\n      \"srcPort\": \"Any\",\n      \"srcCidr\": \"Any\",\n      \"destPort\": \"443\",\n      \"destCidr\": \"192.168.1.0/24\",\n      \"syslogEnabled\": false\n    }\n  ]\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "warmSpare",
									"item": [
										{
											"name": "getNetworkApplianceWarmSpare",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/warmSpare",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"warmSpare"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return MX warm spare settings"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/warmSpare",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"warmSpare"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"enabled\": true,\n  \"primarySerial\": \"Q234-ABCD-5678\",\n  \"spareSerial\": \"Q234-ABCD-5678\",\n  \"uplinkMode\": \"virtual\",\n  \"wan1\": {\n    \"ip\": \"1.2.3.4\",\n    \"subnet\": \"192.168.1.0/24\"\n  },\n  \"wan2\": {\n    \"ip\": \"1.2.3.4\",\n    \"subnet\": \"192.168.1.0/24\"\n  }\n}"
												}
											]
										},
										{
											"name": "swapNetworkApplianceWarmSpare",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/warmSpare/swap",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"warmSpare",
														"swap"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Swap MX primary and warm spare appliances"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/warmSpare/swap",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"warmSpare",
																"swap"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"enabled\": true,\n  \"primarySerial\": \"Q234-ABCD-5678\",\n  \"spareSerial\": \"Q234-ABCD-5678\",\n  \"uplinkMode\": \"virtual\",\n  \"wan1\": {\n    \"ip\": \"1.2.3.4\",\n    \"subnet\": \"192.168.1.0/24\"\n  },\n  \"wan2\": {\n    \"ip\": \"1.2.3.4\",\n    \"subnet\": \"192.168.1.0/24\"\n  }\n}"
												}
											]
										},
										{
											"name": "updateNetworkApplianceWarmSpare",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"spareSerial\": \"<string>\",\n  \"uplinkMode\": \"<string>\",\n  \"virtualIp1\": \"<string>\",\n  \"virtualIp2\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/appliance/warmSpare",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"appliance",
														"warmSpare"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update MX warm spare settings"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": true,\n  \"spareSerial\": \"Q234-ABCD-5678\",\n  \"uplinkMode\": \"virtual\",\n  \"virtualIp1\": \"1.2.3.4\",\n  \"virtualIp2\": \"1.2.3.4\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/warmSpare",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"warmSpare"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"enabled\": true,\n  \"primarySerial\": \"Q234-ABCD-5678\",\n  \"spareSerial\": \"Q234-ABCD-5678\",\n  \"uplinkMode\": \"virtual\",\n  \"wan1\": {\n    \"ip\": \"1.2.3.4\",\n    \"subnet\": \"192.168.1.0/24\"\n  },\n  \"wan2\": {\n    \"ip\": \"1.2.3.4\",\n    \"subnet\": \"192.168.1.0/24\"\n  }\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "monitor",
							"item": [
								{
									"name": "clients",
									"item": [
										{
											"name": "security",
											"item": [
												{
													"name": "events",
													"item": [
														{
															"name": "getNetworkApplianceClientSecurityEvents",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/clients/:clientId/security/events",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"clients",
																		":clientId",
																		"security",
																		"events"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "{{t0}}",
																			"description": "The beginning of the timespan for the data. Data is gathered after the specified t0 value. The maximum lookback period is 791 days from today.",
																			"disabled": true
																		},
																		{
																			"key": "t1",
																			"value": "{{t1}}",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 791 days after t0.",
																			"disabled": true
																		},
																		{
																			"key": "timespan",
																			"value": "{{timespan}}",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 31 days.",
																			"disabled": true
																		},
																		{
																			"key": "perPage",
																			"value": "{{perPage}}",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.",
																			"disabled": true
																		},
																		{
																			"key": "startingAfter",
																			"value": "{{startingAfter}}",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "endingBefore",
																			"value": "{{endingBefore}}",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "sortOrder",
																			"value": "{{sortOrder}}",
																			"description": "Sorted order of security events based on event detection time. Order options are 'ascending' or 'descending'. Default is ascending order.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "clientId",
																			"value": "{{clientId}}",
																			"description": "(Required) Client ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "List the security events for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/appliance/clients/:clientId/security/events?t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&sortOrder=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"appliance",
																				"clients",
																				":clientId",
																				"security",
																				"events"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>"
																				},
																				{
																					"key": "t1",
																					"value": "<string>"
																				},
																				{
																					"key": "timespan",
																					"value": "<float>"
																				},
																				{
																					"key": "perPage",
																					"value": "<integer>"
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>"
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>"
																				},
																				{
																					"key": "sortOrder",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "clientId",
																					"value": "<string>",
																					"description": "(Required) Client ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Link",
																			"value": "Lorem nisi fugiat",
																			"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"ts\": \"2018-02-11T00:00:00.090210Z\",\n    \"eventType\": \"File Scanned\",\n    \"clientName\": \"COMPUTER-M-V78J\",\n    \"clientMac\": \"10:dd:b1:eb:88:f8\",\n    \"clientIp\": \"192.168.128.2\",\n    \"srcIp\": \"192.168.128.2\",\n    \"destIp\": \"119.192.233.48\",\n    \"protocol\": \"http\",\n    \"uri\": \"http://www.favorite-icons.com/program/FavoriteIconsUninstall.exe\",\n    \"canonicalName\": \"PUA.Win.Dropper.Kraddare::1201\",\n    \"destinationPort\": 80,\n    \"fileHash\": \"3ec1b9a95fe62aa25fc959643a0f227b76d253094681934daaf628d3574b3463\",\n    \"fileType\": \"MS_EXE\",\n    \"fileSizeBytes\": 193688,\n    \"disposition\": \"Malicious\",\n    \"action\": \"Blocked\"\n  },\n  {\n    \"ts\": \"2018-02-11T00:00:00.090210Z\",\n    \"eventType\": \"IDS Alert\",\n    \"deviceMac\": \"00:18:0a:01:02:03\",\n    \"clientMac\": \"A1:B2:C3:D4:E5:F6\",\n    \"srcIp\": \"1.2.3.4:34195\",\n    \"destIp\": \"10.20.30.40:80\",\n    \"protocol\": \"tcp/ip\",\n    \"priority\": \"2\",\n    \"classification\": \"4\",\n    \"blocked\": true,\n    \"message\": \"SERVER-WEBAPP JBoss JMX console access attempt\",\n    \"signature\": \"1:21516:9\",\n    \"sigSource\": \"\",\n    \"ruleId\": \"meraki:intrusion/snort/GID/1/SID/26267\"\n  }\n]"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "dhcp",
									"item": [
										{
											"name": "subnets",
											"item": [
												{
													"name": "getDeviceApplianceDhcpSubnets",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/appliance/dhcp/subnets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"appliance",
																"dhcp",
																"subnets"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the DHCP subnet information for an appliance"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/appliance/dhcp/subnets",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"appliance",
																		"dhcp",
																		"subnets"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"subnet\": \"192.168.1.0/24\",\n    \"vlanId\": 100,\n    \"usedCount\": 2,\n    \"freeCount\": 251\n  }\n]"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "performance",
									"item": [
										{
											"name": "getDeviceAppliancePerformance",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/appliance/performance",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"appliance",
														"performance"
													],
													"query": [
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 30 days from today.",
															"disabled": true
														},
														{
															"key": "t1",
															"value": "{{t1}}",
															"description": "The end of the timespan for the data. t1 can be a maximum of 14 days after t0.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 30 minutes and be less than or equal to 14 days. The default is 30 minutes.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the performance score for a single MX. Only primary MX devices supported. If no data is available, a 204 error code is returned."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/appliance/performance?t0=<string>&t1=<string>&timespan=<float>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"appliance",
																"performance"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "t1",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																}
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"perfScore\": 10\n}"
												}
											]
										}
									]
								},
								{
									"name": "prefixes",
									"item": [
										{
											"name": "delegated",
											"item": [
												{
													"name": "vlanAssignments",
													"item": [
														{
															"name": "getDeviceAppliancePrefixesDelegatedVlanAssignments",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/appliance/prefixes/delegated/vlanAssignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"appliance",
																		"prefixes",
																		"delegated",
																		"vlanAssignments"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "{{serial}}",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Return prefixes assigned to all IPv6 enabled VLANs on an appliance."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/devices/:serial/appliance/prefixes/delegated/vlanAssignments",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"devices",
																				":serial",
																				"appliance",
																				"prefixes",
																				"delegated",
																				"vlanAssignments"
																			],
																			"variable": [
																				{
																					"key": "serial",
																					"value": "<string>",
																					"description": "(Required) Serial"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"vlan\": {\n      \"id\": 100,\n      \"name\": \"My VLAN\"\n    },\n    \"origin\": {\n      \"interface\": \"wan1\",\n      \"prefix\": \"2001:db8:3c4d:15::/64\"\n    },\n    \"status\": \"Active\",\n    \"ipv6\": {\n      \"prefix\": \"2001:db8:3c4d:15::/64\",\n      \"address\": \"2001:db8:3c4d:15::1\",\n      \"linkLocal\": {\n        \"address\": \"2001:db8:3c4d:15::1\"\n      },\n      \"solicitedNodeMulticast\": {\n        \"address\": \"2001:db8:3c4d:15::1\"\n      }\n    }\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "getDeviceAppliancePrefixesDelegated",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/appliance/prefixes/delegated",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"appliance",
																"prefixes",
																"delegated"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return current delegated IPv6 prefixes on an appliance."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/appliance/prefixes/delegated",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"appliance",
																		"prefixes",
																		"delegated"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"origin\": {\n      \"interface\": \"wan1\"\n    },\n    \"prefix\": \"2001:db8:3c4d:15::/64\",\n    \"counts\": {\n      \"assigned\": 2,\n      \"available\": 253\n    },\n    \"method\": \"auto\",\n    \"description\": \"My ISP provider\",\n    \"isPreferred\": true,\n    \"expiresAt\": \"2018-05-12T00:00:00Z\"\n  }\n]"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "security",
									"item": [
										{
											"name": "events",
											"item": [
												{
													"name": "getNetworkApplianceSecurityEvents",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/security/events",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"security",
																"events"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "{{t0}}",
																	"description": "The beginning of the timespan for the data. Data is gathered after the specified t0 value. The maximum lookback period is 365 days from today.",
																	"disabled": true
																},
																{
																	"key": "t1",
																	"value": "{{t1}}",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0.",
																	"disabled": true
																},
																{
																	"key": "timespan",
																	"value": "{{timespan}}",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days.",
																	"disabled": true
																},
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "sortOrder",
																	"value": "{{sortOrder}}",
																	"description": "Sorted order of security events based on event detection time. Order options are 'ascending' or 'descending'. Default is ascending order.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the security events for a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/security/events?t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&sortOrder=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"security",
																		"events"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>"
																		},
																		{
																			"key": "t1",
																			"value": "<string>"
																		},
																		{
																			"key": "timespan",
																			"value": "<float>"
																		},
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		},
																		{
																			"key": "sortOrder",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"ts\": \"2018-02-11T00:00:00.090210Z\",\n    \"eventType\": \"File Scanned\",\n    \"clientName\": \"COMPUTER-M-V78J\",\n    \"clientMac\": \"10:dd:b1:eb:88:f8\",\n    \"clientIp\": \"192.168.128.2\",\n    \"srcIp\": \"192.168.128.2\",\n    \"destIp\": \"119.192.233.48\",\n    \"protocol\": \"http\",\n    \"uri\": \"http://www.favorite-icons.com/program/FavoriteIconsUninstall.exe\",\n    \"canonicalName\": \"PUA.Win.Dropper.Kraddare::1201\",\n    \"destinationPort\": 80,\n    \"fileHash\": \"3ec1b9a95fe62aa25fc959643a0f227b76d253094681934daaf628d3574b3463\",\n    \"fileType\": \"MS_EXE\",\n    \"fileSizeBytes\": 193688,\n    \"disposition\": \"Malicious\",\n    \"action\": \"Blocked\"\n  },\n  {\n    \"ts\": \"2018-02-11T00:00:00.090210Z\",\n    \"eventType\": \"IDS Alert\",\n    \"deviceMac\": \"00:18:0a:01:02:03\",\n    \"clientMac\": \"A1:B2:C3:D4:E5:F6\",\n    \"srcIp\": \"1.2.3.4:34195\",\n    \"destIp\": \"10.20.30.40:80\",\n    \"protocol\": \"tcp/ip\",\n    \"priority\": \"2\",\n    \"classification\": \"4\",\n    \"blocked\": true,\n    \"message\": \"SERVER-WEBAPP JBoss JMX console access attempt\",\n    \"signature\": \"1:21516:9\",\n    \"sigSource\": \"\",\n    \"ruleId\": \"meraki:intrusion/snort/GID/1/SID/26267\"\n  }\n]"
														}
													]
												},
												{
													"name": "getOrganizationApplianceSecurityEvents",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/appliance/security/events",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"appliance",
																"security",
																"events"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "{{t0}}",
																	"description": "The beginning of the timespan for the data. Data is gathered after the specified t0 value. The maximum lookback period is 365 days from today.",
																	"disabled": true
																},
																{
																	"key": "t1",
																	"value": "{{t1}}",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0.",
																	"disabled": true
																},
																{
																	"key": "timespan",
																	"value": "{{timespan}}",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days.",
																	"disabled": true
																},
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "sortOrder",
																	"value": "{{sortOrder}}",
																	"description": "Sorted order of security events based on event detection time. Order options are 'ascending' or 'descending'. Default is ascending order.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the security events for an organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/security/events?t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&sortOrder=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"security",
																		"events"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>"
																		},
																		{
																			"key": "t1",
																			"value": "<string>"
																		},
																		{
																			"key": "timespan",
																			"value": "<float>"
																		},
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		},
																		{
																			"key": "sortOrder",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"ts\": \"2018-02-11T00:00:00.090210Z\",\n    \"eventType\": \"File Scanned\",\n    \"clientName\": \"COMPUTER-M-V78J\",\n    \"clientMac\": \"10:dd:b1:eb:88:f8\",\n    \"clientIp\": \"192.168.128.2\",\n    \"srcIp\": \"192.168.128.2\",\n    \"destIp\": \"119.192.233.48\",\n    \"protocol\": \"http\",\n    \"uri\": \"http://www.favorite-icons.com/program/FavoriteIconsUninstall.exe\",\n    \"canonicalName\": \"PUA.Win.Dropper.Kraddare::1201\",\n    \"destinationPort\": 80,\n    \"fileHash\": \"3ec1b9a95fe62aa25fc959643a0f227b76d253094681934daaf628d3574b3463\",\n    \"fileType\": \"MS_EXE\",\n    \"fileSizeBytes\": 193688,\n    \"disposition\": \"Malicious\",\n    \"action\": \"Blocked\"\n  },\n  {\n    \"ts\": \"2018-02-11T00:00:00.090210Z\",\n    \"eventType\": \"IDS Alert\",\n    \"deviceMac\": \"00:18:0a:01:02:03\",\n    \"clientMac\": \"A1:B2:C3:D4:E5:F6\",\n    \"srcIp\": \"1.2.3.4:34195\",\n    \"destIp\": \"10.20.30.40:80\",\n    \"protocol\": \"tcp/ip\",\n    \"priority\": \"2\",\n    \"classification\": \"4\",\n    \"blocked\": true,\n    \"message\": \"SERVER-WEBAPP JBoss JMX console access attempt\",\n    \"signature\": \"1:21516:9\",\n    \"sigSource\": \"\",\n    \"ruleId\": \"meraki:intrusion/snort/GID/1/SID/26267\"\n  }\n]"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "uplinks",
									"item": [
										{
											"name": "statuses",
											"item": [
												{
													"name": "overview",
													"item": [
														{
															"name": "getOrganizationApplianceUplinksStatusesOverview",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/uplinks/statuses/overview",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"uplinks",
																		"statuses",
																		"overview"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Returns an overview of uplink statuses"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/appliance/uplinks/statuses/overview",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"appliance",
																				"uplinks",
																				"statuses",
																				"overview"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"counts\": {\n    \"byStatus\": {\n      \"active\": 5,\n      \"ready\": 5,\n      \"failed\": 4,\n      \"connecting\": 2,\n      \"notConnected\": 1\n    }\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "getOrganizationApplianceUplinkStatuses",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/appliance/uplink/statuses",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"appliance",
																"uplink",
																"statuses"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "A list of network IDs. The returned devices will be filtered to only include these networks.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "A list of network IDs. The returned devices will be filtered to only include these networks.",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "A list of serial numbers. The returned devices will be filtered to only include these serials.",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "A list of serial numbers. The returned devices will be filtered to only include these serials.",
																	"disabled": true
																},
																{
																	"key": "iccids",
																	"value": "{{iccids}}",
																	"description": "A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs.",
																	"disabled": true
																},
																{
																	"key": "iccids",
																	"value": "{{iccids}}",
																	"description": "A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the uplink status of every Meraki MX and Z series appliances in the organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/uplink/statuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&iccids=<string>&iccids=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"uplink",
																		"statuses"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "iccids",
																			"value": "<string>"
																		},
																		{
																			"key": "iccids",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"networkId\": \"N_24329156\",\n    \"serial\": \"Q234-ABCD-5678\",\n    \"model\": \"MX68C\",\n    \"lastReportedAt\": \"2018-02-11T00:00:00Z\",\n    \"highAvailability\": {\n      \"enabled\": true,\n      \"role\": \"primary\"\n    },\n    \"uplinks\": [\n      {\n        \"interface\": \"wan1\",\n        \"status\": \"active\",\n        \"ip\": \"1.2.3.4\",\n        \"gateway\": \"1.2.3.5\",\n        \"publicIp\": \"123.123.123.1\",\n        \"primaryDns\": \"8.8.8.8\",\n        \"secondaryDns\": \"8.8.4.4\",\n        \"ipAssignedBy\": \"static\"\n      }\n    ]\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "usage",
											"item": [
												{
													"name": "byNetwork",
													"item": [
														{
															"name": "getOrganizationApplianceUplinksUsageByNetwork",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/uplinks/usage/byNetwork",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"uplinks",
																		"usage",
																		"byNetwork"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "{{t0}}",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 30 days from today.",
																			"disabled": true
																		},
																		{
																			"key": "t1",
																			"value": "{{t1}}",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 14 days after t0.",
																			"disabled": true
																		},
																		{
																			"key": "timespan",
																			"value": "{{timespan}}",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 days. The default is 1 day.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Get the sent and received bytes for each uplink of all MX and Z networks within an organization. If more than one device was active during the specified timespan, then the sent and received bytes will be aggregated by interface."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/appliance/uplinks/usage/byNetwork?t0=<string>&t1=<string>&timespan=<float>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"appliance",
																				"uplinks",
																				"usage",
																				"byNetwork"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>"
																				},
																				{
																					"key": "t1",
																					"value": "<string>"
																				},
																				{
																					"key": "timespan",
																					"value": "<float>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"networkId\": \"N_24329156\",\n    \"name\": \"Main Office\",\n    \"byUplink\": [\n      {\n        \"serial\": \"Q234-ABCD-5678\",\n        \"interface\": \"wan1\",\n        \"sent\": 200,\n        \"received\": 400\n      }\n    ]\n  }\n]"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "usageHistory",
											"item": [
												{
													"name": "getNetworkApplianceUplinksUsageHistory",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/appliance/uplinks/usageHistory",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"appliance",
																"uplinks",
																"usageHistory"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "{{t0}}",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today.",
																	"disabled": true
																},
																{
																	"key": "t1",
																	"value": "{{t1}}",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
																	"disabled": true
																},
																{
																	"key": "timespan",
																	"value": "{{timespan}}",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 10 minutes.",
																	"disabled": true
																},
																{
																	"key": "resolution",
																	"value": "{{resolution}}",
																	"description": "The time resolution in seconds for returned data. The valid resolutions are: 60, 300, 600, 1800, 3600, 86400. The default is 60.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Get the sent and received bytes for each uplink of a network."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/appliance/uplinks/usageHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"appliance",
																		"uplinks",
																		"usageHistory"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>"
																		},
																		{
																			"key": "t1",
																			"value": "<string>"
																		},
																		{
																			"key": "timespan",
																			"value": "<float>"
																		},
																		{
																			"key": "resolution",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"startTime\": \"2021-07-22T02:00:00Z\",\n    \"endTime\": \"2021-07-22T03:00:00Z\",\n    \"byInterface\": [\n      {\n        \"interface\": \"wan1\",\n        \"sent\": 1562063,\n        \"received\": 9528787\n      }\n    ]\n  }\n]"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "vpn",
									"item": [
										{
											"name": "stats",
											"item": [
												{
													"name": "getOrganizationApplianceVpnStats",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/appliance/vpn/stats",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"appliance",
																"vpn",
																"stats"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 300. Default is 300.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456",
																	"disabled": true
																},
																{
																	"key": "t0",
																	"value": "{{t0}}",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
																	"disabled": true
																},
																{
																	"key": "t1",
																	"value": "{{t1}}",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
																	"disabled": true
																},
																{
																	"key": "timespan",
																	"value": "{{timespan}}",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Show VPN history stat for networks in an organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/vpn/stats?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&t0=<string>&t1=<string>&timespan=<float>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"vpn",
																		"stats"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "t0",
																			"value": "<string>"
																		},
																		{
																			"key": "t1",
																			"value": "<string>"
																		},
																		{
																			"key": "timespan",
																			"value": "<float>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"networkId\": \"N_24329156\",\n    \"networkName\": \"Main Office\",\n    \"merakiVpnPeers\": [\n      {\n        \"networkId\": \"N_12345678\",\n        \"networkName\": \"San Francisco Office\",\n        \"usageSummary\": {\n          \"receivedInKilobytes\": 1234567,\n          \"sentInKilobytes\": 2345678\n        },\n        \"latencySummaries\": [\n          {\n            \"senderUplink\": \"wan1\",\n            \"receiverUplink\": \"wan1\",\n            \"avgLatencyMs\": 15,\n            \"minLatencyMs\": 10,\n            \"maxLatencyMs\": 30\n          }\n        ],\n        \"lossPercentageSummaries\": [\n          {\n            \"senderUplink\": \"wan1\",\n            \"receiverUplink\": \"wan1\",\n            \"avgLossPercentage\": 0,\n            \"minLossPercentage\": 0,\n            \"maxLossPercentage\": 0.1\n          }\n        ],\n        \"jitterSummaries\": [\n          {\n            \"senderUplink\": \"wan1\",\n            \"receiverUplink\": \"wan1\",\n            \"avgJitter\": 0.01,\n            \"minJitter\": 0,\n            \"maxJitter\": 0.25\n          }\n        ],\n        \"mosSummaries\": [\n          {\n            \"senderUplink\": \"wan1\",\n            \"receiverUplink\": \"wan1\",\n            \"avgMos\": 4.1,\n            \"minMos\": 4,\n            \"maxMos\": 4.2\n          }\n        ]\n      }\n    ]\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "statuses",
											"item": [
												{
													"name": "getOrganizationApplianceVpnStatuses",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/appliance/vpn/statuses",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"appliance",
																"vpn",
																"statuses"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 300. Default is 300.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Show VPN status for networks in an organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/appliance/vpn/statuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"appliance",
																		"vpn",
																		"statuses"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"vpnstatusentities\": [\n    {\n      \"networkId\": \"N_12345678\",\n      \"networkName\": \"San Francisco Office\",\n      \"deviceSerial\": \"Q234-ABCD-1234\",\n      \"deviceStatus\": \"online\",\n      \"uplinks\": [\n        {\n          \"interface\": \"wan1\",\n          \"publicIp\": \"1.2.3.4\"\n        }\n      ],\n      \"vpnMode\": \"hub\",\n      \"exportedSubnets\": [\n        {\n          \"subnet\": \"192.168.0.0/24\",\n          \"name\": \"sales-vlan\"\n        }\n      ],\n      \"merakiVpnPeers\": [\n        {\n          \"networkId\": \"L_1234\",\n          \"networkName\": \"New York Office\",\n          \"reachability\": \"reachable\"\n        }\n      ],\n      \"thirdPartyVpnPeers\": [\n        {\n          \"name\": \"Tokyo Office\",\n          \"publicIp\": \"222.111.222.111\",\n          \"reachability\": \"reachable\"\n        }\n      ]\n    }\n  ]\n}"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "camera",
					"item": [
						{
							"name": "configure",
							"item": [
								{
									"name": "boundaries",
									"item": [
										{
											"name": "areas",
											"item": [
												{
													"name": "byDevice",
													"item": [
														{
															"name": "getOrganizationCameraBoundariesAreasByDevice",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/camera/boundaries/areas/byDevice",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"camera",
																		"boundaries",
																		"areas",
																		"byDevice"
																	],
																	"query": [
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "A list of serial numbers. The returned cameras will be filtered to only include these serials.",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "A list of serial numbers. The returned cameras will be filtered to only include these serials.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Returns all configured area boundaries of cameras"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/camera/boundaries/areas/byDevice?serials=<string>&serials=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"camera",
																				"boundaries",
																				"areas",
																				"byDevice"
																			],
																			"query": [
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"networkId\": \"N_24329156\",\n    \"serial\": \"Q234-ABCD-5678\",\n    \"boundaries\": {\n      \"id\": \"k74272e\",\n      \"type\": \"area\",\n      \"name\": \"myarea\",\n      \"vertices\": [\n        {\n          \"x\": 0.1,\n          \"y\": 0.1\n        }\n      ]\n    }\n  }\n]"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "lines",
											"item": [
												{
													"name": "byDevice",
													"item": [
														{
															"name": "getOrganizationCameraBoundariesLinesByDevice",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/camera/boundaries/lines/byDevice",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"camera",
																		"boundaries",
																		"lines",
																		"byDevice"
																	],
																	"query": [
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "A list of serial numbers. The returned cameras will be filtered to only include these serials.",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "A list of serial numbers. The returned cameras will be filtered to only include these serials.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Returns all configured crossingline boundaries of cameras"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/camera/boundaries/lines/byDevice?serials=<string>&serials=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"camera",
																				"boundaries",
																				"lines",
																				"byDevice"
																			],
																			"query": [
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"networkId\": \"N_24329156\",\n    \"serial\": \"Q234-ABCD-5678\",\n    \"boundaries\": {\n      \"id\": \"k74272e\",\n      \"type\": \"line\",\n      \"name\": \"mycline\",\n      \"vertices\": [\n        {\n          \"x\": 0.375,\n          \"y\": 0.5\n        }\n      ],\n      \"directionVertex\": {\n        \"x\": 0.5,\n        \"y\": 0.54\n      }\n    }\n  }\n]"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "customAnalytics",
									"item": [
										{
											"name": "artifacts",
											"item": [
												{
													"name": "createOrganizationCameraCustomAnalyticsArtifact",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/camera/customAnalytics/artifacts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"camera",
																"customAnalytics",
																"artifacts"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Create custom analytics artifact. Returns an artifact upload URL with expiry time. Upload the artifact file with a put request to the returned upload URL before its expiry."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"example\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/camera/customAnalytics/artifacts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"camera",
																		"customAnalytics",
																		"artifacts"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"artifactId\": \"1\",\n  \"organizationId\": \"2\",\n  \"name\": \"example\",\n  \"status\": {\n    \"type\": \"pending\",\n    \"message\": \"sample message\"\n  },\n  \"uploadId\": \"00112233445566778899aabbccddeeff\",\n  \"uploadUrl\": \"https://meraki_custom_cv_upload_url\",\n  \"uploadUrlExpiry\": \"2022-01-23T01:23:45.123456+00:00\"\n}"
														}
													]
												},
												{
													"name": "deleteOrganizationCameraCustomAnalyticsArtifact",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/camera/customAnalytics/artifacts/:artifactId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"camera",
																"customAnalytics",
																"artifacts",
																":artifactId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "artifactId",
																	"value": "{{artifactId}}",
																	"description": "(Required) Artifact ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Delete Custom Analytics Artifact"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/camera/customAnalytics/artifacts/:artifactId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"camera",
																		"customAnalytics",
																		"artifacts",
																		":artifactId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "artifactId",
																			"value": "<string>",
																			"description": "(Required) Artifact ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "getOrganizationCameraCustomAnalyticsArtifact",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/camera/customAnalytics/artifacts/:artifactId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"camera",
																"customAnalytics",
																"artifacts",
																":artifactId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "artifactId",
																	"value": "{{artifactId}}",
																	"description": "(Required) Artifact ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Get Custom Analytics Artifact"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/camera/customAnalytics/artifacts/:artifactId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"camera",
																		"customAnalytics",
																		"artifacts",
																		":artifactId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "artifactId",
																			"value": "<string>",
																			"description": "(Required) Artifact ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"artifactId\": \"1\",\n  \"organizationId\": \"2\",\n  \"name\": \"example\",\n  \"status\": {\n    \"type\": \"pending\",\n    \"message\": \"sample message\"\n  }\n}"
														}
													]
												},
												{
													"name": "getOrganizationCameraCustomAnalyticsArtifacts",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/camera/customAnalytics/artifacts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"camera",
																"customAnalytics",
																"artifacts"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List Custom Analytics Artifacts"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/camera/customAnalytics/artifacts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"camera",
																		"customAnalytics",
																		"artifacts"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"artifactId\": \"1\",\n    \"organizationId\": \"2\",\n    \"name\": \"example\",\n    \"status\": {\n      \"type\": \"pending\",\n      \"message\": \"sample message\"\n    }\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "getDeviceCameraCustomAnalytics",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/camera/customAnalytics",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"camera",
														"customAnalytics"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return custom analytics settings for a camera"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/camera/customAnalytics",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"customAnalytics"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"enabled\": true,\n  \"artifactId\": \"1\",\n  \"parameters\": [\n    {\n      \"name\": \"detection_threshold\",\n      \"value\": 0.5\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "updateDeviceCameraCustomAnalytics",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"artifactId\": \"<string>\",\n  \"parameters\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/camera/customAnalytics",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"camera",
														"customAnalytics"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update custom analytics settings for a camera"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"artifactId\": \"<string>\",\n  \"parameters\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/camera/customAnalytics",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"customAnalytics"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"enabled\": true,\n  \"artifactId\": \"1\",\n  \"parameters\": [\n    {\n      \"name\": \"detection_threshold\",\n      \"value\": 0.5\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "detections",
									"item": [
										{
											"name": "history",
											"item": [
												{
													"name": "byBoundary",
													"item": [
														{
															"name": "byInterval",
															"item": [
																{
																	"name": "getOrganizationCameraDetectionsHistoryByBoundaryByInterval",
																	"protocolProfileBehavior": {
																		"followAuthorizationHeader": false
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/camera/detections/history/byBoundary/byInterval",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"camera",
																				"detections",
																				"history",
																				"byBoundary",
																				"byInterval"
																			],
																			"query": [
																				{
																					"key": "boundaryIds",
																					"value": "{{boundaryIds}}",
																					"description": "(Required) A list of boundary ids. The returned cameras will be filtered to only include these ids.",
																					"disabled": true
																				},
																				{
																					"key": "boundaryIds",
																					"value": "{{boundaryIds}}",
																					"description": "(Required) A list of boundary ids. The returned cameras will be filtered to only include these ids.",
																					"disabled": true
																				},
																				{
																					"key": "ranges",
																					"value": "{{ranges}}",
																					"description": "(Required) A list of time ranges with intervals",
																					"disabled": true
																				},
																				{
																					"key": "ranges",
																					"value": "{{ranges}}",
																					"description": "(Required) A list of time ranges with intervals",
																					"disabled": true
																				},
																				{
																					"key": "duration",
																					"value": "{{duration}}",
																					"description": "The minimum time, in seconds, that the person or car remains in the area to be counted. Defaults to boundary configuration or 60.",
																					"disabled": true
																				},
																				{
																					"key": "perPage",
																					"value": "{{perPage}}",
																					"description": "The number of entries per page returned. Acceptable range is 1 - 1000. Defaults to 1000.",
																					"disabled": true
																				},
																				{
																					"key": "boundaryTypes",
																					"value": "{{boundaryTypes}}",
																					"description": "The detection types. Defaults to 'person'.",
																					"disabled": true
																				},
																				{
																					"key": "boundaryTypes",
																					"value": "{{boundaryTypes}}",
																					"description": "The detection types. Defaults to 'person'.",
																					"disabled": true
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "{{organizationId}}",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		},
																		"description": "Returns analytics data for timespans"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/camera/detections/history/byBoundary/byInterval?boundaryIds=<string>&boundaryIds=<string>&ranges=[object Object]&ranges=[object Object]&duration=<integer>&perPage=<integer>&boundaryTypes=<string>&boundaryTypes=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"camera",
																						"detections",
																						"history",
																						"byBoundary",
																						"byInterval"
																					],
																					"query": [
																						{
																							"key": "boundaryIds",
																							"value": "<string>"
																						},
																						{
																							"key": "boundaryIds",
																							"value": "<string>"
																						},
																						{
																							"key": "ranges",
																							"value": "[object Object]"
																						},
																						{
																							"key": "ranges",
																							"value": "[object Object]"
																						},
																						{
																							"key": "duration",
																							"value": "<integer>"
																						},
																						{
																							"key": "perPage",
																							"value": "<integer>"
																						},
																						{
																							"key": "boundaryTypes",
																							"value": "<string>"
																						},
																						{
																							"key": "boundaryTypes",
																							"value": "<string>"
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "<string>",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "[\n  {\n    \"boundaryId\": \"k74272e\",\n    \"type\": \"line\",\n    \"results\": {\n      \"startTime\": \"2018-02-11T00:00:00Z\",\n      \"endTime\": \"2018-05-12T00:00:00Z\",\n      \"objectType\": \"person\",\n      \"in\": 22,\n      \"out\": 13\n    }\n  }\n]"
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "onboarding",
									"item": [
										{
											"name": "statuses",
											"item": [
												{
													"name": "getOrganizationCameraOnboardingStatuses",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/camera/onboarding/statuses",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"camera",
																"onboarding",
																"statuses"
															],
															"query": [
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "A list of serial numbers. The returned cameras will be filtered to only include these serials.",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "A list of serial numbers. The returned cameras will be filtered to only include these serials.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "A list of network IDs. The returned cameras will be filtered to only include these networks.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "A list of network IDs. The returned cameras will be filtered to only include these networks.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Fetch onboarding status of cameras"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/camera/onboarding/statuses?serials=<string>&serials=<string>&networkIds=<string>&networkIds=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"camera",
																		"onboarding",
																		"statuses"
																	],
																	"query": [
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"networkId\": \"N_12345\",\n    \"serial\": \"Q2AB-CDEF-GHIJ\",\n    \"status\": \"pending onboarding\",\n    \"updatedAt\": \"2021/03/24 15:23:47.101068 -0700\"\n  }\n]"
														}
													]
												},
												{
													"name": "updateOrganizationCameraOnboardingStatuses",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serial\": \"<string>\",\n  \"wirelessCredentialsSent\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/camera/onboarding/statuses",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"camera",
																"onboarding",
																"statuses"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Notify that credential handoff to camera has completed"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/camera/onboarding/statuses",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"camera",
																		"onboarding",
																		"statuses"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": true\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "permissions",
									"item": [
										{
											"name": "getOrganizationCameraPermission",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/camera/permissions/:permissionScopeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"camera",
														"permissions",
														":permissionScopeId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "permissionScopeId",
															"value": "{{permissionScopeId}}",
															"description": "(Required) Permission scope ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Retrieve a single permission scope"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/camera/permissions/:permissionScopeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"camera",
																"permissions",
																":permissionScopeId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "permissionScopeId",
																	"value": "<string>",
																	"description": "(Required) Permission scope ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"name\": \"camera_video\",\n  \"level\": \"live_video\"\n}"
												}
											]
										},
										{
											"name": "getOrganizationCameraPermissions",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/camera/permissions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"camera",
														"permissions"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the permissions scopes for this organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/camera/permissions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"camera",
																"permissions"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"1234\",\n    \"name\": \"camera_video\",\n    \"level\": \"live_video\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "qualityAndRetention",
									"item": [
										{
											"name": "getDeviceCameraQualityAndRetention",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/camera/qualityAndRetention",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"camera",
														"qualityAndRetention"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Returns quality and retention settings for the given camera"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/camera/qualityAndRetention",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"qualityAndRetention"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"motionBasedRetentionEnabled\": false,\n  \"audioRecordingEnabled\": false,\n  \"restrictedBandwidthModeEnabled\": false,\n  \"profileId\": \"1234\",\n  \"quality\": \"Standard\",\n  \"motionDetectorVersion\": 2,\n  \"resolution\": \"1280x720\"\n}"
												}
											]
										},
										{
											"name": "updateDeviceCameraQualityAndRetention",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"profileId\": \"<string>\",\n  \"motionBasedRetentionEnabled\": \"<boolean>\",\n  \"audioRecordingEnabled\": \"<boolean>\",\n  \"restrictedBandwidthModeEnabled\": \"<boolean>\",\n  \"quality\": \"<string>\",\n  \"resolution\": \"<string>\",\n  \"motionDetectorVersion\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/camera/qualityAndRetention",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"camera",
														"qualityAndRetention"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update quality and retention settings for the given camera"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"motionBasedRetentionEnabled\": false,\n  \"audioRecordingEnabled\": false,\n  \"restrictedBandwidthModeEnabled\": false,\n  \"profileId\": \"1234\",\n  \"quality\": \"Standard\",\n  \"motionDetectorVersion\": 2,\n  \"resolution\": \"1280x720\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/camera/qualityAndRetention",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"qualityAndRetention"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"motionBasedRetentionEnabled\": false,\n  \"audioRecordingEnabled\": false,\n  \"restrictedBandwidthModeEnabled\": false,\n  \"profileId\": \"1234\",\n  \"quality\": \"Standard\",\n  \"motionDetectorVersion\": 2,\n  \"resolution\": \"1280x720\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "qualityRetentionProfiles",
									"item": [
										{
											"name": "createNetworkCameraQualityRetentionProfile",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"motionBasedRetentionEnabled\": \"<boolean>\",\n  \"restrictedBandwidthModeEnabled\": \"<boolean>\",\n  \"audioRecordingEnabled\": \"<boolean>\",\n  \"cloudArchiveEnabled\": \"<boolean>\",\n  \"motionDetectorVersion\": \"<integer>\",\n  \"smartRetention\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"scheduleId\": \"<string>\",\n  \"maxRetentionDays\": \"<integer>\",\n  \"videoSettings\": {\n    \"MV12/MV22/MV72\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV12WE\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV13\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV13M\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV21/MV71\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV22X/MV72X\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV23\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV23M\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV23X\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV32\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV33\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV33M\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV52\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV63\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV63M\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV63X\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV73\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV73M\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV73X\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV93\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV93M\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV93X\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV53X\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV84X\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/camera/qualityRetentionProfiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"camera",
														"qualityRetentionProfiles"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Creates new quality retention profile for this network."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"Sample quality retention profile\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/camera/qualityRetentionProfiles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"camera",
																"qualityRetentionProfiles"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"networkId\": \"N_24329156\",\n  \"name\": \"Sample quality retention profile\",\n  \"restrictedBandwidthModeEnabled\": true,\n  \"motionBasedRetentionEnabled\": false,\n  \"audioRecordingEnabled\": false,\n  \"cloudArchiveEnabled\": false,\n  \"maxRetentionDays\": 7,\n  \"scheduleId\": null,\n  \"motionDetectorVersion\": 2,\n  \"smartRetention\": {\n    \"enabled\": true\n  },\n  \"videoSettings\": {\n    \"MV32\": {\n      \"quality\": \"Enhanced\",\n      \"resolution\": \"1080x1080\"\n    },\n    \"MV21/MV71\": {\n      \"quality\": \"High\",\n      \"resolution\": \"1280x720\"\n    },\n    \"MV12/MV22/MV72\": {\n      \"quality\": \"High\",\n      \"resolution\": \"1920x1080\"\n    },\n    \"MV12WE\": {\n      \"quality\": \"High\",\n      \"resolution\": \"1920x1080\"\n    }\n  }\n}"
												}
											]
										},
										{
											"name": "deleteNetworkCameraQualityRetentionProfile",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/camera/qualityRetentionProfiles/:qualityRetentionProfileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"camera",
														"qualityRetentionProfiles",
														":qualityRetentionProfileId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "qualityRetentionProfileId",
															"value": "{{qualityRetentionProfileId}}",
															"description": "(Required) Quality retention profile ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Delete an existing quality retention profile for this network."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/camera/qualityRetentionProfiles/:qualityRetentionProfileId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"camera",
																"qualityRetentionProfiles",
																":qualityRetentionProfileId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "qualityRetentionProfileId",
																	"value": "<string>",
																	"description": "(Required) Quality retention profile ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getNetworkCameraQualityRetentionProfile",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/camera/qualityRetentionProfiles/:qualityRetentionProfileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"camera",
														"qualityRetentionProfiles",
														":qualityRetentionProfileId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "qualityRetentionProfileId",
															"value": "{{qualityRetentionProfileId}}",
															"description": "(Required) Quality retention profile ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Retrieve a single quality retention profile"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/camera/qualityRetentionProfiles/:qualityRetentionProfileId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"camera",
																"qualityRetentionProfiles",
																":qualityRetentionProfileId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "qualityRetentionProfileId",
																	"value": "<string>",
																	"description": "(Required) Quality retention profile ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"networkId\": \"N_24329156\",\n  \"name\": \"Sample quality retention profile\",\n  \"restrictedBandwidthModeEnabled\": true,\n  \"motionBasedRetentionEnabled\": false,\n  \"audioRecordingEnabled\": false,\n  \"cloudArchiveEnabled\": false,\n  \"maxRetentionDays\": 7,\n  \"scheduleId\": null,\n  \"motionDetectorVersion\": 2,\n  \"smartRetention\": {\n    \"enabled\": true\n  },\n  \"videoSettings\": {\n    \"MV32\": {\n      \"quality\": \"Enhanced\",\n      \"resolution\": \"1080x1080\"\n    },\n    \"MV21/MV71\": {\n      \"quality\": \"High\",\n      \"resolution\": \"1280x720\"\n    },\n    \"MV12/MV22/MV72\": {\n      \"quality\": \"High\",\n      \"resolution\": \"1920x1080\"\n    },\n    \"MV12WE\": {\n      \"quality\": \"High\",\n      \"resolution\": \"1920x1080\"\n    }\n  }\n}"
												}
											]
										},
										{
											"name": "getNetworkCameraQualityRetentionProfiles",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/camera/qualityRetentionProfiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"camera",
														"qualityRetentionProfiles"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the quality retention profiles for this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/camera/qualityRetentionProfiles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"camera",
																"qualityRetentionProfiles"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"1234\",\n    \"networkId\": \"N_24329156\",\n    \"name\": \"Sample quality retention profile\",\n    \"restrictedBandwidthModeEnabled\": true,\n    \"motionBasedRetentionEnabled\": false,\n    \"audioRecordingEnabled\": false,\n    \"cloudArchiveEnabled\": false,\n    \"maxRetentionDays\": 7,\n    \"scheduleId\": null,\n    \"motionDetectorVersion\": 2,\n    \"smartRetention\": {\n      \"enabled\": true\n    },\n    \"videoSettings\": {\n      \"MV32\": {\n        \"quality\": \"Enhanced\",\n        \"resolution\": \"1080x1080\"\n      },\n      \"MV21/MV71\": {\n        \"quality\": \"High\",\n        \"resolution\": \"1280x720\"\n      },\n      \"MV12/MV22/MV72\": {\n        \"quality\": \"High\",\n        \"resolution\": \"1920x1080\"\n      },\n      \"MV12WE\": {\n        \"quality\": \"High\",\n        \"resolution\": \"1920x1080\"\n      }\n    }\n  }\n]"
												}
											]
										},
										{
											"name": "updateNetworkCameraQualityRetentionProfile",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"motionBasedRetentionEnabled\": \"<boolean>\",\n  \"restrictedBandwidthModeEnabled\": \"<boolean>\",\n  \"audioRecordingEnabled\": \"<boolean>\",\n  \"cloudArchiveEnabled\": \"<boolean>\",\n  \"motionDetectorVersion\": \"<integer>\",\n  \"smartRetention\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"scheduleId\": \"<string>\",\n  \"maxRetentionDays\": \"<integer>\",\n  \"videoSettings\": {\n    \"MV12/MV22/MV72\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV12WE\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV13\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV13M\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV21/MV71\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV22X/MV72X\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV23\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV23M\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV23X\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV32\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV33\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV33M\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV52\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV63\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV63M\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV63X\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV73\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV73M\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV73X\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV93\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV93M\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV93X\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV53X\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    },\n    \"MV84X\": {\n      \"quality\": \"<string>\",\n      \"resolution\": \"<string>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/camera/qualityRetentionProfiles/:qualityRetentionProfileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"camera",
														"qualityRetentionProfiles",
														":qualityRetentionProfileId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "qualityRetentionProfileId",
															"value": "{{qualityRetentionProfileId}}",
															"description": "(Required) Quality retention profile ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update an existing quality retention profile for this network."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/camera/qualityRetentionProfiles/:qualityRetentionProfileId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"camera",
																"qualityRetentionProfiles",
																":qualityRetentionProfileId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "qualityRetentionProfileId",
																	"value": "<string>",
																	"description": "(Required) Quality retention profile ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"networkId\": \"N_24329156\",\n  \"name\": \"Sample quality retention profile\",\n  \"restrictedBandwidthModeEnabled\": true,\n  \"motionBasedRetentionEnabled\": false,\n  \"audioRecordingEnabled\": false,\n  \"cloudArchiveEnabled\": false,\n  \"maxRetentionDays\": 7,\n  \"scheduleId\": null,\n  \"motionDetectorVersion\": 2,\n  \"smartRetention\": {\n    \"enabled\": true\n  },\n  \"videoSettings\": {\n    \"MV32\": {\n      \"quality\": \"Enhanced\",\n      \"resolution\": \"1080x1080\"\n    },\n    \"MV21/MV71\": {\n      \"quality\": \"High\",\n      \"resolution\": \"1280x720\"\n    },\n    \"MV12/MV22/MV72\": {\n      \"quality\": \"High\",\n      \"resolution\": \"1920x1080\"\n    },\n    \"MV12WE\": {\n      \"quality\": \"High\",\n      \"resolution\": \"1920x1080\"\n    }\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "roles",
									"item": [
										{
											"name": "createOrganizationCameraRole",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"appliedOnDevices\": [\n    {\n      \"permissionScopeId\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"id\": \"<string>\",\n      \"inNetworksWithTag\": \"<string>\",\n      \"inNetworksWithId\": \"<string>\"\n    },\n    {\n      \"permissionScopeId\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"id\": \"<string>\",\n      \"inNetworksWithTag\": \"<string>\",\n      \"inNetworksWithId\": \"<string>\"\n    }\n  ],\n  \"appliedOnNetworks\": [\n    {\n      \"permissionScopeId\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"permissionScopeId\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ],\n  \"appliedOrgWide\": [\n    {\n      \"permissionScopeId\": \"<string>\"\n    },\n    {\n      \"permissionScopeId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/camera/roles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"camera",
														"roles"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Creates new role for this organization."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"appliedOnDevices\": [\n    {\n      \"permissionScopeId\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"id\": \"<string>\",\n      \"inNetworksWithTag\": \"<string>\",\n      \"inNetworksWithId\": \"<string>\"\n    },\n    {\n      \"permissionScopeId\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"id\": \"<string>\",\n      \"inNetworksWithTag\": \"<string>\",\n      \"inNetworksWithId\": \"<string>\"\n    }\n  ],\n  \"appliedOnNetworks\": [\n    {\n      \"permissionScopeId\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"permissionScopeId\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ],\n  \"appliedOrgWide\": [\n    {\n      \"permissionScopeId\": \"<string>\"\n    },\n    {\n      \"permissionScopeId\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/camera/roles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"camera",
																"roles"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"Security_Guard\",\n  \"appliedOnDevices\": [\n    {\n      \"tag\": \"reception-desk\",\n      \"id\": \"\",\n      \"permissionScopeId\": \"1\",\n      \"permissionScope\": \"camera-video\",\n      \"permissionLevel\": \"view_and_export\"\n    }\n  ],\n  \"appliedOnNetworks\": [\n    {\n      \"tag\": \"\",\n      \"id\": \"2568\",\n      \"permissionScopeId\": \"2\",\n      \"permissionScope\": \"camera-video\",\n      \"permissionLevel\": \"view\"\n    }\n  ],\n  \"appliedOrgWide\": [\n    {\n      \"tag\": \"building-a\",\n      \"permissionScopeId\": \"2\",\n      \"permissionScope\": \"camera_video\",\n      \"permissionLevel\": \"view_live\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "deleteOrganizationCameraRole",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/camera/roles/:roleId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"camera",
														"roles",
														":roleId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "roleId",
															"value": "{{roleId}}",
															"description": "(Required) Role ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Delete an existing role for this organization."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/camera/roles/:roleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"camera",
																"roles",
																":roleId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "roleId",
																	"value": "<string>",
																	"description": "(Required) Role ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getOrganizationCameraRole",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/camera/roles/:roleId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"camera",
														"roles",
														":roleId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "roleId",
															"value": "{{roleId}}",
															"description": "(Required) Role ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Retrieve a single role."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/camera/roles/:roleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"camera",
																"roles",
																":roleId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "roleId",
																	"value": "<string>",
																	"description": "(Required) Role ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"Security_Guard\",\n  \"appliedOnDevices\": [\n    {\n      \"tag\": \"reception-desk\",\n      \"id\": \"\",\n      \"permissionScopeId\": \"1\",\n      \"permissionScope\": \"camera-video\",\n      \"permissionLevel\": \"view_and_export\"\n    }\n  ],\n  \"appliedOnNetworks\": [\n    {\n      \"tag\": \"\",\n      \"id\": \"2568\",\n      \"permissionScopeId\": \"2\",\n      \"permissionScope\": \"camera-video\",\n      \"permissionLevel\": \"view\"\n    }\n  ],\n  \"appliedOrgWide\": [\n    {\n      \"tag\": \"building-a\",\n      \"permissionScopeId\": \"2\",\n      \"permissionScope\": \"camera_video\",\n      \"permissionLevel\": \"view_live\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "getOrganizationCameraRoles",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/camera/roles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"camera",
														"roles"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List all the roles in this organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/camera/roles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"camera",
																"roles"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"name\": \"Security_Guard\",\n    \"appliedOnDevices\": [\n      {\n        \"tag\": \"reception-desk\",\n        \"id\": \"\",\n        \"permissionScopeId\": \"1\",\n        \"permissionScope\": \"camera-video\",\n        \"permissionLevel\": \"view_and_export\"\n      }\n    ],\n    \"appliedOnNetworks\": [\n      {\n        \"tag\": \"\",\n        \"id\": \"2568\",\n        \"permissionScopeId\": \"2\",\n        \"permissionScope\": \"camera-video\",\n        \"permissionLevel\": \"view\"\n      }\n    ],\n    \"appliedOrgWide\": [\n      {\n        \"tag\": \"building-a\",\n        \"permissionScopeId\": \"2\",\n        \"permissionScope\": \"camera_video\",\n        \"permissionLevel\": \"view_live\"\n      }\n    ]\n  }\n]"
												}
											]
										},
										{
											"name": "updateOrganizationCameraRole",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"appliedOnDevices\": [\n    {\n      \"permissionScopeId\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"id\": \"<string>\",\n      \"inNetworksWithTag\": \"<string>\",\n      \"inNetworksWithId\": \"<string>\"\n    },\n    {\n      \"permissionScopeId\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"id\": \"<string>\",\n      \"inNetworksWithTag\": \"<string>\",\n      \"inNetworksWithId\": \"<string>\"\n    }\n  ],\n  \"appliedOnNetworks\": [\n    {\n      \"permissionScopeId\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"permissionScopeId\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ],\n  \"appliedOrgWide\": [\n    {\n      \"permissionScopeId\": \"<string>\"\n    },\n    {\n      \"permissionScopeId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/camera/roles/:roleId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"camera",
														"roles",
														":roleId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "roleId",
															"value": "{{roleId}}",
															"description": "(Required) Role ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update an existing role in this organization."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"appliedOnDevices\": [\n    {\n      \"permissionScopeId\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"id\": \"<string>\",\n      \"inNetworksWithTag\": \"<string>\",\n      \"inNetworksWithId\": \"<string>\"\n    },\n    {\n      \"permissionScopeId\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"id\": \"<string>\",\n      \"inNetworksWithTag\": \"<string>\",\n      \"inNetworksWithId\": \"<string>\"\n    }\n  ],\n  \"appliedOnNetworks\": [\n    {\n      \"permissionScopeId\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"permissionScopeId\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ],\n  \"appliedOrgWide\": [\n    {\n      \"permissionScopeId\": \"<string>\"\n    },\n    {\n      \"permissionScopeId\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/camera/roles/:roleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"camera",
																"roles",
																":roleId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "roleId",
																	"value": "<string>",
																	"description": "(Required) Role ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"Security_Guard\",\n  \"appliedOnDevices\": [\n    {\n      \"tag\": \"reception-desk\",\n      \"id\": \"\",\n      \"permissionScopeId\": \"1\",\n      \"permissionScope\": \"camera-video\",\n      \"permissionLevel\": \"view_and_export\"\n    }\n  ],\n  \"appliedOnNetworks\": [\n    {\n      \"tag\": \"\",\n      \"id\": \"2568\",\n      \"permissionScopeId\": \"2\",\n      \"permissionScope\": \"camera-video\",\n      \"permissionLevel\": \"view\"\n    }\n  ],\n  \"appliedOrgWide\": [\n    {\n      \"tag\": \"building-a\",\n      \"permissionScopeId\": \"2\",\n      \"permissionScope\": \"camera_video\",\n      \"permissionLevel\": \"view_live\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "schedules",
									"item": [
										{
											"name": "getNetworkCameraSchedules",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/camera/schedules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"camera",
														"schedules"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Returns a list of all camera recording schedules."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/camera/schedules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"camera",
																"schedules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"123\",\n    \"name\": \"Weekday schedule\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "sense",
									"item": [
										{
											"name": "objectDetectionModels",
											"item": [
												{
													"name": "getDeviceCameraSenseObjectDetectionModels",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/camera/sense/objectDetectionModels",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"sense",
																"objectDetectionModels"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Returns the MV Sense object detection model list for the given camera"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/camera/sense/objectDetectionModels",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"camera",
																		"sense",
																		"objectDetectionModels"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"id\": \"0\",\n    \"description\": \"Model A\"\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "getDeviceCameraSense",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/camera/sense",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"camera",
														"sense"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Returns sense settings for a given camera"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/camera/sense",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"sense"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"senseEnabled\": true,\n  \"audioDetection\": {\n    \"enabled\": false\n  },\n  \"mqttBrokerId\": \"1234\",\n  \"mqttTopics\": [\n    \"/merakimv/Q2AA-AAAA-1111/raw_detections\",\n    \"/merakimv/Q2AA-AAAA-1111/light\"\n  ]\n}"
												}
											]
										},
										{
											"name": "updateDeviceCameraSense",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"senseEnabled\": \"<boolean>\",\n  \"mqttBrokerId\": \"<string>\",\n  \"audioDetection\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"detectionModelId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/camera/sense",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"camera",
														"sense"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update sense settings for the given camera"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"senseEnabled\": true,\n  \"audioDetection\": {\n    \"enabled\": false\n  },\n  \"mqttBrokerId\": \"1234\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/camera/sense",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"sense"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"senseEnabled\": true,\n  \"audioDetection\": {\n    \"enabled\": false\n  },\n  \"mqttBrokerId\": \"1234\",\n  \"mqttTopics\": [\n    \"/merakimv/Q2AA-AAAA-1111/raw_detections\",\n    \"/merakimv/Q2AA-AAAA-1111/light\"\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "video",
									"item": [
										{
											"name": "settings",
											"item": [
												{
													"name": "getDeviceCameraVideoSettings",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/camera/video/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"video",
																"settings"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Returns video settings for the given camera"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/camera/video/settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"camera",
																		"video",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"externalRtspEnabled\": true,\n  \"rtspUrl\": \"rtsp://10.0.0.1:9000/live\"\n}"
														}
													]
												},
												{
													"name": "updateDeviceCameraVideoSettings",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"externalRtspEnabled\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/camera/video/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"video",
																"settings"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update video settings for the given camera"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"externalRtspEnabled\": true\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/camera/video/settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"camera",
																		"video",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"externalRtspEnabled\": true,\n  \"rtspUrl\": \"rtsp://10.0.0.1:9000/live\"\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "videoLink",
									"item": [
										{
											"name": "getDeviceCameraVideoLink",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/camera/videoLink",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"camera",
														"videoLink"
													],
													"query": [
														{
															"key": "timestamp",
															"value": "{{timestamp}}",
															"description": "[optional] The video link will start at this time. The timestamp should be a string in ISO8601 format. If no timestamp is specified, we will assume current time.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Returns video link to the specified camera. If a timestamp is supplied, it links to that timestamp."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/camera/videoLink?timestamp=<dateTime>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"videoLink"
															],
															"query": [
																{
																	"key": "timestamp",
																	"value": "<dateTime>"
																}
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"url\": \"https://nxx.meraki.com/office-cameras/n/bs0a1k/manage/nodes/new_list/29048243992402?timestamp=1535732570077\",\n  \"visionUrl\": \"https://vision.meraki.com/n/6482158978508419/cameras/29048243992402?ts=1535732570077\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "wirelessProfiles",
									"item": [
										{
											"name": "createNetworkCameraWirelessProfile",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"ssid\": {\n    \"name\": \"<string>\",\n    \"authMode\": \"<string>\",\n    \"encryptionMode\": \"<string>\",\n    \"psk\": \"<string>\"\n  },\n  \"identity\": {\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/camera/wirelessProfiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"camera",
														"wirelessProfiles"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Creates a new camera wireless profile for this network."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"wireless profile A\",\n  \"ssid\": {\n    \"name\": \"ssid test\",\n    \"authMode\": \"8021x-radius\",\n    \"encryptionMode\": \"wpa-eap\",\n    \"psk\": \"sampleKey\"\n  },\n  \"identity\": {\n    \"username\": \"identityname\",\n    \"password\": \"password123\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/camera/wirelessProfiles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"camera",
																"wirelessProfiles"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"152\",\n  \"name\": \"wireless profile A\",\n  \"appliedDeviceCount\": 0,\n  \"ssid\": {\n    \"name\": \"ssid test\",\n    \"authMode\": \"8021x-radius\",\n    \"encryptionMode\": \"wpa-eap\",\n    \"psk\": \"sampleKey\"\n  },\n  \"identity\": {\n    \"username\": \"identityname\",\n    \"password\": \"password123\"\n  }\n}"
												}
											]
										},
										{
											"name": "deleteNetworkCameraWirelessProfile",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/camera/wirelessProfiles/:wirelessProfileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"camera",
														"wirelessProfiles",
														":wirelessProfileId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "wirelessProfileId",
															"value": "{{wirelessProfileId}}",
															"description": "(Required) Wireless profile ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Delete an existing camera wireless profile for this network."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/camera/wirelessProfiles/:wirelessProfileId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"camera",
																"wirelessProfiles",
																":wirelessProfileId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "wirelessProfileId",
																	"value": "<string>",
																	"description": "(Required) Wireless profile ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getDeviceCameraWirelessProfiles",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/camera/wirelessProfiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"camera",
														"wirelessProfiles"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Returns wireless profile assigned to the given camera"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/camera/wirelessProfiles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"wirelessProfiles"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ids\": {\n    \"primary\": \"3\",\n    \"secondary\": \"2\",\n    \"backup\": \"1\"\n  }\n}"
												}
											]
										},
										{
											"name": "getNetworkCameraWirelessProfile",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/camera/wirelessProfiles/:wirelessProfileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"camera",
														"wirelessProfiles",
														":wirelessProfileId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "wirelessProfileId",
															"value": "{{wirelessProfileId}}",
															"description": "(Required) Wireless profile ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Retrieve a single camera wireless profile."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/camera/wirelessProfiles/:wirelessProfileId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"camera",
																"wirelessProfiles",
																":wirelessProfileId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "wirelessProfileId",
																	"value": "<string>",
																	"description": "(Required) Wireless profile ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"152\",\n  \"name\": \"wireless profile A\",\n  \"appliedDeviceCount\": 0,\n  \"ssid\": {\n    \"name\": \"ssid test\",\n    \"authMode\": \"8021x-radius\",\n    \"encryptionMode\": \"wpa-eap\",\n    \"psk\": \"sampleKey\"\n  },\n  \"identity\": {\n    \"username\": \"identityname\",\n    \"password\": \"password123\"\n  }\n}"
												}
											]
										},
										{
											"name": "getNetworkCameraWirelessProfiles",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/camera/wirelessProfiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"camera",
														"wirelessProfiles"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the camera wireless profiles for this network."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/camera/wirelessProfiles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"camera",
																"wirelessProfiles"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"152\",\n    \"name\": \"wireless profile A\",\n    \"appliedDeviceCount\": 0,\n    \"ssid\": {\n      \"name\": \"ssid test\",\n      \"authMode\": \"8021x-radius\",\n      \"encryptionMode\": \"wpa-eap\",\n      \"psk\": \"sampleKey\"\n    },\n    \"identity\": {\n      \"username\": \"identityname\",\n      \"password\": \"password123\"\n    }\n  }\n]"
												}
											]
										},
										{
											"name": "updateDeviceCameraWirelessProfiles",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ids\": {\n    \"primary\": \"<string>\",\n    \"secondary\": \"<string>\",\n    \"backup\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/camera/wirelessProfiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"camera",
														"wirelessProfiles"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Assign wireless profiles to the given camera. Incremental updates are not supported, all profile assignment need to be supplied at once."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ids\": {\n    \"primary\": \"3\",\n    \"secondary\": \"2\",\n    \"backup\": \"1\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/camera/wirelessProfiles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"wirelessProfiles"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ids\": {\n    \"primary\": \"3\",\n    \"secondary\": \"2\",\n    \"backup\": \"1\"\n  }\n}"
												}
											]
										},
										{
											"name": "updateNetworkCameraWirelessProfile",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"ssid\": {\n    \"name\": \"<string>\",\n    \"authMode\": \"<string>\",\n    \"encryptionMode\": \"<string>\",\n    \"psk\": \"<string>\"\n  },\n  \"identity\": {\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/camera/wirelessProfiles/:wirelessProfileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"camera",
														"wirelessProfiles",
														":wirelessProfileId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "wirelessProfileId",
															"value": "{{wirelessProfileId}}",
															"description": "(Required) Wireless profile ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update an existing camera wireless profile in this network."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"wireless profile A\",\n  \"ssid\": {\n    \"name\": \"ssid test\",\n    \"authMode\": \"8021x-radius\",\n    \"encryptionMode\": \"wpa-eap\",\n    \"psk\": \"sampleKey\"\n  },\n  \"identity\": {\n    \"username\": \"identityname\",\n    \"password\": \"password123\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/camera/wirelessProfiles/:wirelessProfileId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"camera",
																"wirelessProfiles",
																":wirelessProfileId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "wirelessProfileId",
																	"value": "<string>",
																	"description": "(Required) Wireless profile ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"152\",\n  \"name\": \"wireless profile A\",\n  \"appliedDeviceCount\": 0,\n  \"ssid\": {\n    \"name\": \"ssid test\",\n    \"authMode\": \"8021x-radius\",\n    \"encryptionMode\": \"wpa-eap\",\n    \"psk\": \"sampleKey\"\n  },\n  \"identity\": {\n    \"username\": \"identityname\",\n    \"password\": \"password123\"\n  }\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "monitor",
							"item": [
								{
									"name": "analytics",
									"item": [
										{
											"name": "live",
											"item": [
												{
													"name": "getDeviceCameraAnalyticsLive",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/camera/analytics/live",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"analytics",
																"live"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Returns live state from camera analytics zones"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/camera/analytics/live",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"camera",
																		"analytics",
																		"live"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"ts\": \"2018-08-15T18:32:38.123Z\",\n  \"zones\": {\n    \"zoneId\": {\n      \"person\": 0\n    }\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "overview",
											"item": [
												{
													"name": "getDeviceCameraAnalyticsOverview",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/camera/analytics/overview",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"analytics",
																"overview"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "{{t0}}",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today.",
																	"disabled": true
																},
																{
																	"key": "t1",
																	"value": "{{t1}}",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
																	"disabled": true
																},
																{
																	"key": "timespan",
																	"value": "{{timespan}}",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 1 hour.",
																	"disabled": true
																},
																{
																	"key": "objectType",
																	"value": "{{objectType}}",
																	"description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle].",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Returns an overview of aggregate analytics data for a timespan"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/camera/analytics/overview?t0=<string>&t1=<string>&timespan=<float>&objectType=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"camera",
																		"analytics",
																		"overview"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>"
																		},
																		{
																			"key": "t1",
																			"value": "<string>"
																		},
																		{
																			"key": "timespan",
																			"value": "<float>"
																		},
																		{
																			"key": "objectType",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"startTs\": \"2018-08-15T18:32:38.123Z\",\n    \"endTs\": \"2018-08-15T18:33:38.123Z\",\n    \"zoneId\": 0,\n    \"entrances\": 254,\n    \"averageCount\": 5\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "recent",
											"item": [
												{
													"name": "getDeviceCameraAnalyticsRecent",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/camera/analytics/recent",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"analytics",
																"recent"
															],
															"query": [
																{
																	"key": "objectType",
																	"value": "{{objectType}}",
																	"description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle].",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Returns most recent record for analytics zones"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/camera/analytics/recent?objectType=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"camera",
																		"analytics",
																		"recent"
																	],
																	"query": [
																		{
																			"key": "objectType",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"startTs\": \"2018-08-15T18:32:38.123Z\",\n    \"endTs\": \"2018-08-15T18:33:38.123Z\",\n    \"zoneId\": 0,\n    \"entrances\": 10,\n    \"averageCount\": 2.54\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "zones",
											"item": [
												{
													"name": "history",
													"item": [
														{
															"name": "getDeviceCameraAnalyticsZoneHistory",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/camera/analytics/zones/:zoneId/history",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"camera",
																		"analytics",
																		"zones",
																		":zoneId",
																		"history"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "{{t0}}",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today.",
																			"disabled": true
																		},
																		{
																			"key": "t1",
																			"value": "{{t1}}",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 14 hours after t0.",
																			"disabled": true
																		},
																		{
																			"key": "timespan",
																			"value": "{{timespan}}",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 hours. The default is 1 hour.",
																			"disabled": true
																		},
																		{
																			"key": "resolution",
																			"value": "{{resolution}}",
																			"description": "The time resolution in seconds for returned data. The valid resolutions are: 60. The default is 60.",
																			"disabled": true
																		},
																		{
																			"key": "objectType",
																			"value": "{{objectType}}",
																			"description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle].",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "{{serial}}",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "zoneId",
																			"value": "{{zoneId}}",
																			"description": "(Required) Zone ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Return historical records for analytic zones"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/devices/:serial/camera/analytics/zones/:zoneId/history?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&objectType=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"devices",
																				":serial",
																				"camera",
																				"analytics",
																				"zones",
																				":zoneId",
																				"history"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>"
																				},
																				{
																					"key": "t1",
																					"value": "<string>"
																				},
																				{
																					"key": "timespan",
																					"value": "<float>"
																				},
																				{
																					"key": "resolution",
																					"value": "<integer>"
																				},
																				{
																					"key": "objectType",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "serial",
																					"value": "<string>",
																					"description": "(Required) Serial"
																				},
																				{
																					"key": "zoneId",
																					"value": "<string>",
																					"description": "(Required) Zone ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"startTs\": \"2018-08-15T18:32:38.123Z\",\n    \"endTs\": \"2018-08-15T18:33:38.123Z\",\n    \"entrances\": 5,\n    \"averageCount\": 1.5\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "getDeviceCameraAnalyticsZones",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/camera/analytics/zones",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"analytics",
																"zones"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Returns all configured analytic zones for this camera"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/camera/analytics/zones",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"camera",
																		"analytics",
																		"zones"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"id\": \"0\",\n    \"type\": \"occupancy\",\n    \"label\": \"Full Frame\",\n    \"regionOfInterest\": {\n      \"x0\": \"0.00\",\n      \"y0\": \"0.00\",\n      \"x1\": \"1.00\",\n      \"y1\": \"1.00\"\n    }\n  }\n]"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "generateDeviceCameraSnapshot",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"timestamp\": \"<dateTime>\",\n  \"fullframe\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/devices/:serial/camera/generateSnapshot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"devices",
												":serial",
												"camera",
												"generateSnapshot"
											],
											"variable": [
												{
													"key": "serial",
													"value": "{{serial}}",
													"description": "(Required) Serial"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "Generate a snapshot of what the camera sees at the specified time and return a link to that image."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"timestamp\": \"2021-04-30T15:18:08Z\",\n  \"fullframe\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/camera/generateSnapshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"camera",
														"generateSnapshot"
													],
													"variable": [
														{
															"key": "serial",
															"value": "<string>",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"url\": \"https://spn4.meraki.com/stream/jpeg/snapshot/b2d123asdf423qd22d2\",\n  \"expiry\": \"Access to the image will expire at 2018-12-11T03:12:39Z.\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "cellularGateway",
					"item": [
						{
							"name": "configure",
							"item": [
								{
									"name": "connectivityMonitoringDestinations",
									"item": [
										{
											"name": "getNetworkCellularGatewayConnectivityMonitoringDestinations",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/connectivityMonitoringDestinations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"cellularGateway",
														"connectivityMonitoringDestinations"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the connectivity testing destinations for an MG network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/connectivityMonitoringDestinations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"cellularGateway",
																"connectivityMonitoringDestinations"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"destinations\": [\n    {\n      \"ip\": \"1.2.3.4\",\n      \"description\": \"Google\",\n      \"default\": false\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "updateNetworkCellularGatewayConnectivityMonitoringDestinations",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"destinations\": [\n    {\n      \"ip\": \"<string>\",\n      \"description\": \"\",\n      \"default\": false\n    },\n    {\n      \"ip\": \"<string>\",\n      \"description\": \"\",\n      \"default\": false\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/connectivityMonitoringDestinations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"cellularGateway",
														"connectivityMonitoringDestinations"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the connectivity testing destinations for an MG network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"destinations\": [\n    {\n      \"ip\": \"<string>\",\n      \"description\": \"\",\n      \"default\": false\n    },\n    {\n      \"ip\": \"<string>\",\n      \"description\": \"\",\n      \"default\": false\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/connectivityMonitoringDestinations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"cellularGateway",
																"connectivityMonitoringDestinations"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"destinations\": [\n    {\n      \"ip\": \"1.2.3.4\",\n      \"description\": \"Google\",\n      \"default\": false\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "dhcp",
									"item": [
										{
											"name": "getNetworkCellularGatewayDhcp",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/dhcp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"cellularGateway",
														"dhcp"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List common DHCP settings of MGs"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/dhcp",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"cellularGateway",
																"dhcp"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"dhcpLeaseTime\": \"1 hour\",\n  \"dnsNameservers\": \"custom\",\n  \"dnsCustomNameservers\": [\n    \"172.16.2.111\",\n    \"172.16.2.30\"\n  ]\n}"
												}
											]
										},
										{
											"name": "updateNetworkCellularGatewayDhcp",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dhcpLeaseTime\": \"<string>\",\n  \"dnsNameservers\": \"<string>\",\n  \"dnsCustomNameservers\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/dhcp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"cellularGateway",
														"dhcp"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update common DHCP settings of MGs"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"dhcpLeaseTime\": \"1 hour\",\n  \"dnsNameservers\": \"custom\",\n  \"dnsCustomNameservers\": [\n    \"172.16.2.111\",\n    \"172.16.2.30\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/dhcp",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"cellularGateway",
																"dhcp"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"dhcpLeaseTime\": \"1 hour\",\n  \"dnsNameservers\": \"custom\",\n  \"dnsCustomNameservers\": [\n    \"172.16.2.111\",\n    \"172.16.2.30\"\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "esims",
									"item": [
										{
											"name": "inventory",
											"item": [
												{
													"name": "getOrganizationCellularGatewayEsimsInventory",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/cellularGateway/esims/inventory",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"cellularGateway",
																"esims",
																"inventory"
															],
															"query": [
																{
																	"key": "eids",
																	"value": "{{eids}}",
																	"description": "Optional parameter to filter the results by EID.",
																	"disabled": true
																},
																{
																	"key": "eids",
																	"value": "{{eids}}",
																	"description": "Optional parameter to filter the results by EID.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "The eSIM inventory of a given organization."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/cellularGateway/esims/inventory?eids=<string>&eids=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"cellularGateway",
																		"esims",
																		"inventory"
																	],
																	"query": [
																		{
																			"key": "eids",
																			"value": "<string>"
																		},
																		{
																			"key": "eids",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": [\n    {\n      \"device\": {\n        \"name\": \"My cellular gateway\",\n        \"model\": \"mg52\",\n        \"serial\": \"Q234-ABCD-5678\",\n        \"url\": \"https://n1.meraki.com//n//manage/nodes/new_list/000000000000\",\n        \"status\": \"online\"\n      },\n      \"active\": true,\n      \"eid\": \"89000000000000000000000000000000\",\n      \"lastUpdatedAt\": \"2023-02-01T00:00:00Z\",\n      \"network\": {\n        \"id\": \"N_24329156\"\n      },\n      \"profiles\": [\n        {\n          \"customApns\": [\n            \"internet\"\n          ],\n          \"iccid\": \"8900000000000000000\",\n          \"status\": \"activated\",\n          \"serviceProvider\": {\n            \"name\": \"ATT\",\n            \"plans\": [\n              {\n                \"name\": \"1 Cisco IoT SDO AT&T eSIM Test Plan downloadable\",\n                \"type\": \"communication\"\n              }\n            ]\n          }\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 1,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
														}
													]
												},
												{
													"name": "updateOrganizationCellularGatewayEsimsInventory",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"status\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/cellularGateway/esims/inventory/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"cellularGateway",
																"esims",
																"inventory",
																":id"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "id",
																	"value": "",
																	"description": "(Required) ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Toggle the status of an eSIM"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"status\": \"activated\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/cellularGateway/esims/inventory/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"cellularGateway",
																		"esims",
																		"inventory",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"device\": {\n    \"name\": \"My cellular gateway\",\n    \"model\": \"mg52\",\n    \"serial\": \"Q234-ABCD-5678\",\n    \"url\": \"https://n1.meraki.com//n//manage/nodes/new_list/000000000000\",\n    \"status\": \"online\"\n  },\n  \"active\": true,\n  \"eid\": \"89000000000000000000000000000000\",\n  \"lastUpdatedAt\": \"2023-02-01T00:00:00Z\",\n  \"network\": {\n    \"id\": \"N_24329156\"\n  },\n  \"profiles\": [\n    {\n      \"customApns\": [\n        \"internet\"\n      ],\n      \"iccid\": \"8900000000000000000\",\n      \"status\": \"activated\",\n      \"serviceProvider\": {\n        \"name\": \"ATT\",\n        \"plans\": [\n          {\n            \"name\": \"1 Cisco IoT SDO AT&T eSIM Test Plan downloadable\",\n            \"type\": \"communication\"\n          }\n        ]\n      }\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "serviceProviders",
											"item": [
												{
													"name": "accounts",
													"item": [
														{
															"name": "communicationPlans",
															"item": [
																{
																	"name": "getOrganizationCellularGatewayEsimsServiceProvidersAccountsCommunicationPlans",
																	"protocolProfileBehavior": {
																		"followAuthorizationHeader": false
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/cellularGateway/esims/serviceProviders/accounts/communicationPlans",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"cellularGateway",
																				"esims",
																				"serviceProviders",
																				"accounts",
																				"communicationPlans"
																			],
																			"query": [
																				{
																					"key": "accountIds",
																					"value": "{{accountIds}}",
																					"description": "(Required) Account IDs that communication plans will be fetched for",
																					"disabled": true
																				},
																				{
																					"key": "accountIds",
																					"value": "{{accountIds}}",
																					"description": "(Required) Account IDs that communication plans will be fetched for",
																					"disabled": true
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "{{organizationId}}",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		},
																		"description": "The communication plans available for a given provider."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/cellularGateway/esims/serviceProviders/accounts/communicationPlans?accountIds=<string>&accountIds=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"cellularGateway",
																						"esims",
																						"serviceProviders",
																						"accounts",
																						"communicationPlans"
																					],
																					"query": [
																						{
																							"key": "accountIds",
																							"value": "<string>"
																						},
																						{
																							"key": "accountIds",
																							"value": "<string>"
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "<string>",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"items\": [\n    {\n      \"accountId\": \"some account ID\",\n      \"apns\": [\n        {\n          \"name\": \"Some APN\"\n        }\n      ],\n      \"name\": \"A communication plan\"\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 2,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "ratePlans",
															"item": [
																{
																	"name": "getOrganizationCellularGatewayEsimsServiceProvidersAccountsRatePlans",
																	"protocolProfileBehavior": {
																		"followAuthorizationHeader": false
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/cellularGateway/esims/serviceProviders/accounts/ratePlans",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"cellularGateway",
																				"esims",
																				"serviceProviders",
																				"accounts",
																				"ratePlans"
																			],
																			"query": [
																				{
																					"key": "accountIds",
																					"value": "{{accountIds}}",
																					"description": "(Required) Account IDs that rate plans will be fetched for",
																					"disabled": true
																				},
																				{
																					"key": "accountIds",
																					"value": "{{accountIds}}",
																					"description": "(Required) Account IDs that rate plans will be fetched for",
																					"disabled": true
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "{{organizationId}}",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		},
																		"description": "The rate plans available for a given provider."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/cellularGateway/esims/serviceProviders/accounts/ratePlans?accountIds=<string>&accountIds=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"cellularGateway",
																						"esims",
																						"serviceProviders",
																						"accounts",
																						"ratePlans"
																					],
																					"query": [
																						{
																							"key": "accountIds",
																							"value": "<string>"
																						},
																						{
																							"key": "accountIds",
																							"value": "<string>"
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "<string>",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"items\": [\n    {\n      \"accountId\": \"account ID\",\n      \"name\": \"A rate plan\"\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 2,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "createOrganizationCellularGatewayEsimsServiceProvidersAccount",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"accountId\": \"<string>\",\n  \"apiKey\": \"<string>\",\n  \"serviceProvider\": {\n    \"name\": \"<string>\"\n  },\n  \"title\": \"<string>\",\n  \"username\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/cellularGateway/esims/serviceProviders/accounts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"cellularGateway",
																		"esims",
																		"serviceProviders",
																		"accounts"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Add a service provider account."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"accountId\": \"0987654321\",\n  \"apiKey\": \"foobarfoobarfoobarfoobarfoobarfoobar\",\n  \"serviceProvider\": {\n    \"name\": \"ATT\"\n  },\n  \"title\": \"My AT&T account\",\n  \"username\": \"MerakiUser\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/cellularGateway/esims/serviceProviders/accounts",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"cellularGateway",
																				"esims",
																				"serviceProviders",
																				"accounts"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"accountId\": \"0987654321\",\n  \"lastUpdatedAt\": \"2023-08-21T00:00:00Z\",\n  \"serviceProvider\": {\n    \"name\": \"ATT\",\n    \"logo\": {\n      \"url\": \"serviceproviderlogo.url\"\n    }\n  },\n  \"title\": \"My AT&T account\",\n  \"username\": \"MerakiUser\"\n}"
																}
															]
														},
														{
															"name": "deleteOrganizationCellularGatewayEsimsServiceProvidersAccount",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/cellularGateway/esims/serviceProviders/accounts/:accountId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"cellularGateway",
																		"esims",
																		"serviceProviders",
																		"accounts",
																		":accountId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "accountId",
																			"value": "{{accountId}}",
																			"description": "(Required) Account ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Remove a service provider account's integration with the Dashboard."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/cellularGateway/esims/serviceProviders/accounts/:accountId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"cellularGateway",
																				"esims",
																				"serviceProviders",
																				"accounts",
																				":accountId"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "accountId",
																					"value": "<string>",
																					"description": "(Required) Account ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "getOrganizationCellularGatewayEsimsServiceProvidersAccounts",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/cellularGateway/esims/serviceProviders/accounts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"cellularGateway",
																		"esims",
																		"serviceProviders",
																		"accounts"
																	],
																	"query": [
																		{
																			"key": "accountIds",
																			"value": "{{accountIds}}",
																			"description": "Optional parameter to filter the results by service provider account IDs.",
																			"disabled": true
																		},
																		{
																			"key": "accountIds",
																			"value": "{{accountIds}}",
																			"description": "Optional parameter to filter the results by service provider account IDs.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Inventory of service provider accounts tied to the organization."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/cellularGateway/esims/serviceProviders/accounts?accountIds=<integer>&accountIds=<integer>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"cellularGateway",
																				"esims",
																				"serviceProviders",
																				"accounts"
																			],
																			"query": [
																				{
																					"key": "accountIds",
																					"value": "<integer>"
																				},
																				{
																					"key": "accountIds",
																					"value": "<integer>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"items\": [\n      {\n        \"accountId\": \"0987654321\",\n        \"lastUpdatedAt\": \"2023-08-21T00:00:00Z\",\n        \"serviceProvider\": {\n          \"name\": \"ATT\",\n          \"logo\": {\n            \"url\": \"serviceproviderlogo.url\"\n          }\n        },\n        \"title\": \"My AT&T account\",\n        \"username\": \"MerakiUser\"\n      }\n    ],\n    \"meta\": {\n      \"counts\": {\n        \"items\": {\n          \"total\": 1,\n          \"remaining\": 0\n        }\n      }\n    }\n  }\n]"
																}
															]
														},
														{
															"name": "updateOrganizationCellularGatewayEsimsServiceProvidersAccount",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"title\": \"<string>\",\n  \"apiKey\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/cellularGateway/esims/serviceProviders/accounts/:accountId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"cellularGateway",
																		"esims",
																		"serviceProviders",
																		"accounts",
																		":accountId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "accountId",
																			"value": "{{accountId}}",
																			"description": "(Required) Account ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Edit service provider account info stored in Meraki's database."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"title\": \"My AT&T account\",\n  \"apiKey\": \"foobarfoobarfoobarfoobarfoobarfoobar\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/cellularGateway/esims/serviceProviders/accounts/:accountId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"cellularGateway",
																				"esims",
																				"serviceProviders",
																				"accounts",
																				":accountId"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "accountId",
																					"value": "<string>",
																					"description": "(Required) Account ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"accountId\": \"0987654321\",\n  \"lastUpdatedAt\": \"2023-08-21T00:00:00Z\",\n  \"serviceProvider\": {\n    \"name\": \"ATT\",\n    \"logo\": {\n      \"url\": \"serviceproviderlogo.url\"\n    }\n  },\n  \"title\": \"My AT&T account\",\n  \"username\": \"MerakiUser\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "getOrganizationCellularGatewayEsimsServiceProviders",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/cellularGateway/esims/serviceProviders",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"cellularGateway",
																"esims",
																"serviceProviders"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Service providers customers can add accounts for."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/cellularGateway/esims/serviceProviders",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"cellularGateway",
																		"esims",
																		"serviceProviders"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": [\n    {\n      \"name\": \"AT&T\",\n      \"logo\": {\n        \"url\": \"Logo URL\"\n      },\n      \"isBootstrap\": false,\n      \"terms\": {\n        \"content\": \"Legal jargon\",\n        \"name\": \"AT&T Terms and Conditions\"\n      }\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 42,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "swap",
											"item": [
												{
													"name": "createOrganizationCellularGatewayEsimsSwap",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"swaps\": [\n    {\n      \"eid\": \"<string>\",\n      \"target\": {\n        \"accountId\": \"<string>\",\n        \"communicationPlan\": \"<string>\",\n        \"ratePlan\": \"<string>\"\n      }\n    },\n    {\n      \"eid\": \"<string>\",\n      \"target\": {\n        \"accountId\": \"<string>\",\n        \"communicationPlan\": \"<string>\",\n        \"ratePlan\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/cellularGateway/esims/swap",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"cellularGateway",
																"esims",
																"swap"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Swap which profile an eSIM uses."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"swaps\": [\n    {\n      \"eid\": \"<string>\",\n      \"target\": {\n        \"accountId\": \"<string>\",\n        \"communicationPlan\": \"<string>\",\n        \"ratePlan\": \"<string>\"\n      }\n    },\n    {\n      \"eid\": \"<string>\",\n      \"target\": {\n        \"accountId\": \"<string>\",\n        \"communicationPlan\": \"<string>\",\n        \"ratePlan\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/cellularGateway/esims/swap",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"cellularGateway",
																		"esims",
																		"swap"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"eid\": \"1234567890\",\n  \"iccid\": \"9876543210\",\n  \"status\": \"Completed\"\n}"
														}
													]
												},
												{
													"name": "updateOrganizationCellularGatewayEsimsSwap",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/cellularGateway/esims/swap/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"cellularGateway",
																"esims",
																"swap",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "",
																	"description": "(Required) eSIM EID"
																},
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Get the status of a profile swap."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/cellularGateway/esims/swap/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"cellularGateway",
																		"esims",
																		"swap",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) eSIM EID"
																		},
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"eid\": \"1234567890\",\n  \"iccid\": \"9876543210\",\n  \"status\": \"Completed\"\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "lan",
									"item": [
										{
											"name": "getDeviceCellularGatewayLan",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/cellularGateway/lan",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"cellularGateway",
														"lan"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Show the LAN Settings of a MG"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/cellularGateway/lan",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"cellularGateway",
																"lan"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"deviceName\": \"name of the MG\",\n  \"deviceLanIp\": \"192.168.0.33\",\n  \"deviceSubnet\": \"192.168.0.32/27\",\n  \"fixedIpAssignments\": [\n    {\n      \"name\": \"server 1\",\n      \"ip\": \"192.168.0.10\",\n      \"mac\": \"0b:00:00:00:00:ac\"\n    }\n  ],\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"192.168.1.0\",\n      \"end\": \"192.168.1.1\",\n      \"comment\": \"A reserved IP range\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "updateDeviceCellularGatewayLan",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"fixedIpAssignments\": [\n    {\n      \"ip\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"ip\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/cellularGateway/lan",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"cellularGateway",
														"lan"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the LAN Settings for a single MG."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"fixedIpAssignments\": [\n    {\n      \"ip\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"ip\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/cellularGateway/lan",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"cellularGateway",
																"lan"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"deviceName\": \"name of the MG\",\n  \"deviceLanIp\": \"192.168.0.33\",\n  \"deviceSubnet\": \"192.168.0.32/27\",\n  \"fixedIpAssignments\": [\n    {\n      \"name\": \"server 1\",\n      \"ip\": \"192.168.0.10\",\n      \"mac\": \"0b:00:00:00:00:ac\"\n    }\n  ],\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"192.168.1.0\",\n      \"end\": \"192.168.1.1\",\n      \"comment\": \"A reserved IP range\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "portForwardingRules",
									"item": [
										{
											"name": "getDeviceCellularGatewayPortForwardingRules",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/cellularGateway/portForwardingRules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"cellularGateway",
														"portForwardingRules"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Returns the port forwarding rules for a single MG."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/cellularGateway/portForwardingRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"cellularGateway",
																"portForwardingRules"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"rules\": [\n    {\n      \"name\": \"test\",\n      \"lanIp\": \"172.31.128.5\",\n      \"publicPort\": \"11-12\",\n      \"localPort\": \"4\",\n      \"allowedIps\": [\n        \"10.10.10.10\",\n        \"10.10.10.11\"\n      ],\n      \"protocol\": \"tcp\",\n      \"access\": \"any\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "updateDeviceCellularGatewayPortForwardingRules",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"rules\": [\n    {\n      \"lanIp\": \"<string>\",\n      \"publicPort\": \"<string>\",\n      \"localPort\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"access\": \"<string>\",\n      \"name\": \"<string>\",\n      \"allowedIps\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"lanIp\": \"<string>\",\n      \"publicPort\": \"<string>\",\n      \"localPort\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"access\": \"<string>\",\n      \"name\": \"<string>\",\n      \"allowedIps\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/cellularGateway/portForwardingRules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"cellularGateway",
														"portForwardingRules"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Updates the port forwarding rules for a single MG."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"lanIp\": \"<string>\",\n      \"publicPort\": \"<string>\",\n      \"localPort\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"access\": \"<string>\",\n      \"name\": \"<string>\",\n      \"allowedIps\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"lanIp\": \"<string>\",\n      \"publicPort\": \"<string>\",\n      \"localPort\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"access\": \"<string>\",\n      \"name\": \"<string>\",\n      \"allowedIps\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/cellularGateway/portForwardingRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"cellularGateway",
																"portForwardingRules"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"rules\": [\n    {\n      \"name\": \"test\",\n      \"lanIp\": \"172.31.128.5\",\n      \"publicPort\": \"11-12\",\n      \"localPort\": \"4\",\n      \"allowedIps\": [\n        \"10.10.10.10\",\n        \"10.10.10.11\"\n      ],\n      \"protocol\": \"tcp\",\n      \"access\": \"any\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "subnetPool",
									"item": [
										{
											"name": "getNetworkCellularGatewaySubnetPool",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/subnetPool",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"cellularGateway",
														"subnetPool"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the subnet pool and mask configured for MGs in the network."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/subnetPool",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"cellularGateway",
																"subnetPool"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"deploymentMode\": \"routed\",\n  \"cidr\": \"192.168.0.0/16\",\n  \"mask\": 24,\n  \"subnets\": [\n    {\n      \"serial\": \"AAAA-AAAA-AAAA\",\n      \"name\": \"my first MG\",\n      \"applianceIp\": \"192.168.0.1\",\n      \"subnet\": \"192.168.0.0/24\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "updateNetworkCellularGatewaySubnetPool",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"mask\": \"<integer>\",\n  \"cidr\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/subnetPool",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"cellularGateway",
														"subnetPool"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the subnet pool and mask configuration for MGs in the network."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"mask\": 24,\n  \"cidr\": \"192.168.0.0/16\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/subnetPool",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"cellularGateway",
																"subnetPool"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"deploymentMode\": \"routed\",\n  \"cidr\": \"192.168.0.0/16\",\n  \"mask\": 24,\n  \"subnets\": [\n    {\n      \"serial\": \"AAAA-AAAA-AAAA\",\n      \"name\": \"my first MG\",\n      \"applianceIp\": \"192.168.0.1\",\n      \"subnet\": \"192.168.0.0/24\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "uplink",
									"item": [
										{
											"name": "getNetworkCellularGatewayUplink",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/uplink",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"cellularGateway",
														"uplink"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Returns the uplink settings for your MG network."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/uplink",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"cellularGateway",
																"uplink"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"bandwidthLimits\": {\n    \"limitUp\": 51200,\n    \"limitDown\": 51200\n  }\n}"
												}
											]
										},
										{
											"name": "updateNetworkCellularGatewayUplink",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bandwidthLimits\": {\n    \"limitUp\": \"<integer>\",\n    \"limitDown\": \"<integer>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/uplink",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"cellularGateway",
														"uplink"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Updates the uplink settings for your MG network."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"bandwidthLimits\": {\n    \"limitUp\": 1000000,\n    \"limitDown\": 1000000\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/cellularGateway/uplink",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"cellularGateway",
																"uplink"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"bandwidthLimits\": {\n    \"limitUp\": 51200,\n    \"limitDown\": 51200\n  }\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "monitor",
							"item": [
								{
									"name": "uplink",
									"item": [
										{
											"name": "statuses",
											"item": [
												{
													"name": "getOrganizationCellularGatewayUplinkStatuses",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/cellularGateway/uplink/statuses",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"cellularGateway",
																"uplink",
																"statuses"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "A list of network IDs. The returned devices will be filtered to only include these networks.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "A list of network IDs. The returned devices will be filtered to only include these networks.",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "A list of serial numbers. The returned devices will be filtered to only include these serials.",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "A list of serial numbers. The returned devices will be filtered to only include these serials.",
																	"disabled": true
																},
																{
																	"key": "iccids",
																	"value": "{{iccids}}",
																	"description": "A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs.",
																	"disabled": true
																},
																{
																	"key": "iccids",
																	"value": "{{iccids}}",
																	"description": "A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the uplink status of every Meraki MG cellular gateway in the organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/cellularGateway/uplink/statuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&iccids=<string>&iccids=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"cellularGateway",
																		"uplink",
																		"statuses"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "iccids",
																			"value": "<string>"
																		},
																		{
																			"key": "iccids",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"networkId\": \"N_24329156\",\n    \"serial\": \"Q234-ABCD-5678\",\n    \"model\": \"MG21\",\n    \"lastReportedAt\": \"2018-02-11T00:00:00Z\",\n    \"uplinks\": [\n      {\n        \"interface\": \"cellular\",\n        \"status\": \"ready\",\n        \"ip\": \"1.2.3.4\",\n        \"provider\": \"at&t\",\n        \"publicIp\": \"123.123.123.1\",\n        \"model\": \"integrated\",\n        \"signalStat\": {\n          \"rsrp\": \"-120\",\n          \"rsrq\": \"-13\"\n        },\n        \"mcc\": \"123\",\n        \"mnc\": \"123\",\n        \"roaming\": {\n          \"status\": \"home\"\n        },\n        \"connectionType\": \"4g\",\n        \"apn\": \"internet\",\n        \"gateway\": \"100.100.100.100\",\n        \"dns1\": \"111.111.111.111\",\n        \"dns2\": \"222.222.222.222\",\n        \"signalType\": \"4G\",\n        \"mtu\": 1500,\n        \"iccid\": \"123456789\",\n        \"imsi\": \"123456789012345\",\n        \"msisdn\": \"123456789012345\"\n      }\n    ]\n  }\n]"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "insight",
					"item": [
						{
							"name": "configure",
							"item": [
								{
									"name": "applications",
									"item": [
										{
											"name": "getOrganizationInsightApplications",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/insight/applications",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"insight",
														"applications"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List all Insight tracked applications"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/insight/applications",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"insight",
																"applications"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"applicationId\": \"19.12\",\n    \"name\": \"Meraki HTTPS\",\n    \"thresholds\": {\n      \"type\": \"smart\",\n      \"byNetwork\": [\n        {\n          \"networkId\": \"N_12345678\",\n          \"goodput\": 50000,\n          \"responseDuration\": 1000\n        }\n      ]\n    }\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "monitoredMediaServers",
									"item": [
										{
											"name": "createOrganizationInsightMonitoredMediaServer",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"address\": \"<string>\",\n  \"bestEffortMonitoringEnabled\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/insight/monitoredMediaServers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"insight",
														"monitoredMediaServers"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Add a media server to be monitored for this organization. Only valid for organizations with Meraki Insight."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"Sample VoIP Provider\",\n  \"address\": \"123.123.123.1\",\n  \"bestEffortMonitoringEnabled\": true\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/insight/monitoredMediaServers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"insight",
																"monitoredMediaServers"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1284392014819\",\n  \"name\": \"Sample VoIP Provider\",\n  \"address\": \"123.123.123.1\",\n  \"bestEffortMonitoringEnabled\": true\n}"
												}
											]
										},
										{
											"name": "deleteOrganizationInsightMonitoredMediaServer",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/insight/monitoredMediaServers/:monitoredMediaServerId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"insight",
														"monitoredMediaServers",
														":monitoredMediaServerId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "monitoredMediaServerId",
															"value": "{{monitoredMediaServerId}}",
															"description": "(Required) Monitored media server ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Delete a monitored media server from this organization. Only valid for organizations with Meraki Insight."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/insight/monitoredMediaServers/:monitoredMediaServerId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"insight",
																"monitoredMediaServers",
																":monitoredMediaServerId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "monitoredMediaServerId",
																	"value": "<string>",
																	"description": "(Required) Monitored media server ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getOrganizationInsightMonitoredMediaServer",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/insight/monitoredMediaServers/:monitoredMediaServerId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"insight",
														"monitoredMediaServers",
														":monitoredMediaServerId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "monitoredMediaServerId",
															"value": "{{monitoredMediaServerId}}",
															"description": "(Required) Monitored media server ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return a monitored media server for this organization. Only valid for organizations with Meraki Insight."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/insight/monitoredMediaServers/:monitoredMediaServerId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"insight",
																"monitoredMediaServers",
																":monitoredMediaServerId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "monitoredMediaServerId",
																	"value": "<string>",
																	"description": "(Required) Monitored media server ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1284392014819\",\n  \"name\": \"Sample VoIP Provider\",\n  \"address\": \"123.123.123.1\",\n  \"bestEffortMonitoringEnabled\": true\n}"
												}
											]
										},
										{
											"name": "getOrganizationInsightMonitoredMediaServers",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/insight/monitoredMediaServers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"insight",
														"monitoredMediaServers"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the monitored media servers for this organization. Only valid for organizations with Meraki Insight."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/insight/monitoredMediaServers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"insight",
																"monitoredMediaServers"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"1284392014819\",\n    \"name\": \"Sample VoIP Provider\",\n    \"address\": \"123.123.123.1\",\n    \"bestEffortMonitoringEnabled\": true\n  }\n]"
												}
											]
										},
										{
											"name": "updateOrganizationInsightMonitoredMediaServer",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"address\": \"<string>\",\n  \"bestEffortMonitoringEnabled\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/insight/monitoredMediaServers/:monitoredMediaServerId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"insight",
														"monitoredMediaServers",
														":monitoredMediaServerId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "monitoredMediaServerId",
															"value": "{{monitoredMediaServerId}}",
															"description": "(Required) Monitored media server ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update a monitored media server for this organization. Only valid for organizations with Meraki Insight."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"Sample VoIP Provider\",\n  \"address\": \"123.123.123.1\",\n  \"bestEffortMonitoringEnabled\": true\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/insight/monitoredMediaServers/:monitoredMediaServerId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"insight",
																"monitoredMediaServers",
																":monitoredMediaServerId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "monitoredMediaServerId",
																	"value": "<string>",
																	"description": "(Required) Monitored media server ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1284392014819\",\n  \"name\": \"Sample VoIP Provider\",\n  \"address\": \"123.123.123.1\",\n  \"bestEffortMonitoringEnabled\": true\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "monitor",
							"item": [
								{
									"name": "applications",
									"item": [
										{
											"name": "healthByTime",
											"item": [
												{
													"name": "getNetworkInsightApplicationHealthByTime",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/insight/applications/:applicationId/healthByTime",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"insight",
																"applications",
																":applicationId",
																"healthByTime"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "{{t0}}",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 7 days from today.",
																	"disabled": true
																},
																{
																	"key": "t1",
																	"value": "{{t1}}",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
																	"disabled": true
																},
																{
																	"key": "timespan",
																	"value": "{{timespan}}",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 2 hours.",
																	"disabled": true
																},
																{
																	"key": "resolution",
																	"value": "{{resolution}}",
																	"description": "The time resolution in seconds for returned data. The valid resolutions are: 60, 300, 3600, 86400. The default is 300.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "applicationId",
																	"value": "{{applicationId}}",
																	"description": "(Required) Application ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Get application health by time"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/insight/applications/:applicationId/healthByTime?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"insight",
																		"applications",
																		":applicationId",
																		"healthByTime"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>"
																		},
																		{
																			"key": "t1",
																			"value": "<string>"
																		},
																		{
																			"key": "timespan",
																			"value": "<float>"
																		},
																		{
																			"key": "resolution",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "applicationId",
																			"value": "<string>",
																			"description": "(Required) Application ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"startTs\": \"2018-02-11T00:00:00Z\",\n    \"endTs\": \"2018-05-12T00:00:00Z\",\n    \"wanGoodput\": 20000000,\n    \"lanGoodput\": 100000000,\n    \"wanLatencyMs\": 10.1,\n    \"lanLatencyMs\": 3.2,\n    \"wanLossPercent\": 0.2,\n    \"lanLossPercent\": 0,\n    \"responseDuration\": 210,\n    \"sent\": 1000,\n    \"recv\": 5000,\n    \"numClients\": 2\n  }\n]"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "licensing",
					"item": [
						{
							"name": "configure",
							"item": [
								{
									"name": "coterm",
									"item": [
										{
											"name": "licenses",
											"item": [
												{
													"name": "getOrganizationLicensingCotermLicenses",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/licensing/coterm/licenses",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"licensing",
																"coterm",
																"licenses"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "invalidated",
																	"value": "{{invalidated}}",
																	"description": "Filter for licenses that are invalidated",
																	"disabled": true
																},
																{
																	"key": "expired",
																	"value": "{{expired}}",
																	"description": "Filter for licenses that are expired",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the licenses in a coterm organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/licensing/coterm/licenses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&invalidated=<boolean>&expired=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"licensing",
																		"coterm",
																		"licenses"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		},
																		{
																			"key": "invalidated",
																			"value": "<boolean>"
																		},
																		{
																			"key": "expired",
																			"value": "<boolean>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"key\": \"Z2AA-BBBB-CCCC\",\n    \"organizationId\": \"123456\",\n    \"duration\": 365,\n    \"mode\": \"addDevices\",\n    \"startedAt\": \"2022-05-02T10:52:00Z\",\n    \"claimedAt\": \"2022-07-04T16:23:00Z\",\n    \"invalidated\": true,\n    \"invalidatedAt\": \"2022-07-04T16:23:00Z\",\n    \"expired\": false,\n    \"editions\": [\n      {\n        \"edition\": \"Enterprise\",\n        \"productType\": \"appliance\"\n      }\n    ],\n    \"counts\": [\n      {\n        \"model\": \"MR Enterprise\",\n        \"count\": 2\n      }\n    ]\n  }\n]"
														}
													]
												},
												{
													"name": "moveOrganizationLicensingCotermLicenses",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"destination\": {\n    \"organizationId\": \"<string>\",\n    \"mode\": \"<string>\"\n  },\n  \"licenses\": [\n    {\n      \"key\": \"<string>\",\n      \"counts\": [\n        {\n          \"model\": \"<string>\",\n          \"count\": \"<integer>\"\n        },\n        {\n          \"model\": \"<string>\",\n          \"count\": \"<integer>\"\n        }\n      ]\n    },\n    {\n      \"key\": \"<string>\",\n      \"counts\": [\n        {\n          \"model\": \"<string>\",\n          \"count\": \"<integer>\"\n        },\n        {\n          \"model\": \"<string>\",\n          \"count\": \"<integer>\"\n        }\n      ]\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/licensing/coterm/licenses/move",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"licensing",
																"coterm",
																"licenses",
																"move"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Moves a license to a different organization (coterm only)"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"destination\": {\n    \"organizationId\": \"<string>\",\n    \"mode\": \"<string>\"\n  },\n  \"licenses\": [\n    {\n      \"key\": \"<string>\",\n      \"counts\": [\n        {\n          \"model\": \"<string>\",\n          \"count\": \"<integer>\"\n        },\n        {\n          \"model\": \"<string>\",\n          \"count\": \"<integer>\"\n        }\n      ]\n    },\n    {\n      \"key\": \"<string>\",\n      \"counts\": [\n        {\n          \"model\": \"<string>\",\n          \"count\": \"<integer>\"\n        },\n        {\n          \"model\": \"<string>\",\n          \"count\": \"<integer>\"\n        }\n      ]\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/licensing/coterm/licenses/move",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"licensing",
																		"coterm",
																		"licenses",
																		"move"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"remainderLicenses\": [\n    {\n      \"key\": \"Z2AA-BBBB-CCCC\",\n      \"organizationId\": \"123456\",\n      \"duration\": 365,\n      \"mode\": \"addDevices\",\n      \"startedAt\": \"2022-05-02T10:52:00Z\",\n      \"claimedAt\": \"2022-07-04T16:23:00Z\",\n      \"invalidated\": true,\n      \"invalidatedAt\": \"2022-07-04T16:23:00Z\",\n      \"expired\": false,\n      \"editions\": [\n        {\n          \"edition\": \"Enterprise\",\n          \"productType\": \"appliance\"\n        }\n      ],\n      \"counts\": [\n        {\n          \"model\": \"MR Enterprise\",\n          \"count\": 2\n        }\n      ]\n    }\n  ],\n  \"movedLicenses\": [\n    {\n      \"key\": \"Z2AA-BBBB-CCCC\",\n      \"organizationId\": \"123456\",\n      \"duration\": 365,\n      \"mode\": \"addDevices\",\n      \"startedAt\": \"2022-05-02T10:52:00Z\",\n      \"claimedAt\": \"2022-07-04T16:23:00Z\",\n      \"invalidated\": true,\n      \"invalidatedAt\": \"2022-07-04T16:23:00Z\",\n      \"expired\": false,\n      \"editions\": [\n        {\n          \"edition\": \"Enterprise\",\n          \"productType\": \"appliance\"\n        }\n      ],\n      \"counts\": [\n        {\n          \"model\": \"MR Enterprise\",\n          \"count\": 2\n        }\n      ]\n    }\n  ]\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "subscription",
									"item": [
										{
											"name": "entitlements",
											"item": [
												{
													"name": "getAdministeredLicensingSubscriptionEntitlements",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/administered/licensing/subscription/entitlements",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"administered",
																"licensing",
																"subscription",
																"entitlements"
															],
															"query": [
																{
																	"key": "skus",
																	"value": "{{skus}}",
																	"description": "Filter to entitlements with the specified SKUs",
																	"disabled": true
																},
																{
																	"key": "skus",
																	"value": "{{skus}}",
																	"description": "Filter to entitlements with the specified SKUs",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Retrieve the list of purchasable entitlements"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/administered/licensing/subscription/entitlements?skus=<string>&skus=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"administered",
																		"licensing",
																		"subscription",
																		"entitlements"
																	],
																	"query": [
																		{
																			"key": "skus",
																			"value": "<string>"
																		},
																		{
																			"key": "skus",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"sku\": \"LIC-MR-A\",\n  \"name\": \"MR\",\n  \"productType\": \"wireless\",\n  \"productClass\": \"MR\",\n  \"featureTier\": \"advantage\",\n  \"isAddOn\": false\n}"
														}
													]
												}
											]
										},
										{
											"name": "subscriptions",
											"item": [
												{
													"name": "claimKey",
													"item": [
														{
															"name": "validateAdministeredLicensingSubscriptionSubscriptionsClaimKey",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"claimKey\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/administered/licensing/subscription/subscriptions/claimKey/validate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"administered",
																		"licensing",
																		"subscription",
																		"subscriptions",
																		"claimKey",
																		"validate"
																	],
																	"variable": [
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Find a subscription by claim key. Returns 400 if the key has already been claimed."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"claimKey\": \"S2345-6789A-BCDEF-GHJKM\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/administered/licensing/subscription/subscriptions/claimKey/validate",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"administered",
																				"licensing",
																				"subscription",
																				"subscriptions",
																				"claimKey",
																				"validate"
																			],
																			"variable": [
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"subscriptionId\": \"2345\",\n  \"name\": \"Corporate subscription\",\n  \"description\": \"A description\",\n  \"status\": \"active\",\n  \"startDate\": \"2027-06-30T00:00:00Z\",\n  \"endDate\": \"2028-06-30T00:00:00Z\",\n  \"lastUpdatedAt\": \"2027-09-21T00:00:00Z\",\n  \"webOrderId\": \"55598764\",\n  \"type\": \"termed\",\n  \"smartAccount\": {\n    \"status\": \"active\",\n    \"account\": {\n      \"id\": \"99995678\",\n      \"name\": \"Corporate Smart Account\",\n      \"domain\": \"smart_account_domain\"\n    }\n  },\n  \"renewalRequested\": false,\n  \"productTypes\": [\n    \"wireless\"\n  ],\n  \"entitlements\": [\n    {\n      \"sku\": \"LIC-MS-400-L-A\",\n      \"webOrderLineId\": \"55551234\",\n      \"seats\": {\n        \"assigned\": 10,\n        \"available\": 15,\n        \"limit\": 25\n      }\n    }\n  ],\n  \"counts\": {\n    \"seats\": {\n      \"assigned\": 10,\n      \"available\": 15,\n      \"limit\": 25\n    },\n    \"networks\": 1,\n    \"organizations\": 1\n  },\n  \"enterpriseAgreement\": {\n    \"suites\": [\n      \"networking\"\n    ]\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "compliance",
													"item": [
														{
															"name": "statuses",
															"item": [
																{
																	"name": "getAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses",
																	"protocolProfileBehavior": {
																		"followAuthorizationHeader": false
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/administered/licensing/subscription/subscriptions/compliance/statuses",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"administered",
																				"licensing",
																				"subscription",
																				"subscriptions",
																				"compliance",
																				"statuses"
																			],
																			"query": [
																				{
																					"key": "organizationIds",
																					"value": "{{organizationIds}}",
																					"description": "(Required) Organizations to get subscription compliance information for",
																					"disabled": true
																				},
																				{
																					"key": "organizationIds",
																					"value": "{{organizationIds}}",
																					"description": "(Required) Organizations to get subscription compliance information for",
																					"disabled": true
																				},
																				{
																					"key": "subscriptionIds",
																					"value": "{{subscriptionIds}}",
																					"description": "Subscription ids",
																					"disabled": true
																				},
																				{
																					"key": "subscriptionIds",
																					"value": "{{subscriptionIds}}",
																					"description": "Subscription ids",
																					"disabled": true
																				}
																			],
																			"variable": [
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		},
																		"description": "Get compliance status for requested subscriptions"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/administered/licensing/subscription/subscriptions/compliance/statuses?organizationIds=<string>&organizationIds=<string>&subscriptionIds=<string>&subscriptionIds=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"administered",
																						"licensing",
																						"subscription",
																						"subscriptions",
																						"compliance",
																						"statuses"
																					],
																					"query": [
																						{
																							"key": "organizationIds",
																							"value": "<string>"
																						},
																						{
																							"key": "organizationIds",
																							"value": "<string>"
																						},
																						{
																							"key": "subscriptionIds",
																							"value": "<string>"
																						},
																						{
																							"key": "subscriptionIds",
																							"value": "<string>"
																						}
																					],
																					"variable": [
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "[\n  {\n    \"subscription\": {\n      \"id\": \"12345\",\n      \"name\": \"Corporate Subscription\",\n      \"status\": \"active\"\n    },\n    \"violations\": {\n      \"byProductClass\": [\n        {\n          \"productClass\": \"MS 100 Small\",\n          \"gracePeriodEndsAt\": \"2023-12-07T00:00:00Z\",\n          \"missing\": {\n            \"entitlements\": [\n              {\n                \"sku\": \"LIC-MS-100-S-E\",\n                \"quantity\": 11\n              }\n            ]\n          }\n        }\n      ]\n    }\n  }\n]"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "bindAdministeredLicensingSubscriptionSubscription",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"networkIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/administered/licensing/subscription/subscriptions/:subscriptionId/bind",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"administered",
																"licensing",
																"subscription",
																"subscriptions",
																":subscriptionId",
																"bind"
															],
															"query": [
																{
																	"key": "validate",
																	"value": "{{validate}}",
																	"description": "Check if the provided networks can be bound to the subscription. Returns any licensing problems and does not commit the results.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "subscriptionId",
																	"value": "{{subscriptionId}}",
																	"description": "(Required) Subscription ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Bind networks to a subscription"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"networkIds\": [\n    \"L_1234\",\n    \"N_5678\"\n  ],\n  \"validate\": true\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/administered/licensing/subscription/subscriptions/:subscriptionId/bind?validate=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"administered",
																		"licensing",
																		"subscription",
																		"subscriptions",
																		":subscriptionId",
																		"bind"
																	],
																	"query": [
																		{
																			"key": "validate",
																			"value": "<boolean>"
																		}
																	],
																	"variable": [
																		{
																			"key": "subscriptionId",
																			"value": "<string>",
																			"description": "(Required) Subscription ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"subscriptionId\": \"XY1234567\",\n  \"networks\": [\n    {\n      \"id\": \"L_1234\",\n      \"name\": \"Corporate network\"\n    }\n  ],\n  \"errors\": [\n    \"Insufficient licenses\"\n  ],\n  \"insufficientEntitlements\": [\n    {\n      \"sku\": \"LIC-MS-400-L-A\",\n      \"quantity\": 5\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "claimAdministeredLicensingSubscriptionSubscriptions",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"claimKey\": \"<string>\",\n  \"organizationId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/administered/licensing/subscription/subscriptions/claim",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"administered",
																"licensing",
																"subscription",
																"subscriptions",
																"claim"
															],
															"query": [
																{
																	"key": "validate",
																	"value": "{{validate}}",
																	"description": "Check if the provided claim key is valid and can be claimed into the organization.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Claim a subscription into an organization."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"validate\": true,\n  \"claimKey\": \"S2345-6789A-BCDEF-GHJKM\",\n  \"organizationId\": \"12345678910\",\n  \"name\": \"Corporate subscription\",\n  \"description\": \"Subscription for all main offices\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/administered/licensing/subscription/subscriptions/claim?validate=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"administered",
																		"licensing",
																		"subscription",
																		"subscriptions",
																		"claim"
																	],
																	"query": [
																		{
																			"key": "validate",
																			"value": "<boolean>"
																		}
																	],
																	"variable": [
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"subscriptionId\": \"2345\",\n  \"name\": \"Corporate subscription\",\n  \"description\": \"A description\",\n  \"status\": \"active\",\n  \"startDate\": \"2027-06-30T00:00:00Z\",\n  \"endDate\": \"2028-06-30T00:00:00Z\",\n  \"lastUpdatedAt\": \"2027-09-21T00:00:00Z\",\n  \"webOrderId\": \"55598764\",\n  \"type\": \"termed\",\n  \"smartAccount\": {\n    \"status\": \"active\",\n    \"account\": {\n      \"id\": \"99995678\",\n      \"name\": \"Corporate Smart Account\",\n      \"domain\": \"smart_account_domain\"\n    }\n  },\n  \"renewalRequested\": false,\n  \"productTypes\": [\n    \"wireless\"\n  ],\n  \"entitlements\": [\n    {\n      \"sku\": \"LIC-MS-400-L-A\",\n      \"webOrderLineId\": \"55551234\",\n      \"seats\": {\n        \"assigned\": 10,\n        \"available\": 15,\n        \"limit\": 25\n      }\n    }\n  ],\n  \"counts\": {\n    \"seats\": {\n      \"assigned\": 10,\n      \"available\": 15,\n      \"limit\": 25\n    },\n    \"networks\": 1,\n    \"organizations\": 1\n  },\n  \"enterpriseAgreement\": {\n    \"suites\": [\n      \"networking\"\n    ]\n  }\n}"
														}
													]
												},
												{
													"name": "getAdministeredLicensingSubscriptionSubscriptions",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/administered/licensing/subscription/subscriptions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"administered",
																"licensing",
																"subscription",
																"subscriptions"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "subscriptionIds",
																	"value": "{{subscriptionIds}}",
																	"description": "List of subscription ids to fetch",
																	"disabled": true
																},
																{
																	"key": "subscriptionIds",
																	"value": "{{subscriptionIds}}",
																	"description": "List of subscription ids to fetch",
																	"disabled": true
																},
																{
																	"key": "organizationIds",
																	"value": "{{organizationIds}}",
																	"description": "(Required) Organizations to get associated subscriptions for",
																	"disabled": true
																},
																{
																	"key": "organizationIds",
																	"value": "{{organizationIds}}",
																	"description": "(Required) Organizations to get associated subscriptions for",
																	"disabled": true
																},
																{
																	"key": "statuses",
																	"value": "{{statuses}}",
																	"description": "List of statuses that returned subscriptions can have",
																	"disabled": true
																},
																{
																	"key": "statuses",
																	"value": "{{statuses}}",
																	"description": "List of statuses that returned subscriptions can have",
																	"disabled": true
																},
																{
																	"key": "productTypes",
																	"value": "{{productTypes}}",
																	"description": "List of product types that returned subscriptions need to have entitlements for.",
																	"disabled": true
																},
																{
																	"key": "productTypes",
																	"value": "{{productTypes}}",
																	"description": "List of product types that returned subscriptions need to have entitlements for.",
																	"disabled": true
																},
																{
																	"key": "skus",
																	"value": "{{skus}}",
																	"description": "List of SKUs that returned subscriptions need to have entitlements for.",
																	"disabled": true
																},
																{
																	"key": "skus",
																	"value": "{{skus}}",
																	"description": "List of SKUs that returned subscriptions need to have entitlements for.",
																	"disabled": true
																},
																{
																	"key": "name",
																	"value": "{{name}}",
																	"description": "Search for subscription name",
																	"disabled": true
																},
																{
																	"key": "lt",
																	"value": "{{lt}}",
																	"description": "Filter subscriptions by start date, ISO 8601 format. To filter with a range of dates, use 'startDate[<option>]=?' in the request. Accepted options include lt, gt, lte, gte.",
																	"disabled": true
																},
																{
																	"key": "gt",
																	"value": "{{gt}}",
																	"description": "Filter subscriptions by start date, ISO 8601 format. To filter with a range of dates, use 'startDate[<option>]=?' in the request. Accepted options include lt, gt, lte, gte.",
																	"disabled": true
																},
																{
																	"key": "lte",
																	"value": "{{lte}}",
																	"description": "Filter subscriptions by start date, ISO 8601 format. To filter with a range of dates, use 'startDate[<option>]=?' in the request. Accepted options include lt, gt, lte, gte.",
																	"disabled": true
																},
																{
																	"key": "gte",
																	"value": "{{gte}}",
																	"description": "Filter subscriptions by start date, ISO 8601 format. To filter with a range of dates, use 'startDate[<option>]=?' in the request. Accepted options include lt, gt, lte, gte.",
																	"disabled": true
																},
																{
																	"key": "neq",
																	"value": "{{neq}}",
																	"description": "Filter subscriptions by start date, ISO 8601 format. To filter with a range of dates, use 'startDate[<option>]=?' in the request. Accepted options include lt, gt, lte, gte.",
																	"disabled": true
																},
																{
																	"key": "lt",
																	"value": "{{lt}}",
																	"description": "Filter subscriptions by end date, ISO 8601 format. To filter with a range of dates, use 'endDate[<option>]=?' in the request. Accepted options include lt, gt, lte, gte.",
																	"disabled": true
																},
																{
																	"key": "gt",
																	"value": "{{gt}}",
																	"description": "Filter subscriptions by end date, ISO 8601 format. To filter with a range of dates, use 'endDate[<option>]=?' in the request. Accepted options include lt, gt, lte, gte.",
																	"disabled": true
																},
																{
																	"key": "lte",
																	"value": "{{lte}}",
																	"description": "Filter subscriptions by end date, ISO 8601 format. To filter with a range of dates, use 'endDate[<option>]=?' in the request. Accepted options include lt, gt, lte, gte.",
																	"disabled": true
																},
																{
																	"key": "gte",
																	"value": "{{gte}}",
																	"description": "Filter subscriptions by end date, ISO 8601 format. To filter with a range of dates, use 'endDate[<option>]=?' in the request. Accepted options include lt, gt, lte, gte.",
																	"disabled": true
																},
																{
																	"key": "neq",
																	"value": "{{neq}}",
																	"description": "Filter subscriptions by end date, ISO 8601 format. To filter with a range of dates, use 'endDate[<option>]=?' in the request. Accepted options include lt, gt, lte, gte.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List available subscriptions"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/administered/licensing/subscription/subscriptions?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&subscriptionIds=<string>&subscriptionIds=<string>&organizationIds=<string>&organizationIds=<string>&statuses=<string>&statuses=<string>&productTypes=<string>&productTypes=<string>&skus=<string>&skus=<string>&name=<string>&lt=<dateTime>&gt=<dateTime>&lte=<dateTime>&gte=<dateTime>&neq=<dateTime>&lt=<dateTime>&gt=<dateTime>&lte=<dateTime>&gte=<dateTime>&neq=<dateTime>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"administered",
																		"licensing",
																		"subscription",
																		"subscriptions"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		},
																		{
																			"key": "subscriptionIds",
																			"value": "<string>"
																		},
																		{
																			"key": "subscriptionIds",
																			"value": "<string>"
																		},
																		{
																			"key": "organizationIds",
																			"value": "<string>"
																		},
																		{
																			"key": "organizationIds",
																			"value": "<string>"
																		},
																		{
																			"key": "statuses",
																			"value": "<string>"
																		},
																		{
																			"key": "statuses",
																			"value": "<string>"
																		},
																		{
																			"key": "productTypes",
																			"value": "<string>"
																		},
																		{
																			"key": "productTypes",
																			"value": "<string>"
																		},
																		{
																			"key": "skus",
																			"value": "<string>"
																		},
																		{
																			"key": "skus",
																			"value": "<string>"
																		},
																		{
																			"key": "name",
																			"value": "<string>"
																		},
																		{
																			"key": "lt",
																			"value": "<dateTime>"
																		},
																		{
																			"key": "gt",
																			"value": "<dateTime>"
																		},
																		{
																			"key": "lte",
																			"value": "<dateTime>"
																		},
																		{
																			"key": "gte",
																			"value": "<dateTime>"
																		},
																		{
																			"key": "neq",
																			"value": "<dateTime>"
																		},
																		{
																			"key": "lt",
																			"value": "<dateTime>"
																		},
																		{
																			"key": "gt",
																			"value": "<dateTime>"
																		},
																		{
																			"key": "lte",
																			"value": "<dateTime>"
																		},
																		{
																			"key": "gte",
																			"value": "<dateTime>"
																		},
																		{
																			"key": "neq",
																			"value": "<dateTime>"
																		}
																	],
																	"variable": [
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"subscriptionId\": \"2345\",\n    \"name\": \"Corporate subscription\",\n    \"description\": \"A description\",\n    \"status\": \"active\",\n    \"startDate\": \"2027-06-30T00:00:00Z\",\n    \"endDate\": \"2028-06-30T00:00:00Z\",\n    \"lastUpdatedAt\": \"2027-09-21T00:00:00Z\",\n    \"webOrderId\": \"55598764\",\n    \"type\": \"termed\",\n    \"smartAccount\": {\n      \"status\": \"active\",\n      \"account\": {\n        \"id\": \"99995678\",\n        \"name\": \"Corporate Smart Account\",\n        \"domain\": \"smart_account_domain\"\n      }\n    },\n    \"renewalRequested\": false,\n    \"productTypes\": [\n      \"wireless\"\n    ],\n    \"entitlements\": [\n      {\n        \"sku\": \"LIC-MS-400-L-A\",\n        \"webOrderLineId\": \"55551234\",\n        \"seats\": {\n          \"assigned\": 10,\n          \"available\": 15,\n          \"limit\": 25\n        }\n      }\n    ],\n    \"counts\": {\n      \"seats\": {\n        \"assigned\": 10,\n        \"available\": 15,\n        \"limit\": 25\n      },\n      \"networks\": 1,\n      \"organizations\": 1\n    },\n    \"enterpriseAgreement\": {\n      \"suites\": [\n        \"networking\"\n      ]\n    }\n  }\n]"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "sensor",
					"item": [
						{
							"name": "configure",
							"item": [
								{
									"name": "alerts",
									"item": [
										{
											"name": "profiles",
											"item": [
												{
													"name": "createNetworkSensorAlertsProfile",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"conditions\": [\n    {\n      \"metric\": \"<string>\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": \"<float>\",\n          \"fahrenheit\": \"<float>\",\n          \"quality\": \"<string>\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"co2\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"quality\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"realPower\": {\n          \"draw\": \"<float>\"\n        },\n        \"apparentPower\": {\n          \"draw\": \"<float>\"\n        },\n        \"powerFactor\": {\n          \"percentage\": \"<integer>\"\n        },\n        \"current\": {\n          \"draw\": \"<float>\"\n        },\n        \"voltage\": {\n          \"level\": \"<float>\"\n        },\n        \"frequency\": {\n          \"level\": \"<float>\"\n        },\n        \"upstreamPower\": {\n          \"outageDetected\": \"<boolean>\"\n        }\n      },\n      \"direction\": \"<string>\",\n      \"duration\": 0\n    },\n    {\n      \"metric\": \"<string>\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": \"<float>\",\n          \"fahrenheit\": \"<float>\",\n          \"quality\": \"<string>\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"co2\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"quality\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"realPower\": {\n          \"draw\": \"<float>\"\n        },\n        \"apparentPower\": {\n          \"draw\": \"<float>\"\n        },\n        \"powerFactor\": {\n          \"percentage\": \"<integer>\"\n        },\n        \"current\": {\n          \"draw\": \"<float>\"\n        },\n        \"voltage\": {\n          \"level\": \"<float>\"\n        },\n        \"frequency\": {\n          \"level\": \"<float>\"\n        },\n        \"upstreamPower\": {\n          \"outageDetected\": \"<boolean>\"\n        }\n      },\n      \"direction\": \"<string>\",\n      \"duration\": 0\n    }\n  ],\n  \"schedule\": {\n    \"id\": \"<string>\"\n  },\n  \"recipients\": {\n    \"emails\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"smsNumbers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"httpServerIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"includeSensorUrl\": true,\n  \"message\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sensor/alerts/profiles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sensor",
																"alerts",
																"profiles"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Creates a sensor alert profile for a network."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"conditions\": [\n    {\n      \"metric\": \"<string>\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": \"<float>\",\n          \"fahrenheit\": \"<float>\",\n          \"quality\": \"<string>\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"co2\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"quality\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"realPower\": {\n          \"draw\": \"<float>\"\n        },\n        \"apparentPower\": {\n          \"draw\": \"<float>\"\n        },\n        \"powerFactor\": {\n          \"percentage\": \"<integer>\"\n        },\n        \"current\": {\n          \"draw\": \"<float>\"\n        },\n        \"voltage\": {\n          \"level\": \"<float>\"\n        },\n        \"frequency\": {\n          \"level\": \"<float>\"\n        },\n        \"upstreamPower\": {\n          \"outageDetected\": \"<boolean>\"\n        }\n      },\n      \"direction\": \"<string>\",\n      \"duration\": 0\n    },\n    {\n      \"metric\": \"<string>\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": \"<float>\",\n          \"fahrenheit\": \"<float>\",\n          \"quality\": \"<string>\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"co2\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"quality\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"realPower\": {\n          \"draw\": \"<float>\"\n        },\n        \"apparentPower\": {\n          \"draw\": \"<float>\"\n        },\n        \"powerFactor\": {\n          \"percentage\": \"<integer>\"\n        },\n        \"current\": {\n          \"draw\": \"<float>\"\n        },\n        \"voltage\": {\n          \"level\": \"<float>\"\n        },\n        \"frequency\": {\n          \"level\": \"<float>\"\n        },\n        \"upstreamPower\": {\n          \"outageDetected\": \"<boolean>\"\n        }\n      },\n      \"direction\": \"<string>\",\n      \"duration\": 0\n    }\n  ],\n  \"schedule\": {\n    \"id\": \"<string>\"\n  },\n  \"recipients\": {\n    \"emails\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"smsNumbers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"httpServerIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"includeSensorUrl\": true,\n  \"message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/sensor/alerts/profiles",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"sensor",
																		"alerts",
																		"profiles"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"profileId\": \"1\",\n  \"name\": \"My Sensor Alert Profile\",\n  \"schedule\": {\n    \"id\": \"5\",\n    \"name\": \"My Schedule\"\n  },\n  \"conditions\": [\n    {\n      \"metric\": \"temperature\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": 20.5,\n          \"fahrenheit\": 70,\n          \"quality\": \"good\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": 65,\n          \"quality\": \"inadequate\"\n        },\n        \"water\": {\n          \"present\": true\n        },\n        \"door\": {\n          \"open\": true\n        },\n        \"tvoc\": {\n          \"concentration\": 400,\n          \"quality\": \"poor\"\n        },\n        \"co2\": {\n          \"concentration\": 400,\n          \"quality\": \"poor\"\n        },\n        \"pm25\": {\n          \"concentration\": 90,\n          \"quality\": \"fair\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": 120,\n            \"quality\": \"poor\"\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": 80,\n          \"quality\": \"fair\"\n        },\n        \"realPower\": {\n          \"draw\": 14.1\n        },\n        \"apparentPower\": {\n          \"draw\": 17.2\n        },\n        \"powerFactor\": {\n          \"percentage\": 81\n        },\n        \"current\": {\n          \"draw\": 0.14\n        },\n        \"voltage\": {\n          \"level\": 119.5\n        },\n        \"frequency\": {\n          \"level\": 58.8\n        },\n        \"upstreamPower\": {\n          \"outageDetected\": true\n        }\n      },\n      \"direction\": \"above\",\n      \"duration\": 60\n    }\n  ],\n  \"recipients\": {\n    \"emails\": [\n      \"miles@meraki.com\"\n    ],\n    \"smsNumbers\": [\n      \"+15555555555\"\n    ],\n    \"httpServerIds\": [\n      \"aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=\"\n    ]\n  },\n  \"serials\": [\n    \"Q234-ABCD-0001\",\n    \"Q234-ABCD-0002\",\n    \"Q234-ABCD-0003\"\n  ],\n  \"includeSensorUrl\": true,\n  \"message\": \"Check with Miles on what to do.\"\n}"
														}
													]
												},
												{
													"name": "deleteNetworkSensorAlertsProfile",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sensor/alerts/profiles/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sensor",
																"alerts",
																"profiles",
																":id"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "id",
																	"value": "",
																	"description": "(Required) ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Deletes a sensor alert profile from a network."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/sensor/alerts/profiles/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"sensor",
																		"alerts",
																		"profiles",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "getNetworkSensorAlertsProfile",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sensor/alerts/profiles/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sensor",
																"alerts",
																"profiles",
																":id"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "id",
																	"value": "",
																	"description": "(Required) ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Show details of a sensor alert profile for a network."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/sensor/alerts/profiles/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"sensor",
																		"alerts",
																		"profiles",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"profileId\": \"1\",\n  \"name\": \"My Sensor Alert Profile\",\n  \"schedule\": {\n    \"id\": \"5\",\n    \"name\": \"My Schedule\"\n  },\n  \"conditions\": [\n    {\n      \"metric\": \"temperature\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": 20.5,\n          \"fahrenheit\": 70,\n          \"quality\": \"good\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": 65,\n          \"quality\": \"inadequate\"\n        },\n        \"water\": {\n          \"present\": true\n        },\n        \"door\": {\n          \"open\": true\n        },\n        \"tvoc\": {\n          \"concentration\": 400,\n          \"quality\": \"poor\"\n        },\n        \"co2\": {\n          \"concentration\": 400,\n          \"quality\": \"poor\"\n        },\n        \"pm25\": {\n          \"concentration\": 90,\n          \"quality\": \"fair\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": 120,\n            \"quality\": \"poor\"\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": 80,\n          \"quality\": \"fair\"\n        },\n        \"realPower\": {\n          \"draw\": 14.1\n        },\n        \"apparentPower\": {\n          \"draw\": 17.2\n        },\n        \"powerFactor\": {\n          \"percentage\": 81\n        },\n        \"current\": {\n          \"draw\": 0.14\n        },\n        \"voltage\": {\n          \"level\": 119.5\n        },\n        \"frequency\": {\n          \"level\": 58.8\n        },\n        \"upstreamPower\": {\n          \"outageDetected\": true\n        }\n      },\n      \"direction\": \"above\",\n      \"duration\": 60\n    }\n  ],\n  \"recipients\": {\n    \"emails\": [\n      \"miles@meraki.com\"\n    ],\n    \"smsNumbers\": [\n      \"+15555555555\"\n    ],\n    \"httpServerIds\": [\n      \"aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=\"\n    ]\n  },\n  \"serials\": [\n    \"Q234-ABCD-0001\",\n    \"Q234-ABCD-0002\",\n    \"Q234-ABCD-0003\"\n  ],\n  \"includeSensorUrl\": true,\n  \"message\": \"Check with Miles on what to do.\"\n}"
														}
													]
												},
												{
													"name": "getNetworkSensorAlertsProfiles",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sensor/alerts/profiles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sensor",
																"alerts",
																"profiles"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Lists all sensor alert profiles for a network."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/sensor/alerts/profiles",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"sensor",
																		"alerts",
																		"profiles"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"profileId\": \"1\",\n    \"name\": \"My Sensor Alert Profile\",\n    \"schedule\": {\n      \"id\": \"5\",\n      \"name\": \"My Schedule\"\n    },\n    \"conditions\": [\n      {\n        \"metric\": \"temperature\",\n        \"threshold\": {\n          \"temperature\": {\n            \"celsius\": 20.5,\n            \"fahrenheit\": 70,\n            \"quality\": \"good\"\n          },\n          \"humidity\": {\n            \"relativePercentage\": 65,\n            \"quality\": \"inadequate\"\n          },\n          \"water\": {\n            \"present\": true\n          },\n          \"door\": {\n            \"open\": true\n          },\n          \"tvoc\": {\n            \"concentration\": 400,\n            \"quality\": \"poor\"\n          },\n          \"co2\": {\n            \"concentration\": 400,\n            \"quality\": \"poor\"\n          },\n          \"pm25\": {\n            \"concentration\": 90,\n            \"quality\": \"fair\"\n          },\n          \"noise\": {\n            \"ambient\": {\n              \"level\": 120,\n              \"quality\": \"poor\"\n            }\n          },\n          \"indoorAirQuality\": {\n            \"score\": 80,\n            \"quality\": \"fair\"\n          },\n          \"realPower\": {\n            \"draw\": 14.1\n          },\n          \"apparentPower\": {\n            \"draw\": 17.2\n          },\n          \"powerFactor\": {\n            \"percentage\": 81\n          },\n          \"current\": {\n            \"draw\": 0.14\n          },\n          \"voltage\": {\n            \"level\": 119.5\n          },\n          \"frequency\": {\n            \"level\": 58.8\n          },\n          \"upstreamPower\": {\n            \"outageDetected\": true\n          }\n        },\n        \"direction\": \"above\",\n        \"duration\": 60\n      }\n    ],\n    \"recipients\": {\n      \"emails\": [\n        \"miles@meraki.com\"\n      ],\n      \"smsNumbers\": [\n        \"+15555555555\"\n      ],\n      \"httpServerIds\": [\n        \"aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=\"\n      ]\n    },\n    \"serials\": [\n      \"Q234-ABCD-0001\",\n      \"Q234-ABCD-0002\",\n      \"Q234-ABCD-0003\"\n    ],\n    \"includeSensorUrl\": true,\n    \"message\": \"Check with Miles on what to do.\"\n  }\n]"
														}
													]
												},
												{
													"name": "updateNetworkSensorAlertsProfile",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"schedule\": {\n    \"id\": \"<string>\"\n  },\n  \"conditions\": [\n    {\n      \"metric\": \"<string>\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": \"<float>\",\n          \"fahrenheit\": \"<float>\",\n          \"quality\": \"<string>\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"co2\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"quality\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"realPower\": {\n          \"draw\": \"<float>\"\n        },\n        \"apparentPower\": {\n          \"draw\": \"<float>\"\n        },\n        \"powerFactor\": {\n          \"percentage\": \"<integer>\"\n        },\n        \"current\": {\n          \"draw\": \"<float>\"\n        },\n        \"voltage\": {\n          \"level\": \"<float>\"\n        },\n        \"frequency\": {\n          \"level\": \"<float>\"\n        },\n        \"upstreamPower\": {\n          \"outageDetected\": \"<boolean>\"\n        }\n      },\n      \"direction\": \"<string>\",\n      \"duration\": 0\n    },\n    {\n      \"metric\": \"<string>\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": \"<float>\",\n          \"fahrenheit\": \"<float>\",\n          \"quality\": \"<string>\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"co2\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"quality\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"realPower\": {\n          \"draw\": \"<float>\"\n        },\n        \"apparentPower\": {\n          \"draw\": \"<float>\"\n        },\n        \"powerFactor\": {\n          \"percentage\": \"<integer>\"\n        },\n        \"current\": {\n          \"draw\": \"<float>\"\n        },\n        \"voltage\": {\n          \"level\": \"<float>\"\n        },\n        \"frequency\": {\n          \"level\": \"<float>\"\n        },\n        \"upstreamPower\": {\n          \"outageDetected\": \"<boolean>\"\n        }\n      },\n      \"direction\": \"<string>\",\n      \"duration\": 0\n    }\n  ],\n  \"recipients\": {\n    \"emails\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"smsNumbers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"httpServerIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"includeSensorUrl\": \"<boolean>\",\n  \"message\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sensor/alerts/profiles/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sensor",
																"alerts",
																"profiles",
																":id"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "id",
																	"value": "",
																	"description": "(Required) ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Updates a sensor alert profile for a network."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"schedule\": {\n    \"id\": \"<string>\"\n  },\n  \"conditions\": [\n    {\n      \"metric\": \"<string>\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": \"<float>\",\n          \"fahrenheit\": \"<float>\",\n          \"quality\": \"<string>\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"co2\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"quality\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"realPower\": {\n          \"draw\": \"<float>\"\n        },\n        \"apparentPower\": {\n          \"draw\": \"<float>\"\n        },\n        \"powerFactor\": {\n          \"percentage\": \"<integer>\"\n        },\n        \"current\": {\n          \"draw\": \"<float>\"\n        },\n        \"voltage\": {\n          \"level\": \"<float>\"\n        },\n        \"frequency\": {\n          \"level\": \"<float>\"\n        },\n        \"upstreamPower\": {\n          \"outageDetected\": \"<boolean>\"\n        }\n      },\n      \"direction\": \"<string>\",\n      \"duration\": 0\n    },\n    {\n      \"metric\": \"<string>\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": \"<float>\",\n          \"fahrenheit\": \"<float>\",\n          \"quality\": \"<string>\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"co2\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"quality\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\",\n          \"quality\": \"<string>\"\n        },\n        \"realPower\": {\n          \"draw\": \"<float>\"\n        },\n        \"apparentPower\": {\n          \"draw\": \"<float>\"\n        },\n        \"powerFactor\": {\n          \"percentage\": \"<integer>\"\n        },\n        \"current\": {\n          \"draw\": \"<float>\"\n        },\n        \"voltage\": {\n          \"level\": \"<float>\"\n        },\n        \"frequency\": {\n          \"level\": \"<float>\"\n        },\n        \"upstreamPower\": {\n          \"outageDetected\": \"<boolean>\"\n        }\n      },\n      \"direction\": \"<string>\",\n      \"duration\": 0\n    }\n  ],\n  \"recipients\": {\n    \"emails\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"smsNumbers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"httpServerIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"includeSensorUrl\": \"<boolean>\",\n  \"message\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/sensor/alerts/profiles/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"sensor",
																		"alerts",
																		"profiles",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "id",
																			"value": "<string>",
																			"description": "(Required) ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"profileId\": \"1\",\n  \"name\": \"My Sensor Alert Profile\",\n  \"schedule\": {\n    \"id\": \"5\",\n    \"name\": \"My Schedule\"\n  },\n  \"conditions\": [\n    {\n      \"metric\": \"temperature\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": 20.5,\n          \"fahrenheit\": 70,\n          \"quality\": \"good\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": 65,\n          \"quality\": \"inadequate\"\n        },\n        \"water\": {\n          \"present\": true\n        },\n        \"door\": {\n          \"open\": true\n        },\n        \"tvoc\": {\n          \"concentration\": 400,\n          \"quality\": \"poor\"\n        },\n        \"co2\": {\n          \"concentration\": 400,\n          \"quality\": \"poor\"\n        },\n        \"pm25\": {\n          \"concentration\": 90,\n          \"quality\": \"fair\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": 120,\n            \"quality\": \"poor\"\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": 80,\n          \"quality\": \"fair\"\n        },\n        \"realPower\": {\n          \"draw\": 14.1\n        },\n        \"apparentPower\": {\n          \"draw\": 17.2\n        },\n        \"powerFactor\": {\n          \"percentage\": 81\n        },\n        \"current\": {\n          \"draw\": 0.14\n        },\n        \"voltage\": {\n          \"level\": 119.5\n        },\n        \"frequency\": {\n          \"level\": 58.8\n        },\n        \"upstreamPower\": {\n          \"outageDetected\": true\n        }\n      },\n      \"direction\": \"above\",\n      \"duration\": 60\n    }\n  ],\n  \"recipients\": {\n    \"emails\": [\n      \"miles@meraki.com\"\n    ],\n    \"smsNumbers\": [\n      \"+15555555555\"\n    ],\n    \"httpServerIds\": [\n      \"aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=\"\n    ]\n  },\n  \"serials\": [\n    \"Q234-ABCD-0001\",\n    \"Q234-ABCD-0002\",\n    \"Q234-ABCD-0003\"\n  ],\n  \"includeSensorUrl\": true,\n  \"message\": \"Check with Miles on what to do.\"\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "commands",
									"item": [
										{
											"name": "createDeviceSensorCommand",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"operation\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/sensor/commands",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"sensor",
														"commands"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Sends a command to a sensor"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"operation\": \"disableDownstreamPower\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/sensor/commands",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"sensor",
																"commands"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"commandId\": \"1284392014819\",\n  \"createdAt\": \"2018-02-11T00:00:00Z\",\n  \"completedAt\": \"2018-05-12T00:00:00Z\",\n  \"createdBy\": {\n    \"adminId\": \"212406\",\n    \"name\": \"Miles Meraki\",\n    \"email\": \"miles@meraki.com\"\n  },\n  \"operation\": \"disableDownstreamPower\",\n  \"status\": \"completed\",\n  \"errors\": []\n}"
												}
											]
										},
										{
											"name": "getDeviceSensorCommand",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/sensor/commands/:commandId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"sensor",
														"commands",
														":commandId"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "commandId",
															"value": "{{commandId}}",
															"description": "(Required) Command ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Returns information about the command's execution, including the status"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/sensor/commands/:commandId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"sensor",
																"commands",
																":commandId"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "commandId",
																	"value": "<string>",
																	"description": "(Required) Command ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"commandId\": \"1284392014819\",\n  \"createdAt\": \"2018-02-11T00:00:00Z\",\n  \"completedAt\": \"2018-05-12T00:00:00Z\",\n  \"createdBy\": {\n    \"adminId\": \"212406\",\n    \"name\": \"Miles Meraki\",\n    \"email\": \"miles@meraki.com\"\n  },\n  \"operation\": \"disableDownstreamPower\",\n  \"status\": \"completed\",\n  \"errors\": []\n}"
												}
											]
										},
										{
											"name": "getDeviceSensorCommands",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/sensor/commands",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"sensor",
														"commands"
													],
													"query": [
														{
															"key": "operations",
															"value": "{{operations}}",
															"description": "Optional parameter to filter commands by operation. Allowed values are disableDownstreamPower, enableDownstreamPower, cycleDownstreamPower, and refreshData.",
															"disabled": true
														},
														{
															"key": "operations",
															"value": "{{operations}}",
															"description": "Optional parameter to filter commands by operation. Allowed values are disableDownstreamPower, enableDownstreamPower, cycleDownstreamPower, and refreshData.",
															"disabled": true
														},
														{
															"key": "perPage",
															"value": "{{perPage}}",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10.",
															"disabled": true
														},
														{
															"key": "startingAfter",
															"value": "{{startingAfter}}",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "endingBefore",
															"value": "{{endingBefore}}",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "sortOrder",
															"value": "{{sortOrder}}",
															"description": "Sorted order of entries. Order options are 'ascending' and 'descending'. Default is 'descending'.",
															"disabled": true
														},
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 30 days from today.",
															"disabled": true
														},
														{
															"key": "t1",
															"value": "{{t1}}",
															"description": "The end of the timespan for the data. t1 can be a maximum of 30 days after t0.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 30 days. The default is 30 days.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Returns a historical log of all commands"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/sensor/commands?operations=<string>&operations=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&sortOrder=<string>&t0=<string>&t1=<string>&timespan=<float>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"sensor",
																"commands"
															],
															"query": [
																{
																	"key": "operations",
																	"value": "<string>"
																},
																{
																	"key": "operations",
																	"value": "<string>"
																},
																{
																	"key": "perPage",
																	"value": "<integer>"
																},
																{
																	"key": "startingAfter",
																	"value": "<string>"
																},
																{
																	"key": "endingBefore",
																	"value": "<string>"
																},
																{
																	"key": "sortOrder",
																	"value": "<string>"
																},
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "t1",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																}
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Link",
															"value": "Lorem nisi fugiat",
															"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"commandId\": \"1284392014819\",\n    \"createdAt\": \"2018-02-11T00:00:00Z\",\n    \"completedAt\": \"2018-05-12T00:00:00Z\",\n    \"createdBy\": {\n      \"adminId\": \"212406\",\n      \"name\": \"Miles Meraki\",\n      \"email\": \"miles@meraki.com\"\n    },\n    \"operation\": \"disableDownstreamPower\",\n    \"status\": \"completed\",\n    \"errors\": []\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "mqttBrokers",
									"item": [
										{
											"name": "getNetworkSensorMqttBroker",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sensor/mqttBrokers/:mqttBrokerId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sensor",
														"mqttBrokers",
														":mqttBrokerId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "mqttBrokerId",
															"value": "{{mqttBrokerId}}",
															"description": "(Required) Mqtt broker ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the sensor settings of an MQTT broker. To get the broker itself, use /networks/{networkId}/mqttBrokers/{mqttBrokerId}."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sensor/mqttBrokers/:mqttBrokerId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sensor",
																"mqttBrokers",
																":mqttBrokerId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "mqttBrokerId",
																	"value": "<string>",
																	"description": "(Required) Mqtt broker ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"mqttBrokerId\": \"1234\",\n  \"enabled\": true\n}"
												}
											]
										},
										{
											"name": "getNetworkSensorMqttBrokers",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sensor/mqttBrokers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sensor",
														"mqttBrokers"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the sensor settings of all MQTT brokers for this network. To get the brokers themselves, use /networks/{networkId}/mqttBrokers."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sensor/mqttBrokers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sensor",
																"mqttBrokers"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"mqttBrokerId\": \"1234\",\n    \"enabled\": true\n  }\n]"
												}
											]
										},
										{
											"name": "updateNetworkSensorMqttBroker",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sensor/mqttBrokers/:mqttBrokerId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sensor",
														"mqttBrokers",
														":mqttBrokerId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "mqttBrokerId",
															"value": "{{mqttBrokerId}}",
															"description": "(Required) Mqtt broker ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the sensor settings of an MQTT broker. To update the broker itself, use /networks/{networkId}/mqttBrokers/{mqttBrokerId}."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"mqttBrokerId\": \"1234\",\n  \"enabled\": true\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sensor/mqttBrokers/:mqttBrokerId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sensor",
																"mqttBrokers",
																":mqttBrokerId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "mqttBrokerId",
																	"value": "<string>",
																	"description": "(Required) Mqtt broker ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"mqttBrokerId\": \"1234\",\n  \"enabled\": true\n}"
												}
											]
										}
									]
								},
								{
									"name": "relationships",
									"item": [
										{
											"name": "getDeviceSensorRelationships",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/sensor/relationships",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"sensor",
														"relationships"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the sensor roles for a given sensor or camera device."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/sensor/relationships",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"sensor",
																"relationships"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"livestream\": {\n    \"relatedDevices\": [\n      {\n        \"serial\": \"Q234-ABCD-5678\",\n        \"productType\": \"camera\"\n      }\n    ]\n  }\n}"
												}
											]
										},
										{
											"name": "getNetworkSensorRelationships",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sensor/relationships",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sensor",
														"relationships"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the sensor roles for devices in a given network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sensor/relationships",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sensor",
																"relationships"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"device\": {\n      \"name\": \"My sensor\",\n      \"serial\": \"Q234-ABCD-0001\",\n      \"productType\": \"sensor\"\n    },\n    \"relationships\": {\n      \"livestream\": {\n        \"relatedDevices\": [\n          {\n            \"serial\": \"Q234-ABCD-5678\",\n            \"productType\": \"camera\"\n          }\n        ]\n      }\n    }\n  }\n]"
												}
											]
										},
										{
											"name": "updateDeviceSensorRelationships",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"livestream\": {\n    \"relatedDevices\": [\n      {\n        \"serial\": \"<string>\"\n      },\n      {\n        \"serial\": \"<string>\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/sensor/relationships",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"sensor",
														"relationships"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Assign one or more sensor roles to a given sensor or camera device."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/sensor/relationships",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"sensor",
																"relationships"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"livestream\": {\n    \"relatedDevices\": [\n      {\n        \"serial\": \"Q234-ABCD-5678\",\n        \"productType\": \"camera\"\n      }\n    ]\n  }\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "monitor",
							"item": [
								{
									"name": "alerts",
									"item": [
										{
											"name": "current",
											"item": [
												{
													"name": "overview",
													"item": [
														{
															"name": "byMetric",
															"item": [
																{
																	"name": "getNetworkSensorAlertsCurrentOverviewByMetric",
																	"protocolProfileBehavior": {
																		"followAuthorizationHeader": false
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/sensor/alerts/current/overview/byMetric",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"sensor",
																				"alerts",
																				"current",
																				"overview",
																				"byMetric"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "{{networkId}}",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		},
																		"description": "Return an overview of currently alerting sensors by metric"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/networks/:networkId/sensor/alerts/current/overview/byMetric",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"networks",
																						":networkId",
																						"sensor",
																						"alerts",
																						"current",
																						"overview",
																						"byMetric"
																					],
																					"variable": [
																						{
																							"key": "networkId",
																							"value": "<string>",
																							"description": "(Required) Network ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"supportedMetrics\": [\n    \"temperature\",\n    \"humidity\",\n    \"door\"\n  ],\n  \"counts\": {\n    \"apparentPower\": 0,\n    \"co2\": 0,\n    \"current\": 0,\n    \"door\": 0,\n    \"frequency\": 0,\n    \"humidity\": 1,\n    \"indoorAirQuality\": 0,\n    \"noise\": {\n      \"ambient\": 0\n    },\n    \"pm25\": 0,\n    \"powerFactor\": 0,\n    \"realPower\": 0,\n    \"temperature\": 4,\n    \"tvoc\": 0,\n    \"upstreamPower\": 0,\n    \"voltage\": 0,\n    \"water\": 0\n  }\n}"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "overview",
											"item": [
												{
													"name": "byMetric",
													"item": [
														{
															"name": "getNetworkSensorAlertsOverviewByMetric",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/sensor/alerts/overview/byMetric",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"sensor",
																		"alerts",
																		"overview",
																		"byMetric"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "{{t0}}",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 731 days from today.",
																			"disabled": true
																		},
																		{
																			"key": "t1",
																			"value": "{{t1}}",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 366 days after t0.",
																			"disabled": true
																		},
																		{
																			"key": "timespan",
																			"value": "{{timespan}}",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 366 days. The default is 7 days. If interval is provided, the timespan will be autocalculated.",
																			"disabled": true
																		},
																		{
																			"key": "interval",
																			"value": "{{interval}}",
																			"description": "The time interval in seconds for returned data. The valid intervals are: 900, 3600, 86400, 604800, 2592000. The default is 604800. Interval is calculated if time params are provided.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Return an overview of alert occurrences over a timespan, by metric"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/sensor/alerts/overview/byMetric?t0=<string>&t1=<string>&timespan=<float>&interval=<integer>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"sensor",
																				"alerts",
																				"overview",
																				"byMetric"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>"
																				},
																				{
																					"key": "t1",
																					"value": "<string>"
																				},
																				{
																					"key": "timespan",
																					"value": "<float>"
																				},
																				{
																					"key": "interval",
																					"value": "<integer>"
																				}
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"startTs\": \"2022-08-21T00:00:00Z\",\n    \"endTs\": \"2022-08-27T23:59:59Z\",\n    \"counts\": {\n      \"apparentPower\": 0,\n      \"co2\": 0,\n      \"current\": 0,\n      \"door\": 0,\n      \"frequency\": 1,\n      \"humidity\": 1,\n      \"indoorAirQuality\": 0,\n      \"noise\": {\n        \"ambient\": 2\n      },\n      \"pm25\": 0,\n      \"powerFactor\": 0,\n      \"realPower\": 0,\n      \"temperature\": 4,\n      \"tvoc\": 0,\n      \"upstreamPower\": 0,\n      \"voltage\": 0,\n      \"water\": 0\n    }\n  }\n]"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "readings",
									"item": [
										{
											"name": "history",
											"item": [
												{
													"name": "getOrganizationSensorReadingsHistory",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/sensor/readings/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"sensor",
																"readings",
																"history"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "t0",
																	"value": "{{t0}}",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days and 6 hours from today.",
																	"disabled": true
																},
																{
																	"key": "t1",
																	"value": "{{t1}}",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
																	"disabled": true
																},
																{
																	"key": "timespan",
																	"value": "{{timespan}}",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 2 hours.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Optional parameter to filter readings by network.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Optional parameter to filter readings by network.",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Optional parameter to filter readings by sensor.",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Optional parameter to filter readings by sensor.",
																	"disabled": true
																},
																{
																	"key": "metrics",
																	"value": "{{metrics}}",
																	"description": "Types of sensor readings to retrieve. If no metrics are supplied, all available types of readings will be retrieved.",
																	"disabled": true
																},
																{
																	"key": "metrics",
																	"value": "{{metrics}}",
																	"description": "Types of sensor readings to retrieve. If no metrics are supplied, all available types of readings will be retrieved.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return all reported readings from sensors in a given timespan, sorted by timestamp"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/sensor/readings/history?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>&networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&metrics=<string>&metrics=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"sensor",
																		"readings",
																		"history"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		},
																		{
																			"key": "t0",
																			"value": "<string>"
																		},
																		{
																			"key": "t1",
																			"value": "<string>"
																		},
																		{
																			"key": "timespan",
																			"value": "<float>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "metrics",
																			"value": "<string>"
																		},
																		{
																			"key": "metrics",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"serial\": \"Q234-ABCD-5678\",\n    \"network\": {\n      \"id\": \"N_24329156\",\n      \"name\": \"Main Office\"\n    },\n    \"ts\": \"2021-10-18T23:54:48.000000Z\",\n    \"metric\": \"temperature\",\n    \"apparentPower\": {\n      \"draw\": 15.9\n    },\n    \"battery\": {\n      \"percentage\": 91\n    },\n    \"button\": {\n      \"pressType\": \"short\"\n    },\n    \"co2\": {\n      \"concentration\": 100\n    },\n    \"current\": {\n      \"draw\": 0.13\n    },\n    \"door\": {\n      \"open\": true\n    },\n    \"downstreamPower\": {\n      \"enabled\": true\n    },\n    \"frequency\": {\n      \"level\": 60.1\n    },\n    \"humidity\": {\n      \"relativePercentage\": 34\n    },\n    \"indoorAirQuality\": {\n      \"score\": 89\n    },\n    \"noise\": {\n      \"ambient\": {\n        \"level\": 45\n      }\n    },\n    \"pm25\": {\n      \"concentration\": 100\n    },\n    \"powerFactor\": {\n      \"percentage\": 86\n    },\n    \"realPower\": {\n      \"draw\": 13.7\n    },\n    \"remoteLockoutSwitch\": {\n      \"locked\": false\n    },\n    \"temperature\": {\n      \"fahrenheit\": 77.81,\n      \"celsius\": 25.45\n    },\n    \"tvoc\": {\n      \"concentration\": 100\n    },\n    \"voltage\": {\n      \"level\": 122.4\n    },\n    \"water\": {\n      \"present\": true\n    }\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "latest",
											"item": [
												{
													"name": "getOrganizationSensorReadingsLatest",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/sensor/readings/latest",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"sensor",
																"readings",
																"latest"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Optional parameter to filter readings by network.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Optional parameter to filter readings by network.",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Optional parameter to filter readings by sensor.",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Optional parameter to filter readings by sensor.",
																	"disabled": true
																},
																{
																	"key": "metrics",
																	"value": "{{metrics}}",
																	"description": "Types of sensor readings to retrieve. If no metrics are supplied, all available types of readings will be retrieved.",
																	"disabled": true
																},
																{
																	"key": "metrics",
																	"value": "{{metrics}}",
																	"description": "Types of sensor readings to retrieve. If no metrics are supplied, all available types of readings will be retrieved.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the latest available reading for each metric from each sensor, sorted by sensor serial"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/sensor/readings/latest?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&metrics=<string>&metrics=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"sensor",
																		"readings",
																		"latest"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "metrics",
																			"value": "<string>"
																		},
																		{
																			"key": "metrics",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"serial\": \"Q234-ABCD-5678\",\n    \"network\": {\n      \"id\": \"N_24329156\",\n      \"name\": \"Main Office\"\n    },\n    \"readings\": [\n      {\n        \"ts\": \"2021-10-18T23:54:48.000000Z\",\n        \"metric\": \"temperature\",\n        \"apparentPower\": {\n          \"draw\": 15.9\n        },\n        \"battery\": {\n          \"percentage\": 91\n        },\n        \"button\": {\n          \"pressType\": \"short\"\n        },\n        \"co2\": {\n          \"concentration\": 100\n        },\n        \"current\": {\n          \"draw\": 0.13\n        },\n        \"door\": {\n          \"open\": true\n        },\n        \"downstreamPower\": {\n          \"enabled\": true\n        },\n        \"frequency\": {\n          \"level\": 60.1\n        },\n        \"humidity\": {\n          \"relativePercentage\": 34\n        },\n        \"indoorAirQuality\": {\n          \"score\": 89\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": 45\n          }\n        },\n        \"pm25\": {\n          \"concentration\": 100\n        },\n        \"powerFactor\": {\n          \"percentage\": 86\n        },\n        \"realPower\": {\n          \"draw\": 13.7\n        },\n        \"remoteLockoutSwitch\": {\n          \"locked\": false\n        },\n        \"temperature\": {\n          \"fahrenheit\": 77.81,\n          \"celsius\": 25.45\n        },\n        \"tvoc\": {\n          \"concentration\": 100\n        },\n        \"voltage\": {\n          \"level\": 122.4\n        },\n        \"water\": {\n          \"present\": true\n        }\n      }\n    ]\n  }\n]"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "sm",
					"item": [
						{
							"name": "configure",
							"item": [
								{
									"name": "admins",
									"item": [
										{
											"name": "roles",
											"item": [
												{
													"name": "createOrganizationSmAdminsRole",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"scope\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/sm/admins/roles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"sm",
																"admins",
																"roles"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Create a Limited Access Role"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"scope\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/sm/admins/roles",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"sm",
																		"admins",
																		"roles"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"roleId\": \"1284392014819\",\n  \"name\": \"sample name\",\n  \"scope\": \"all_tags\",\n  \"tags\": [\n    \"tag\"\n  ]\n}"
														}
													]
												},
												{
													"name": "deleteOrganizationSmAdminsRole",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/sm/admins/roles/:roleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"sm",
																"admins",
																"roles",
																":roleId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "roleId",
																	"value": "{{roleId}}",
																	"description": "(Required) Role ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Delete a Limited Access Role"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/sm/admins/roles/:roleId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"sm",
																		"admins",
																		"roles",
																		":roleId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "roleId",
																			"value": "<string>",
																			"description": "(Required) Role ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "getOrganizationSmAdminsRole",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/sm/admins/roles/:roleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"sm",
																"admins",
																"roles",
																":roleId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "roleId",
																	"value": "{{roleId}}",
																	"description": "(Required) Role ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return a Limited Access Role"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/sm/admins/roles/:roleId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"sm",
																		"admins",
																		"roles",
																		":roleId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "roleId",
																			"value": "<string>",
																			"description": "(Required) Role ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"roleId\": \"1284392014819\",\n  \"name\": \"sample name\",\n  \"scope\": \"all_tags\",\n  \"tags\": [\n    \"tag\"\n  ]\n}"
														}
													]
												},
												{
													"name": "getOrganizationSmAdminsRoles",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/sm/admins/roles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"sm",
																"admins",
																"roles"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the Limited Access Roles for an organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/sm/admins/roles?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"sm",
																		"admins",
																		"roles"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": [\n    {\n      \"roleId\": \"1284392014819\",\n      \"name\": \"sample name\",\n      \"scope\": \"all_tags\",\n      \"tags\": [\n        \"tag\"\n      ]\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 10,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
														}
													]
												},
												{
													"name": "updateOrganizationSmAdminsRole",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"scope\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/sm/admins/roles/:roleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"sm",
																"admins",
																"roles",
																":roleId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "roleId",
																	"value": "{{roleId}}",
																	"description": "(Required) Role ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update a Limited Access Role"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"scope\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/sm/admins/roles/:roleId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"sm",
																		"admins",
																		"roles",
																		":roleId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "roleId",
																			"value": "<string>",
																			"description": "(Required) Role ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"roleId\": \"1284392014819\",\n  \"name\": \"sample name\",\n  \"scope\": \"all_tags\",\n  \"tags\": [\n    \"tag\"\n  ]\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "apnsCert",
									"item": [
										{
											"name": "getOrganizationSmApnsCert",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/sm/apnsCert",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"sm",
														"apnsCert"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Get the organization's APNS certificate"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/sm/apnsCert",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"sm",
																"apnsCert"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"certificate\": \"          -----BEGIN CERTIFICATE-----\\n          MIIFdjCCBF6gAwIBAgIIM/hhf5ww8MwwDQYJKoZIhvcNAQELBQAwgYwxQDA+BgNV\\n          BAMMN0FwcGxlIEFwcGxpY2F0aW9uIEludGVncmF0aW9uIDIgQ2VydGlmaWNhdGlv\\n          biBBdXRob3JpdHkxJjAkBgNVBAsMHUFwcGxlIENlcnRpZmljYXRpb24gQXV0aG9y\\n          aXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUzAeFw0yMDAyMjYx\\n          ODIzNDJaFw0yMTAyMjUxODIzNDJaMIGPMUwwSgYKCZImiZPyLGQBAQw8Y29tLmFw\\n          cGxlLm1nbXQuRXh0ZXJuYWwuOTA3NDJhYmYtZDhhZC00MTc2LTllZmQtMGNiMzg1\\n          MTM1MGM0MTIwMAYDVQQDDClBUFNQOjkwNzQyYWJmLWQ4YWQtNDE3Ni05ZWZkLTBj\\n          YjM4NTEzNTBjNDELMAkGA1UEBhMCVVMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw\\n          ggEKAoIBAQDANdpo62hfxkP1IpMPXuO1+xKekUkY+iYae6cRaP886bodUaH1OwCj\\n          Qd011u9Vng6m8I9rcLdIOS+IkFGKcTAHRYY3noqfEQUPyi5TN6yM1/mVYVoWZUnY\\n          TrNWqDN/HfRagdYfZyQ7kAtOY2K8TF78HLLqQm7ez2+r4qibumoSli9+qCzKwDW/\\n          hbx7JTeMlbYkhLTFgBkRxlp+usKymsLKm8D7kdbxtct4mx6p9z1FiNu4U1Hi/PgK\\n          I/V3zHD4Ww7SzTICiLdCPeAmt042JvXAMQi0qhzrEdDiapmWwUC9xiiORN0BTIRA\\n          T+DddTx8Xcly4wj9vQFdGUGLrJnzB3xZAgMBAAGjggHVMIIB0TAJBgNVHRMEAjAA\\n          MB8GA1UdIwQYMBaAFPe+fCFgkds9G3vYOjKBad+ebH+bMIIBHAYDVR0gBIIBEzCC\\n          AQ8wggELBgkqhkiG92NkBQEwgf0wgcMGCCsGAQUFBwICMIG2DIGzUmVsaWFuY2Ug\\n          b24gdGhpcyBjZXJ0aWZpY2F0ZSBieSBhbnkgcGFydHkgYXNzdW1lcyBhY2NlcHRh\\n          bmNlIG9mIHRoZSB0aGVuIGFwcGxpY2FibGUgc3RhbmRhcmQgdGVybXMgYW5kIGNv\\n          bmRpdGlvbnMgb2YgdXNlLCBjZXJ0aWZpY2F0ZSBwb2xpY3kgYW5kIGNlcnRpZmlj\\n          YXRpb24gcHJhY3RpY2Ugc3RhdGVtZW50cy4wNQYIKwYBBQUHAgEWKWh0dHA6Ly93\\n          d3cuYXBwbGUuY29tL2NlcnRpZmljYXRlYXV0aG9yaXR5MBMGA1UdJQQMMAoGCCsG\\n          AQUFBwMCMDAGA1UdHwQpMCcwJaAjoCGGH2h0dHA6Ly9jcmwuYXBwbGUuY29tL2Fh\\n          aTJjYS5jcmwwHQYDVR0OBBYEFDj4Jizt9bQX7dn3ypIanvaNIy8fMAsGA1UdDwQE\\n          AwIHgDAQBgoqhkiG92NkBgMCBAIFADANBgkqhkiG9w0BAQsFAAOCAQEARmLmy4Mh\\n          80hTBHMj2whrC2LR0dIe2ngAUwYGSocyPZOzlGZYntUvpsNGwflbWSPNxFpVF15z\\n          exEcLPKM4f9KGdM27s/m/x1Es2us9Vve+wS+N0C84zMC++FJBIxj3yAINXqSpYJv\\n          bA5wccHlzP9F9Ks7sVNQB8y0mibYahtxVV959gC4522t5SRaEEsd82oTCtXE2Ljg\\n          fQ1IAmWi4MuMSPwp26oDSwun8Wxyx+sfi/it9YWxD36Ga9mrfIjK1WIHyhge0HHr\\n          olnvMfxgwI9E5gGV/4bQzPlmsHdz+/pLupWMkALaAxI9D7ajUG7iyyjJBCOpsr1s\\n          FjDvo6WUkaqMHA==\\n          -----END CERTIFICATE-----\\n\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "bypassActivationLockAttempts",
									"item": [
										{
											"name": "createNetworkSmBypassActivationLockAttempt",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/bypassActivationLockAttempts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"bypassActivationLockAttempts"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Bypass activation lock attempt"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ids\": [\n    \"1284392014819\",\n    \"2983092129865\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/bypassActivationLockAttempts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"bypassActivationLockAttempts"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"status\": \"pending\",\n  \"data\": {}\n}"
												}
											]
										},
										{
											"name": "getNetworkSmBypassActivationLockAttempt",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/bypassActivationLockAttempts/:attemptId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"bypassActivationLockAttempts",
														":attemptId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "attemptId",
															"value": "{{attemptId}}",
															"description": "(Required) Attempt ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Bypass activation lock attempt status"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/bypassActivationLockAttempts/:attemptId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"bypassActivationLockAttempts",
																":attemptId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "attemptId",
																	"value": "<string>",
																	"description": "(Required) Attempt ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"status\": \"complete\",\n  \"data\": {\n    \"2090938209\": {\n      \"success\": false,\n      \"errors\": [\n        \"Activation lock bypass code not known for this device\"\n      ]\n    },\n    \"38290139892\": {\n      \"success\": true\n    }\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "deviceProfiles",
									"item": [
										{
											"name": "getNetworkSmUserDeviceProfiles",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/users/:userId/deviceProfiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"users",
														":userId",
														"deviceProfiles"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "userId",
															"value": "{{userId}}",
															"description": "(Required) User ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Get the profiles associated with a user"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/users/:userId/deviceProfiles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"users",
																":userId",
																"deviceProfiles"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "userId",
																	"value": "<string>",
																	"description": "(Required) User ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"deviceId\": \"1234\",\n    \"id\": \"1284392014819\",\n    \"isEncrypted\": true,\n    \"isManaged\": true,\n    \"profileData\": \"{}\",\n    \"profileIdentifier\": \"com.test.app\",\n    \"name\": \"My profile\",\n    \"version\": \"0.0.1\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "devices",
									"item": [
										{
											"name": "certs",
											"item": [
												{
													"name": "getNetworkSmDeviceCerts",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/certs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices",
																":deviceId",
																"certs"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "deviceId",
																	"value": "{{deviceId}}",
																	"description": "(Required) Device ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the certs on a device"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/certs",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"sm",
																		"devices",
																		":deviceId",
																		"certs"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "deviceId",
																			"value": "<string>",
																			"description": "(Required) Device ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"name\": \"My Cert\",\n    \"notValidAfter\": \"2018-05-12T00:00:00Z\",\n    \"notValidBefore\": \"2018-02-11T00:00:00Z\",\n    \"certPem\": \"-----BEGIN CERTIFICATE-----\\n-----END CERTIFICATE-----\\n\",\n    \"deviceId\": \"1234\",\n    \"issuer\": \"\",\n    \"subject\": \"\",\n    \"id\": \"15\"\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "deviceProfiles",
											"item": [
												{
													"name": "getNetworkSmDeviceDeviceProfiles",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/deviceProfiles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices",
																":deviceId",
																"deviceProfiles"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "deviceId",
																	"value": "{{deviceId}}",
																	"description": "(Required) Device ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Get the installed profiles associated with a device"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/deviceProfiles",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"sm",
																		"devices",
																		":deviceId",
																		"deviceProfiles"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "deviceId",
																			"value": "<string>",
																			"description": "(Required) Device ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"deviceId\": \"1234\",\n    \"id\": \"1284392014819\",\n    \"isEncrypted\": true,\n    \"isManaged\": true,\n    \"profileData\": \"{}\",\n    \"profileIdentifier\": \"com.test.app\",\n    \"name\": \"My profile\",\n    \"version\": \"0.0.1\"\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "fields",
											"item": [
												{
													"name": "updateNetworkSmDevicesFields",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"deviceFields\": {\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\"\n  },\n  \"wifiMac\": \"<string>\",\n  \"id\": \"<string>\",\n  \"serial\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices/fields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices",
																"fields"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Modify the fields of a device"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"wifiMac\": \"00:11:22:33:44:55\",\n  \"serial\": \"XY0XX0Y0X0\",\n  \"deviceFields\": {\n    \"name\": \"Miles's phone\",\n    \"notes\": \"Here's some info about my device\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/sm/devices/fields",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"sm",
																		"devices",
																		"fields"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"id\": \"1284392014819\",\n    \"name\": \"Miles's phone\",\n    \"wifiMac\": \"00:11:22:33:44:55\",\n    \"serial\": \"F5XKHEBX\",\n    \"notes\": \"Here's some info about my device\"\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "networkAdapters",
											"item": [
												{
													"name": "getNetworkSmDeviceNetworkAdapters",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/networkAdapters",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices",
																":deviceId",
																"networkAdapters"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "deviceId",
																	"value": "{{deviceId}}",
																	"description": "(Required) Device ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the network adapters of a device"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/networkAdapters",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"sm",
																		"devices",
																		":deviceId",
																		"networkAdapters"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "deviceId",
																			"value": "<string>",
																			"description": "(Required) Device ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"dhcpServer\": \"123.123.123.1\",\n    \"dnsServer\": \"8.8.8.8, 8.8.4.4\",\n    \"gateway\": \"1.2.3.5\",\n    \"id\": \"1284392014819\",\n    \"ip\": \"1.2.3.4\",\n    \"mac\": \"00:11:22:33:44:55\",\n    \"name\": \"en0\",\n    \"subnet\": \"255.255.255.0\"\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "restrictions",
											"item": [
												{
													"name": "getNetworkSmDeviceRestrictions",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/restrictions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices",
																":deviceId",
																"restrictions"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "deviceId",
																	"value": "{{deviceId}}",
																	"description": "(Required) Device ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the restrictions on a device"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/restrictions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"sm",
																		"devices",
																		":deviceId",
																		"restrictions"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "deviceId",
																			"value": "<string>",
																			"description": "(Required) Device ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"restrictions\": [\n    {\n      \"profile\": \"com.test.app\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "securityCenters",
											"item": [
												{
													"name": "getNetworkSmDeviceSecurityCenters",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/securityCenters",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices",
																":deviceId",
																"securityCenters"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "deviceId",
																	"value": "{{deviceId}}",
																	"description": "(Required) Device ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the security centers on a device"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/securityCenters",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"sm",
																		"devices",
																		":deviceId",
																		"securityCenters"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "deviceId",
																			"value": "<string>",
																			"description": "(Required) Device ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"isRooted\": true,\n    \"hasAntiVirus\": true,\n    \"antiVirusName\": \"meraki_av\",\n    \"isFireWallEnabled\": true,\n    \"hasFireWallInstalled\": true,\n    \"fireWallName\": \"meraki_fw\",\n    \"isDiskEncrypted\": true,\n    \"isAutoLoginDisabled\": true,\n    \"id\": \"1284392014819\",\n    \"runningProcs\": \"/software,/software_2\"\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "softwares",
											"item": [
												{
													"name": "getNetworkSmDeviceSoftwares",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/softwares",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices",
																":deviceId",
																"softwares"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "deviceId",
																	"value": "{{deviceId}}",
																	"description": "(Required) Device ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Get a list of softwares associated with a device"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/softwares",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"sm",
																		"devices",
																		":deviceId",
																		"softwares"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "deviceId",
																			"value": "<string>",
																			"description": "(Required) Device ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"appId\": \"1234\",\n    \"bundleSize\": 1024,\n    \"createdAt\": \"2018-02-11T00:00:00Z\",\n    \"deviceId\": \"1234\",\n    \"dynamicSize\": 2048,\n    \"id\": \"1284392014819\",\n    \"identifier\": \"com.test.app\",\n    \"installedAt\": \"2018-05-12T00:00:00Z\",\n    \"toInstall\": true,\n    \"iosRedemptionCode\": false,\n    \"isManaged\": true,\n    \"itunesId\": \"1234\",\n    \"licenseKey\": \"Z21234567890\",\n    \"name\": \"My app\",\n    \"path\": \"/Path/to/app.app\",\n    \"redemptionCode\": 1234,\n    \"shortVersion\": \"1.1\",\n    \"status\": \"Managed\",\n    \"toUninstall\": false,\n    \"uninstalledAt\": \"2018-02-11T00:00:00Z\",\n    \"updatedAt\": \"2018-05-12T00:00:00Z\",\n    \"vendor\": \"Apple\",\n    \"version\": \"0.1\"\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "wlanLists",
											"item": [
												{
													"name": "getNetworkSmDeviceWlanLists",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/wlanLists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices",
																":deviceId",
																"wlanLists"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "deviceId",
																	"value": "{{deviceId}}",
																	"description": "(Required) Device ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the saved SSID names on a device"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/wlanLists",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"sm",
																		"devices",
																		":deviceId",
																		"wlanLists"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "deviceId",
																			"value": "<string>",
																			"description": "(Required) Device ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"createdAt\": \"2018-02-11T00:00:00Z\",\n    \"id\": \"1284392014819\",\n    \"xml\": \"Preferred networks on en0:\"\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "checkinNetworkSmDevices",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"wifiMacs\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/devices/checkin",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"devices",
														"checkin"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Force check-in a set of devices"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"wifiMacs\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices/checkin",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices",
																"checkin"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ids\": [\n    \"1284392014819\",\n    \"2983092129865\"\n  ]\n}"
												}
											]
										},
										{
											"name": "getNetworkSmDevices",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/devices",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"devices"
													],
													"query": [
														{
															"key": "fields",
															"value": "{{fields}}",
															"description": "Additional fields that will be displayed for each device.\n    The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip,\n    systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser,\n    ownerEmail, ownerUsername, osBuild, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid,\n    simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName,\n    isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, autoTags, hasMdm, hasDesktopAgent, diskEncryptionEnabled,\n    hardwareEncryptionCaps, passCodeLock, usesHardwareKeystore, androidSecurityPatchVersion, cellular, and url.",
															"disabled": true
														},
														{
															"key": "fields",
															"value": "{{fields}}",
															"description": "Additional fields that will be displayed for each device.\n    The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip,\n    systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser,\n    ownerEmail, ownerUsername, osBuild, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid,\n    simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName,\n    isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, autoTags, hasMdm, hasDesktopAgent, diskEncryptionEnabled,\n    hardwareEncryptionCaps, passCodeLock, usesHardwareKeystore, androidSecurityPatchVersion, cellular, and url.",
															"disabled": true
														},
														{
															"key": "wifiMacs",
															"value": "{{wifiMacs}}",
															"description": "Filter devices by wifi mac(s).",
															"disabled": true
														},
														{
															"key": "wifiMacs",
															"value": "{{wifiMacs}}",
															"description": "Filter devices by wifi mac(s).",
															"disabled": true
														},
														{
															"key": "serials",
															"value": "{{serials}}",
															"description": "Filter devices by serial(s).",
															"disabled": true
														},
														{
															"key": "serials",
															"value": "{{serials}}",
															"description": "Filter devices by serial(s).",
															"disabled": true
														},
														{
															"key": "ids",
															"value": "{{ids}}",
															"description": "Filter devices by id(s).",
															"disabled": true
														},
														{
															"key": "ids",
															"value": "{{ids}}",
															"description": "Filter devices by id(s).",
															"disabled": true
														},
														{
															"key": "uuids",
															"value": "{{uuids}}",
															"description": "Filter devices by uuid(s).",
															"disabled": true
														},
														{
															"key": "uuids",
															"value": "{{uuids}}",
															"description": "Filter devices by uuid(s).",
															"disabled": true
														},
														{
															"key": "systemTypes",
															"value": "{{systemTypes}}",
															"description": "Filter devices by system type(s).",
															"disabled": true
														},
														{
															"key": "systemTypes",
															"value": "{{systemTypes}}",
															"description": "Filter devices by system type(s).",
															"disabled": true
														},
														{
															"key": "scope",
															"value": "{{scope}}",
															"description": "Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags.",
															"disabled": true
														},
														{
															"key": "scope",
															"value": "{{scope}}",
															"description": "Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags.",
															"disabled": true
														},
														{
															"key": "perPage",
															"value": "{{perPage}}",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
															"disabled": true
														},
														{
															"key": "startingAfter",
															"value": "{{startingAfter}}",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "endingBefore",
															"value": "{{endingBefore}}",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the devices enrolled in an SM network with various specified fields and filters"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices?fields=<string>&fields=<string>&wifiMacs=<string>&wifiMacs=<string>&serials=<string>&serials=<string>&ids=<string>&ids=<string>&uuids=<string>&uuids=<string>&systemTypes=<string>&systemTypes=<string>&scope=<string>&scope=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>"
																},
																{
																	"key": "fields",
																	"value": "<string>"
																},
																{
																	"key": "wifiMacs",
																	"value": "<string>"
																},
																{
																	"key": "wifiMacs",
																	"value": "<string>"
																},
																{
																	"key": "serials",
																	"value": "<string>"
																},
																{
																	"key": "serials",
																	"value": "<string>"
																},
																{
																	"key": "ids",
																	"value": "<string>"
																},
																{
																	"key": "ids",
																	"value": "<string>"
																},
																{
																	"key": "uuids",
																	"value": "<string>"
																},
																{
																	"key": "uuids",
																	"value": "<string>"
																},
																{
																	"key": "systemTypes",
																	"value": "<string>"
																},
																{
																	"key": "systemTypes",
																	"value": "<string>"
																},
																{
																	"key": "scope",
																	"value": "<string>"
																},
																{
																	"key": "scope",
																	"value": "<string>"
																},
																{
																	"key": "perPage",
																	"value": "<integer>"
																},
																{
																	"key": "startingAfter",
																	"value": "<string>"
																},
																{
																	"key": "endingBefore",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Link",
															"value": "Lorem nisi fugiat",
															"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"1284392014819\",\n    \"name\": \"Miles's phone\",\n    \"tags\": [\n      \"tag1\",\n      \"tag2\"\n    ],\n    \"ssid\": \"My SSID\",\n    \"wifiMac\": \"00:11:22:33:44:55\",\n    \"osName\": \"iOS 9.3.5\",\n    \"systemModel\": \"iPhone\",\n    \"uuid\": \"3d990628ede4c628d52\",\n    \"serialNumber\": \"F5XKHEBX\",\n    \"serial\": \"F5XKHEBX\",\n    \"ip\": \"1.2.3.4\",\n    \"notes\": \"Here's some info about my device\"\n  }\n]"
												}
											]
										},
										{
											"name": "installNetworkSmDeviceApps",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"appIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"force\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/installApps",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"devices",
														":deviceId",
														"installApps"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "deviceId",
															"value": "{{deviceId}}",
															"description": "(Required) Device ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Install applications on a device"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"appIds\": [\n    \"1284392014819\",\n    \"2983092129865\"\n  ],\n  \"force\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/installApps",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices",
																":deviceId",
																"installApps"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "deviceId",
																	"value": "<string>",
																	"description": "(Required) Device ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "lockNetworkSmDevices",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"wifiMacs\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"pin\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/devices/lock",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"devices",
														"lock"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Lock a set of devices"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"wifiMacs\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"pin\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices/lock",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices",
																"lock"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ids\": [\n    \"1284392014819\",\n    \"2983092129865\"\n  ]\n}"
												}
											]
										},
										{
											"name": "modifyNetworkSmDevicesTags",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"updateAction\": \"<string>\",\n  \"wifiMacs\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/devices/modifyTags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"devices",
														"modifyTags"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Add, delete, or update the tags of a set of devices"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"updateAction\": \"<string>\",\n  \"wifiMacs\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices/modifyTags",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices",
																"modifyTags"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"1284392014819\",\n    \"tags\": [\n      \"tag1\",\n      \"tag2\"\n    ],\n    \"wifiMac\": \"00:11:22:33:44:55\",\n    \"serial\": \"F5XKHEBX\"\n  }\n]"
												}
											]
										},
										{
											"name": "moveNetworkSmDevices",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"newNetwork\": \"<string>\",\n  \"wifiMacs\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/devices/move",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"devices",
														"move"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Move a set of devices to a new network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"newNetwork\": \"<string>\",\n  \"wifiMacs\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices/move",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices",
																"move"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ids\": [\n    \"1284392014819\",\n    \"2983092129865\"\n  ],\n  \"newNetwork\": \"1284392014819\"\n}"
												}
											]
										},
										{
											"name": "rebootNetworkSmDevices",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"wifiMacs\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"kextPaths\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"notifyUser\": \"<boolean>\",\n  \"rebuildKernelCache\": \"<boolean>\",\n  \"requestRequiresNetworkTether\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/devices/reboot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"devices",
														"reboot"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Reboot a set of endpoints"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"wifiMacs\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"kextPaths\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"notifyUser\": \"<boolean>\",\n  \"rebuildKernelCache\": \"<boolean>\",\n  \"requestRequiresNetworkTether\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices/reboot",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices",
																"reboot"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ids\": [\n    \"1284392014819\",\n    \"2983092129865\"\n  ]\n}"
												}
											]
										},
										{
											"name": "refreshNetworkSmDeviceDetails",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/refreshDetails",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"devices",
														":deviceId",
														"refreshDetails"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "deviceId",
															"value": "{{deviceId}}",
															"description": "(Required) Device ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Refresh the details of a device"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/refreshDetails",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices",
																":deviceId",
																"refreshDetails"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "deviceId",
																	"value": "<string>",
																	"description": "(Required) Device ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "shutdownNetworkSmDevices",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"wifiMacs\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/devices/shutdown",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"devices",
														"shutdown"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Shutdown a set of endpoints"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"wifiMacs\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices/shutdown",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices",
																"shutdown"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ids\": [\n    \"1284392014819\",\n    \"2983092129865\"\n  ]\n}"
												}
											]
										},
										{
											"name": "unenrollNetworkSmDevice",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/unenroll",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"devices",
														":deviceId",
														"unenroll"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "deviceId",
															"value": "{{deviceId}}",
															"description": "(Required) Device ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Unenroll a device"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/unenroll",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices",
																":deviceId",
																"unenroll"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "deviceId",
																	"value": "<string>",
																	"description": "(Required) Device ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": true\n}"
												}
											]
										},
										{
											"name": "uninstallNetworkSmDeviceApps",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"appIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/uninstallApps",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"devices",
														":deviceId",
														"uninstallApps"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "deviceId",
															"value": "{{deviceId}}",
															"description": "(Required) Device ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Uninstall applications on a device"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"appIds\": [\n    \"1284392014819\",\n    \"2983092129865\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/uninstallApps",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices",
																":deviceId",
																"uninstallApps"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "deviceId",
																	"value": "<string>",
																	"description": "(Required) Device ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "wipeNetworkSmDevices",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"wifiMac\": \"<string>\",\n  \"id\": \"<string>\",\n  \"serial\": \"<string>\",\n  \"pin\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/devices/wipe",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"devices",
														"wipe"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Wipe a device"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"wifiMac\": \"00:11:22:33:44:55\",\n  \"serial\": \"XY0XX0Y0X0\",\n  \"pin\": 123456\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices/wipe",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices",
																"wipe"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1284392014819\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "profiles",
									"item": [
										{
											"name": "getNetworkSmProfiles",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/profiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"profiles"
													],
													"query": [
														{
															"key": "payloadTypes",
															"value": "{{payloadTypes}}",
															"description": "Filter by payload types",
															"disabled": true
														},
														{
															"key": "payloadTypes",
															"value": "{{payloadTypes}}",
															"description": "Filter by payload types",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List all profiles in a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/profiles?payloadTypes=<string>&payloadTypes=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"profiles"
															],
															"query": [
																{
																	"key": "payloadTypes",
																	"value": "<string>"
																},
																{
																	"key": "payloadTypes",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"1284392014819\",\n    \"name\": \"My profile\",\n    \"description\": \"Some profile description\",\n    \"scope\": \"withAny\",\n    \"tags\": [\n      \"tag1\",\n      \"tag2\"\n    ],\n    \"payloadTypes\": [\n      \"Vpn\",\n      \"ManagedSettings\"\n    ]\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "sentry",
									"item": [
										{
											"name": "policies",
											"item": [
												{
													"name": "assignments",
													"item": [
														{
															"name": "byNetwork",
															"item": [
																{
																	"name": "getOrganizationSmSentryPoliciesAssignmentsByNetwork",
																	"protocolProfileBehavior": {
																		"followAuthorizationHeader": false
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/sm/sentry/policies/assignments/byNetwork",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"sm",
																				"sentry",
																				"policies",
																				"assignments",
																				"byNetwork"
																			],
																			"query": [
																				{
																					"key": "perPage",
																					"value": "{{perPage}}",
																					"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.",
																					"disabled": true
																				},
																				{
																					"key": "startingAfter",
																					"value": "{{startingAfter}}",
																					"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																					"disabled": true
																				},
																				{
																					"key": "endingBefore",
																					"value": "{{endingBefore}}",
																					"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																					"disabled": true
																				},
																				{
																					"key": "networkIds",
																					"value": "{{networkIds}}",
																					"description": "Optional parameter to filter Sentry Policies by Network Id",
																					"disabled": true
																				},
																				{
																					"key": "networkIds",
																					"value": "{{networkIds}}",
																					"description": "Optional parameter to filter Sentry Policies by Network Id",
																					"disabled": true
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "{{organizationId}}",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		},
																		"description": "List the Sentry Policies for an organization ordered in ascending order of priority"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/sm/sentry/policies/assignments/byNetwork?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"sm",
																						"sentry",
																						"policies",
																						"assignments",
																						"byNetwork"
																					],
																					"query": [
																						{
																							"key": "perPage",
																							"value": "<integer>"
																						},
																						{
																							"key": "startingAfter",
																							"value": "<string>"
																						},
																						{
																							"key": "endingBefore",
																							"value": "<string>"
																						},
																						{
																							"key": "networkIds",
																							"value": "<string>"
																						},
																						{
																							"key": "networkIds",
																							"value": "<string>"
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "<string>",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Link",
																					"value": "Lorem nisi fugiat",
																					"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																				},
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "[\n  {\n    \"items\": [\n      {\n        \"networkId\": \"N_24329156\",\n        \"policies\": [\n          {\n            \"policyId\": \"1284392014819\",\n            \"networkId\": \"N_24329156\",\n            \"smNetworkId\": \"N_24329156\",\n            \"tags\": [\n              \"tag1\",\n              \"tag2\"\n            ],\n            \"scope\": \"withAny\",\n            \"groupNumber\": \"1234\",\n            \"groupPolicyId\": \"1284392014819\",\n            \"priority\": \"1\",\n            \"createdAt\": \"2018-05-12T00:00:00Z\",\n            \"lastUpdatedAt\": \"2018-05-12T00:00:00Z\"\n          }\n        ]\n      }\n    ],\n    \"meta\": {\n      \"counts\": {\n        \"items\": {\n          \"total\": 10,\n          \"remaining\": 0\n        }\n      }\n    }\n  }\n]"
																		}
																	]
																}
															]
														},
														{
															"name": "updateOrganizationSmSentryPoliciesAssignments",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"items\": [\n    {\n      \"networkId\": \"<string>\",\n      \"policies\": [\n        {\n          \"smNetworkId\": \"<string>\",\n          \"scope\": \"<string>\",\n          \"tags\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"groupPolicyId\": \"<string>\",\n          \"policyId\": \"<string>\"\n        },\n        {\n          \"smNetworkId\": \"<string>\",\n          \"scope\": \"<string>\",\n          \"tags\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"groupPolicyId\": \"<string>\",\n          \"policyId\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"networkId\": \"<string>\",\n      \"policies\": [\n        {\n          \"smNetworkId\": \"<string>\",\n          \"scope\": \"<string>\",\n          \"tags\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"groupPolicyId\": \"<string>\",\n          \"policyId\": \"<string>\"\n        },\n        {\n          \"smNetworkId\": \"<string>\",\n          \"scope\": \"<string>\",\n          \"tags\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"groupPolicyId\": \"<string>\",\n          \"policyId\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/sm/sentry/policies/assignments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"sm",
																		"sentry",
																		"policies",
																		"assignments"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Update an Organizations Sentry Policies using the provided list. Sentry Policies are ordered in descending order of priority (i.e. highest priority at the bottom, this is opposite the Dashboard UI). Policies not present in the request will be deleted."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"items\": [\n    {\n      \"networkId\": \"<string>\",\n      \"policies\": [\n        {\n          \"smNetworkId\": \"<string>\",\n          \"scope\": \"<string>\",\n          \"tags\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"groupPolicyId\": \"<string>\",\n          \"policyId\": \"<string>\"\n        },\n        {\n          \"smNetworkId\": \"<string>\",\n          \"scope\": \"<string>\",\n          \"tags\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"groupPolicyId\": \"<string>\",\n          \"policyId\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"networkId\": \"<string>\",\n      \"policies\": [\n        {\n          \"smNetworkId\": \"<string>\",\n          \"scope\": \"<string>\",\n          \"tags\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"groupPolicyId\": \"<string>\",\n          \"policyId\": \"<string>\"\n        },\n        {\n          \"smNetworkId\": \"<string>\",\n          \"scope\": \"<string>\",\n          \"tags\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"groupPolicyId\": \"<string>\",\n          \"policyId\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/sm/sentry/policies/assignments",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"sm",
																				"sentry",
																				"policies",
																				"assignments"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"items\": [\n    {\n      \"networkId\": \"N_24329156\",\n      \"policies\": [\n        {\n          \"policyId\": \"1284392014819\",\n          \"networkId\": \"N_24329156\",\n          \"smNetworkId\": \"N_24329156\",\n          \"tags\": [\n            \"tag1\",\n            \"tag2\"\n          ],\n          \"scope\": \"withAny\",\n          \"groupNumber\": \"1234\",\n          \"groupPolicyId\": \"1284392014819\",\n          \"priority\": \"1\",\n          \"createdAt\": \"2018-05-12T00:00:00Z\",\n          \"lastUpdatedAt\": \"2018-05-12T00:00:00Z\"\n        }\n      ]\n    }\n  ]\n}"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "softwares",
									"item": [
										{
											"name": "getNetworkSmUserSoftwares",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/users/:userId/softwares",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"users",
														":userId",
														"softwares"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "userId",
															"value": "{{userId}}",
															"description": "(Required) User ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Get a list of softwares associated with a user"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/users/:userId/softwares",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"users",
																":userId",
																"softwares"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "userId",
																	"value": "<string>",
																	"description": "(Required) User ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"appId\": \"1234\",\n    \"bundleSize\": 1024,\n    \"createdAt\": \"2018-02-11T00:00:00Z\",\n    \"deviceId\": \"1234\",\n    \"dynamicSize\": 2048,\n    \"id\": \"1284392014819\",\n    \"identifier\": \"com.test.app\",\n    \"installedAt\": \"2018-05-12T00:00:00Z\",\n    \"toInstall\": true,\n    \"iosRedemptionCode\": false,\n    \"isManaged\": true,\n    \"itunesId\": \"1234\",\n    \"licenseKey\": \"Z21234567890\",\n    \"name\": \"My app\",\n    \"path\": \"/Path/to/app.app\",\n    \"redemptionCode\": 1234,\n    \"shortVersion\": \"1.1\",\n    \"status\": \"Managed\",\n    \"toUninstall\": false,\n    \"uninstalledAt\": \"2018-02-11T00:00:00Z\",\n    \"updatedAt\": \"2018-05-12T00:00:00Z\",\n    \"vendor\": \"Apple\",\n    \"version\": \"0.1\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "targetGroups",
									"item": [
										{
											"name": "createNetworkSmTargetGroup",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"scope\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/targetGroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"targetGroups"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Add a target group"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"Target group name\",\n  \"scope\": \"withAny, tag1, tag2\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/targetGroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"targetGroups"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1284392014819\",\n  \"name\": \"Target group name\",\n  \"scope\": \"withAny\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ]\n}"
												}
											]
										},
										{
											"name": "deleteNetworkSmTargetGroup",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/targetGroups/:targetGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"targetGroups",
														":targetGroupId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "targetGroupId",
															"value": "{{targetGroupId}}",
															"description": "(Required) Target group ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Delete a target group from a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/targetGroups/:targetGroupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"targetGroups",
																":targetGroupId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "targetGroupId",
																	"value": "<string>",
																	"description": "(Required) Target group ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getNetworkSmTargetGroup",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/targetGroups/:targetGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"targetGroups",
														":targetGroupId"
													],
													"query": [
														{
															"key": "withDetails",
															"value": "{{withDetails}}",
															"description": "Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "targetGroupId",
															"value": "{{targetGroupId}}",
															"description": "(Required) Target group ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return a target group"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/targetGroups/:targetGroupId?withDetails=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"targetGroups",
																":targetGroupId"
															],
															"query": [
																{
																	"key": "withDetails",
																	"value": "<boolean>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "targetGroupId",
																	"value": "<string>",
																	"description": "(Required) Target group ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1284392014819\",\n  \"name\": \"Target group name\",\n  \"scope\": \"withAny\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ]\n}"
												}
											]
										},
										{
											"name": "getNetworkSmTargetGroups",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/targetGroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"targetGroups"
													],
													"query": [
														{
															"key": "withDetails",
															"value": "{{withDetails}}",
															"description": "Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the target groups in this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/targetGroups?withDetails=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"targetGroups"
															],
															"query": [
																{
																	"key": "withDetails",
																	"value": "<boolean>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"1284392014819\",\n    \"name\": \"Target group name\",\n    \"scope\": \"withAny\",\n    \"tags\": [\n      \"tag1\",\n      \"tag2\"\n    ]\n  }\n]"
												}
											]
										},
										{
											"name": "updateNetworkSmTargetGroup",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"scope\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/targetGroups/:targetGroupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"targetGroups",
														":targetGroupId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "targetGroupId",
															"value": "{{targetGroupId}}",
															"description": "(Required) Target group ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update a target group"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"Target group name\",\n  \"scope\": \"withAny, tag1, tag2\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/targetGroups/:targetGroupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"targetGroups",
																":targetGroupId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "targetGroupId",
																	"value": "<string>",
																	"description": "(Required) Target group ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1284392014819\",\n  \"name\": \"Target group name\",\n  \"scope\": \"withAny\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "trustedAccessConfigs",
									"item": [
										{
											"name": "getNetworkSmTrustedAccessConfigs",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/trustedAccessConfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"trustedAccessConfigs"
													],
													"query": [
														{
															"key": "perPage",
															"value": "{{perPage}}",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.",
															"disabled": true
														},
														{
															"key": "startingAfter",
															"value": "{{startingAfter}}",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "endingBefore",
															"value": "{{endingBefore}}",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List Trusted Access Configs"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/trustedAccessConfigs?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"trustedAccessConfigs"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>"
																},
																{
																	"key": "startingAfter",
																	"value": "<string>"
																},
																{
																	"key": "endingBefore",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Link",
															"value": "Lorem nisi fugiat",
															"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"1284392014819\",\n    \"ssidName\": \"My SSID\",\n    \"name\": \"Cisco Meraki valued client\",\n    \"scope\": \"withAny\",\n    \"tags\": [\n      \"tag1\",\n      \"tag2\"\n    ],\n    \"timeboundType\": \"static\",\n    \"sendExpirationEmails\": true,\n    \"notifyTimeBeforeAccessEnds\": 50000,\n    \"additionalEmailText\": \"test\",\n    \"accessStartAt\": \"2018-02-11T00:00:00Z\",\n    \"accessEndAt\": \"2018-05-12T00:00:00Z\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "userAccessDevices",
									"item": [
										{
											"name": "deleteNetworkSmUserAccessDevice",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/userAccessDevices/:userAccessDeviceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"userAccessDevices",
														":userAccessDeviceId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "userAccessDeviceId",
															"value": "{{userAccessDeviceId}}",
															"description": "(Required) User access device ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Delete a User Access Device"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/userAccessDevices/:userAccessDeviceId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"userAccessDevices",
																":userAccessDeviceId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "userAccessDeviceId",
																	"value": "<string>",
																	"description": "(Required) User access device ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getNetworkSmUserAccessDevices",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/userAccessDevices",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"userAccessDevices"
													],
													"query": [
														{
															"key": "perPage",
															"value": "{{perPage}}",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.",
															"disabled": true
														},
														{
															"key": "startingAfter",
															"value": "{{startingAfter}}",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "endingBefore",
															"value": "{{endingBefore}}",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List User Access Devices and its Trusted Access Connections"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/userAccessDevices?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"userAccessDevices"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>"
																},
																{
																	"key": "startingAfter",
																	"value": "<string>"
																},
																{
																	"key": "endingBefore",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Link",
															"value": "Lorem nisi fugiat",
															"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"1284392014819\",\n    \"name\": \"Cisco Meraki valued client\",\n    \"systemType\": \"ios\",\n    \"mac\": \"00:11:22:33:44:55\",\n    \"username\": \"milesmeraki\",\n    \"email\": \"miles@meraki.com\",\n    \"tags\": [\n      \"tag1\",\n      \"tag2\"\n    ],\n    \"trustedAccessConnections\": [\n      {\n        \"trustedAccessConfigId\": \"1234\",\n        \"downloadedAt\": \"2018-02-11T00:00:00Z\",\n        \"scepCompletedAt\": \"2018-05-12T00:00:00Z\",\n        \"lastConnectedAt\": \"2018-05-12T00:00:00Z\"\n      }\n    ]\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "vppAccounts",
									"item": [
										{
											"name": "getOrganizationSmVppAccount",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/sm/vppAccounts/:vppAccountId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"sm",
														"vppAccounts",
														":vppAccountId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "vppAccountId",
															"value": "{{vppAccountId}}",
															"description": "(Required) Vpp account ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Get a hash containing the unparsed token of the VPP account with the given ID"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/sm/vppAccounts/:vppAccountId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"sm",
																"vppAccounts",
																":vppAccountId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "vppAccountId",
																	"value": "<string>",
																	"description": "(Required) Vpp account ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"vppAccountId\": \"1284392014819\",\n  \"contentToken\": \"eyJleHBEYXRlIjoiMzAyMy0xMC0yMVQxMjowOTo0NSswMDAwIiwidG9rZW4iOiIvVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlQiLCJvcmdOYW1lIjoiTWVyYWtpICsgREVWRUxPUEVSIn0=\",\n  \"email\": \"email@example.com\",\n  \"name\": \"VPP Account name\",\n  \"allowedAdmins\": \"Network\",\n  \"networkIdAdmins\": \"N_24329156\",\n  \"assignableNetworks\": \"Some\",\n  \"assignableNetworkIds\": [\n    \"N_24329156\"\n  ],\n  \"vppLocationId\": \"22222222222\",\n  \"vppLocationName\": \"LocationName\",\n  \"lastSyncedAt\": \"2021-02-25T16:59:23Z\",\n  \"lastForceSyncedAt\": \"2021-02-25T16:59:23Z\",\n  \"parsedToken\": {\n    \"orgName\": \"My organization\",\n    \"hashedToken\": \"f572d396fae9206628714fb2ce00f72e94f2258f\",\n    \"expiresAt\": \"2023-10-21T12:09:45Z\"\n  },\n  \"id\": \"1284392014819\",\n  \"vppServiceToken\": \"eyJleHBEYXRlIjoiMzAyMy0xMC0yMVQxMjowOTo0NSswMDAwIiwidG9rZW4iOiIvVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlQiLCJvcmdOYW1lIjoiTWVyYWtpICsgREVWRUxPUEVSIn0=\"\n}"
												}
											]
										},
										{
											"name": "getOrganizationSmVppAccounts",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/sm/vppAccounts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"sm",
														"vppAccounts"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the VPP accounts in the organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/sm/vppAccounts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"sm",
																"vppAccounts"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"vppAccountId\": \"1284392014819\",\n    \"contentToken\": \"eyJleHBEYXRlIjoiMzAyMy0xMC0yMVQxMjowOTo0NSswMDAwIiwidG9rZW4iOiIvVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlQiLCJvcmdOYW1lIjoiTWVyYWtpICsgREVWRUxPUEVSIn0=\",\n    \"email\": \"email@example.com\",\n    \"name\": \"VPP Account name\",\n    \"allowedAdmins\": \"Network\",\n    \"networkIdAdmins\": \"N_24329156\",\n    \"assignableNetworks\": \"Some\",\n    \"assignableNetworkIds\": [\n      \"N_24329156\"\n    ],\n    \"vppLocationId\": \"22222222222\",\n    \"vppLocationName\": \"LocationName\",\n    \"lastSyncedAt\": \"2021-02-25T16:59:23Z\",\n    \"lastForceSyncedAt\": \"2021-02-25T16:59:23Z\",\n    \"parsedToken\": {\n      \"orgName\": \"My organization\",\n      \"hashedToken\": \"f572d396fae9206628714fb2ce00f72e94f2258f\",\n      \"expiresAt\": \"2023-10-21T12:09:45Z\"\n    },\n    \"id\": \"1284392014819\",\n    \"vppServiceToken\": \"eyJleHBEYXRlIjoiMzAyMy0xMC0yMVQxMjowOTo0NSswMDAwIiwidG9rZW4iOiIvVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlRPS0VOVE9LRU5UT0tFTlQiLCJvcmdOYW1lIjoiTWVyYWtpICsgREVWRUxPUEVSIn0=\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "getNetworkSmUsers",
									"protocolProfileBehavior": {
										"followAuthorizationHeader": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networks/:networkId/sm/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networks",
												":networkId",
												"sm",
												"users"
											],
											"query": [
												{
													"key": "ids",
													"value": "{{ids}}",
													"description": "Filter users by id(s).",
													"disabled": true
												},
												{
													"key": "ids",
													"value": "{{ids}}",
													"description": "Filter users by id(s).",
													"disabled": true
												},
												{
													"key": "usernames",
													"value": "{{usernames}}",
													"description": "Filter users by username(s).",
													"disabled": true
												},
												{
													"key": "usernames",
													"value": "{{usernames}}",
													"description": "Filter users by username(s).",
													"disabled": true
												},
												{
													"key": "emails",
													"value": "{{emails}}",
													"description": "Filter users by email(s).",
													"disabled": true
												},
												{
													"key": "emails",
													"value": "{{emails}}",
													"description": "Filter users by email(s).",
													"disabled": true
												},
												{
													"key": "scope",
													"value": "{{scope}}",
													"description": "Specifiy a scope (one of all, none, withAny, withAll, withoutAny, withoutAll) and a set of tags.",
													"disabled": true
												},
												{
													"key": "scope",
													"value": "{{scope}}",
													"description": "Specifiy a scope (one of all, none, withAny, withAll, withoutAny, withoutAll) and a set of tags.",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "networkId",
													"value": "{{networkId}}",
													"description": "(Required) Network ID"
												},
												{
													"key": "basePath",
													"value": "{{basePath}}"
												}
											]
										},
										"description": "List the owners in an SM network with various specified fields and filters"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/sm/users?ids=<string>&ids=<string>&usernames=<string>&usernames=<string>&emails=<string>&emails=<string>&scope=<string>&scope=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"sm",
														"users"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>"
														},
														{
															"key": "ids",
															"value": "<string>"
														},
														{
															"key": "usernames",
															"value": "<string>"
														},
														{
															"key": "usernames",
															"value": "<string>"
														},
														{
															"key": "emails",
															"value": "<string>"
														},
														{
															"key": "emails",
															"value": "<string>"
														},
														{
															"key": "scope",
															"value": "<string>"
														},
														{
															"key": "scope",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "<string>",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"1234\",\n    \"email\": \"miles@meraki.com\",\n    \"fullName\": \"Miles Meraki\",\n    \"username\": \"\",\n    \"hasPassword\": false,\n    \"tags\": \" tag1 tag2 \",\n    \"adGroups\": [],\n    \"azureAdGroups\": [],\n    \"samlGroups\": [],\n    \"asmGroups\": [],\n    \"isExternal\": false,\n    \"displayName\": \"Miles Meraki <miles@meraki.com>\",\n    \"hasIdentityCertificate\": false,\n    \"userThumbnail\": \"https://s3.amazonaws.com/image.extension\"\n  }\n]"
										}
									]
								}
							]
						},
						{
							"name": "monitor",
							"item": [
								{
									"name": "devices",
									"item": [
										{
											"name": "cellularUsageHistory",
											"item": [
												{
													"name": "getNetworkSmDeviceCellularUsageHistory",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/cellularUsageHistory",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices",
																":deviceId",
																"cellularUsageHistory"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "deviceId",
																	"value": "{{deviceId}}",
																	"description": "(Required) Device ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the client's daily cellular data usage history. Usage data is in kilobytes."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/cellularUsageHistory",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"sm",
																		"devices",
																		":deviceId",
																		"cellularUsageHistory"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "deviceId",
																			"value": "<string>",
																			"description": "(Required) Device ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"received\": 61,\n    \"sent\": 138,\n    \"ts\": \"2018-05-12T00:00:00Z\"\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "connectivity",
											"item": [
												{
													"name": "getNetworkSmDeviceConnectivity",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/connectivity",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices",
																":deviceId",
																"connectivity"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "deviceId",
																	"value": "{{deviceId}}",
																	"description": "(Required) Device ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Returns historical connectivity data (whether a device is regularly checking in to Dashboard)."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/connectivity?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"sm",
																		"devices",
																		":deviceId",
																		"connectivity"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "deviceId",
																			"value": "<string>",
																			"description": "(Required) Device ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"firstSeenAt\": \"2018-02-11T00:00:00Z\",\n    \"lastSeenAt\": \"2018-05-12T00:00:00Z\"\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "desktopLogs",
											"item": [
												{
													"name": "getNetworkSmDeviceDesktopLogs",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/desktopLogs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices",
																":deviceId",
																"desktopLogs"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "deviceId",
																	"value": "{{deviceId}}",
																	"description": "(Required) Device ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return historical records of various Systems Manager network connection details for desktop devices."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/desktopLogs?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"sm",
																		"devices",
																		":deviceId",
																		"desktopLogs"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "deviceId",
																			"value": "<string>",
																			"description": "(Required) Device ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"measuredAt\": \"2018-05-12T00:00:00Z\",\n    \"user\": \"milesmeraki\",\n    \"networkDevice\": \"NIC\",\n    \"networkDriver\": \"Driver\",\n    \"wifiChannel\": \"11\",\n    \"wifiAuth\": \"wpa-psk\",\n    \"wifiBssid\": \"00:11:22:33:44:55\",\n    \"wifiSsid\": \"ssid\",\n    \"wifiRssi\": \"-11\",\n    \"wifiNoise\": \"-99\",\n    \"dhcpServer\": \"1.2.3.4\",\n    \"ip\": \"1.2.3.4\",\n    \"networkMTU\": \"1500\",\n    \"subnet\": \"192.168.1.0/24\",\n    \"gateway\": \"1.2.3.5\",\n    \"publicIP\": \"123.123.123.1\",\n    \"dnsServer\": \"8\",\n    \"ts\": \"2018-05-12T00:00:00Z\"\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "deviceCommandLogs",
											"item": [
												{
													"name": "getNetworkSmDeviceDeviceCommandLogs",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/deviceCommandLogs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices",
																":deviceId",
																"deviceCommandLogs"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "deviceId",
																	"value": "{{deviceId}}",
																	"description": "(Required) Device ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return historical records of commands sent to Systems Manager devices. Note that this will include the name of the Dashboard user who initiated the command if it was generated by a Dashboard admin rather than the automatic behavior of the system; you may wish to filter this out of any reports."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/deviceCommandLogs?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"sm",
																		"devices",
																		":deviceId",
																		"deviceCommandLogs"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "deviceId",
																			"value": "<string>",
																			"description": "(Required) Device ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"action\": \"UpdateProfile\",\n    \"name\": \"My profile\",\n    \"details\": \"{}\",\n    \"dashboardUser\": \"Miles Meraki\",\n    \"ts\": \"2018-05-12T00:00:00Z\"\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "performanceHistory",
											"item": [
												{
													"name": "getNetworkSmDevicePerformanceHistory",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/performanceHistory",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"sm",
																"devices",
																":deviceId",
																"performanceHistory"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "deviceId",
																	"value": "{{deviceId}}",
																	"description": "(Required) Device ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return historical records of various Systems Manager client metrics for desktop devices."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/sm/devices/:deviceId/performanceHistory?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"sm",
																		"devices",
																		":deviceId",
																		"performanceHistory"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "deviceId",
																			"value": "<string>",
																			"description": "(Required) Device ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"cpuPercentUsed\": 0.95,\n    \"memFree\": 1024,\n    \"memWired\": 4096,\n    \"memActive\": 1024,\n    \"memInactive\": 2048,\n    \"networkSent\": 512,\n    \"networkReceived\": 512,\n    \"swapUsed\": 768,\n    \"diskUsage\": {\n      \"c\": {\n        \"used\": 2048,\n        \"space\": 9096\n      }\n    },\n    \"ts\": \"2018-05-12T00:00:00Z\"\n  }\n]"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "switch",
					"item": [
						{
							"name": "configure",
							"item": [
								{
									"name": "accessControlLists",
									"item": [
										{
											"name": "getNetworkSwitchAccessControlLists",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/accessControlLists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"accessControlLists"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the access control lists for a MS network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/accessControlLists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"accessControlLists"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"rules\": [\n    {\n      \"comment\": \"Deny SSH\",\n      \"policy\": \"deny\",\n      \"ipVersion\": \"ipv4\",\n      \"protocol\": \"tcp\",\n      \"srcCidr\": \"10.1.10.0/24\",\n      \"srcPort\": \"any\",\n      \"dstCidr\": \"172.16.30/24\",\n      \"dstPort\": \"22\",\n      \"vlan\": \"10\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "updateNetworkSwitchAccessControlLists",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"dstCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"ipVersion\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\",\n      \"vlan\": \"<string>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"dstCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"ipVersion\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\",\n      \"vlan\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/accessControlLists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"accessControlLists"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the access control lists for a MS network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"dstCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"ipVersion\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\",\n      \"vlan\": \"<string>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"dstCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"ipVersion\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\",\n      \"vlan\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/accessControlLists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"accessControlLists"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"rules\": [\n    {\n      \"comment\": \"Deny SSH\",\n      \"policy\": \"deny\",\n      \"ipVersion\": \"ipv4\",\n      \"protocol\": \"tcp\",\n      \"srcCidr\": \"10.1.10.0/24\",\n      \"srcPort\": \"any\",\n      \"dstCidr\": \"172.16.30/24\",\n      \"dstPort\": \"22\",\n      \"vlan\": \"10\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "accessPolicies",
									"item": [
										{
											"name": "createNetworkSwitchAccessPolicy",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"radiusServers\": [\n    {\n      \"organizationRadiusServerId\": \"<string>\",\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    },\n    {\n      \"organizationRadiusServerId\": \"<string>\",\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    }\n  ],\n  \"radiusTestingEnabled\": \"<boolean>\",\n  \"radiusCoaSupportEnabled\": \"<boolean>\",\n  \"radiusAccountingEnabled\": \"<boolean>\",\n  \"hostMode\": \"<string>\",\n  \"urlRedirectWalledGardenEnabled\": \"<boolean>\",\n  \"radius\": {\n    \"criticalAuth\": {\n      \"dataVlanId\": \"<integer>\",\n      \"voiceVlanId\": \"<integer>\",\n      \"suspendPortBounce\": \"<boolean>\"\n    },\n    \"failedAuthVlanId\": \"<integer>\",\n    \"reAuthenticationInterval\": \"<integer>\",\n    \"cache\": {\n      \"enabled\": \"<boolean>\",\n      \"timeout\": \"<integer>\"\n    }\n  },\n  \"guestPortBouncing\": \"<boolean>\",\n  \"radiusAccountingServers\": [\n    {\n      \"organizationRadiusServerId\": \"<string>\",\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    },\n    {\n      \"organizationRadiusServerId\": \"<string>\",\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    }\n  ],\n  \"radiusGroupAttribute\": \"<string>\",\n  \"accessPolicyType\": \"<string>\",\n  \"increaseAccessSpeed\": \"<boolean>\",\n  \"guestVlanId\": \"<integer>\",\n  \"dot1x\": {\n    \"controlDirection\": \"<string>\"\n  },\n  \"voiceVlanClients\": \"<boolean>\",\n  \"urlRedirectWalledGardenRanges\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/accessPolicies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"accessPolicies"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Create an access policy for a switch network. If you would like to enable Meraki Authentication, set radiusServers to empty array."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"radiusServers\": [\n    {\n      \"organizationRadiusServerId\": \"<string>\",\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    },\n    {\n      \"organizationRadiusServerId\": \"<string>\",\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    }\n  ],\n  \"radiusTestingEnabled\": \"<boolean>\",\n  \"radiusCoaSupportEnabled\": \"<boolean>\",\n  \"radiusAccountingEnabled\": \"<boolean>\",\n  \"hostMode\": \"<string>\",\n  \"urlRedirectWalledGardenEnabled\": \"<boolean>\",\n  \"radius\": {\n    \"criticalAuth\": {\n      \"dataVlanId\": \"<integer>\",\n      \"voiceVlanId\": \"<integer>\",\n      \"suspendPortBounce\": \"<boolean>\"\n    },\n    \"failedAuthVlanId\": \"<integer>\",\n    \"reAuthenticationInterval\": \"<integer>\",\n    \"cache\": {\n      \"enabled\": \"<boolean>\",\n      \"timeout\": \"<integer>\"\n    }\n  },\n  \"guestPortBouncing\": \"<boolean>\",\n  \"radiusAccountingServers\": [\n    {\n      \"organizationRadiusServerId\": \"<string>\",\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    },\n    {\n      \"organizationRadiusServerId\": \"<string>\",\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    }\n  ],\n  \"radiusGroupAttribute\": \"<string>\",\n  \"accessPolicyType\": \"<string>\",\n  \"increaseAccessSpeed\": \"<boolean>\",\n  \"guestVlanId\": \"<integer>\",\n  \"dot1x\": {\n    \"controlDirection\": \"<string>\"\n  },\n  \"voiceVlanClients\": \"<boolean>\",\n  \"urlRedirectWalledGardenRanges\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/accessPolicies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"accessPolicies"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"Access policy #1\",\n  \"radiusServers\": [\n    {\n      \"serverId\": \"1\",\n      \"organizationRadiusServerId\": \"42\",\n      \"host\": \"1.2.3.4\",\n      \"port\": 22\n    }\n  ],\n  \"radius\": {\n    \"criticalAuth\": {\n      \"dataVlanId\": 100,\n      \"voiceVlanId\": 100,\n      \"suspendPortBounce\": true\n    },\n    \"failedAuthVlanId\": 100,\n    \"reAuthenticationInterval\": 120,\n    \"cache\": {\n      \"enabled\": false,\n      \"timeout\": 24\n    }\n  },\n  \"enforceRadiusMonitoring\": false,\n  \"guestPortBouncing\": false,\n  \"radiusTestingEnabled\": false,\n  \"radiusCoaSupportEnabled\": false,\n  \"radiusAccountingEnabled\": true,\n  \"radiusAccountingServers\": [\n    {\n      \"serverId\": \"2\",\n      \"organizationRadiusServerId\": \"42\",\n      \"host\": \"1.2.3.4\",\n      \"port\": 22\n    }\n  ],\n  \"radiusGroupAttribute\": \"11\",\n  \"hostMode\": \"Single-Host\",\n  \"accessPolicyType\": \"Hybrid authentication\",\n  \"increaseAccessSpeed\": false,\n  \"guestVlanId\": 100,\n  \"dot1x\": {\n    \"controlDirection\": \"inbound\"\n  },\n  \"voiceVlanClients\": true,\n  \"urlRedirectWalledGardenEnabled\": true,\n  \"urlRedirectWalledGardenRanges\": [\n    \"192.168.1.0/24\"\n  ],\n  \"counts\": {\n    \"ports\": {\n      \"withThisPolicy\": 12\n    }\n  }\n}"
												}
											]
										},
										{
											"name": "deleteNetworkSwitchAccessPolicy",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/accessPolicies/:accessPolicyNumber",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"accessPolicies",
														":accessPolicyNumber"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "accessPolicyNumber",
															"value": "{{accessPolicyNumber}}",
															"description": "(Required) Access policy number"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Delete an access policy for a switch network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/accessPolicies/:accessPolicyNumber",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"accessPolicies",
																":accessPolicyNumber"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "accessPolicyNumber",
																	"value": "<string>",
																	"description": "(Required) Access policy number"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getNetworkSwitchAccessPolicies",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/accessPolicies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"accessPolicies"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the access policies for a switch network. Only returns access policies with 'my RADIUS server' as authentication method"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/accessPolicies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"accessPolicies"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"name\": \"Access policy #1\",\n    \"radiusServers\": [\n      {\n        \"serverId\": \"1\",\n        \"organizationRadiusServerId\": \"42\",\n        \"host\": \"1.2.3.4\",\n        \"port\": 22\n      }\n    ],\n    \"radius\": {\n      \"criticalAuth\": {\n        \"dataVlanId\": 100,\n        \"voiceVlanId\": 100,\n        \"suspendPortBounce\": true\n      },\n      \"failedAuthVlanId\": 100,\n      \"reAuthenticationInterval\": 120,\n      \"cache\": {\n        \"enabled\": false,\n        \"timeout\": 24\n      }\n    },\n    \"enforceRadiusMonitoring\": false,\n    \"guestPortBouncing\": false,\n    \"radiusTestingEnabled\": false,\n    \"radiusCoaSupportEnabled\": false,\n    \"radiusAccountingEnabled\": true,\n    \"radiusAccountingServers\": [\n      {\n        \"serverId\": \"2\",\n        \"organizationRadiusServerId\": \"42\",\n        \"host\": \"1.2.3.4\",\n        \"port\": 22\n      }\n    ],\n    \"radiusGroupAttribute\": \"11\",\n    \"hostMode\": \"Single-Host\",\n    \"accessPolicyType\": \"Hybrid authentication\",\n    \"increaseAccessSpeed\": false,\n    \"guestVlanId\": 100,\n    \"dot1x\": {\n      \"controlDirection\": \"inbound\"\n    },\n    \"voiceVlanClients\": true,\n    \"urlRedirectWalledGardenEnabled\": true,\n    \"urlRedirectWalledGardenRanges\": [\n      \"192.168.1.0/24\"\n    ],\n    \"counts\": {\n      \"ports\": {\n        \"withThisPolicy\": 12\n      }\n    }\n  }\n]"
												}
											]
										},
										{
											"name": "getNetworkSwitchAccessPolicy",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/accessPolicies/:accessPolicyNumber",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"accessPolicies",
														":accessPolicyNumber"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "accessPolicyNumber",
															"value": "{{accessPolicyNumber}}",
															"description": "(Required) Access policy number"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return a specific access policy for a switch network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/accessPolicies/:accessPolicyNumber",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"accessPolicies",
																":accessPolicyNumber"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "accessPolicyNumber",
																	"value": "<string>",
																	"description": "(Required) Access policy number"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"Access policy #1\",\n  \"radiusServers\": [\n    {\n      \"serverId\": \"1\",\n      \"organizationRadiusServerId\": \"42\",\n      \"host\": \"1.2.3.4\",\n      \"port\": 22\n    }\n  ],\n  \"radius\": {\n    \"criticalAuth\": {\n      \"dataVlanId\": 100,\n      \"voiceVlanId\": 100,\n      \"suspendPortBounce\": true\n    },\n    \"failedAuthVlanId\": 100,\n    \"reAuthenticationInterval\": 120,\n    \"cache\": {\n      \"enabled\": false,\n      \"timeout\": 24\n    }\n  },\n  \"enforceRadiusMonitoring\": false,\n  \"guestPortBouncing\": false,\n  \"radiusTestingEnabled\": false,\n  \"radiusCoaSupportEnabled\": false,\n  \"radiusAccountingEnabled\": true,\n  \"radiusAccountingServers\": [\n    {\n      \"serverId\": \"2\",\n      \"organizationRadiusServerId\": \"42\",\n      \"host\": \"1.2.3.4\",\n      \"port\": 22\n    }\n  ],\n  \"radiusGroupAttribute\": \"11\",\n  \"hostMode\": \"Single-Host\",\n  \"accessPolicyType\": \"Hybrid authentication\",\n  \"increaseAccessSpeed\": false,\n  \"guestVlanId\": 100,\n  \"dot1x\": {\n    \"controlDirection\": \"inbound\"\n  },\n  \"voiceVlanClients\": true,\n  \"urlRedirectWalledGardenEnabled\": true,\n  \"urlRedirectWalledGardenRanges\": [\n    \"192.168.1.0/24\"\n  ],\n  \"counts\": {\n    \"ports\": {\n      \"withThisPolicy\": 12\n    }\n  }\n}"
												}
											]
										},
										{
											"name": "updateNetworkSwitchAccessPolicy",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"radiusServers\": [\n    {\n      \"serverId\": \"<string>\",\n      \"organizationRadiusServerId\": \"<string>\",\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    },\n    {\n      \"serverId\": \"<string>\",\n      \"organizationRadiusServerId\": \"<string>\",\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    }\n  ],\n  \"radius\": {\n    \"criticalAuth\": {\n      \"dataVlanId\": \"<integer>\",\n      \"voiceVlanId\": \"<integer>\",\n      \"suspendPortBounce\": \"<boolean>\"\n    },\n    \"failedAuthVlanId\": \"<integer>\",\n    \"reAuthenticationInterval\": \"<integer>\",\n    \"cache\": {\n      \"enabled\": \"<boolean>\",\n      \"timeout\": \"<integer>\"\n    }\n  },\n  \"guestPortBouncing\": \"<boolean>\",\n  \"radiusTestingEnabled\": \"<boolean>\",\n  \"radiusCoaSupportEnabled\": \"<boolean>\",\n  \"radiusAccountingEnabled\": \"<boolean>\",\n  \"radiusAccountingServers\": [\n    {\n      \"serverId\": \"<string>\",\n      \"organizationRadiusServerId\": \"<string>\",\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    },\n    {\n      \"serverId\": \"<string>\",\n      \"organizationRadiusServerId\": \"<string>\",\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    }\n  ],\n  \"radiusGroupAttribute\": \"<string>\",\n  \"hostMode\": \"<string>\",\n  \"accessPolicyType\": \"<string>\",\n  \"increaseAccessSpeed\": \"<boolean>\",\n  \"guestVlanId\": \"<integer>\",\n  \"dot1x\": {\n    \"controlDirection\": \"<string>\"\n  },\n  \"voiceVlanClients\": \"<boolean>\",\n  \"urlRedirectWalledGardenEnabled\": \"<boolean>\",\n  \"urlRedirectWalledGardenRanges\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/accessPolicies/:accessPolicyNumber",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"accessPolicies",
														":accessPolicyNumber"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "accessPolicyNumber",
															"value": "{{accessPolicyNumber}}",
															"description": "(Required) Access policy number"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update an access policy for a switch network. If you would like to enable Meraki Authentication, set radiusServers to empty array."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"radiusServers\": [\n    {\n      \"serverId\": \"<string>\",\n      \"organizationRadiusServerId\": \"<string>\",\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    },\n    {\n      \"serverId\": \"<string>\",\n      \"organizationRadiusServerId\": \"<string>\",\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    }\n  ],\n  \"radius\": {\n    \"criticalAuth\": {\n      \"dataVlanId\": \"<integer>\",\n      \"voiceVlanId\": \"<integer>\",\n      \"suspendPortBounce\": \"<boolean>\"\n    },\n    \"failedAuthVlanId\": \"<integer>\",\n    \"reAuthenticationInterval\": \"<integer>\",\n    \"cache\": {\n      \"enabled\": \"<boolean>\",\n      \"timeout\": \"<integer>\"\n    }\n  },\n  \"guestPortBouncing\": \"<boolean>\",\n  \"radiusTestingEnabled\": \"<boolean>\",\n  \"radiusCoaSupportEnabled\": \"<boolean>\",\n  \"radiusAccountingEnabled\": \"<boolean>\",\n  \"radiusAccountingServers\": [\n    {\n      \"serverId\": \"<string>\",\n      \"organizationRadiusServerId\": \"<string>\",\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    },\n    {\n      \"serverId\": \"<string>\",\n      \"organizationRadiusServerId\": \"<string>\",\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    }\n  ],\n  \"radiusGroupAttribute\": \"<string>\",\n  \"hostMode\": \"<string>\",\n  \"accessPolicyType\": \"<string>\",\n  \"increaseAccessSpeed\": \"<boolean>\",\n  \"guestVlanId\": \"<integer>\",\n  \"dot1x\": {\n    \"controlDirection\": \"<string>\"\n  },\n  \"voiceVlanClients\": \"<boolean>\",\n  \"urlRedirectWalledGardenEnabled\": \"<boolean>\",\n  \"urlRedirectWalledGardenRanges\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/accessPolicies/:accessPolicyNumber",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"accessPolicies",
																":accessPolicyNumber"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "accessPolicyNumber",
																	"value": "<string>",
																	"description": "(Required) Access policy number"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"Access policy #1\",\n  \"radiusServers\": [\n    {\n      \"serverId\": \"1\",\n      \"organizationRadiusServerId\": \"42\",\n      \"host\": \"1.2.3.4\",\n      \"port\": 22\n    }\n  ],\n  \"radius\": {\n    \"criticalAuth\": {\n      \"dataVlanId\": 100,\n      \"voiceVlanId\": 100,\n      \"suspendPortBounce\": true\n    },\n    \"failedAuthVlanId\": 100,\n    \"reAuthenticationInterval\": 120,\n    \"cache\": {\n      \"enabled\": false,\n      \"timeout\": 24\n    }\n  },\n  \"enforceRadiusMonitoring\": false,\n  \"guestPortBouncing\": false,\n  \"radiusTestingEnabled\": false,\n  \"radiusCoaSupportEnabled\": false,\n  \"radiusAccountingEnabled\": true,\n  \"radiusAccountingServers\": [\n    {\n      \"serverId\": \"2\",\n      \"organizationRadiusServerId\": \"42\",\n      \"host\": \"1.2.3.4\",\n      \"port\": 22\n    }\n  ],\n  \"radiusGroupAttribute\": \"11\",\n  \"hostMode\": \"Single-Host\",\n  \"accessPolicyType\": \"Hybrid authentication\",\n  \"increaseAccessSpeed\": false,\n  \"guestVlanId\": 100,\n  \"dot1x\": {\n    \"controlDirection\": \"inbound\"\n  },\n  \"voiceVlanClients\": true,\n  \"urlRedirectWalledGardenEnabled\": true,\n  \"urlRedirectWalledGardenRanges\": [\n    \"192.168.1.0/24\"\n  ],\n  \"counts\": {\n    \"ports\": {\n      \"withThisPolicy\": 12\n    }\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "alternateManagementInterface",
									"item": [
										{
											"name": "getNetworkSwitchAlternateManagementInterface",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/alternateManagementInterface",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"alternateManagementInterface"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the switch alternate management interface for the network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/alternateManagementInterface",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"alternateManagementInterface"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"enabled\": true,\n  \"vlanId\": 100,\n  \"protocols\": [\n    \"radius\",\n    \"snmp\",\n    \"syslog\"\n  ],\n  \"switches\": [\n    {\n      \"serial\": \"Q234-ABCD-5678\",\n      \"alternateManagementIp\": \"1.2.3.4\",\n      \"subnetMask\": \"255.255.255.0\",\n      \"gateway\": \"1.2.3.5\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "updateNetworkSwitchAlternateManagementInterface",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"vlanId\": \"<integer>\",\n  \"protocols\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"switches\": [\n    {\n      \"serial\": \"<string>\",\n      \"alternateManagementIp\": \"<string>\",\n      \"subnetMask\": \"<string>\",\n      \"gateway\": \"<string>\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"alternateManagementIp\": \"<string>\",\n      \"subnetMask\": \"<string>\",\n      \"gateway\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/alternateManagementInterface",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"alternateManagementInterface"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the switch alternate management interface for the network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"vlanId\": \"<integer>\",\n  \"protocols\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"switches\": [\n    {\n      \"serial\": \"<string>\",\n      \"alternateManagementIp\": \"<string>\",\n      \"subnetMask\": \"<string>\",\n      \"gateway\": \"<string>\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"alternateManagementIp\": \"<string>\",\n      \"subnetMask\": \"<string>\",\n      \"gateway\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/alternateManagementInterface",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"alternateManagementInterface"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"enabled\": true,\n  \"vlanId\": 100,\n  \"protocols\": [\n    \"radius\",\n    \"snmp\",\n    \"syslog\"\n  ],\n  \"switches\": [\n    {\n      \"serial\": \"Q234-ABCD-5678\",\n      \"alternateManagementIp\": \"1.2.3.4\",\n      \"subnetMask\": \"255.255.255.0\",\n      \"gateway\": \"1.2.3.5\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "configTemplates",
									"item": [
										{
											"name": "profiles",
											"item": [
												{
													"name": "ports",
													"item": [
														{
															"name": "getOrganizationConfigTemplateSwitchProfilePort",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/configTemplates/:configTemplateId/switch/profiles/:profileId/ports/:portId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"configTemplates",
																		":configTemplateId",
																		"switch",
																		"profiles",
																		":profileId",
																		"ports",
																		":portId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "configTemplateId",
																			"value": "{{configTemplateId}}",
																			"description": "(Required) Config template ID"
																		},
																		{
																			"key": "profileId",
																			"value": "{{profileId}}",
																			"description": "(Required) Profile ID"
																		},
																		{
																			"key": "portId",
																			"value": "{{portId}}",
																			"description": "(Required) Port ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Return a switch template port"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/configTemplates/:configTemplateId/switch/profiles/:profileId/ports/:portId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"configTemplates",
																				":configTemplateId",
																				"switch",
																				"profiles",
																				":profileId",
																				"ports",
																				":portId"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "configTemplateId",
																					"value": "<string>",
																					"description": "(Required) Config template ID"
																				},
																				{
																					"key": "profileId",
																					"value": "<string>",
																					"description": "(Required) Profile ID"
																				},
																				{
																					"key": "portId",
																					"value": "<string>",
																					"description": "(Required) Port ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"portId\": \"1\",\n  \"name\": \"My switch port\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"enabled\": true,\n  \"poeEnabled\": true,\n  \"type\": \"access\",\n  \"vlan\": 10,\n  \"voiceVlan\": 20,\n  \"allowedVlans\": \"1,3,5-10\",\n  \"isolationEnabled\": false,\n  \"rstpEnabled\": true,\n  \"stpGuard\": \"disabled\",\n  \"linkNegotiation\": \"Auto negotiate\",\n  \"linkNegotiationCapabilities\": [\n    \"Auto negotiate\",\n    \"1 Gigabit full duplex (auto)\"\n  ],\n  \"portScheduleId\": \"1234\",\n  \"schedule\": {\n    \"id\": \"1234\",\n    \"name\": \"Port Schedule\"\n  },\n  \"udld\": \"Alert only\",\n  \"accessPolicyType\": \"Sticky MAC allow list\",\n  \"accessPolicyNumber\": 2,\n  \"macAllowList\": [\n    \"34:56:fe:ce:8e:a0\",\n    \"34:56:fe:ce:8e:a1\"\n  ],\n  \"macWhitelistLimit\": 10,\n  \"stickyMacAllowList\": [\n    \"34:56:fe:ce:8e:b0\",\n    \"34:56:fe:ce:8e:b1\"\n  ],\n  \"stickyMacAllowListLimit\": 5,\n  \"stormControlEnabled\": true,\n  \"flexibleStackingEnabled\": true,\n  \"daiTrusted\": false,\n  \"profile\": {\n    \"enabled\": false,\n    \"id\": \"1284392014819\",\n    \"iname\": \"iname\"\n  },\n  \"module\": {\n    \"model\": \"MA-MOD-4X10G\"\n  },\n  \"mirror\": {\n    \"mode\": \"Not mirroring traffic\"\n  },\n  \"dot3az\": {\n    \"enabled\": false\n  },\n  \"stackwiseVirtual\": {\n    \"isStackWiseVirtualLink\": false,\n    \"isDualActiveDetector\": false\n  }\n}"
																}
															]
														},
														{
															"name": "getOrganizationConfigTemplateSwitchProfilePorts",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/configTemplates/:configTemplateId/switch/profiles/:profileId/ports",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"configTemplates",
																		":configTemplateId",
																		"switch",
																		"profiles",
																		":profileId",
																		"ports"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "configTemplateId",
																			"value": "{{configTemplateId}}",
																			"description": "(Required) Config template ID"
																		},
																		{
																			"key": "profileId",
																			"value": "{{profileId}}",
																			"description": "(Required) Profile ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Return all the ports of a switch template"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/configTemplates/:configTemplateId/switch/profiles/:profileId/ports",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"configTemplates",
																				":configTemplateId",
																				"switch",
																				"profiles",
																				":profileId",
																				"ports"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "configTemplateId",
																					"value": "<string>",
																					"description": "(Required) Config template ID"
																				},
																				{
																					"key": "profileId",
																					"value": "<string>",
																					"description": "(Required) Profile ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"portId\": \"1\",\n    \"name\": \"My switch port\",\n    \"tags\": [\n      \"tag1\",\n      \"tag2\"\n    ],\n    \"enabled\": true,\n    \"poeEnabled\": true,\n    \"type\": \"access\",\n    \"vlan\": 10,\n    \"voiceVlan\": 20,\n    \"allowedVlans\": \"1,3,5-10\",\n    \"isolationEnabled\": false,\n    \"rstpEnabled\": true,\n    \"stpGuard\": \"disabled\",\n    \"linkNegotiation\": \"Auto negotiate\",\n    \"linkNegotiationCapabilities\": [\n      \"Auto negotiate\",\n      \"1 Gigabit full duplex (auto)\"\n    ],\n    \"portScheduleId\": \"1234\",\n    \"schedule\": {\n      \"id\": \"1234\",\n      \"name\": \"Port Schedule\"\n    },\n    \"udld\": \"Alert only\",\n    \"accessPolicyType\": \"Sticky MAC allow list\",\n    \"accessPolicyNumber\": 2,\n    \"macAllowList\": [\n      \"34:56:fe:ce:8e:a0\",\n      \"34:56:fe:ce:8e:a1\"\n    ],\n    \"macWhitelistLimit\": 10,\n    \"stickyMacAllowList\": [\n      \"34:56:fe:ce:8e:b0\",\n      \"34:56:fe:ce:8e:b1\"\n    ],\n    \"stickyMacAllowListLimit\": 5,\n    \"stormControlEnabled\": true,\n    \"flexibleStackingEnabled\": true,\n    \"daiTrusted\": false,\n    \"profile\": {\n      \"enabled\": false,\n      \"id\": \"1284392014819\",\n      \"iname\": \"iname\"\n    },\n    \"module\": {\n      \"model\": \"MA-MOD-4X10G\"\n    },\n    \"mirror\": {\n      \"mode\": \"Not mirroring traffic\"\n    },\n    \"dot3az\": {\n      \"enabled\": false\n    },\n    \"stackwiseVirtual\": {\n      \"isStackWiseVirtualLink\": false,\n      \"isDualActiveDetector\": false\n    }\n  }\n]"
																}
															]
														},
														{
															"name": "updateOrganizationConfigTemplateSwitchProfilePort",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"enabled\": \"<boolean>\",\n  \"poeEnabled\": \"<boolean>\",\n  \"type\": \"<string>\",\n  \"vlan\": \"<integer>\",\n  \"voiceVlan\": \"<integer>\",\n  \"allowedVlans\": \"<string>\",\n  \"isolationEnabled\": \"<boolean>\",\n  \"rstpEnabled\": \"<boolean>\",\n  \"stpGuard\": \"<string>\",\n  \"linkNegotiation\": \"<string>\",\n  \"portScheduleId\": \"<string>\",\n  \"udld\": \"<string>\",\n  \"accessPolicyType\": \"<string>\",\n  \"accessPolicyNumber\": \"<integer>\",\n  \"macAllowList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"macWhitelistLimit\": \"<integer>\",\n  \"stickyMacAllowList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"stickyMacAllowListLimit\": \"<integer>\",\n  \"stormControlEnabled\": \"<boolean>\",\n  \"flexibleStackingEnabled\": \"<boolean>\",\n  \"daiTrusted\": \"<boolean>\",\n  \"profile\": {\n    \"enabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"iname\": \"<string>\"\n  },\n  \"dot3az\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/configTemplates/:configTemplateId/switch/profiles/:profileId/ports/:portId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"configTemplates",
																		":configTemplateId",
																		"switch",
																		"profiles",
																		":profileId",
																		"ports",
																		":portId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "configTemplateId",
																			"value": "{{configTemplateId}}",
																			"description": "(Required) Config template ID"
																		},
																		{
																			"key": "profileId",
																			"value": "{{profileId}}",
																			"description": "(Required) Profile ID"
																		},
																		{
																			"key": "portId",
																			"value": "{{portId}}",
																			"description": "(Required) Port ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Update a switch template port"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"My switch port\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"enabled\": true,\n  \"poeEnabled\": true,\n  \"type\": \"access\",\n  \"vlan\": 10,\n  \"voiceVlan\": 20,\n  \"allowedVlans\": \"1,3,5-10\",\n  \"isolationEnabled\": false,\n  \"rstpEnabled\": true,\n  \"stpGuard\": \"disabled\",\n  \"linkNegotiation\": \"Auto negotiate\",\n  \"portScheduleId\": \"1234\",\n  \"udld\": \"Alert only\",\n  \"accessPolicyType\": \"Sticky MAC allow list\",\n  \"accessPolicyNumber\": 2,\n  \"macAllowList\": [\n    \"34:56:fe:ce:8e:a0\",\n    \"34:56:fe:ce:8e:a1\"\n  ],\n  \"macWhitelistLimit\": 10,\n  \"stickyMacAllowList\": [\n    \"34:56:fe:ce:8e:b0\",\n    \"34:56:fe:ce:8e:b1\"\n  ],\n  \"stickyMacAllowListLimit\": 5,\n  \"stormControlEnabled\": true,\n  \"flexibleStackingEnabled\": true,\n  \"daiTrusted\": false,\n  \"profile\": {\n    \"enabled\": false,\n    \"iname\": \"iname\"\n  },\n  \"dot3az\": {\n    \"enabled\": false\n  }\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/configTemplates/:configTemplateId/switch/profiles/:profileId/ports/:portId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"configTemplates",
																				":configTemplateId",
																				"switch",
																				"profiles",
																				":profileId",
																				"ports",
																				":portId"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "configTemplateId",
																					"value": "<string>",
																					"description": "(Required) Config template ID"
																				},
																				{
																					"key": "profileId",
																					"value": "<string>",
																					"description": "(Required) Profile ID"
																				},
																				{
																					"key": "portId",
																					"value": "<string>",
																					"description": "(Required) Port ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"portId\": \"1\",\n  \"name\": \"My switch port\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"enabled\": true,\n  \"poeEnabled\": true,\n  \"type\": \"access\",\n  \"vlan\": 10,\n  \"voiceVlan\": 20,\n  \"allowedVlans\": \"1,3,5-10\",\n  \"isolationEnabled\": false,\n  \"rstpEnabled\": true,\n  \"stpGuard\": \"disabled\",\n  \"linkNegotiation\": \"Auto negotiate\",\n  \"linkNegotiationCapabilities\": [\n    \"Auto negotiate\",\n    \"1 Gigabit full duplex (auto)\"\n  ],\n  \"portScheduleId\": \"1234\",\n  \"schedule\": {\n    \"id\": \"1234\",\n    \"name\": \"Port Schedule\"\n  },\n  \"udld\": \"Alert only\",\n  \"accessPolicyType\": \"Sticky MAC allow list\",\n  \"accessPolicyNumber\": 2,\n  \"macAllowList\": [\n    \"34:56:fe:ce:8e:a0\",\n    \"34:56:fe:ce:8e:a1\"\n  ],\n  \"macWhitelistLimit\": 10,\n  \"stickyMacAllowList\": [\n    \"34:56:fe:ce:8e:b0\",\n    \"34:56:fe:ce:8e:b1\"\n  ],\n  \"stickyMacAllowListLimit\": 5,\n  \"stormControlEnabled\": true,\n  \"flexibleStackingEnabled\": true,\n  \"daiTrusted\": false,\n  \"profile\": {\n    \"enabled\": false,\n    \"id\": \"1284392014819\",\n    \"iname\": \"iname\"\n  },\n  \"module\": {\n    \"model\": \"MA-MOD-4X10G\"\n  },\n  \"mirror\": {\n    \"mode\": \"Not mirroring traffic\"\n  },\n  \"dot3az\": {\n    \"enabled\": false\n  },\n  \"stackwiseVirtual\": {\n    \"isStackWiseVirtualLink\": false,\n    \"isDualActiveDetector\": false\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "getOrganizationConfigTemplateSwitchProfiles",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/configTemplates/:configTemplateId/switch/profiles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"configTemplates",
																":configTemplateId",
																"switch",
																"profiles"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "configTemplateId",
																	"value": "{{configTemplateId}}",
																	"description": "(Required) Config template ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the switch templates for your switch template configuration"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/configTemplates/:configTemplateId/switch/profiles",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"configTemplates",
																		":configTemplateId",
																		"switch",
																		"profiles"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "configTemplateId",
																			"value": "<string>",
																			"description": "(Required) Config template ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"switchProfileId\": \"1234\",\n    \"name\": \"A Simple Switch Template\",\n    \"model\": \"MS450-24\"\n  }\n]"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "devices",
									"item": [
										{
											"name": "cloneOrganizationSwitchDevices",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sourceSerial\": \"<string>\",\n  \"targetSerials\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/switch/devices/clone",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"switch",
														"devices",
														"clone"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Clone port-level and some switch-level configuration settings from a source switch to one or more target switches. Cloned settings include: Aggregation Groups, Power Settings, Multicast Settings, MTU Configuration, STP Bridge priority, Port Mirroring"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"sourceSerial\": \"<string>\",\n  \"targetSerials\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/switch/devices/clone",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"switch",
																"devices",
																"clone"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"sourceSerial\": \"Q234-ABCD-5678\",\n  \"targetSerials\": [\n    \"Q234-ABCD-0001\",\n    \"Q234-ABCD-0002\",\n    \"Q234-ABCD-0003\"\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "dhcp",
									"item": [
										{
											"name": "v4",
											"item": [
												{
													"name": "servers",
													"item": [
														{
															"name": "seen",
															"item": [
																{
																	"name": "getNetworkSwitchDhcpV4ServersSeen",
																	"protocolProfileBehavior": {
																		"followAuthorizationHeader": false
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/switch/dhcp/v4/servers/seen",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"switch",
																				"dhcp",
																				"v4",
																				"servers",
																				"seen"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "{{t0}}",
																					"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
																					"disabled": true
																				},
																				{
																					"key": "timespan",
																					"value": "{{timespan}}",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
																					"disabled": true
																				},
																				{
																					"key": "perPage",
																					"value": "{{perPage}}",
																					"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																					"disabled": true
																				},
																				{
																					"key": "startingAfter",
																					"value": "{{startingAfter}}",
																					"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																					"disabled": true
																				},
																				{
																					"key": "endingBefore",
																					"value": "{{endingBefore}}",
																					"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																					"disabled": true
																				}
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "{{networkId}}",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		},
																		"description": "Return the network's DHCPv4 servers seen within the selected timeframe (default 1 day)"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/networks/:networkId/switch/dhcp/v4/servers/seen?t0=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"networks",
																						":networkId",
																						"switch",
																						"dhcp",
																						"v4",
																						"servers",
																						"seen"
																					],
																					"query": [
																						{
																							"key": "t0",
																							"value": "<string>"
																						},
																						{
																							"key": "timespan",
																							"value": "<float>"
																						},
																						{
																							"key": "perPage",
																							"value": "<integer>"
																						},
																						{
																							"key": "startingAfter",
																							"value": "<string>"
																						},
																						{
																							"key": "endingBefore",
																							"value": "<string>"
																						}
																					],
																					"variable": [
																						{
																							"key": "networkId",
																							"value": "<string>",
																							"description": "(Required) Network ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Link",
																					"value": "Lorem nisi fugiat",
																					"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																				},
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "[\n  {\n    \"mac\": \"00:11:22:33:44:55\",\n    \"vlan\": 100,\n    \"clientId\": \"k74272e\",\n    \"isAllowed\": true,\n    \"lastSeenAt\": \"2018-02-11T00:00:00.090210Z\",\n    \"seenBy\": [\n      {\n        \"serial\": \"Q234-ABCD-0001\",\n        \"name\": \"My switch2\",\n        \"url\": \"https://n1.meraki.com//n//manage/nodes/new_list/0000000000001\"\n      }\n    ],\n    \"type\": \"device\",\n    \"device\": {\n      \"serial\": \"Q234-ABCD-0002\",\n      \"name\": \"My AP\",\n      \"url\": \"https://n1.meraki.com//n//manage/nodes/new_list/000000000000\",\n      \"interface\": {\n        \"name\": \"My L3 Interface\",\n        \"url\": \"https://n1.meraki.com//n//manage/configure/switch_l3/l3_interface/00000\"\n      }\n    },\n    \"ipv4\": {\n      \"address\": \"10.0.0.0/24\",\n      \"subnet\": \"192.168.1.0/24\",\n      \"gateway\": \"1.2.3.5\"\n    },\n    \"isConfigured\": true,\n    \"lastAck\": {\n      \"ts\": \"2018-02-11T00:00:00.090210Z\",\n      \"ipv4\": {\n        \"address\": \"123.123.123.1\"\n      }\n    },\n    \"lastPacket\": {\n      \"source\": {\n        \"mac\": \"00:11:22:33:44:55\",\n        \"ipv4\": {\n          \"address\": \"1.2.3.4\"\n        },\n        \"port\": 443\n      },\n      \"destination\": {\n        \"mac\": \"22:33:44:55:66:77\",\n        \"ipv4\": {\n          \"address\": \"123.123.123.1\"\n        },\n        \"port\": 444\n      },\n      \"type\": \"ACK\",\n      \"ethernet\": {\n        \"type\": \"0x1212\"\n      },\n      \"ip\": {\n        \"id\": \"0x1313\",\n        \"version\": 4,\n        \"length\": 24929,\n        \"headerLength\": 1,\n        \"protocol\": 1,\n        \"ttl\": 50,\n        \"dscp\": {\n          \"tag\": 24,\n          \"ecn\": 1\n        }\n      },\n      \"udp\": {\n        \"length\": 24929,\n        \"checksum\": \"0x1414\"\n      },\n      \"fields\": {\n        \"op\": 1,\n        \"htype\": 1,\n        \"hlen\": 6,\n        \"hops\": 0,\n        \"xid\": \"0x11111111\",\n        \"secs\": 1526087474,\n        \"flags\": \"0x0000\",\n        \"ciaddr\": \"1.2.3.4\",\n        \"yiaddr\": \"123.123.123.1\",\n        \"siaddr\": \"1.2.3.4\",\n        \"giaddr\": \"1.2.3.5\",\n        \"chaddr\": \"abcdefghijkl\",\n        \"sname\": \"1.2.3.4\",\n        \"magicCookie\": \"0x22222222\",\n        \"options\": [\n          {\n            \"name\": \"Lease time\",\n            \"value\": \"86400 seconds\"\n          }\n        ]\n      }\n    }\n  }\n]"
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "dhcpServerPolicy",
									"item": [
										{
											"name": "arpInspection",
											"item": [
												{
													"name": "trustedServers",
													"item": [
														{
															"name": "createNetworkSwitchDhcpServerPolicyArpInspectionTrustedServer",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"mac\": \"<string>\",\n  \"vlan\": \"<integer>\",\n  \"ipv4\": {\n    \"address\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/dhcpServerPolicy/arpInspection/trustedServers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"dhcpServerPolicy",
																		"arpInspection",
																		"trustedServers"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Add a server to be trusted by Dynamic ARP Inspection on this network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"mac\": \"00:11:22:33:44:55\",\n  \"vlan\": 100,\n  \"ipv4\": {\n    \"address\": \"1.2.3.4\"\n  }\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/switch/dhcpServerPolicy/arpInspection/trustedServers",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"switch",
																				"dhcpServerPolicy",
																				"arpInspection",
																				"trustedServers"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"trustedServerId\": \"123\",\n  \"mac\": \"00:11:22:33:44:55\",\n  \"vlan\": 100,\n  \"ipv4\": {\n    \"address\": \"1.2.3.4\"\n  }\n}"
																}
															]
														},
														{
															"name": "deleteNetworkSwitchDhcpServerPolicyArpInspectionTrustedServer",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/dhcpServerPolicy/arpInspection/trustedServers/:trustedServerId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"dhcpServerPolicy",
																		"arpInspection",
																		"trustedServers",
																		":trustedServerId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "trustedServerId",
																			"value": "{{trustedServerId}}",
																			"description": "(Required) Trusted server ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Remove a server from being trusted by Dynamic ARP Inspection on this network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/switch/dhcpServerPolicy/arpInspection/trustedServers/:trustedServerId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"switch",
																				"dhcpServerPolicy",
																				"arpInspection",
																				"trustedServers",
																				":trustedServerId"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "trustedServerId",
																					"value": "<string>",
																					"description": "(Required) Trusted server ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "getNetworkSwitchDhcpServerPolicyArpInspectionTrustedServers",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/dhcpServerPolicy/arpInspection/trustedServers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"dhcpServerPolicy",
																		"arpInspection",
																		"trustedServers"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "{{perPage}}",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																			"disabled": true
																		},
																		{
																			"key": "startingAfter",
																			"value": "{{startingAfter}}",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "endingBefore",
																			"value": "{{endingBefore}}",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Return the list of servers trusted by Dynamic ARP Inspection on this network. These are also known as allow listed snoop entries"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/switch/dhcpServerPolicy/arpInspection/trustedServers?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"switch",
																				"dhcpServerPolicy",
																				"arpInspection",
																				"trustedServers"
																			],
																			"query": [
																				{
																					"key": "perPage",
																					"value": "<integer>"
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>"
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Link",
																			"value": "Lorem nisi fugiat",
																			"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"trustedServerId\": \"123\",\n    \"mac\": \"00:11:22:33:44:55\",\n    \"vlan\": 100,\n    \"ipv4\": {\n      \"address\": \"1.2.3.4\"\n    }\n  }\n]"
																}
															]
														},
														{
															"name": "updateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServer",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"mac\": \"<string>\",\n  \"vlan\": \"<integer>\",\n  \"ipv4\": {\n    \"address\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/dhcpServerPolicy/arpInspection/trustedServers/:trustedServerId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"dhcpServerPolicy",
																		"arpInspection",
																		"trustedServers",
																		":trustedServerId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "trustedServerId",
																			"value": "{{trustedServerId}}",
																			"description": "(Required) Trusted server ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Update a server that is trusted by Dynamic ARP Inspection on this network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"mac\": \"00:11:22:33:44:55\",\n  \"vlan\": 100,\n  \"ipv4\": {\n    \"address\": \"1.2.3.4\"\n  }\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/switch/dhcpServerPolicy/arpInspection/trustedServers/:trustedServerId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"switch",
																				"dhcpServerPolicy",
																				"arpInspection",
																				"trustedServers",
																				":trustedServerId"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "trustedServerId",
																					"value": "<string>",
																					"description": "(Required) Trusted server ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"trustedServerId\": \"123\",\n  \"mac\": \"00:11:22:33:44:55\",\n  \"vlan\": 100,\n  \"ipv4\": {\n    \"address\": \"1.2.3.4\"\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "warnings",
													"item": [
														{
															"name": "byDevice",
															"item": [
																{
																	"name": "getNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice",
																	"protocolProfileBehavior": {
																		"followAuthorizationHeader": false
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/switch/dhcpServerPolicy/arpInspection/warnings/byDevice",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"switch",
																				"dhcpServerPolicy",
																				"arpInspection",
																				"warnings",
																				"byDevice"
																			],
																			"query": [
																				{
																					"key": "perPage",
																					"value": "{{perPage}}",
																					"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																					"disabled": true
																				},
																				{
																					"key": "startingAfter",
																					"value": "{{startingAfter}}",
																					"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																					"disabled": true
																				},
																				{
																					"key": "endingBefore",
																					"value": "{{endingBefore}}",
																					"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																					"disabled": true
																				}
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "{{networkId}}",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		},
																		"description": "Return the devices that have a Dynamic ARP Inspection warning and their warnings"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/networks/:networkId/switch/dhcpServerPolicy/arpInspection/warnings/byDevice?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"networks",
																						":networkId",
																						"switch",
																						"dhcpServerPolicy",
																						"arpInspection",
																						"warnings",
																						"byDevice"
																					],
																					"query": [
																						{
																							"key": "perPage",
																							"value": "<integer>"
																						},
																						{
																							"key": "startingAfter",
																							"value": "<string>"
																						},
																						{
																							"key": "endingBefore",
																							"value": "<string>"
																						}
																					],
																					"variable": [
																						{
																							"key": "networkId",
																							"value": "<string>",
																							"description": "(Required) Network ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Link",
																					"value": "Lorem nisi fugiat",
																					"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																				},
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "[\n  {\n    \"serial\": \"Q234-ABCD-0001\",\n    \"name\": \"My switch\",\n    \"url\": \"https://n1.meraki.com//n//manage/nodes/new_list/000000000000\",\n    \"supportsInspection\": false,\n    \"hasTrustedPort\": false\n  }\n]"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "getNetworkSwitchDhcpServerPolicy",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/dhcpServerPolicy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"dhcpServerPolicy"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the DHCP server settings. Blocked/allowed servers are only applied when default policy is allow/block, respectively"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/dhcpServerPolicy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"dhcpServerPolicy"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"alerts\": {\n    \"email\": {\n      \"enabled\": true\n    }\n  },\n  \"defaultPolicy\": \"block\",\n  \"blockedServers\": [\n    \"00:50:56:00:00:03\",\n    \"00:50:56:00:00:04\"\n  ],\n  \"allowedServers\": [\n    \"00:50:56:00:00:01\",\n    \"00:50:56:00:00:02\"\n  ],\n  \"arpInspection\": {\n    \"enabled\": true,\n    \"unsupportedModels\": [\n      \"MS120-8\",\n      \"MS125-24\"\n    ]\n  }\n}"
												}
											]
										},
										{
											"name": "updateNetworkSwitchDhcpServerPolicy",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"alerts\": {\n    \"email\": {\n      \"enabled\": \"<boolean>\"\n    }\n  },\n  \"defaultPolicy\": \"<string>\",\n  \"allowedServers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"blockedServers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"arpInspection\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/dhcpServerPolicy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"dhcpServerPolicy"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the DHCP server settings. Blocked/allowed servers are only applied when default policy is allow/block, respectively"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"alerts\": {\n    \"email\": {\n      \"enabled\": true\n    }\n  },\n  \"defaultPolicy\": \"block\",\n  \"blockedServers\": [\n    \"00:50:56:00:00:03\",\n    \"00:50:56:00:00:04\"\n  ],\n  \"allowedServers\": [\n    \"00:50:56:00:00:01\",\n    \"00:50:56:00:00:02\"\n  ],\n  \"arpInspection\": {\n    \"enabled\": true\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/dhcpServerPolicy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"dhcpServerPolicy"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"alerts\": {\n    \"email\": {\n      \"enabled\": true\n    }\n  },\n  \"defaultPolicy\": \"block\",\n  \"blockedServers\": [\n    \"00:50:56:00:00:03\",\n    \"00:50:56:00:00:04\"\n  ],\n  \"allowedServers\": [\n    \"00:50:56:00:00:01\",\n    \"00:50:56:00:00:02\"\n  ],\n  \"arpInspection\": {\n    \"enabled\": true,\n    \"unsupportedModels\": [\n      \"MS120-8\",\n      \"MS125-24\"\n    ]\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "dscpToCosMappings",
									"item": [
										{
											"name": "getNetworkSwitchDscpToCosMappings",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/dscpToCosMappings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"dscpToCosMappings"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the DSCP to CoS mappings"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/dscpToCosMappings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"dscpToCosMappings"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"mappings\": [\n    {\n      \"dscp\": 1,\n      \"cos\": 1,\n      \"title\": \"Video\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "updateNetworkSwitchDscpToCosMappings",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"mappings\": [\n    {\n      \"dscp\": \"<integer>\",\n      \"cos\": \"<integer>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"dscp\": \"<integer>\",\n      \"cos\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/dscpToCosMappings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"dscpToCosMappings"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the DSCP to CoS mappings"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"mappings\": [\n    {\n      \"dscp\": \"<integer>\",\n      \"cos\": \"<integer>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"dscp\": \"<integer>\",\n      \"cos\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/dscpToCosMappings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"dscpToCosMappings"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"mappings\": [\n    {\n      \"dscp\": 1,\n      \"cos\": 1,\n      \"title\": \"Video\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "linkAggregations",
									"item": [
										{
											"name": "createNetworkSwitchLinkAggregation",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"switchPorts\": [\n    {\n      \"serial\": \"<string>\",\n      \"portId\": \"<string>\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"portId\": \"<string>\"\n    }\n  ],\n  \"switchProfilePorts\": [\n    {\n      \"profile\": \"<string>\",\n      \"portId\": \"<string>\"\n    },\n    {\n      \"profile\": \"<string>\",\n      \"portId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/linkAggregations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"linkAggregations"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Create a link aggregation group"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"switchPorts\": [\n    {\n      \"serial\": \"<string>\",\n      \"portId\": \"<string>\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"portId\": \"<string>\"\n    }\n  ],\n  \"switchProfilePorts\": [\n    {\n      \"profile\": \"<string>\",\n      \"portId\": \"<string>\"\n    },\n    {\n      \"profile\": \"<string>\",\n      \"portId\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/linkAggregations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"linkAggregations"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"NDU2N18yXzM=\",\n  \"switchPorts\": [\n    {\n      \"serial\": \"Q234-ABCD-0001\",\n      \"portId\": \"1\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "deleteNetworkSwitchLinkAggregation",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/linkAggregations/:linkAggregationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"linkAggregations",
														":linkAggregationId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "linkAggregationId",
															"value": "{{linkAggregationId}}",
															"description": "(Required) Link aggregation ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Split a link aggregation group into separate ports"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/linkAggregations/:linkAggregationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"linkAggregations",
																":linkAggregationId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "linkAggregationId",
																	"value": "<string>",
																	"description": "(Required) Link aggregation ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getNetworkSwitchLinkAggregations",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/linkAggregations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"linkAggregations"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List link aggregation groups"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/linkAggregations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"linkAggregations"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"NDU2N18yXzM=\",\n    \"switchPorts\": [\n      {\n        \"serial\": \"Q234-ABCD-0001\",\n        \"portId\": \"1\"\n      }\n    ]\n  }\n]"
												}
											]
										},
										{
											"name": "updateNetworkSwitchLinkAggregation",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"switchPorts\": [\n    {\n      \"serial\": \"<string>\",\n      \"portId\": \"<string>\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"portId\": \"<string>\"\n    }\n  ],\n  \"switchProfilePorts\": [\n    {\n      \"profile\": \"<string>\",\n      \"portId\": \"<string>\"\n    },\n    {\n      \"profile\": \"<string>\",\n      \"portId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/linkAggregations/:linkAggregationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"linkAggregations",
														":linkAggregationId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "linkAggregationId",
															"value": "{{linkAggregationId}}",
															"description": "(Required) Link aggregation ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update a link aggregation group"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"switchPorts\": [\n    {\n      \"serial\": \"<string>\",\n      \"portId\": \"<string>\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"portId\": \"<string>\"\n    }\n  ],\n  \"switchProfilePorts\": [\n    {\n      \"profile\": \"<string>\",\n      \"portId\": \"<string>\"\n    },\n    {\n      \"profile\": \"<string>\",\n      \"portId\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/linkAggregations/:linkAggregationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"linkAggregations",
																":linkAggregationId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "linkAggregationId",
																	"value": "<string>",
																	"description": "(Required) Link aggregation ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"NDU2N18yXzM=\",\n  \"switchPorts\": [\n    {\n      \"serial\": \"Q234-ABCD-0001\",\n      \"portId\": \"1\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "mtu",
									"item": [
										{
											"name": "getNetworkSwitchMtu",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/mtu",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"mtu"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the MTU configuration"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/mtu",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"mtu"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"defaultMtuSize\": 9578,\n  \"overrides\": [\n    {\n      \"switches\": [\n        \"Q234-ABCD-0001\",\n        \"Q234-ABCD-0002\",\n        \"Q234-ABCD-0003\"\n      ],\n      \"switchProfiles\": [\n        \"1284392014819\",\n        \"2983092129865\"\n      ],\n      \"mtuSize\": 1500\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "updateNetworkSwitchMtu",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"defaultMtuSize\": \"<integer>\",\n  \"overrides\": [\n    {\n      \"mtuSize\": \"<integer>\",\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"mtuSize\": \"<integer>\",\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/mtu",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"mtu"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the MTU configuration"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"defaultMtuSize\": \"<integer>\",\n  \"overrides\": [\n    {\n      \"mtuSize\": \"<integer>\",\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"mtuSize\": \"<integer>\",\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/mtu",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"mtu"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"defaultMtuSize\": 9578,\n  \"overrides\": [\n    {\n      \"switches\": [\n        \"Q234-ABCD-0001\",\n        \"Q234-ABCD-0002\",\n        \"Q234-ABCD-0003\"\n      ],\n      \"switchProfiles\": [\n        \"1284392014819\",\n        \"2983092129865\"\n      ],\n      \"mtuSize\": 1500\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "ports",
									"item": [
										{
											"name": "bySwitch",
											"item": [
												{
													"name": "getOrganizationSwitchPortsBySwitch",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/switch/ports/bySwitch",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"switch",
																"ports",
																"bySwitch"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 50. Default is 50.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "configurationUpdatedAfter",
																	"value": "{{configurationUpdatedAfter}}",
																	"description": "Optional parameter to filter items to switches where the configuration has been updated after the given timestamp.",
																	"disabled": true
																},
																{
																	"key": "mac",
																	"value": "{{mac}}",
																	"description": "Optional parameter to filter items to switches with MAC addresses that contain the search term or are an exact match.",
																	"disabled": true
																},
																{
																	"key": "macs",
																	"value": "{{macs}}",
																	"description": "Optional parameter to filter items to switches that have one of the provided MAC addresses.",
																	"disabled": true
																},
																{
																	"key": "macs",
																	"value": "{{macs}}",
																	"description": "Optional parameter to filter items to switches that have one of the provided MAC addresses.",
																	"disabled": true
																},
																{
																	"key": "name",
																	"value": "{{name}}",
																	"description": "Optional parameter to filter items to switches with names that contain the search term or are an exact match.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Optional parameter to filter items to switches in one of the provided networks.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Optional parameter to filter items to switches in one of the provided networks.",
																	"disabled": true
																},
																{
																	"key": "portProfileIds",
																	"value": "{{portProfileIds}}",
																	"description": "Optional parameter to filter items to switches that contain switchports belonging to one of the specified port profiles.",
																	"disabled": true
																},
																{
																	"key": "portProfileIds",
																	"value": "{{portProfileIds}}",
																	"description": "Optional parameter to filter items to switches that contain switchports belonging to one of the specified port profiles.",
																	"disabled": true
																},
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "Optional parameter to filter items to switches with serial number that contains the search term or are an exact match.",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Optional parameter to filter items to switches that have one of the provided serials.",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Optional parameter to filter items to switches that have one of the provided serials.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the switchports in an organization by switch"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/switch/ports/bySwitch?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&configurationUpdatedAfter=<dateTime>&mac=<string>&macs=<string>&macs=<string>&name=<string>&networkIds=<string>&networkIds=<string>&portProfileIds=<string>&portProfileIds=<string>&serial=<string>&serials=<string>&serials=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"switch",
																		"ports",
																		"bySwitch"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		},
																		{
																			"key": "configurationUpdatedAfter",
																			"value": "<dateTime>"
																		},
																		{
																			"key": "mac",
																			"value": "<string>"
																		},
																		{
																			"key": "macs",
																			"value": "<string>"
																		},
																		{
																			"key": "macs",
																			"value": "<string>"
																		},
																		{
																			"key": "name",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "portProfileIds",
																			"value": "<string>"
																		},
																		{
																			"key": "portProfileIds",
																			"value": "<string>"
																		},
																		{
																			"key": "serial",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"name\": \"Example Switch\",\n  \"serial\": \"Q555-5555-5555\",\n  \"mac\": \"01:23:45:67:ab:cd\",\n  \"network\": {\n    \"name\": \"Example Network\",\n    \"id\": \"L_12345\"\n  },\n  \"model\": \"MS120-8\",\n  \"ports\": [\n    {\n      \"portId\": \"1\",\n      \"name\": \"My switch port\",\n      \"tags\": [\n        \"tag1\",\n        \"tag2\"\n      ],\n      \"enabled\": true,\n      \"poeEnabled\": true,\n      \"type\": \"access\",\n      \"vlan\": 10,\n      \"voiceVlan\": 20,\n      \"allowedVlans\": \"1,3,5-10\",\n      \"rstpEnabled\": true,\n      \"stpGuard\": \"disabled\",\n      \"linkNegotiation\": \"Auto negotiate\",\n      \"accessPolicyType\": \"Sticky MAC allow list\",\n      \"stickyMacAllowList\": [\n        \"34:56:fe:ce:8e:b0\",\n        \"34:56:fe:ce:8e:b1\"\n      ],\n      \"stickyMacAllowListLimit\": 5\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "getDeviceSwitchPort",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/switch/ports/:portId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"switch",
														"ports",
														":portId"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "portId",
															"value": "{{portId}}",
															"description": "(Required) Port ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return a switch port"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/switch/ports/:portId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"ports",
																":portId"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "portId",
																	"value": "<string>",
																	"description": "(Required) Port ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"portId\": \"1\",\n  \"name\": \"My switch port\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"enabled\": true,\n  \"poeEnabled\": true,\n  \"type\": \"access\",\n  \"vlan\": 10,\n  \"voiceVlan\": 20,\n  \"allowedVlans\": \"1,3,5-10\",\n  \"isolationEnabled\": false,\n  \"rstpEnabled\": true,\n  \"stpGuard\": \"disabled\",\n  \"linkNegotiation\": \"Auto negotiate\",\n  \"linkNegotiationCapabilities\": [\n    \"Auto negotiate\",\n    \"1 Gigabit full duplex (auto)\"\n  ],\n  \"portScheduleId\": \"1234\",\n  \"schedule\": {\n    \"id\": \"1234\",\n    \"name\": \"Port Schedule\"\n  },\n  \"udld\": \"Alert only\",\n  \"accessPolicyType\": \"Sticky MAC allow list\",\n  \"accessPolicyNumber\": 2,\n  \"macAllowList\": [\n    \"34:56:fe:ce:8e:a0\",\n    \"34:56:fe:ce:8e:a1\"\n  ],\n  \"macWhitelistLimit\": 10,\n  \"stickyMacAllowList\": [\n    \"34:56:fe:ce:8e:b0\",\n    \"34:56:fe:ce:8e:b1\"\n  ],\n  \"stickyMacAllowListLimit\": 5,\n  \"stormControlEnabled\": true,\n  \"adaptivePolicyGroupId\": \"123\",\n  \"adaptivePolicyGroup\": {\n    \"id\": \"123\",\n    \"name\": \"Adaptive Policy Group\"\n  },\n  \"peerSgtCapable\": false,\n  \"flexibleStackingEnabled\": true,\n  \"daiTrusted\": false,\n  \"profile\": {\n    \"enabled\": false,\n    \"id\": \"1284392014819\",\n    \"iname\": \"iname\"\n  },\n  \"module\": {\n    \"model\": \"MA-MOD-4X10G\"\n  },\n  \"mirror\": {\n    \"mode\": \"Not mirroring traffic\"\n  },\n  \"dot3az\": {\n    \"enabled\": false\n  },\n  \"stackwiseVirtual\": {\n    \"isStackWiseVirtualLink\": false,\n    \"isDualActiveDetector\": false\n  }\n}"
												}
											]
										},
										{
											"name": "getDeviceSwitchPorts",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/switch/ports",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"switch",
														"ports"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the switch ports for a switch"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/switch/ports",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"ports"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"portId\": \"1\",\n    \"name\": \"My switch port\",\n    \"tags\": [\n      \"tag1\",\n      \"tag2\"\n    ],\n    \"enabled\": true,\n    \"poeEnabled\": true,\n    \"type\": \"access\",\n    \"vlan\": 10,\n    \"voiceVlan\": 20,\n    \"allowedVlans\": \"1,3,5-10\",\n    \"isolationEnabled\": false,\n    \"rstpEnabled\": true,\n    \"stpGuard\": \"disabled\",\n    \"linkNegotiation\": \"Auto negotiate\",\n    \"linkNegotiationCapabilities\": [\n      \"Auto negotiate\",\n      \"1 Gigabit full duplex (auto)\"\n    ],\n    \"portScheduleId\": \"1234\",\n    \"schedule\": {\n      \"id\": \"1234\",\n      \"name\": \"Port Schedule\"\n    },\n    \"udld\": \"Alert only\",\n    \"accessPolicyType\": \"Sticky MAC allow list\",\n    \"accessPolicyNumber\": 2,\n    \"macAllowList\": [\n      \"34:56:fe:ce:8e:a0\",\n      \"34:56:fe:ce:8e:a1\"\n    ],\n    \"macWhitelistLimit\": 10,\n    \"stickyMacAllowList\": [\n      \"34:56:fe:ce:8e:b0\",\n      \"34:56:fe:ce:8e:b1\"\n    ],\n    \"stickyMacAllowListLimit\": 5,\n    \"stormControlEnabled\": true,\n    \"adaptivePolicyGroupId\": \"123\",\n    \"adaptivePolicyGroup\": {\n      \"id\": \"123\",\n      \"name\": \"Adaptive Policy Group\"\n    },\n    \"peerSgtCapable\": false,\n    \"flexibleStackingEnabled\": true,\n    \"daiTrusted\": false,\n    \"profile\": {\n      \"enabled\": false,\n      \"id\": \"1284392014819\",\n      \"iname\": \"iname\"\n    },\n    \"module\": {\n      \"model\": \"MA-MOD-4X10G\"\n    },\n    \"mirror\": {\n      \"mode\": \"Not mirroring traffic\"\n    },\n    \"dot3az\": {\n      \"enabled\": false\n    },\n    \"stackwiseVirtual\": {\n      \"isStackWiseVirtualLink\": false,\n      \"isDualActiveDetector\": false\n    }\n  }\n]"
												}
											]
										},
										{
											"name": "updateDeviceSwitchPort",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"enabled\": \"<boolean>\",\n  \"poeEnabled\": \"<boolean>\",\n  \"type\": \"<string>\",\n  \"vlan\": \"<integer>\",\n  \"voiceVlan\": \"<integer>\",\n  \"allowedVlans\": \"<string>\",\n  \"isolationEnabled\": \"<boolean>\",\n  \"rstpEnabled\": \"<boolean>\",\n  \"stpGuard\": \"<string>\",\n  \"linkNegotiation\": \"<string>\",\n  \"portScheduleId\": \"<string>\",\n  \"udld\": \"<string>\",\n  \"accessPolicyType\": \"<string>\",\n  \"accessPolicyNumber\": \"<integer>\",\n  \"macAllowList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"macWhitelistLimit\": \"<integer>\",\n  \"stickyMacAllowList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"stickyMacAllowListLimit\": \"<integer>\",\n  \"stormControlEnabled\": \"<boolean>\",\n  \"adaptivePolicyGroupId\": \"<string>\",\n  \"peerSgtCapable\": \"<boolean>\",\n  \"flexibleStackingEnabled\": \"<boolean>\",\n  \"daiTrusted\": \"<boolean>\",\n  \"profile\": {\n    \"enabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"iname\": \"<string>\"\n  },\n  \"dot3az\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/switch/ports/:portId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"switch",
														"ports",
														":portId"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "portId",
															"value": "{{portId}}",
															"description": "(Required) Port ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update a switch port"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"My switch port\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"enabled\": true,\n  \"poeEnabled\": true,\n  \"type\": \"access\",\n  \"vlan\": 10,\n  \"voiceVlan\": 20,\n  \"allowedVlans\": \"1,3,5-10\",\n  \"isolationEnabled\": false,\n  \"rstpEnabled\": true,\n  \"stpGuard\": \"disabled\",\n  \"linkNegotiation\": \"Auto negotiate\",\n  \"portScheduleId\": \"1234\",\n  \"udld\": \"Alert only\",\n  \"accessPolicyType\": \"Sticky MAC allow list\",\n  \"accessPolicyNumber\": 2,\n  \"macAllowList\": [\n    \"34:56:fe:ce:8e:a0\",\n    \"34:56:fe:ce:8e:a1\"\n  ],\n  \"macWhitelistLimit\": 10,\n  \"stickyMacAllowList\": [\n    \"34:56:fe:ce:8e:b0\",\n    \"34:56:fe:ce:8e:b1\"\n  ],\n  \"stickyMacAllowListLimit\": 5,\n  \"stormControlEnabled\": true,\n  \"adaptivePolicyGroupId\": \"123\",\n  \"peerSgtCapable\": false,\n  \"flexibleStackingEnabled\": true,\n  \"daiTrusted\": false,\n  \"profile\": {\n    \"enabled\": false,\n    \"iname\": \"iname\"\n  },\n  \"dot3az\": {\n    \"enabled\": false\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/switch/ports/:portId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"ports",
																":portId"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "portId",
																	"value": "<string>",
																	"description": "(Required) Port ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"portId\": \"1\",\n  \"name\": \"My switch port\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"enabled\": true,\n  \"poeEnabled\": true,\n  \"type\": \"access\",\n  \"vlan\": 10,\n  \"voiceVlan\": 20,\n  \"allowedVlans\": \"1,3,5-10\",\n  \"isolationEnabled\": false,\n  \"rstpEnabled\": true,\n  \"stpGuard\": \"disabled\",\n  \"linkNegotiation\": \"Auto negotiate\",\n  \"linkNegotiationCapabilities\": [\n    \"Auto negotiate\",\n    \"1 Gigabit full duplex (auto)\"\n  ],\n  \"portScheduleId\": \"1234\",\n  \"schedule\": {\n    \"id\": \"1234\",\n    \"name\": \"Port Schedule\"\n  },\n  \"udld\": \"Alert only\",\n  \"accessPolicyType\": \"Sticky MAC allow list\",\n  \"accessPolicyNumber\": 2,\n  \"macAllowList\": [\n    \"34:56:fe:ce:8e:a0\",\n    \"34:56:fe:ce:8e:a1\"\n  ],\n  \"macWhitelistLimit\": 10,\n  \"stickyMacAllowList\": [\n    \"34:56:fe:ce:8e:b0\",\n    \"34:56:fe:ce:8e:b1\"\n  ],\n  \"stickyMacAllowListLimit\": 5,\n  \"stormControlEnabled\": true,\n  \"adaptivePolicyGroupId\": \"123\",\n  \"adaptivePolicyGroup\": {\n    \"id\": \"123\",\n    \"name\": \"Adaptive Policy Group\"\n  },\n  \"peerSgtCapable\": false,\n  \"flexibleStackingEnabled\": true,\n  \"daiTrusted\": false,\n  \"profile\": {\n    \"enabled\": false,\n    \"id\": \"1284392014819\",\n    \"iname\": \"iname\"\n  },\n  \"module\": {\n    \"model\": \"MA-MOD-4X10G\"\n  },\n  \"mirror\": {\n    \"mode\": \"Not mirroring traffic\"\n  },\n  \"dot3az\": {\n    \"enabled\": false\n  },\n  \"stackwiseVirtual\": {\n    \"isStackWiseVirtualLink\": false,\n    \"isDualActiveDetector\": false\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "portSchedules",
									"item": [
										{
											"name": "createNetworkSwitchPortSchedule",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"portSchedule\": {\n    \"monday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"tuesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"wednesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"thursday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"friday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"saturday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"sunday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/portSchedules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"portSchedules"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Add a switch port schedule"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"Weekdays schedule\",\n  \"portSchedule\": {\n    \"monday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"tuesday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"wednesday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"thursday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"friday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"saturday\": {\n      \"active\": false,\n      \"from\": \"0:00\",\n      \"to\": \"24:00\"\n    },\n    \"sunday\": {\n      \"active\": false,\n      \"from\": \"0:00\",\n      \"to\": \"24:00\"\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/portSchedules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"portSchedules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"networkId\": \"N_24329156\",\n  \"name\": \"Weekdays schedule\",\n  \"portSchedule\": {\n    \"monday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"tuesday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"wednesday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"thursday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"friday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"saturday\": {\n      \"active\": false,\n      \"from\": \"0:00\",\n      \"to\": \"24:00\"\n    },\n    \"sunday\": {\n      \"active\": false,\n      \"from\": \"0:00\",\n      \"to\": \"24:00\"\n    }\n  }\n}"
												}
											]
										},
										{
											"name": "deleteNetworkSwitchPortSchedule",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/portSchedules/:portScheduleId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"portSchedules",
														":portScheduleId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "portScheduleId",
															"value": "{{portScheduleId}}",
															"description": "(Required) Port schedule ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Delete a switch port schedule"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/portSchedules/:portScheduleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"portSchedules",
																":portScheduleId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "portScheduleId",
																	"value": "<string>",
																	"description": "(Required) Port schedule ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getNetworkSwitchPortSchedules",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/portSchedules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"portSchedules"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List switch port schedules"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/portSchedules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"portSchedules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"1234\",\n    \"networkId\": \"N_24329156\",\n    \"name\": \"Weekdays schedule\",\n    \"portSchedule\": {\n      \"monday\": {\n        \"active\": true,\n        \"from\": \"9:00\",\n        \"to\": \"17:00\"\n      },\n      \"tuesday\": {\n        \"active\": true,\n        \"from\": \"9:00\",\n        \"to\": \"17:00\"\n      },\n      \"wednesday\": {\n        \"active\": true,\n        \"from\": \"9:00\",\n        \"to\": \"17:00\"\n      },\n      \"thursday\": {\n        \"active\": true,\n        \"from\": \"9:00\",\n        \"to\": \"17:00\"\n      },\n      \"friday\": {\n        \"active\": true,\n        \"from\": \"9:00\",\n        \"to\": \"17:00\"\n      },\n      \"saturday\": {\n        \"active\": false,\n        \"from\": \"0:00\",\n        \"to\": \"24:00\"\n      },\n      \"sunday\": {\n        \"active\": false,\n        \"from\": \"0:00\",\n        \"to\": \"24:00\"\n      }\n    }\n  }\n]"
												}
											]
										},
										{
											"name": "updateNetworkSwitchPortSchedule",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"portSchedule\": {\n    \"monday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"tuesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"wednesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"thursday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"friday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"saturday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"sunday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/portSchedules/:portScheduleId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"portSchedules",
														":portScheduleId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "portScheduleId",
															"value": "{{portScheduleId}}",
															"description": "(Required) Port schedule ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update a switch port schedule"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"Weekdays schedule\",\n  \"portSchedule\": {\n    \"monday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"tuesday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"wednesday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"thursday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"friday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"saturday\": {\n      \"active\": false,\n      \"from\": \"0:00\",\n      \"to\": \"24:00\"\n    },\n    \"sunday\": {\n      \"active\": false,\n      \"from\": \"0:00\",\n      \"to\": \"24:00\"\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/portSchedules/:portScheduleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"portSchedules",
																":portScheduleId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "portScheduleId",
																	"value": "<string>",
																	"description": "(Required) Port schedule ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"networkId\": \"N_24329156\",\n  \"name\": \"Weekdays schedule\",\n  \"portSchedule\": {\n    \"monday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"tuesday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"wednesday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"thursday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"friday\": {\n      \"active\": true,\n      \"from\": \"9:00\",\n      \"to\": \"17:00\"\n    },\n    \"saturday\": {\n      \"active\": false,\n      \"from\": \"0:00\",\n      \"to\": \"24:00\"\n    },\n    \"sunday\": {\n      \"active\": false,\n      \"from\": \"0:00\",\n      \"to\": \"24:00\"\n    }\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "qosRules",
									"item": [
										{
											"name": "order",
											"item": [
												{
													"name": "getNetworkSwitchQosRulesOrder",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/qosRules/order",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"qosRules",
																"order"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the quality of service rule IDs by order in which they will be processed by the switch"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/qosRules/order",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"qosRules",
																		"order"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"ruleIds\": [\n    \"1284392014819\",\n    \"2983092129865\"\n  ]\n}"
														}
													]
												},
												{
													"name": "updateNetworkSwitchQosRulesOrder",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ruleIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/qosRules/order",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"qosRules",
																"order"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the order in which the rules should be processed by the switch"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"ruleIds\": [\n    \"1284392014819\",\n    \"2983092129865\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/qosRules/order",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"qosRules",
																		"order"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"ruleIds\": [\n    \"1284392014819\",\n    \"2983092129865\"\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "createNetworkSwitchQosRule",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"vlan\": \"<integer>\",\n  \"protocol\": \"<string>\",\n  \"srcPort\": \"<integer>\",\n  \"srcPortRange\": \"<string>\",\n  \"dstPort\": \"<integer>\",\n  \"dstPortRange\": \"<string>\",\n  \"dscp\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/qosRules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"qosRules"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Add a quality of service rule"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"vlan\": 100,\n  \"protocol\": \"TCP\",\n  \"srcPort\": 2000,\n  \"srcPortRange\": \"70-80\",\n  \"dstPort\": 3000,\n  \"dstPortRange\": \"3000-3100\",\n  \"dscp\": 0\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/qosRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"qosRules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1284392014819\",\n  \"vlan\": 100,\n  \"protocol\": \"TCP\",\n  \"srcPort\": 2000,\n  \"srcPortRange\": \"70-80\",\n  \"dstPort\": 3000,\n  \"dstPortRange\": \"3000-3100\",\n  \"dscp\": 0\n}"
												}
											]
										},
										{
											"name": "deleteNetworkSwitchQosRule",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/qosRules/:qosRuleId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"qosRules",
														":qosRuleId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "qosRuleId",
															"value": "{{qosRuleId}}",
															"description": "(Required) Qos rule ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Delete a quality of service rule"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/qosRules/:qosRuleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"qosRules",
																":qosRuleId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "qosRuleId",
																	"value": "<string>",
																	"description": "(Required) Qos rule ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getNetworkSwitchQosRule",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/qosRules/:qosRuleId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"qosRules",
														":qosRuleId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "qosRuleId",
															"value": "{{qosRuleId}}",
															"description": "(Required) Qos rule ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return a quality of service rule"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/qosRules/:qosRuleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"qosRules",
																":qosRuleId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "qosRuleId",
																	"value": "<string>",
																	"description": "(Required) Qos rule ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1284392014819\",\n  \"vlan\": 100,\n  \"protocol\": \"TCP\",\n  \"srcPort\": 2000,\n  \"srcPortRange\": \"70-80\",\n  \"dstPort\": 3000,\n  \"dstPortRange\": \"3000-3100\",\n  \"dscp\": 0\n}"
												}
											]
										},
										{
											"name": "getNetworkSwitchQosRules",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/qosRules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"qosRules"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List quality of service rules"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/qosRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"qosRules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"1284392014819\",\n    \"vlan\": 100,\n    \"protocol\": \"TCP\",\n    \"srcPort\": 2000,\n    \"srcPortRange\": \"70-80\",\n    \"dstPort\": 3000,\n    \"dstPortRange\": \"3000-3100\",\n    \"dscp\": 0\n  }\n]"
												}
											]
										},
										{
											"name": "updateNetworkSwitchQosRule",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"vlan\": \"<integer>\",\n  \"protocol\": \"<string>\",\n  \"srcPort\": \"<integer>\",\n  \"srcPortRange\": \"<string>\",\n  \"dstPort\": \"<integer>\",\n  \"dstPortRange\": \"<string>\",\n  \"dscp\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/qosRules/:qosRuleId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"qosRules",
														":qosRuleId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "qosRuleId",
															"value": "{{qosRuleId}}",
															"description": "(Required) Qos rule ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update a quality of service rule"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"vlan\": 100,\n  \"protocol\": \"TCP\",\n  \"srcPort\": 2000,\n  \"srcPortRange\": \"70-80\",\n  \"dstPort\": 3000,\n  \"dstPortRange\": \"3000-3100\",\n  \"dscp\": 0\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/qosRules/:qosRuleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"qosRules",
																":qosRuleId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "qosRuleId",
																	"value": "<string>",
																	"description": "(Required) Qos rule ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1284392014819\",\n  \"vlan\": 100,\n  \"protocol\": \"TCP\",\n  \"srcPort\": 2000,\n  \"srcPortRange\": \"70-80\",\n  \"dstPort\": 3000,\n  \"dstPortRange\": \"3000-3100\",\n  \"dscp\": 0\n}"
												}
											]
										}
									]
								},
								{
									"name": "routing",
									"item": [
										{
											"name": "interfaces",
											"item": [
												{
													"name": "dhcp",
													"item": [
														{
															"name": "getDeviceSwitchRoutingInterfaceDhcp",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/switch/routing/interfaces/:interfaceId/dhcp",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"routing",
																		"interfaces",
																		":interfaceId",
																		"dhcp"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "{{serial}}",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "interfaceId",
																			"value": "{{interfaceId}}",
																			"description": "(Required) Interface ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Return a layer 3 interface DHCP configuration for a switch"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/devices/:serial/switch/routing/interfaces/:interfaceId/dhcp",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"devices",
																				":serial",
																				"switch",
																				"routing",
																				"interfaces",
																				":interfaceId",
																				"dhcp"
																			],
																			"variable": [
																				{
																					"key": "serial",
																					"value": "<string>",
																					"description": "(Required) Serial"
																				},
																				{
																					"key": "interfaceId",
																					"value": "<string>",
																					"description": "(Required) Interface ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"dhcpMode\": \"dhcpServer\",\n  \"dhcpRelayServerIps\": [\n    \"1.2.3.4\"\n  ],\n  \"dhcpLeaseTime\": \"1 day\",\n  \"dnsNameserversOption\": \"custom\",\n  \"dnsCustomNameservers\": [\n    \"8.8.8.8, 8.8.4.4\"\n  ],\n  \"bootOptionsEnabled\": true,\n  \"bootNextServer\": \"1.2.3.4\",\n  \"bootFileName\": \"home_boot_file\",\n  \"dhcpOptions\": [\n    {\n      \"code\": \"5\",\n      \"type\": \"text\",\n      \"value\": \"five\"\n    }\n  ],\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"192.168.1.1\",\n      \"end\": \"192.168.1.10\",\n      \"comment\": \"A reserved IP range\"\n    }\n  ],\n  \"fixedIpAssignments\": [\n    {\n      \"name\": \"Cisco Meraki valued client\",\n      \"mac\": \"22:33:44:55:66:77\",\n      \"ip\": \"192.168.1.12\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "updateDeviceSwitchRoutingInterfaceDhcp",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"dhcpMode\": \"<string>\",\n  \"dhcpRelayServerIps\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"dhcpLeaseTime\": \"<string>\",\n  \"dnsNameserversOption\": \"<string>\",\n  \"dnsCustomNameservers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"bootOptionsEnabled\": \"<boolean>\",\n  \"bootNextServer\": \"<string>\",\n  \"bootFileName\": \"<string>\",\n  \"dhcpOptions\": [\n    {\n      \"code\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"fixedIpAssignments\": [\n    {\n      \"name\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"ip\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"ip\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/switch/routing/interfaces/:interfaceId/dhcp",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"routing",
																		"interfaces",
																		":interfaceId",
																		"dhcp"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "{{serial}}",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "interfaceId",
																			"value": "{{interfaceId}}",
																			"description": "(Required) Interface ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Update a layer 3 interface DHCP configuration for a switch"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"dhcpMode\": \"<string>\",\n  \"dhcpRelayServerIps\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"dhcpLeaseTime\": \"<string>\",\n  \"dnsNameserversOption\": \"<string>\",\n  \"dnsCustomNameservers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"bootOptionsEnabled\": \"<boolean>\",\n  \"bootNextServer\": \"<string>\",\n  \"bootFileName\": \"<string>\",\n  \"dhcpOptions\": [\n    {\n      \"code\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"fixedIpAssignments\": [\n    {\n      \"name\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"ip\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"ip\": \"<string>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/devices/:serial/switch/routing/interfaces/:interfaceId/dhcp",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"devices",
																				":serial",
																				"switch",
																				"routing",
																				"interfaces",
																				":interfaceId",
																				"dhcp"
																			],
																			"variable": [
																				{
																					"key": "serial",
																					"value": "<string>",
																					"description": "(Required) Serial"
																				},
																				{
																					"key": "interfaceId",
																					"value": "<string>",
																					"description": "(Required) Interface ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"dhcpMode\": \"dhcpServer\",\n  \"dhcpRelayServerIps\": [\n    \"1.2.3.4\"\n  ],\n  \"dhcpLeaseTime\": \"1 day\",\n  \"dnsNameserversOption\": \"custom\",\n  \"dnsCustomNameservers\": [\n    \"8.8.8.8, 8.8.4.4\"\n  ],\n  \"bootOptionsEnabled\": true,\n  \"bootNextServer\": \"1.2.3.4\",\n  \"bootFileName\": \"home_boot_file\",\n  \"dhcpOptions\": [\n    {\n      \"code\": \"5\",\n      \"type\": \"text\",\n      \"value\": \"five\"\n    }\n  ],\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"192.168.1.1\",\n      \"end\": \"192.168.1.10\",\n      \"comment\": \"A reserved IP range\"\n    }\n  ],\n  \"fixedIpAssignments\": [\n    {\n      \"name\": \"Cisco Meraki valued client\",\n      \"mac\": \"22:33:44:55:66:77\",\n      \"ip\": \"192.168.1.12\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "createDeviceSwitchRoutingInterface",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"interfaceIp\": \"<string>\",\n  \"multicastRouting\": \"<string>\",\n  \"vlanId\": \"<integer>\",\n  \"defaultGateway\": \"<string>\",\n  \"ospfSettings\": {\n    \"area\": \"<string>\",\n    \"cost\": \"<integer>\",\n    \"isPassiveEnabled\": \"<boolean>\"\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"<string>\",\n    \"prefix\": \"<string>\",\n    \"address\": \"<string>\",\n    \"gateway\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/switch/routing/interfaces",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"routing",
																"interfaces"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Create a layer 3 interface for a switch"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"L3 interface\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"interfaceIp\": \"192.168.1.2\",\n  \"multicastRouting\": \"disabled\",\n  \"vlanId\": 100,\n  \"defaultGateway\": \"192.168.1.1\",\n  \"ospfSettings\": {\n    \"area\": \"0\",\n    \"cost\": 1,\n    \"isPassiveEnabled\": true\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"static\",\n    \"prefix\": \"2001:db8::/32\",\n    \"address\": \"2001:db8::1\",\n    \"gateway\": \"2001:db8::2\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/switch/routing/interfaces",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"routing",
																		"interfaces"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"interfaceId\": \"1234\",\n  \"name\": \"L3 interface\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"interfaceIp\": \"192.168.1.2\",\n  \"multicastRouting\": \"disabled\",\n  \"vlanId\": 100,\n  \"uplinkV4\": false,\n  \"uplinkV6\": false,\n  \"ospfSettings\": {\n    \"area\": \"0\",\n    \"cost\": 1,\n    \"isPassiveEnabled\": true\n  },\n  \"ospfV3\": {\n    \"area\": \"1\",\n    \"cost\": 2,\n    \"isPassiveEnabled\": true\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"static\",\n    \"address\": \"2001:db8::1\",\n    \"prefix\": \"2001:db8::/32\",\n    \"gateway\": \"2001:db8::2\"\n  },\n  \"defaultGateway\": \"192.168.1.1\"\n}"
														}
													]
												},
												{
													"name": "deleteDeviceSwitchRoutingInterface",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/switch/routing/interfaces/:interfaceId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"routing",
																"interfaces",
																":interfaceId"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "interfaceId",
																	"value": "{{interfaceId}}",
																	"description": "(Required) Interface ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Delete a layer 3 interface from the switch"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/switch/routing/interfaces/:interfaceId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"routing",
																		"interfaces",
																		":interfaceId"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "interfaceId",
																			"value": "<string>",
																			"description": "(Required) Interface ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "getDeviceSwitchRoutingInterface",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/switch/routing/interfaces/:interfaceId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"routing",
																"interfaces",
																":interfaceId"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "interfaceId",
																	"value": "{{interfaceId}}",
																	"description": "(Required) Interface ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return a layer 3 interface for a switch"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/switch/routing/interfaces/:interfaceId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"routing",
																		"interfaces",
																		":interfaceId"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "interfaceId",
																			"value": "<string>",
																			"description": "(Required) Interface ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"interfaceId\": \"1234\",\n  \"name\": \"L3 interface\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"interfaceIp\": \"192.168.1.2\",\n  \"multicastRouting\": \"disabled\",\n  \"vlanId\": 100,\n  \"uplinkV4\": false,\n  \"uplinkV6\": false,\n  \"ospfSettings\": {\n    \"area\": \"0\",\n    \"cost\": 1,\n    \"isPassiveEnabled\": true\n  },\n  \"ospfV3\": {\n    \"area\": \"1\",\n    \"cost\": 2,\n    \"isPassiveEnabled\": true\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"static\",\n    \"address\": \"2001:db8::1\",\n    \"prefix\": \"2001:db8::/32\",\n    \"gateway\": \"2001:db8::2\"\n  },\n  \"defaultGateway\": \"192.168.1.1\"\n}"
														}
													]
												},
												{
													"name": "getDeviceSwitchRoutingInterfaces",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/switch/routing/interfaces",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"routing",
																"interfaces"
															],
															"query": [
																{
																	"key": "protocol",
																	"value": "{{protocol}}",
																	"description": "Optional parameter to filter L3 interfaces by protocol.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List layer 3 interfaces for a switch. Those for a stack may be found under switch stack routing."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/switch/routing/interfaces?protocol=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"routing",
																		"interfaces"
																	],
																	"query": [
																		{
																			"key": "protocol",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"interfaceId\": \"1234\",\n    \"name\": \"L3 interface\",\n    \"subnet\": \"192.168.1.0/24\",\n    \"interfaceIp\": \"192.168.1.2\",\n    \"multicastRouting\": \"disabled\",\n    \"vlanId\": 100,\n    \"uplinkV4\": false,\n    \"uplinkV6\": false,\n    \"ospfSettings\": {\n      \"area\": \"0\",\n      \"cost\": 1,\n      \"isPassiveEnabled\": true\n    },\n    \"ospfV3\": {\n      \"area\": \"1\",\n      \"cost\": 2,\n      \"isPassiveEnabled\": true\n    },\n    \"ipv6\": {\n      \"assignmentMode\": \"static\",\n      \"address\": \"2001:db8::1\",\n      \"prefix\": \"2001:db8::/32\",\n      \"gateway\": \"2001:db8::2\"\n    },\n    \"defaultGateway\": \"192.168.1.1\"\n  }\n]"
														}
													]
												},
												{
													"name": "updateDeviceSwitchRoutingInterface",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"interfaceIp\": \"<string>\",\n  \"multicastRouting\": \"<string>\",\n  \"vlanId\": \"<integer>\",\n  \"defaultGateway\": \"<string>\",\n  \"ospfSettings\": {\n    \"area\": \"<string>\",\n    \"cost\": \"<integer>\",\n    \"isPassiveEnabled\": \"<boolean>\"\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"<string>\",\n    \"prefix\": \"<string>\",\n    \"address\": \"<string>\",\n    \"gateway\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/switch/routing/interfaces/:interfaceId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"routing",
																"interfaces",
																":interfaceId"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "interfaceId",
																	"value": "{{interfaceId}}",
																	"description": "(Required) Interface ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update a layer 3 interface for a switch"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"L3 interface\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"interfaceIp\": \"192.168.1.2\",\n  \"multicastRouting\": \"disabled\",\n  \"vlanId\": 100,\n  \"defaultGateway\": \"192.168.1.1\",\n  \"ospfSettings\": {\n    \"area\": \"0\",\n    \"cost\": 1,\n    \"isPassiveEnabled\": true\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"static\",\n    \"prefix\": \"2001:db8::/32\",\n    \"address\": \"2001:db8::1\",\n    \"gateway\": \"2001:db8::2\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/switch/routing/interfaces/:interfaceId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"routing",
																		"interfaces",
																		":interfaceId"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "interfaceId",
																			"value": "<string>",
																			"description": "(Required) Interface ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"interfaceId\": \"1234\",\n  \"name\": \"L3 interface\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"interfaceIp\": \"192.168.1.2\",\n  \"multicastRouting\": \"disabled\",\n  \"vlanId\": 100,\n  \"uplinkV4\": false,\n  \"uplinkV6\": false,\n  \"ospfSettings\": {\n    \"area\": \"0\",\n    \"cost\": 1,\n    \"isPassiveEnabled\": true\n  },\n  \"ospfV3\": {\n    \"area\": \"1\",\n    \"cost\": 2,\n    \"isPassiveEnabled\": true\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"static\",\n    \"address\": \"2001:db8::1\",\n    \"prefix\": \"2001:db8::/32\",\n    \"gateway\": \"2001:db8::2\"\n  },\n  \"defaultGateway\": \"192.168.1.1\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "multicast",
											"item": [
												{
													"name": "rendezvousPoints",
													"item": [
														{
															"name": "createNetworkSwitchRoutingMulticastRendezvousPoint",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"interfaceIp\": \"<string>\",\n  \"multicastGroup\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/routing/multicast/rendezvousPoints",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"routing",
																		"multicast",
																		"rendezvousPoints"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Create a multicast rendezvous point"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"interfaceIp\": \"192.168.1.2\",\n  \"multicastGroup\": \"Any\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/switch/routing/multicast/rendezvousPoints",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"switch",
																				"routing",
																				"multicast",
																				"rendezvousPoints"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"rendezvousPointId\": \"1234\",\n  \"serial\": \"Q234-ABCD-5678\",\n  \"interfaceName\": \"l3_interface_0\",\n  \"interfaceIp\": \"192.168.1.2\",\n  \"multicastGroup\": \"Any\"\n}"
																}
															]
														},
														{
															"name": "deleteNetworkSwitchRoutingMulticastRendezvousPoint",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/routing/multicast/rendezvousPoints/:rendezvousPointId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"routing",
																		"multicast",
																		"rendezvousPoints",
																		":rendezvousPointId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "rendezvousPointId",
																			"value": "{{rendezvousPointId}}",
																			"description": "(Required) Rendezvous point ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Delete a multicast rendezvous point"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/switch/routing/multicast/rendezvousPoints/:rendezvousPointId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"switch",
																				"routing",
																				"multicast",
																				"rendezvousPoints",
																				":rendezvousPointId"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "rendezvousPointId",
																					"value": "<string>",
																					"description": "(Required) Rendezvous point ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "getNetworkSwitchRoutingMulticastRendezvousPoint",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/routing/multicast/rendezvousPoints/:rendezvousPointId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"routing",
																		"multicast",
																		"rendezvousPoints",
																		":rendezvousPointId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "rendezvousPointId",
																			"value": "{{rendezvousPointId}}",
																			"description": "(Required) Rendezvous point ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Return a multicast rendezvous point"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/switch/routing/multicast/rendezvousPoints/:rendezvousPointId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"switch",
																				"routing",
																				"multicast",
																				"rendezvousPoints",
																				":rendezvousPointId"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "rendezvousPointId",
																					"value": "<string>",
																					"description": "(Required) Rendezvous point ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"rendezvousPointId\": \"1234\",\n  \"serial\": \"Q234-ABCD-5678\",\n  \"interfaceName\": \"l3_interface_0\",\n  \"interfaceIp\": \"192.168.1.2\",\n  \"multicastGroup\": \"Any\"\n}"
																}
															]
														},
														{
															"name": "getNetworkSwitchRoutingMulticastRendezvousPoints",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/routing/multicast/rendezvousPoints",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"routing",
																		"multicast",
																		"rendezvousPoints"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "List multicast rendezvous points"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/switch/routing/multicast/rendezvousPoints",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"switch",
																				"routing",
																				"multicast",
																				"rendezvousPoints"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"rendezvousPointId\": \"1234\",\n    \"serial\": \"Q234-ABCD-5678\",\n    \"interfaceName\": \"l3_interface_0\",\n    \"interfaceIp\": \"192.168.1.2\",\n    \"multicastGroup\": \"Any\"\n  }\n]"
																}
															]
														},
														{
															"name": "updateNetworkSwitchRoutingMulticastRendezvousPoint",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"interfaceIp\": \"<string>\",\n  \"multicastGroup\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/routing/multicast/rendezvousPoints/:rendezvousPointId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"routing",
																		"multicast",
																		"rendezvousPoints",
																		":rendezvousPointId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "rendezvousPointId",
																			"value": "{{rendezvousPointId}}",
																			"description": "(Required) Rendezvous point ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Update a multicast rendezvous point"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"interfaceIp\": \"192.168.1.2\",\n  \"multicastGroup\": \"Any\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/switch/routing/multicast/rendezvousPoints/:rendezvousPointId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"switch",
																				"routing",
																				"multicast",
																				"rendezvousPoints",
																				":rendezvousPointId"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "rendezvousPointId",
																					"value": "<string>",
																					"description": "(Required) Rendezvous point ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"rendezvousPointId\": \"1234\",\n  \"serial\": \"Q234-ABCD-5678\",\n  \"interfaceName\": \"l3_interface_0\",\n  \"interfaceIp\": \"192.168.1.2\",\n  \"multicastGroup\": \"Any\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "getNetworkSwitchRoutingMulticast",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/routing/multicast",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"routing",
																"multicast"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return multicast settings for a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/routing/multicast",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"routing",
																		"multicast"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"defaultSettings\": {\n    \"igmpSnoopingEnabled\": true,\n    \"floodUnknownMulticastTrafficEnabled\": true\n  },\n  \"overrides\": [\n    {\n      \"switches\": [\n        \"Q234-ABCD-0001\",\n        \"Q234-ABCD-0002\",\n        \"Q234-ABCD-0003\"\n      ],\n      \"stacks\": [\n        \"789102\",\n        \"123456\",\n        \"129102\"\n      ],\n      \"switchProfiles\": [\n        \"1234\",\n        \"4567\"\n      ],\n      \"igmpSnoopingEnabled\": true,\n      \"floodUnknownMulticastTrafficEnabled\": true\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "updateNetworkSwitchRoutingMulticast",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"defaultSettings\": {\n    \"igmpSnoopingEnabled\": \"<boolean>\",\n    \"floodUnknownMulticastTrafficEnabled\": \"<boolean>\"\n  },\n  \"overrides\": [\n    {\n      \"igmpSnoopingEnabled\": \"<boolean>\",\n      \"floodUnknownMulticastTrafficEnabled\": \"<boolean>\",\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"stacks\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"igmpSnoopingEnabled\": \"<boolean>\",\n      \"floodUnknownMulticastTrafficEnabled\": \"<boolean>\",\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"stacks\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/routing/multicast",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"routing",
																"multicast"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update multicast settings for a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"defaultSettings\": {\n    \"igmpSnoopingEnabled\": \"<boolean>\",\n    \"floodUnknownMulticastTrafficEnabled\": \"<boolean>\"\n  },\n  \"overrides\": [\n    {\n      \"igmpSnoopingEnabled\": \"<boolean>\",\n      \"floodUnknownMulticastTrafficEnabled\": \"<boolean>\",\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"stacks\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"igmpSnoopingEnabled\": \"<boolean>\",\n      \"floodUnknownMulticastTrafficEnabled\": \"<boolean>\",\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"stacks\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/routing/multicast",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"routing",
																		"multicast"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"defaultSettings\": {\n    \"igmpSnoopingEnabled\": true,\n    \"floodUnknownMulticastTrafficEnabled\": true\n  },\n  \"overrides\": [\n    {\n      \"switches\": [\n        \"Q234-ABCD-0001\",\n        \"Q234-ABCD-0002\",\n        \"Q234-ABCD-0003\"\n      ],\n      \"stacks\": [\n        \"789102\",\n        \"123456\",\n        \"129102\"\n      ],\n      \"switchProfiles\": [\n        \"1234\",\n        \"4567\"\n      ],\n      \"igmpSnoopingEnabled\": true,\n      \"floodUnknownMulticastTrafficEnabled\": true\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "ospf",
											"item": [
												{
													"name": "getNetworkSwitchRoutingOspf",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/routing/ospf",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"routing",
																"ospf"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return layer 3 OSPF routing configuration"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/routing/ospf",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"routing",
																		"ospf"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"enabled\": true,\n  \"helloTimerInSeconds\": 10,\n  \"deadTimerInSeconds\": 40,\n  \"areas\": [\n    {\n      \"areaId\": \"1284392014819\",\n      \"areaName\": \"Backbone\",\n      \"areaType\": \"normal\"\n    }\n  ],\n  \"v3\": {\n    \"enabled\": true,\n    \"helloTimerInSeconds\": 10,\n    \"deadTimerInSeconds\": 40,\n    \"areas\": [\n      {\n        \"areaId\": \"1284392014819\",\n        \"areaName\": \"V3 Backbone\",\n        \"areaType\": \"normal\"\n      }\n    ]\n  },\n  \"md5AuthenticationEnabled\": true,\n  \"md5AuthenticationKey\": {\n    \"id\": 1234,\n    \"passphrase\": \"abc1234\"\n  }\n}"
														}
													]
												},
												{
													"name": "updateNetworkSwitchRoutingOspf",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"helloTimerInSeconds\": \"<integer>\",\n  \"deadTimerInSeconds\": \"<integer>\",\n  \"areas\": [\n    {\n      \"areaId\": \"<string>\",\n      \"areaName\": \"<string>\",\n      \"areaType\": \"<string>\"\n    },\n    {\n      \"areaId\": \"<string>\",\n      \"areaName\": \"<string>\",\n      \"areaType\": \"<string>\"\n    }\n  ],\n  \"v3\": {\n    \"enabled\": \"<boolean>\",\n    \"helloTimerInSeconds\": \"<integer>\",\n    \"deadTimerInSeconds\": \"<integer>\",\n    \"areas\": [\n      {\n        \"areaId\": \"<string>\",\n        \"areaName\": \"<string>\",\n        \"areaType\": \"<string>\"\n      },\n      {\n        \"areaId\": \"<string>\",\n        \"areaName\": \"<string>\",\n        \"areaType\": \"<string>\"\n      }\n    ]\n  },\n  \"md5AuthenticationEnabled\": \"<boolean>\",\n  \"md5AuthenticationKey\": {\n    \"id\": \"<integer>\",\n    \"passphrase\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/routing/ospf",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"routing",
																"ospf"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update layer 3 OSPF routing configuration"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"helloTimerInSeconds\": \"<integer>\",\n  \"deadTimerInSeconds\": \"<integer>\",\n  \"areas\": [\n    {\n      \"areaId\": \"<string>\",\n      \"areaName\": \"<string>\",\n      \"areaType\": \"<string>\"\n    },\n    {\n      \"areaId\": \"<string>\",\n      \"areaName\": \"<string>\",\n      \"areaType\": \"<string>\"\n    }\n  ],\n  \"v3\": {\n    \"enabled\": \"<boolean>\",\n    \"helloTimerInSeconds\": \"<integer>\",\n    \"deadTimerInSeconds\": \"<integer>\",\n    \"areas\": [\n      {\n        \"areaId\": \"<string>\",\n        \"areaName\": \"<string>\",\n        \"areaType\": \"<string>\"\n      },\n      {\n        \"areaId\": \"<string>\",\n        \"areaName\": \"<string>\",\n        \"areaType\": \"<string>\"\n      }\n    ]\n  },\n  \"md5AuthenticationEnabled\": \"<boolean>\",\n  \"md5AuthenticationKey\": {\n    \"id\": \"<integer>\",\n    \"passphrase\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/routing/ospf",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"routing",
																		"ospf"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"enabled\": true,\n  \"helloTimerInSeconds\": 10,\n  \"deadTimerInSeconds\": 40,\n  \"areas\": [\n    {\n      \"areaId\": \"1284392014819\",\n      \"areaName\": \"Backbone\",\n      \"areaType\": \"normal\"\n    }\n  ],\n  \"v3\": {\n    \"enabled\": true,\n    \"helloTimerInSeconds\": 10,\n    \"deadTimerInSeconds\": 40,\n    \"areas\": [\n      {\n        \"areaId\": \"1284392014819\",\n        \"areaName\": \"V3 Backbone\",\n        \"areaType\": \"normal\"\n      }\n    ]\n  },\n  \"md5AuthenticationEnabled\": true,\n  \"md5AuthenticationKey\": {\n    \"id\": 1234,\n    \"passphrase\": \"abc1234\"\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "staticRoutes",
											"item": [
												{
													"name": "createDeviceSwitchRoutingStaticRoute",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subnet\": \"<string>\",\n  \"nextHopIp\": \"<string>\",\n  \"name\": \"<string>\",\n  \"advertiseViaOspfEnabled\": \"<boolean>\",\n  \"preferOverOspfRoutesEnabled\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/switch/routing/staticRoutes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"routing",
																"staticRoutes"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Create a layer 3 static route for a switch"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"My route\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"nextHopIp\": \"1.2.3.4\",\n  \"advertiseViaOspfEnabled\": false,\n  \"preferOverOspfRoutesEnabled\": false\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/switch/routing/staticRoutes",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"routing",
																		"staticRoutes"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"staticRouteId\": \"1234\",\n  \"name\": \"My route\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"nextHopIp\": \"1.2.3.4\",\n  \"managementNextHop\": \"1.2.3.5\",\n  \"advertiseViaOspfEnabled\": false,\n  \"preferOverOspfRoutesEnabled\": false\n}"
														}
													]
												},
												{
													"name": "deleteDeviceSwitchRoutingStaticRoute",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/switch/routing/staticRoutes/:staticRouteId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"routing",
																"staticRoutes",
																":staticRouteId"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "staticRouteId",
																	"value": "{{staticRouteId}}",
																	"description": "(Required) Static route ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Delete a layer 3 static route for a switch"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/switch/routing/staticRoutes/:staticRouteId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"routing",
																		"staticRoutes",
																		":staticRouteId"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "staticRouteId",
																			"value": "<string>",
																			"description": "(Required) Static route ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "getDeviceSwitchRoutingStaticRoute",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/switch/routing/staticRoutes/:staticRouteId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"routing",
																"staticRoutes",
																":staticRouteId"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "staticRouteId",
																	"value": "{{staticRouteId}}",
																	"description": "(Required) Static route ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return a layer 3 static route for a switch"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/switch/routing/staticRoutes/:staticRouteId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"routing",
																		"staticRoutes",
																		":staticRouteId"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "staticRouteId",
																			"value": "<string>",
																			"description": "(Required) Static route ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"staticRouteId\": \"1234\",\n  \"name\": \"My route\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"nextHopIp\": \"1.2.3.4\",\n  \"managementNextHop\": \"1.2.3.5\",\n  \"advertiseViaOspfEnabled\": false,\n  \"preferOverOspfRoutesEnabled\": false\n}"
														}
													]
												},
												{
													"name": "getDeviceSwitchRoutingStaticRoutes",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/switch/routing/staticRoutes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"routing",
																"staticRoutes"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List layer 3 static routes for a switch"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/switch/routing/staticRoutes",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"routing",
																		"staticRoutes"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"staticRouteId\": \"1234\",\n    \"name\": \"My route\",\n    \"subnet\": \"192.168.1.0/24\",\n    \"nextHopIp\": \"1.2.3.4\",\n    \"managementNextHop\": \"1.2.3.5\",\n    \"advertiseViaOspfEnabled\": false,\n    \"preferOverOspfRoutesEnabled\": false\n  }\n]"
														}
													]
												},
												{
													"name": "updateDeviceSwitchRoutingStaticRoute",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"nextHopIp\": \"<string>\",\n  \"managementNextHop\": \"<string>\",\n  \"advertiseViaOspfEnabled\": \"<boolean>\",\n  \"preferOverOspfRoutesEnabled\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/switch/routing/staticRoutes/:staticRouteId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"routing",
																"staticRoutes",
																":staticRouteId"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "staticRouteId",
																	"value": "{{staticRouteId}}",
																	"description": "(Required) Static route ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update a layer 3 static route for a switch"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"My route\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"nextHopIp\": \"1.2.3.4\",\n  \"managementNextHop\": \"1.2.3.5\",\n  \"advertiseViaOspfEnabled\": false,\n  \"preferOverOspfRoutesEnabled\": false\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/switch/routing/staticRoutes/:staticRouteId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"routing",
																		"staticRoutes",
																		":staticRouteId"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "staticRouteId",
																			"value": "<string>",
																			"description": "(Required) Static route ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"staticRouteId\": \"1234\",\n  \"name\": \"My route\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"nextHopIp\": \"1.2.3.4\",\n  \"managementNextHop\": \"1.2.3.5\",\n  \"advertiseViaOspfEnabled\": false,\n  \"preferOverOspfRoutesEnabled\": false\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "settings",
									"item": [
										{
											"name": "getNetworkSwitchSettings",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"settings"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Returns the switch network settings"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"settings"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"vlan\": 100,\n  \"useCombinedPower\": false,\n  \"powerExceptions\": [\n    {\n      \"serial\": \"Q234-ABCD-0001\",\n      \"powerType\": \"redundant\"\n    }\n  ],\n  \"uplinkClientSampling\": {\n    \"enabled\": true\n  },\n  \"macBlocklist\": {\n    \"enabled\": true\n  }\n}"
												}
											]
										},
										{
											"name": "updateNetworkSwitchSettings",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"vlan\": \"<integer>\",\n  \"useCombinedPower\": \"<boolean>\",\n  \"powerExceptions\": [\n    {\n      \"serial\": \"<string>\",\n      \"powerType\": \"<string>\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"powerType\": \"<string>\"\n    }\n  ],\n  \"uplinkClientSampling\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"macBlocklist\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"settings"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update switch network settings"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"settings"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"vlan\": 100,\n  \"useCombinedPower\": false,\n  \"powerExceptions\": [\n    {\n      \"serial\": \"Q234-ABCD-0001\",\n      \"powerType\": \"redundant\"\n    }\n  ],\n  \"uplinkClientSampling\": {\n    \"enabled\": true\n  },\n  \"macBlocklist\": {\n    \"enabled\": true\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "stacks",
									"item": [
										{
											"name": "routing",
											"item": [
												{
													"name": "interfaces",
													"item": [
														{
															"name": "dhcp",
															"item": [
																{
																	"name": "getNetworkSwitchStackRoutingInterfaceDhcp",
																	"protocolProfileBehavior": {
																		"followAuthorizationHeader": false
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/routing/interfaces/:interfaceId/dhcp",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"switch",
																				"stacks",
																				":switchStackId",
																				"routing",
																				"interfaces",
																				":interfaceId",
																				"dhcp"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "{{networkId}}",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "switchStackId",
																					"value": "{{switchStackId}}",
																					"description": "(Required) Switch stack ID"
																				},
																				{
																					"key": "interfaceId",
																					"value": "{{interfaceId}}",
																					"description": "(Required) Interface ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		},
																		"description": "Return a layer 3 interface DHCP configuration for a switch stack"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/routing/interfaces/:interfaceId/dhcp",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"networks",
																						":networkId",
																						"switch",
																						"stacks",
																						":switchStackId",
																						"routing",
																						"interfaces",
																						":interfaceId",
																						"dhcp"
																					],
																					"variable": [
																						{
																							"key": "networkId",
																							"value": "<string>",
																							"description": "(Required) Network ID"
																						},
																						{
																							"key": "switchStackId",
																							"value": "<string>",
																							"description": "(Required) Switch stack ID"
																						},
																						{
																							"key": "interfaceId",
																							"value": "<string>",
																							"description": "(Required) Interface ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"dhcpMode\": \"dhcpServer\",\n  \"dhcpRelayServerIps\": [\n    \"1.2.3.4\"\n  ],\n  \"dhcpLeaseTime\": \"1 day\",\n  \"dnsNameserversOption\": \"custom\",\n  \"dnsCustomNameservers\": [\n    \"8.8.8.8, 8.8.4.4\"\n  ],\n  \"bootOptionsEnabled\": true,\n  \"bootNextServer\": \"1.2.3.4\",\n  \"bootFileName\": \"home_boot_file\",\n  \"dhcpOptions\": [\n    {\n      \"code\": \"5\",\n      \"type\": \"text\",\n      \"value\": \"five\"\n    }\n  ],\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"192.168.1.1\",\n      \"end\": \"192.168.1.10\",\n      \"comment\": \"A reserved IP range\"\n    }\n  ],\n  \"fixedIpAssignments\": [\n    {\n      \"name\": \"Cisco Meraki valued client\",\n      \"mac\": \"22:33:44:55:66:77\",\n      \"ip\": \"192.168.1.12\"\n    }\n  ]\n}"
																		}
																	]
																},
																{
																	"name": "updateNetworkSwitchStackRoutingInterfaceDhcp",
																	"protocolProfileBehavior": {
																		"followAuthorizationHeader": false
																	},
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"dhcpMode\": \"<string>\",\n  \"dhcpRelayServerIps\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"dhcpLeaseTime\": \"<string>\",\n  \"dnsNameserversOption\": \"<string>\",\n  \"dnsCustomNameservers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"bootOptionsEnabled\": \"<boolean>\",\n  \"bootNextServer\": \"<string>\",\n  \"bootFileName\": \"<string>\",\n  \"dhcpOptions\": [\n    {\n      \"code\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"fixedIpAssignments\": [\n    {\n      \"name\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"ip\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"ip\": \"<string>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/routing/interfaces/:interfaceId/dhcp",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"switch",
																				"stacks",
																				":switchStackId",
																				"routing",
																				"interfaces",
																				":interfaceId",
																				"dhcp"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "{{networkId}}",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "switchStackId",
																					"value": "{{switchStackId}}",
																					"description": "(Required) Switch stack ID"
																				},
																				{
																					"key": "interfaceId",
																					"value": "{{interfaceId}}",
																					"description": "(Required) Interface ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		},
																		"description": "Update a layer 3 interface DHCP configuration for a switch stack"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"dhcpMode\": \"<string>\",\n  \"dhcpRelayServerIps\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"dhcpLeaseTime\": \"<string>\",\n  \"dnsNameserversOption\": \"<string>\",\n  \"dnsCustomNameservers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"bootOptionsEnabled\": \"<boolean>\",\n  \"bootNextServer\": \"<string>\",\n  \"bootFileName\": \"<string>\",\n  \"dhcpOptions\": [\n    {\n      \"code\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"fixedIpAssignments\": [\n    {\n      \"name\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"ip\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"ip\": \"<string>\"\n    }\n  ]\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/routing/interfaces/:interfaceId/dhcp",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"networks",
																						":networkId",
																						"switch",
																						"stacks",
																						":switchStackId",
																						"routing",
																						"interfaces",
																						":interfaceId",
																						"dhcp"
																					],
																					"variable": [
																						{
																							"key": "networkId",
																							"value": "<string>",
																							"description": "(Required) Network ID"
																						},
																						{
																							"key": "switchStackId",
																							"value": "<string>",
																							"description": "(Required) Switch stack ID"
																						},
																						{
																							"key": "interfaceId",
																							"value": "<string>",
																							"description": "(Required) Interface ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"dhcpMode\": \"dhcpServer\",\n  \"dhcpRelayServerIps\": [\n    \"1.2.3.4\"\n  ],\n  \"dhcpLeaseTime\": \"1 day\",\n  \"dnsNameserversOption\": \"custom\",\n  \"dnsCustomNameservers\": [\n    \"8.8.8.8, 8.8.4.4\"\n  ],\n  \"bootOptionsEnabled\": true,\n  \"bootNextServer\": \"1.2.3.4\",\n  \"bootFileName\": \"home_boot_file\",\n  \"dhcpOptions\": [\n    {\n      \"code\": \"5\",\n      \"type\": \"text\",\n      \"value\": \"five\"\n    }\n  ],\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"192.168.1.1\",\n      \"end\": \"192.168.1.10\",\n      \"comment\": \"A reserved IP range\"\n    }\n  ],\n  \"fixedIpAssignments\": [\n    {\n      \"name\": \"Cisco Meraki valued client\",\n      \"mac\": \"22:33:44:55:66:77\",\n      \"ip\": \"192.168.1.12\"\n    }\n  ]\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "createNetworkSwitchStackRoutingInterface",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"interfaceIp\": \"<string>\",\n  \"multicastRouting\": \"<string>\",\n  \"vlanId\": \"<integer>\",\n  \"defaultGateway\": \"<string>\",\n  \"ospfSettings\": {\n    \"area\": \"<string>\",\n    \"cost\": \"<integer>\",\n    \"isPassiveEnabled\": \"<boolean>\"\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"<string>\",\n    \"prefix\": \"<string>\",\n    \"address\": \"<string>\",\n    \"gateway\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/routing/interfaces",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"stacks",
																		":switchStackId",
																		"routing",
																		"interfaces"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "switchStackId",
																			"value": "{{switchStackId}}",
																			"description": "(Required) Switch stack ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Create a layer 3 interface for a switch stack"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"L3 interface\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"interfaceIp\": \"192.168.1.2\",\n  \"multicastRouting\": \"disabled\",\n  \"vlanId\": 100,\n  \"defaultGateway\": \"192.168.1.1\",\n  \"ospfSettings\": {\n    \"area\": \"0\",\n    \"cost\": 1,\n    \"isPassiveEnabled\": true\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"static\",\n    \"prefix\": \"2001:db8::/32\",\n    \"address\": \"2001:db8::1\",\n    \"gateway\": \"2001:db8::2\"\n  }\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/routing/interfaces",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"switch",
																				"stacks",
																				":switchStackId",
																				"routing",
																				"interfaces"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "switchStackId",
																					"value": "<string>",
																					"description": "(Required) Switch stack ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"interfaceId\": \"1234\",\n  \"name\": \"L3 interface\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"interfaceIp\": \"192.168.1.2\",\n  \"multicastRouting\": \"disabled\",\n  \"vlanId\": 100,\n  \"uplinkV4\": false,\n  \"uplinkV6\": false,\n  \"ospfSettings\": {\n    \"area\": \"0\",\n    \"cost\": 1,\n    \"isPassiveEnabled\": true\n  },\n  \"ospfV3\": {\n    \"area\": \"1\",\n    \"cost\": 2,\n    \"isPassiveEnabled\": true\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"static\",\n    \"address\": \"2001:db8::1\",\n    \"prefix\": \"2001:db8::/32\",\n    \"gateway\": \"2001:db8::2\"\n  },\n  \"defaultGateway\": \"192.168.1.1\"\n}"
																}
															]
														},
														{
															"name": "deleteNetworkSwitchStackRoutingInterface",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/routing/interfaces/:interfaceId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"stacks",
																		":switchStackId",
																		"routing",
																		"interfaces",
																		":interfaceId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "switchStackId",
																			"value": "{{switchStackId}}",
																			"description": "(Required) Switch stack ID"
																		},
																		{
																			"key": "interfaceId",
																			"value": "{{interfaceId}}",
																			"description": "(Required) Interface ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Delete a layer 3 interface from a switch stack"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/routing/interfaces/:interfaceId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"switch",
																				"stacks",
																				":switchStackId",
																				"routing",
																				"interfaces",
																				":interfaceId"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "switchStackId",
																					"value": "<string>",
																					"description": "(Required) Switch stack ID"
																				},
																				{
																					"key": "interfaceId",
																					"value": "<string>",
																					"description": "(Required) Interface ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "getNetworkSwitchStackRoutingInterface",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/routing/interfaces/:interfaceId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"stacks",
																		":switchStackId",
																		"routing",
																		"interfaces",
																		":interfaceId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "switchStackId",
																			"value": "{{switchStackId}}",
																			"description": "(Required) Switch stack ID"
																		},
																		{
																			"key": "interfaceId",
																			"value": "{{interfaceId}}",
																			"description": "(Required) Interface ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Return a layer 3 interface from a switch stack"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/routing/interfaces/:interfaceId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"switch",
																				"stacks",
																				":switchStackId",
																				"routing",
																				"interfaces",
																				":interfaceId"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "switchStackId",
																					"value": "<string>",
																					"description": "(Required) Switch stack ID"
																				},
																				{
																					"key": "interfaceId",
																					"value": "<string>",
																					"description": "(Required) Interface ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"interfaceId\": \"1234\",\n  \"name\": \"L3 interface\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"interfaceIp\": \"192.168.1.2\",\n  \"multicastRouting\": \"disabled\",\n  \"vlanId\": 100,\n  \"uplinkV4\": false,\n  \"uplinkV6\": false,\n  \"ospfSettings\": {\n    \"area\": \"0\",\n    \"cost\": 1,\n    \"isPassiveEnabled\": true\n  },\n  \"ospfV3\": {\n    \"area\": \"1\",\n    \"cost\": 2,\n    \"isPassiveEnabled\": true\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"static\",\n    \"address\": \"2001:db8::1\",\n    \"prefix\": \"2001:db8::/32\",\n    \"gateway\": \"2001:db8::2\"\n  },\n  \"defaultGateway\": \"192.168.1.1\"\n}"
																}
															]
														},
														{
															"name": "getNetworkSwitchStackRoutingInterfaces",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/routing/interfaces",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"stacks",
																		":switchStackId",
																		"routing",
																		"interfaces"
																	],
																	"query": [
																		{
																			"key": "protocol",
																			"value": "{{protocol}}",
																			"description": "Optional parameter to filter L3 interfaces by protocol.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "switchStackId",
																			"value": "{{switchStackId}}",
																			"description": "(Required) Switch stack ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "List layer 3 interfaces for a switch stack"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/routing/interfaces?protocol=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"switch",
																				"stacks",
																				":switchStackId",
																				"routing",
																				"interfaces"
																			],
																			"query": [
																				{
																					"key": "protocol",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "switchStackId",
																					"value": "<string>",
																					"description": "(Required) Switch stack ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"interfaceId\": \"1234\",\n    \"name\": \"L3 interface\",\n    \"subnet\": \"192.168.1.0/24\",\n    \"interfaceIp\": \"192.168.1.2\",\n    \"multicastRouting\": \"disabled\",\n    \"vlanId\": 100,\n    \"uplinkV4\": false,\n    \"uplinkV6\": false,\n    \"ospfSettings\": {\n      \"area\": \"0\",\n      \"cost\": 1,\n      \"isPassiveEnabled\": true\n    },\n    \"ospfV3\": {\n      \"area\": \"1\",\n      \"cost\": 2,\n      \"isPassiveEnabled\": true\n    },\n    \"ipv6\": {\n      \"assignmentMode\": \"static\",\n      \"address\": \"2001:db8::1\",\n      \"prefix\": \"2001:db8::/32\",\n      \"gateway\": \"2001:db8::2\"\n    },\n    \"defaultGateway\": \"192.168.1.1\"\n  }\n]"
																}
															]
														},
														{
															"name": "updateNetworkSwitchStackRoutingInterface",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"interfaceIp\": \"<string>\",\n  \"multicastRouting\": \"<string>\",\n  \"vlanId\": \"<integer>\",\n  \"defaultGateway\": \"<string>\",\n  \"ospfSettings\": {\n    \"area\": \"<string>\",\n    \"cost\": \"<integer>\",\n    \"isPassiveEnabled\": \"<boolean>\"\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"<string>\",\n    \"prefix\": \"<string>\",\n    \"address\": \"<string>\",\n    \"gateway\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/routing/interfaces/:interfaceId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"stacks",
																		":switchStackId",
																		"routing",
																		"interfaces",
																		":interfaceId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "switchStackId",
																			"value": "{{switchStackId}}",
																			"description": "(Required) Switch stack ID"
																		},
																		{
																			"key": "interfaceId",
																			"value": "{{interfaceId}}",
																			"description": "(Required) Interface ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Update a layer 3 interface for a switch stack"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"L3 interface\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"interfaceIp\": \"192.168.1.2\",\n  \"multicastRouting\": \"disabled\",\n  \"vlanId\": 100,\n  \"defaultGateway\": \"192.168.1.1\",\n  \"ospfSettings\": {\n    \"area\": \"0\",\n    \"cost\": 1,\n    \"isPassiveEnabled\": true\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"static\",\n    \"prefix\": \"2001:db8::/32\",\n    \"address\": \"2001:db8::1\",\n    \"gateway\": \"2001:db8::2\"\n  }\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/routing/interfaces/:interfaceId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"switch",
																				"stacks",
																				":switchStackId",
																				"routing",
																				"interfaces",
																				":interfaceId"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "switchStackId",
																					"value": "<string>",
																					"description": "(Required) Switch stack ID"
																				},
																				{
																					"key": "interfaceId",
																					"value": "<string>",
																					"description": "(Required) Interface ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"interfaceId\": \"1234\",\n  \"name\": \"L3 interface\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"interfaceIp\": \"192.168.1.2\",\n  \"multicastRouting\": \"disabled\",\n  \"vlanId\": 100,\n  \"uplinkV4\": false,\n  \"uplinkV6\": false,\n  \"ospfSettings\": {\n    \"area\": \"0\",\n    \"cost\": 1,\n    \"isPassiveEnabled\": true\n  },\n  \"ospfV3\": {\n    \"area\": \"1\",\n    \"cost\": 2,\n    \"isPassiveEnabled\": true\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"static\",\n    \"address\": \"2001:db8::1\",\n    \"prefix\": \"2001:db8::/32\",\n    \"gateway\": \"2001:db8::2\"\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "staticRoutes",
													"item": [
														{
															"name": "createNetworkSwitchStackRoutingStaticRoute",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subnet\": \"<string>\",\n  \"nextHopIp\": \"<string>\",\n  \"name\": \"<string>\",\n  \"advertiseViaOspfEnabled\": \"<boolean>\",\n  \"preferOverOspfRoutesEnabled\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/routing/staticRoutes",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"stacks",
																		":switchStackId",
																		"routing",
																		"staticRoutes"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "switchStackId",
																			"value": "{{switchStackId}}",
																			"description": "(Required) Switch stack ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Create a layer 3 static route for a switch stack"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"My route\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"nextHopIp\": \"1.2.3.4\",\n  \"advertiseViaOspfEnabled\": false,\n  \"preferOverOspfRoutesEnabled\": false\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/routing/staticRoutes",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"switch",
																				"stacks",
																				":switchStackId",
																				"routing",
																				"staticRoutes"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "switchStackId",
																					"value": "<string>",
																					"description": "(Required) Switch stack ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"staticRouteId\": \"1234\",\n  \"name\": \"My route\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"nextHopIp\": \"1.2.3.4\",\n  \"managementNextHop\": \"1.2.3.5\",\n  \"advertiseViaOspfEnabled\": false,\n  \"preferOverOspfRoutesEnabled\": false\n}"
																}
															]
														},
														{
															"name": "deleteNetworkSwitchStackRoutingStaticRoute",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/routing/staticRoutes/:staticRouteId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"stacks",
																		":switchStackId",
																		"routing",
																		"staticRoutes",
																		":staticRouteId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "switchStackId",
																			"value": "{{switchStackId}}",
																			"description": "(Required) Switch stack ID"
																		},
																		{
																			"key": "staticRouteId",
																			"value": "{{staticRouteId}}",
																			"description": "(Required) Static route ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Delete a layer 3 static route for a switch stack"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/routing/staticRoutes/:staticRouteId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"switch",
																				"stacks",
																				":switchStackId",
																				"routing",
																				"staticRoutes",
																				":staticRouteId"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "switchStackId",
																					"value": "<string>",
																					"description": "(Required) Switch stack ID"
																				},
																				{
																					"key": "staticRouteId",
																					"value": "<string>",
																					"description": "(Required) Static route ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "getNetworkSwitchStackRoutingStaticRoute",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/routing/staticRoutes/:staticRouteId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"stacks",
																		":switchStackId",
																		"routing",
																		"staticRoutes",
																		":staticRouteId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "switchStackId",
																			"value": "{{switchStackId}}",
																			"description": "(Required) Switch stack ID"
																		},
																		{
																			"key": "staticRouteId",
																			"value": "{{staticRouteId}}",
																			"description": "(Required) Static route ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Return a layer 3 static route for a switch stack"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/routing/staticRoutes/:staticRouteId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"switch",
																				"stacks",
																				":switchStackId",
																				"routing",
																				"staticRoutes",
																				":staticRouteId"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "switchStackId",
																					"value": "<string>",
																					"description": "(Required) Switch stack ID"
																				},
																				{
																					"key": "staticRouteId",
																					"value": "<string>",
																					"description": "(Required) Static route ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"staticRouteId\": \"1234\",\n  \"name\": \"My route\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"nextHopIp\": \"1.2.3.4\",\n  \"managementNextHop\": \"1.2.3.5\",\n  \"advertiseViaOspfEnabled\": false,\n  \"preferOverOspfRoutesEnabled\": false\n}"
																}
															]
														},
														{
															"name": "getNetworkSwitchStackRoutingStaticRoutes",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/routing/staticRoutes",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"stacks",
																		":switchStackId",
																		"routing",
																		"staticRoutes"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "switchStackId",
																			"value": "{{switchStackId}}",
																			"description": "(Required) Switch stack ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "List layer 3 static routes for a switch stack"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/routing/staticRoutes",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"switch",
																				"stacks",
																				":switchStackId",
																				"routing",
																				"staticRoutes"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "switchStackId",
																					"value": "<string>",
																					"description": "(Required) Switch stack ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"staticRouteId\": \"1234\",\n    \"name\": \"My route\",\n    \"subnet\": \"192.168.1.0/24\",\n    \"nextHopIp\": \"1.2.3.4\",\n    \"managementNextHop\": \"1.2.3.5\",\n    \"advertiseViaOspfEnabled\": false,\n    \"preferOverOspfRoutesEnabled\": false\n  }\n]"
																}
															]
														},
														{
															"name": "updateNetworkSwitchStackRoutingStaticRoute",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"nextHopIp\": \"<string>\",\n  \"managementNextHop\": \"<string>\",\n  \"advertiseViaOspfEnabled\": \"<boolean>\",\n  \"preferOverOspfRoutesEnabled\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/routing/staticRoutes/:staticRouteId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"switch",
																		"stacks",
																		":switchStackId",
																		"routing",
																		"staticRoutes",
																		":staticRouteId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "switchStackId",
																			"value": "{{switchStackId}}",
																			"description": "(Required) Switch stack ID"
																		},
																		{
																			"key": "staticRouteId",
																			"value": "{{staticRouteId}}",
																			"description": "(Required) Static route ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Update a layer 3 static route for a switch stack"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"My route\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"nextHopIp\": \"1.2.3.4\",\n  \"managementNextHop\": \"1.2.3.5\",\n  \"advertiseViaOspfEnabled\": false,\n  \"preferOverOspfRoutesEnabled\": false\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/routing/staticRoutes/:staticRouteId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"switch",
																				"stacks",
																				":switchStackId",
																				"routing",
																				"staticRoutes",
																				":staticRouteId"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "switchStackId",
																					"value": "<string>",
																					"description": "(Required) Switch stack ID"
																				},
																				{
																					"key": "staticRouteId",
																					"value": "<string>",
																					"description": "(Required) Static route ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"staticRouteId\": \"1234\",\n  \"name\": \"My route\",\n  \"subnet\": \"192.168.1.0/24\",\n  \"nextHopIp\": \"1.2.3.4\",\n  \"managementNextHop\": \"1.2.3.5\",\n  \"advertiseViaOspfEnabled\": false,\n  \"preferOverOspfRoutesEnabled\": false\n}"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "addNetworkSwitchStack",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serial\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"stacks",
														":switchStackId",
														"add"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "switchStackId",
															"value": "{{switchStackId}}",
															"description": "(Required) Switch stack ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Add a switch to a stack"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serial\": \"QBZY-XWVU-TSRQ\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/add",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"stacks",
																":switchStackId",
																"add"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "switchStackId",
																	"value": "<string>",
																	"description": "(Required) Switch stack ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"8473\",\n  \"name\": \"A cool stack\",\n  \"serials\": [\n    \"QBZY-XWVU-TSRQ\",\n    \"QBAB-CDEF-GHIJ\"\n  ],\n  \"isMonitorOnly\": false,\n  \"members\": [\n    {\n      \"serial\": \"QBZY-XWVU-TSRQ\",\n      \"name\": \"switch 1\",\n      \"model\": \"MS350-24-HW\",\n      \"mac\": \"00:18:0a:00:00:09\",\n      \"role\": \"active\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "createNetworkSwitchStack",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/stacks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"stacks"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Create a switch stack"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"A cool stack\",\n  \"serials\": [\n    \"QBZY-XWVU-TSRQ\",\n    \"QBAB-CDEF-GHIJ\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/stacks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"stacks"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"8473\",\n  \"name\": \"A cool stack\",\n  \"serials\": [\n    \"QBZY-XWVU-TSRQ\",\n    \"QBAB-CDEF-GHIJ\"\n  ],\n  \"isMonitorOnly\": false,\n  \"members\": [\n    {\n      \"serial\": \"QBZY-XWVU-TSRQ\",\n      \"name\": \"switch 1\",\n      \"model\": \"MS350-24-HW\",\n      \"mac\": \"00:18:0a:00:00:09\",\n      \"role\": \"active\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "deleteNetworkSwitchStack",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"stacks",
														":switchStackId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "switchStackId",
															"value": "{{switchStackId}}",
															"description": "(Required) Switch stack ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Delete a stack"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"stacks",
																":switchStackId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "switchStackId",
																	"value": "<string>",
																	"description": "(Required) Switch stack ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getNetworkSwitchStack",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"stacks",
														":switchStackId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "switchStackId",
															"value": "{{switchStackId}}",
															"description": "(Required) Switch stack ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Show a switch stack"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"stacks",
																":switchStackId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "switchStackId",
																	"value": "<string>",
																	"description": "(Required) Switch stack ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"8473\",\n  \"name\": \"A cool stack\",\n  \"serials\": [\n    \"QBZY-XWVU-TSRQ\",\n    \"QBAB-CDEF-GHIJ\"\n  ],\n  \"isMonitorOnly\": false,\n  \"members\": [\n    {\n      \"serial\": \"QBZY-XWVU-TSRQ\",\n      \"name\": \"switch 1\",\n      \"model\": \"MS350-24-HW\",\n      \"mac\": \"00:18:0a:00:00:09\",\n      \"role\": \"active\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "getNetworkSwitchStacks",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/stacks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"stacks"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the switch stacks in a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/stacks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"stacks"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"8473\",\n    \"name\": \"A cool stack\",\n    \"serials\": [\n      \"QBZY-XWVU-TSRQ\",\n      \"QBAB-CDEF-GHIJ\"\n    ],\n    \"isMonitorOnly\": false,\n    \"members\": [\n      {\n        \"serial\": \"QBZY-XWVU-TSRQ\",\n        \"name\": \"switch 1\",\n        \"model\": \"MS350-24-HW\",\n        \"mac\": \"00:18:0a:00:00:09\",\n        \"role\": \"active\"\n      }\n    ]\n  }\n]"
												}
											]
										},
										{
											"name": "removeNetworkSwitchStack",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serial\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"stacks",
														":switchStackId",
														"remove"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "switchStackId",
															"value": "{{switchStackId}}",
															"description": "(Required) Switch stack ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Remove a switch from a stack"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serial\": \"QBZY-XWVU-TSRQ\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/stacks/:switchStackId/remove",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"stacks",
																":switchStackId",
																"remove"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "switchStackId",
																	"value": "<string>",
																	"description": "(Required) Switch stack ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"8473\",\n  \"name\": \"A cool stack\",\n  \"serials\": [\n    \"QBZY-XWVU-TSRQ\",\n    \"QBAB-CDEF-GHIJ\"\n  ],\n  \"isMonitorOnly\": false,\n  \"members\": [\n    {\n      \"serial\": \"QBZY-XWVU-TSRQ\",\n      \"name\": \"switch 1\",\n      \"model\": \"MS350-24-HW\",\n      \"mac\": \"00:18:0a:00:00:09\",\n      \"role\": \"active\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "stormControl",
									"item": [
										{
											"name": "getNetworkSwitchStormControl",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/stormControl",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"stormControl"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the storm control configuration for a switch network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/stormControl",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"stormControl"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"broadcastThreshold\": 30,\n  \"multicastThreshold\": 30,\n  \"unknownUnicastThreshold\": 30,\n  \"treatTheseTrafficTypesAsOneThreshold\": [\n    \"broadcast\",\n    \"multicast\"\n  ]\n}"
												}
											]
										},
										{
											"name": "updateNetworkSwitchStormControl",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"broadcastThreshold\": \"<integer>\",\n  \"multicastThreshold\": \"<integer>\",\n  \"unknownUnicastThreshold\": \"<integer>\",\n  \"treatTheseTrafficTypesAsOneThreshold\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/stormControl",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"stormControl"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the storm control configuration for a switch network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"broadcastThreshold\": 30,\n  \"multicastThreshold\": 30,\n  \"unknownUnicastThreshold\": 30,\n  \"treatTheseTrafficTypesAsOneThreshold\": [\n    \"broadcast\",\n    \"multicast\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/stormControl",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"stormControl"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"broadcastThreshold\": 30,\n  \"multicastThreshold\": 30,\n  \"unknownUnicastThreshold\": 30,\n  \"treatTheseTrafficTypesAsOneThreshold\": [\n    \"broadcast\",\n    \"multicast\"\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "stp",
									"item": [
										{
											"name": "getNetworkSwitchStp",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/stp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"stp"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Returns STP settings"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/stp",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"stp"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"rstpEnabled\": true,\n  \"stpBridgePriority\": [\n    {\n      \"switches\": [\n        \"Q234-ABCD-0001\",\n        \"Q234-ABCD-0002\",\n        \"Q234-ABCD-0003\"\n      ],\n      \"stacks\": [\n        \"789102\",\n        \"123456\",\n        \"129102\"\n      ],\n      \"switchProfiles\": [\n        \"1098\",\n        \"1099\",\n        \"1100\"\n      ],\n      \"stpPriority\": 4096\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "updateNetworkSwitchStp",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"rstpEnabled\": \"<boolean>\",\n  \"stpBridgePriority\": [\n    {\n      \"stpPriority\": \"<integer>\",\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"stacks\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"stpPriority\": \"<integer>\",\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"stacks\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/switch/stp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"switch",
														"stp"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Updates STP settings"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rstpEnabled\": \"<boolean>\",\n  \"stpBridgePriority\": [\n    {\n      \"stpPriority\": \"<integer>\",\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"stacks\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"stpPriority\": \"<integer>\",\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"stacks\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/switch/stp",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"switch",
																"stp"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"rstpEnabled\": true,\n  \"stpBridgePriority\": [\n    {\n      \"switches\": [\n        \"Q234-ABCD-0001\",\n        \"Q234-ABCD-0002\",\n        \"Q234-ABCD-0003\"\n      ],\n      \"stacks\": [\n        \"789102\",\n        \"123456\",\n        \"129102\"\n      ],\n      \"switchProfiles\": [\n        \"1098\",\n        \"1099\",\n        \"1100\"\n      ],\n      \"stpPriority\": 4096\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "warmSpare",
									"item": [
										{
											"name": "getDeviceSwitchWarmSpare",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/switch/warmSpare",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"switch",
														"warmSpare"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return warm spare configuration for a switch"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/switch/warmSpare",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"warmSpare"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"enabled\": true,\n  \"primarySerial\": \"Q234-ABCD-0001\",\n  \"spareSerial\": \"Q234-ABCD-0002\"\n}"
												}
											]
										},
										{
											"name": "updateDeviceSwitchWarmSpare",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"spareSerial\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/switch/warmSpare",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"switch",
														"warmSpare"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update warm spare configuration for a switch. The spare will use the same L3 configuration as the primary. Note that this will irreversibly destroy any existing L3 configuration on the spare."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": true,\n  \"spareSerial\": \"Q234-ABCD-0002\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/switch/warmSpare",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"warmSpare"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"enabled\": true,\n  \"primarySerial\": \"Q234-ABCD-0001\",\n  \"spareSerial\": \"Q234-ABCD-0002\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "liveTools",
							"item": [
								{
									"name": "ports",
									"item": [
										{
											"name": "cycleDeviceSwitchPorts",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ports\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/switch/ports/cycle",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"switch",
														"ports",
														"cycle"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Cycle a set of switch ports"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ports\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/switch/ports/cycle",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"ports",
																"cycle"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ports\": [\n    \"1\",\n    \"2-5\",\n    \"1_MA-MOD-8X10G_1\",\n    \"1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8\"\n  ]\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "monitor",
							"item": [
								{
									"name": "ports",
									"item": [
										{
											"name": "clients",
											"item": [
												{
													"name": "overview",
													"item": [
														{
															"name": "byDevice",
															"item": [
																{
																	"name": "getOrganizationSwitchPortsClientsOverviewByDevice",
																	"protocolProfileBehavior": {
																		"followAuthorizationHeader": false
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/switch/ports/clients/overview/byDevice",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"switch",
																				"ports",
																				"clients",
																				"overview",
																				"byDevice"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "{{t0}}",
																					"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
																					"disabled": true
																				},
																				{
																					"key": "timespan",
																					"value": "{{timespan}}",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
																					"disabled": true
																				},
																				{
																					"key": "perPage",
																					"value": "{{perPage}}",
																					"description": "The number of entries per page returned. Acceptable range is 3 - 20. Default is 20.",
																					"disabled": true
																				},
																				{
																					"key": "startingAfter",
																					"value": "{{startingAfter}}",
																					"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																					"disabled": true
																				},
																				{
																					"key": "endingBefore",
																					"value": "{{endingBefore}}",
																					"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																					"disabled": true
																				},
																				{
																					"key": "configurationUpdatedAfter",
																					"value": "{{configurationUpdatedAfter}}",
																					"description": "Optional parameter to filter items to switches where the configuration has been updated after the given timestamp.",
																					"disabled": true
																				},
																				{
																					"key": "mac",
																					"value": "{{mac}}",
																					"description": "Optional parameter to filter items to switches with MAC addresses that contain the search term or are an exact match.",
																					"disabled": true
																				},
																				{
																					"key": "macs",
																					"value": "{{macs}}",
																					"description": "Optional parameter to filter items to switches that have one of the provided MAC addresses.",
																					"disabled": true
																				},
																				{
																					"key": "macs",
																					"value": "{{macs}}",
																					"description": "Optional parameter to filter items to switches that have one of the provided MAC addresses.",
																					"disabled": true
																				},
																				{
																					"key": "name",
																					"value": "{{name}}",
																					"description": "Optional parameter to filter items to switches with names that contain the search term or are an exact match.",
																					"disabled": true
																				},
																				{
																					"key": "networkIds",
																					"value": "{{networkIds}}",
																					"description": "Optional parameter to filter items to switches in one of the provided networks.",
																					"disabled": true
																				},
																				{
																					"key": "networkIds",
																					"value": "{{networkIds}}",
																					"description": "Optional parameter to filter items to switches in one of the provided networks.",
																					"disabled": true
																				},
																				{
																					"key": "portProfileIds",
																					"value": "{{portProfileIds}}",
																					"description": "Optional parameter to filter items to switches that contain switchports belonging to one of the specified port profiles.",
																					"disabled": true
																				},
																				{
																					"key": "portProfileIds",
																					"value": "{{portProfileIds}}",
																					"description": "Optional parameter to filter items to switches that contain switchports belonging to one of the specified port profiles.",
																					"disabled": true
																				},
																				{
																					"key": "serial",
																					"value": "{{serial}}",
																					"description": "Optional parameter to filter items to switches with serial number that contains the search term or are an exact match.",
																					"disabled": true
																				},
																				{
																					"key": "serials",
																					"value": "{{serials}}",
																					"description": "Optional parameter to filter items to switches that have one of the provided serials.",
																					"disabled": true
																				},
																				{
																					"key": "serials",
																					"value": "{{serials}}",
																					"description": "Optional parameter to filter items to switches that have one of the provided serials.",
																					"disabled": true
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "{{organizationId}}",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		},
																		"description": "List the number of clients for all switchports with at least one online client in an organization."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/switch/ports/clients/overview/byDevice?t0=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&configurationUpdatedAfter=<dateTime>&mac=<string>&macs=<string>&macs=<string>&name=<string>&networkIds=<string>&networkIds=<string>&portProfileIds=<string>&portProfileIds=<string>&serial=<string>&serials=<string>&serials=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"switch",
																						"ports",
																						"clients",
																						"overview",
																						"byDevice"
																					],
																					"query": [
																						{
																							"key": "t0",
																							"value": "<string>"
																						},
																						{
																							"key": "timespan",
																							"value": "<float>"
																						},
																						{
																							"key": "perPage",
																							"value": "<integer>"
																						},
																						{
																							"key": "startingAfter",
																							"value": "<string>"
																						},
																						{
																							"key": "endingBefore",
																							"value": "<string>"
																						},
																						{
																							"key": "configurationUpdatedAfter",
																							"value": "<dateTime>"
																						},
																						{
																							"key": "mac",
																							"value": "<string>"
																						},
																						{
																							"key": "macs",
																							"value": "<string>"
																						},
																						{
																							"key": "macs",
																							"value": "<string>"
																						},
																						{
																							"key": "name",
																							"value": "<string>"
																						},
																						{
																							"key": "networkIds",
																							"value": "<string>"
																						},
																						{
																							"key": "networkIds",
																							"value": "<string>"
																						},
																						{
																							"key": "portProfileIds",
																							"value": "<string>"
																						},
																						{
																							"key": "portProfileIds",
																							"value": "<string>"
																						},
																						{
																							"key": "serial",
																							"value": "<string>"
																						},
																						{
																							"key": "serials",
																							"value": "<string>"
																						},
																						{
																							"key": "serials",
																							"value": "<string>"
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "<string>",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Link",
																					"value": "Lorem nisi fugiat",
																					"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																				},
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"items\": [\n    {\n      \"name\": \"Example Switch\",\n      \"serial\": \"Q555-5555-5555\",\n      \"mac\": \"01:23:45:67:ab:cd\",\n      \"network\": {\n        \"name\": \"Example Network\",\n        \"id\": \"L_12345\"\n      },\n      \"model\": \"MS120-8\",\n      \"ports\": [\n        {\n          \"portId\": \"1\",\n          \"counts\": {\n            \"byStatus\": {\n              \"online\": 0\n            }\n          }\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 1,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "overview",
											"item": [
												{
													"name": "getOrganizationSwitchPortsOverview",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/switch/ports/overview",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"switch",
																"ports",
																"overview"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "{{t0}}",
																	"description": "The beginning of the timespan for the data.",
																	"disabled": true
																},
																{
																	"key": "t1",
																	"value": "{{t1}}",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 186 days after t0.",
																	"disabled": true
																},
																{
																	"key": "timespan",
																	"value": "{{timespan}}",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 12 hours and be less than or equal to 186 days. The default is 1 day.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Returns the counts of all active ports for the requested timespan, grouped by speed. An active port is a port that at any point during the timeframe is observed to be connected to a responsive device and isn't configured to be disabled. For a port that is observed at multiple speeds during the timeframe, it will be counted at the highest speed observed. The number of inactive ports, and the total number of ports are also provided. Only ports on switches online during the timeframe will be represented and a port is only guaranteed to be present if its switch was online for at least 6 hours of the timeframe."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/switch/ports/overview?t0=<string>&t1=<string>&timespan=<float>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"switch",
																		"ports",
																		"overview"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>"
																		},
																		{
																			"key": "t1",
																			"value": "<string>"
																		},
																		{
																			"key": "timespan",
																			"value": "<float>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"counts\": {\n    \"total\": 120,\n    \"byStatus\": {\n      \"active\": {\n        \"total\": 87,\n        \"byMediaAndLinkSpeed\": {\n          \"rj45\": {\n            \"10\": 0,\n            \"100\": 0,\n            \"1000\": 24,\n            \"2500\": 0,\n            \"5000\": 0,\n            \"10000\": 0,\n            \"total\": 24\n          },\n          \"sfp\": {\n            \"100\": 8,\n            \"1000\": 40,\n            \"10000\": 10,\n            \"20000\": 0,\n            \"25000\": 0,\n            \"40000\": 1,\n            \"50000\": 0,\n            \"100000\": 0,\n            \"total\": 63\n          }\n        }\n      },\n      \"inactive\": {\n        \"total\": 33,\n        \"byMedia\": {\n          \"rj45\": {\n            \"total\": 16\n          },\n          \"sfp\": {\n            \"total\": 17\n          }\n        }\n      }\n    }\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "statuses",
											"item": [
												{
													"name": "bySwitch",
													"item": [
														{
															"name": "getOrganizationSwitchPortsStatusesBySwitch",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/switch/ports/statuses/bySwitch",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"switch",
																		"ports",
																		"statuses",
																		"bySwitch"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "{{perPage}}",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 20. Default is 10.",
																			"disabled": true
																		},
																		{
																			"key": "startingAfter",
																			"value": "{{startingAfter}}",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "endingBefore",
																			"value": "{{endingBefore}}",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "configurationUpdatedAfter",
																			"value": "{{configurationUpdatedAfter}}",
																			"description": "Optional parameter to filter items to switches where the configuration has been updated after the given timestamp.",
																			"disabled": true
																		},
																		{
																			"key": "mac",
																			"value": "{{mac}}",
																			"description": "Optional parameter to filter items to switches with MAC addresses that contain the search term or are an exact match.",
																			"disabled": true
																		},
																		{
																			"key": "macs",
																			"value": "{{macs}}",
																			"description": "Optional parameter to filter items to switches that have one of the provided MAC addresses.",
																			"disabled": true
																		},
																		{
																			"key": "macs",
																			"value": "{{macs}}",
																			"description": "Optional parameter to filter items to switches that have one of the provided MAC addresses.",
																			"disabled": true
																		},
																		{
																			"key": "name",
																			"value": "{{name}}",
																			"description": "Optional parameter to filter items to switches with names that contain the search term or are an exact match.",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Optional parameter to filter items to switches in one of the provided networks.",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Optional parameter to filter items to switches in one of the provided networks.",
																			"disabled": true
																		},
																		{
																			"key": "portProfileIds",
																			"value": "{{portProfileIds}}",
																			"description": "Optional parameter to filter items to switches that contain switchports belonging to one of the specified port profiles.",
																			"disabled": true
																		},
																		{
																			"key": "portProfileIds",
																			"value": "{{portProfileIds}}",
																			"description": "Optional parameter to filter items to switches that contain switchports belonging to one of the specified port profiles.",
																			"disabled": true
																		},
																		{
																			"key": "serial",
																			"value": "{{serial}}",
																			"description": "Optional parameter to filter items to switches with serial number that contains the search term or are an exact match.",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "Optional parameter to filter items to switches that have one of the provided serials.",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "Optional parameter to filter items to switches that have one of the provided serials.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "List the switchports in an organization"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/switch/ports/statuses/bySwitch?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&configurationUpdatedAfter=<dateTime>&mac=<string>&macs=<string>&macs=<string>&name=<string>&networkIds=<string>&networkIds=<string>&portProfileIds=<string>&portProfileIds=<string>&serial=<string>&serials=<string>&serials=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"switch",
																				"ports",
																				"statuses",
																				"bySwitch"
																			],
																			"query": [
																				{
																					"key": "perPage",
																					"value": "<integer>"
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>"
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>"
																				},
																				{
																					"key": "configurationUpdatedAfter",
																					"value": "<dateTime>"
																				},
																				{
																					"key": "mac",
																					"value": "<string>"
																				},
																				{
																					"key": "macs",
																					"value": "<string>"
																				},
																				{
																					"key": "macs",
																					"value": "<string>"
																				},
																				{
																					"key": "name",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "portProfileIds",
																					"value": "<string>"
																				},
																				{
																					"key": "portProfileIds",
																					"value": "<string>"
																				},
																				{
																					"key": "serial",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Link",
																			"value": "Lorem nisi fugiat",
																			"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"items\": [\n    {\n      \"name\": \"Example Switch\",\n      \"serial\": \"Q555-5555-5555\",\n      \"mac\": \"01:23:45:67:ab:cd\",\n      \"network\": {\n        \"name\": \"Example Network\",\n        \"id\": \"L_12345\"\n      },\n      \"model\": \"MS120-8\",\n      \"ports\": [\n        {\n          \"portId\": \"1\",\n          \"enabled\": true,\n          \"status\": \"Connected\",\n          \"isUplink\": false,\n          \"errors\": [\n            \"PoE overload\",\n            \"Very high proportion of CRC errors\"\n          ],\n          \"warnings\": [\n            \"SecurePort authentication in progress\",\n            \"PoE port was denied power\",\n            \"High proportion of CRC errors\"\n          ],\n          \"speed\": \"10 Gbps\",\n          \"duplex\": \"full\",\n          \"spanningTree\": {\n            \"statuses\": [\n              \"Learning\"\n            ]\n          },\n          \"poe\": {\n            \"isAllocated\": false\n          },\n          \"securePort\": {\n            \"active\": true,\n            \"authenticationStatus\": \"Authentication in progress\"\n          }\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 1,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "packets",
													"item": [
														{
															"name": "getDeviceSwitchPortsStatusesPackets",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/switch/ports/statuses/packets",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"ports",
																		"statuses",
																		"packets"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "{{t0}}",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 1 day from today.",
																			"disabled": true
																		},
																		{
																			"key": "timespan",
																			"value": "{{timespan}}",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 1 day. The default is 1 day.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "{{serial}}",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Return the packet counters for all the ports of a switch"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/devices/:serial/switch/ports/statuses/packets?t0=<string>&timespan=<float>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"devices",
																				":serial",
																				"switch",
																				"ports",
																				"statuses",
																				"packets"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>"
																				},
																				{
																					"key": "timespan",
																					"value": "<float>"
																				}
																			],
																			"variable": [
																				{
																					"key": "serial",
																					"value": "<string>",
																					"description": "(Required) Serial"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"portId\": \"1\",\n    \"packets\": [\n      {\n        \"desc\": \"Total\",\n        \"total\": 112081,\n        \"sent\": 104135,\n        \"recv\": 7946,\n        \"ratePerSec\": {\n          \"total\": 1,\n          \"sent\": 1,\n          \"recv\": 0\n        }\n      }\n    ]\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "getDeviceSwitchPortsStatuses",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/switch/ports/statuses",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"ports",
																"statuses"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "{{t0}}",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
																	"disabled": true
																},
																{
																	"key": "timespan",
																	"value": "{{timespan}}",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the status for all the ports of a switch"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/switch/ports/statuses?t0=<string>&timespan=<float>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"ports",
																		"statuses"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>"
																		},
																		{
																			"key": "timespan",
																			"value": "<float>"
																		}
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"portId\": \"1\",\n    \"enabled\": true,\n    \"status\": \"Connected\",\n    \"isUplink\": false,\n    \"errors\": [\n      \"PoE overload\",\n      \"Very high proportion of CRC errors\"\n    ],\n    \"warnings\": [\n      \"SecurePort authentication in progress\",\n      \"PoE port was denied power\",\n      \"High proportion of CRC errors\"\n    ],\n    \"speed\": \"10 Gbps\",\n    \"duplex\": \"full\",\n    \"spanningTree\": {\n      \"statuses\": [\n        \"Learning\"\n      ]\n    },\n    \"poe\": {\n      \"isAllocated\": false\n    },\n    \"usageInKb\": {\n      \"total\": 40867,\n      \"sent\": 23008,\n      \"recv\": 17859\n    },\n    \"cdp\": {\n      \"systemName\": \"\",\n      \"platform\": \"MS350-24X\",\n      \"deviceId\": \"0c8ddbddee:ff\",\n      \"portId\": \"Port 20\",\n      \"nativeVlan\": 1,\n      \"address\": \"10.0,0.1\",\n      \"managementAddress\": \"10.0.0.100\",\n      \"version\": \"1\",\n      \"vtpManagementDomain\": \"\",\n      \"capabilities\": \"Switch\"\n    },\n    \"lldp\": {\n      \"systemName\": \"MS350-24X - Test\",\n      \"systemDescription\": \"MS350-24X Cloud Managed PoE Switch\",\n      \"chassisId\": \"0c:8d:db:dd:ee:ff\",\n      \"portId\": \"20\",\n      \"managementVlan\": 1,\n      \"portVlan\": 1,\n      \"managementAddress\": \"10.0.0.100\",\n      \"portDescription\": \"Port 20\",\n      \"systemCapabilities\": \"switch\"\n    },\n    \"clientCount\": 10,\n    \"powerUsageInWh\": 55.9,\n    \"trafficInKbps\": {\n      \"total\": 2.2,\n      \"sent\": 1.2,\n      \"recv\": 1\n    },\n    \"securePort\": {\n      \"enabled\": true,\n      \"active\": true,\n      \"authenticationStatus\": \"Authentication in progress\",\n      \"configOverrides\": {\n        \"type\": \"trunk\",\n        \"vlan\": 12,\n        \"voiceVlan\": 34,\n        \"allowedVlans\": \"all\"\n      }\n    }\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "topology",
											"item": [
												{
													"name": "discovery",
													"item": [
														{
															"name": "byDevice",
															"item": [
																{
																	"name": "getOrganizationSwitchPortsTopologyDiscoveryByDevice",
																	"protocolProfileBehavior": {
																		"followAuthorizationHeader": false
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/switch/ports/topology/discovery/byDevice",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"switch",
																				"ports",
																				"topology",
																				"discovery",
																				"byDevice"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "{{t0}}",
																					"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
																					"disabled": true
																				},
																				{
																					"key": "timespan",
																					"value": "{{timespan}}",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
																					"disabled": true
																				},
																				{
																					"key": "perPage",
																					"value": "{{perPage}}",
																					"description": "The number of entries per page returned. Acceptable range is 3 - 20. Default is 10.",
																					"disabled": true
																				},
																				{
																					"key": "startingAfter",
																					"value": "{{startingAfter}}",
																					"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																					"disabled": true
																				},
																				{
																					"key": "endingBefore",
																					"value": "{{endingBefore}}",
																					"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																					"disabled": true
																				},
																				{
																					"key": "configurationUpdatedAfter",
																					"value": "{{configurationUpdatedAfter}}",
																					"description": "Optional parameter to filter items to switches where the configuration has been updated after the given timestamp.",
																					"disabled": true
																				},
																				{
																					"key": "mac",
																					"value": "{{mac}}",
																					"description": "Optional parameter to filter items to switches with MAC addresses that contain the search term or are an exact match.",
																					"disabled": true
																				},
																				{
																					"key": "macs",
																					"value": "{{macs}}",
																					"description": "Optional parameter to filter items to switches that have one of the provided MAC addresses.",
																					"disabled": true
																				},
																				{
																					"key": "macs",
																					"value": "{{macs}}",
																					"description": "Optional parameter to filter items to switches that have one of the provided MAC addresses.",
																					"disabled": true
																				},
																				{
																					"key": "name",
																					"value": "{{name}}",
																					"description": "Optional parameter to filter items to switches with names that contain the search term or are an exact match.",
																					"disabled": true
																				},
																				{
																					"key": "networkIds",
																					"value": "{{networkIds}}",
																					"description": "Optional parameter to filter items to switches in one of the provided networks.",
																					"disabled": true
																				},
																				{
																					"key": "networkIds",
																					"value": "{{networkIds}}",
																					"description": "Optional parameter to filter items to switches in one of the provided networks.",
																					"disabled": true
																				},
																				{
																					"key": "portProfileIds",
																					"value": "{{portProfileIds}}",
																					"description": "Optional parameter to filter items to switches that contain switchports belonging to one of the specified port profiles.",
																					"disabled": true
																				},
																				{
																					"key": "portProfileIds",
																					"value": "{{portProfileIds}}",
																					"description": "Optional parameter to filter items to switches that contain switchports belonging to one of the specified port profiles.",
																					"disabled": true
																				},
																				{
																					"key": "serial",
																					"value": "{{serial}}",
																					"description": "Optional parameter to filter items to switches with serial number that contains the search term or are an exact match.",
																					"disabled": true
																				},
																				{
																					"key": "serials",
																					"value": "{{serials}}",
																					"description": "Optional parameter to filter items to switches that have one of the provided serials.",
																					"disabled": true
																				},
																				{
																					"key": "serials",
																					"value": "{{serials}}",
																					"description": "Optional parameter to filter items to switches that have one of the provided serials.",
																					"disabled": true
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "{{organizationId}}",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		},
																		"description": "List most recently seen LLDP/CDP discovery and topology information per switch port in an organization."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/switch/ports/topology/discovery/byDevice?t0=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&configurationUpdatedAfter=<dateTime>&mac=<string>&macs=<string>&macs=<string>&name=<string>&networkIds=<string>&networkIds=<string>&portProfileIds=<string>&portProfileIds=<string>&serial=<string>&serials=<string>&serials=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"switch",
																						"ports",
																						"topology",
																						"discovery",
																						"byDevice"
																					],
																					"query": [
																						{
																							"key": "t0",
																							"value": "<string>"
																						},
																						{
																							"key": "timespan",
																							"value": "<float>"
																						},
																						{
																							"key": "perPage",
																							"value": "<integer>"
																						},
																						{
																							"key": "startingAfter",
																							"value": "<string>"
																						},
																						{
																							"key": "endingBefore",
																							"value": "<string>"
																						},
																						{
																							"key": "configurationUpdatedAfter",
																							"value": "<dateTime>"
																						},
																						{
																							"key": "mac",
																							"value": "<string>"
																						},
																						{
																							"key": "macs",
																							"value": "<string>"
																						},
																						{
																							"key": "macs",
																							"value": "<string>"
																						},
																						{
																							"key": "name",
																							"value": "<string>"
																						},
																						{
																							"key": "networkIds",
																							"value": "<string>"
																						},
																						{
																							"key": "networkIds",
																							"value": "<string>"
																						},
																						{
																							"key": "portProfileIds",
																							"value": "<string>"
																						},
																						{
																							"key": "portProfileIds",
																							"value": "<string>"
																						},
																						{
																							"key": "serial",
																							"value": "<string>"
																						},
																						{
																							"key": "serials",
																							"value": "<string>"
																						},
																						{
																							"key": "serials",
																							"value": "<string>"
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "<string>",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Link",
																					"value": "Lorem nisi fugiat",
																					"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																				},
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"items\": [\n    {\n      \"name\": \"Example Switch\",\n      \"serial\": \"Q555-5555-5555\",\n      \"mac\": \"01:23:45:67:ab:cd\",\n      \"network\": {\n        \"name\": \"Example Network\",\n        \"id\": \"L_12345\"\n      },\n      \"model\": \"MS120-8\",\n      \"ports\": [\n        {\n          \"portId\": \"1\",\n          \"lastUpdatedAt\": \"ISO8061Z\",\n          \"cdp\": [\n            {\n              \"name\": \"System name\",\n              \"value\": \"MS350-24X - Test\"\n            }\n          ],\n          \"lldp\": [\n            {\n              \"name\": \"System name\",\n              \"value\": \"MS350-24X - Test\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 1,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "usage",
											"item": [
												{
													"name": "history",
													"item": [
														{
															"name": "byDevice",
															"item": [
																{
																	"name": "byInterval",
																	"item": [
																		{
																			"name": "getOrganizationSwitchPortsUsageHistoryByDeviceByInterval",
																			"protocolProfileBehavior": {
																				"followAuthorizationHeader": false
																			},
																			"request": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/switch/ports/usage/history/byDevice/byInterval",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"switch",
																						"ports",
																						"usage",
																						"history",
																						"byDevice",
																						"byInterval"
																					],
																					"query": [
																						{
																							"key": "t0",
																							"value": "{{t0}}",
																							"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
																							"disabled": true
																						},
																						{
																							"key": "t1",
																							"value": "{{t1}}",
																							"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
																							"disabled": true
																						},
																						{
																							"key": "timespan",
																							"value": "{{timespan}}",
																							"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day. If interval is provided, the timespan will be autocalculated.",
																							"disabled": true
																						},
																						{
																							"key": "interval",
																							"value": "{{interval}}",
																							"description": "The time interval in seconds for returned data. The valid intervals are: 300, 1200, 14400, 86400. The default is 1200. Interval is calculated if time params are provided.",
																							"disabled": true
																						},
																						{
																							"key": "perPage",
																							"value": "{{perPage}}",
																							"description": "The number of entries per page returned. Acceptable range is 3 - 50. Default is 10.",
																							"disabled": true
																						},
																						{
																							"key": "startingAfter",
																							"value": "{{startingAfter}}",
																							"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																							"disabled": true
																						},
																						{
																							"key": "endingBefore",
																							"value": "{{endingBefore}}",
																							"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																							"disabled": true
																						},
																						{
																							"key": "configurationUpdatedAfter",
																							"value": "{{configurationUpdatedAfter}}",
																							"description": "Optional parameter to filter items to switches where the configuration has been updated after the given timestamp.",
																							"disabled": true
																						},
																						{
																							"key": "mac",
																							"value": "{{mac}}",
																							"description": "Optional parameter to filter items to switches with MAC addresses that contain the search term or are an exact match.",
																							"disabled": true
																						},
																						{
																							"key": "macs",
																							"value": "{{macs}}",
																							"description": "Optional parameter to filter items to switches that have one of the provided MAC addresses.",
																							"disabled": true
																						},
																						{
																							"key": "macs",
																							"value": "{{macs}}",
																							"description": "Optional parameter to filter items to switches that have one of the provided MAC addresses.",
																							"disabled": true
																						},
																						{
																							"key": "name",
																							"value": "{{name}}",
																							"description": "Optional parameter to filter items to switches with names that contain the search term or are an exact match.",
																							"disabled": true
																						},
																						{
																							"key": "networkIds",
																							"value": "{{networkIds}}",
																							"description": "Optional parameter to filter items to switches in one of the provided networks.",
																							"disabled": true
																						},
																						{
																							"key": "networkIds",
																							"value": "{{networkIds}}",
																							"description": "Optional parameter to filter items to switches in one of the provided networks.",
																							"disabled": true
																						},
																						{
																							"key": "portProfileIds",
																							"value": "{{portProfileIds}}",
																							"description": "Optional parameter to filter items to switches that contain switchports belonging to one of the specified port profiles.",
																							"disabled": true
																						},
																						{
																							"key": "portProfileIds",
																							"value": "{{portProfileIds}}",
																							"description": "Optional parameter to filter items to switches that contain switchports belonging to one of the specified port profiles.",
																							"disabled": true
																						},
																						{
																							"key": "serial",
																							"value": "{{serial}}",
																							"description": "Optional parameter to filter items to switches with serial number that contains the search term or are an exact match.",
																							"disabled": true
																						},
																						{
																							"key": "serials",
																							"value": "{{serials}}",
																							"description": "Optional parameter to filter items to switches that have one of the provided serials.",
																							"disabled": true
																						},
																						{
																							"key": "serials",
																							"value": "{{serials}}",
																							"description": "Optional parameter to filter items to switches that have one of the provided serials.",
																							"disabled": true
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "{{organizationId}}",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				},
																				"description": "List the historical usage and traffic data of switchports in an organization."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>",
																								"description": "Added as a part of security scheme: apikey"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/organizations/:organizationId/switch/ports/usage/history/byDevice/byInterval?t0=<string>&t1=<string>&timespan=<float>&interval=<integer>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&configurationUpdatedAfter=<dateTime>&mac=<string>&macs=<string>&macs=<string>&name=<string>&networkIds=<string>&networkIds=<string>&portProfileIds=<string>&portProfileIds=<string>&serial=<string>&serials=<string>&serials=<string>",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"organizations",
																								":organizationId",
																								"switch",
																								"ports",
																								"usage",
																								"history",
																								"byDevice",
																								"byInterval"
																							],
																							"query": [
																								{
																									"key": "t0",
																									"value": "<string>"
																								},
																								{
																									"key": "t1",
																									"value": "<string>"
																								},
																								{
																									"key": "timespan",
																									"value": "<float>"
																								},
																								{
																									"key": "interval",
																									"value": "<integer>"
																								},
																								{
																									"key": "perPage",
																									"value": "<integer>"
																								},
																								{
																									"key": "startingAfter",
																									"value": "<string>"
																								},
																								{
																									"key": "endingBefore",
																									"value": "<string>"
																								},
																								{
																									"key": "configurationUpdatedAfter",
																									"value": "<dateTime>"
																								},
																								{
																									"key": "mac",
																									"value": "<string>"
																								},
																								{
																									"key": "macs",
																									"value": "<string>"
																								},
																								{
																									"key": "macs",
																									"value": "<string>"
																								},
																								{
																									"key": "name",
																									"value": "<string>"
																								},
																								{
																									"key": "networkIds",
																									"value": "<string>"
																								},
																								{
																									"key": "networkIds",
																									"value": "<string>"
																								},
																								{
																									"key": "portProfileIds",
																									"value": "<string>"
																								},
																								{
																									"key": "portProfileIds",
																									"value": "<string>"
																								},
																								{
																									"key": "serial",
																									"value": "<string>"
																								},
																								{
																									"key": "serials",
																									"value": "<string>"
																								},
																								{
																									"key": "serials",
																									"value": "<string>"
																								}
																							],
																							"variable": [
																								{
																									"key": "organizationId",
																									"value": "<string>",
																									"description": "(Required) Organization ID"
																								},
																								{
																									"key": "basePath",
																									"value": "{{basePath}}"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Link",
																							"value": "Lorem nisi fugiat",
																							"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																						},
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"items\": [\n    {\n      \"name\": \"Example Switch\",\n      \"serial\": \"Q555-5555-5555\",\n      \"mac\": \"01:23:45:67:ab:cd\",\n      \"network\": {\n        \"name\": \"Example Network\",\n        \"id\": \"L_12345\"\n      },\n      \"model\": \"MS120-8\",\n      \"ports\": [\n        {\n          \"portId\": \"1\",\n          \"intervals\": [\n            {\n              \"startTs\": \"2024-02-11T00:00:00.090210Z\",\n              \"endTs\": \"2024-02-11T00:20:00.090210Z\",\n              \"data\": {\n                \"usage\": {\n                  \"total\": 40867,\n                  \"upstream\": 23008,\n                  \"downstream\": 17859\n                }\n              },\n              \"bandwidth\": {\n                \"usage\": {\n                  \"total\": 2.2,\n                  \"upstream\": 1.2,\n                  \"downstream\": 1\n                }\n              },\n              \"energy\": {\n                \"usage\": {\n                  \"total\": 2.2\n                }\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 1,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "summary",
									"item": [
										{
											"name": "power",
											"item": [
												{
													"name": "history",
													"item": [
														{
															"name": "getOrganizationSummarySwitchPowerHistory",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/summary/switch/power/history",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"summary",
																		"switch",
																		"power",
																		"history"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "{{t0}}",
																			"description": "The beginning of the timespan for the data.",
																			"disabled": true
																		},
																		{
																			"key": "t1",
																			"value": "{{t1}}",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 186 days after t0.",
																			"disabled": true
																		},
																		{
																			"key": "timespan",
																			"value": "{{timespan}}",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 186 days. The default is 1 day.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Returns the total PoE power draw for all switch ports in the organization over the requested timespan (by default the last 24 hours). The returned array is a newest-first list of intervals. The time between intervals depends on the requested timespan with 20 minute intervals used for timespans up to 1 day, 4 hour intervals used for timespans up to 2 weeks, and 1 day intervals for timespans larger than 2 weeks."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/summary/switch/power/history?t0=<string>&t1=<string>&timespan=<float>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"summary",
																				"switch",
																				"power",
																				"history"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>"
																				},
																				{
																					"key": "t1",
																					"value": "<string>"
																				},
																				{
																					"key": "timespan",
																					"value": "<float>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"ts\": \"2021-06-20T01:00:00.000Z\",\n    \"draw\": 5.4321\n  }\n]"
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "wireless",
					"item": [
						{
							"name": "configure",
							"item": [
								{
									"name": "airMarshal",
									"item": [
										{
											"name": "rules",
											"item": [
												{
													"name": "createNetworkWirelessAirMarshalRule",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"type\": \"<string>\",\n  \"match\": {\n    \"type\": \"<string>\",\n    \"string\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/airMarshal/rules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"airMarshal",
																"rules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Creates a new rule"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"type\": \"allow\",\n  \"match\": {\n    \"type\": \"bssid\",\n    \"string\": \"00:11:22:33:44:55\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/airMarshal/rules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"airMarshal",
																		"rules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"network\": {\n    \"id\": \"N_12345\",\n    \"name\": \"Network 1\"\n  },\n  \"ruleId\": \"5239\",\n  \"type\": \"allow\",\n  \"updatedAt\": \"2023-05-23 12:02:46.298\",\n  \"createdAt\": \"2023-05-23 12:02:46.298\",\n  \"match\": {\n    \"string\": \"ipsum\",\n    \"type\": \"contains\"\n  }\n}"
														}
													]
												},
												{
													"name": "deleteNetworkWirelessAirMarshalRule",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/airMarshal/rules/:ruleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"airMarshal",
																"rules",
																":ruleId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "ruleId",
																	"value": "{{ruleId}}",
																	"description": "(Required) Rule ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Delete an Air Marshal rule."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/airMarshal/rules/:ruleId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"airMarshal",
																		"rules",
																		":ruleId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "ruleId",
																			"value": "<string>",
																			"description": "(Required) Rule ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "getOrganizationWirelessAirMarshalRules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/wireless/airMarshal/rules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"wireless",
																"airMarshal",
																"rules"
															],
															"query": [
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "(optional) The set of network IDs to include.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "(optional) The set of network IDs to include.",
																	"disabled": true
																},
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Returns the current Air Marshal rules for this organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/wireless/airMarshal/rules?networkIds=<string>&networkIds=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"wireless",
																		"airMarshal",
																		"rules"
																	],
																	"query": [
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": [\n    {\n      \"network\": {\n        \"id\": \"N_12345\",\n        \"name\": \"Network 1\"\n      },\n      \"ruleId\": \"5239\",\n      \"type\": \"allow\",\n      \"updatedAt\": \"2023-05-23 12:02:46.298\",\n      \"createdAt\": \"2023-05-23 12:02:46.298\",\n      \"match\": {\n        \"string\": \"ipsum\",\n        \"type\": \"contains\"\n      }\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 1\n      }\n    }\n  }\n}"
														}
													]
												},
												{
													"name": "updateNetworkWirelessAirMarshalRule",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"type\": \"<string>\",\n  \"match\": {\n    \"type\": \"<string>\",\n    \"string\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/airMarshal/rules/:ruleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"airMarshal",
																"rules",
																":ruleId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "ruleId",
																	"value": "{{ruleId}}",
																	"description": "(Required) Rule ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update a rule"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"type\": \"allow\",\n  \"match\": {\n    \"type\": \"bssid\",\n    \"string\": \"00:11:22:33:44:55\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/airMarshal/rules/:ruleId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"airMarshal",
																		"rules",
																		":ruleId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "ruleId",
																			"value": "<string>",
																			"description": "(Required) Rule ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"network\": {\n    \"id\": \"N_12345\",\n    \"name\": \"Network 1\"\n  },\n  \"ruleId\": \"5239\",\n  \"type\": \"allow\",\n  \"updatedAt\": \"2023-05-23 12:02:46.298\",\n  \"createdAt\": \"2023-05-23 12:02:46.298\",\n  \"match\": {\n    \"string\": \"ipsum\",\n    \"type\": \"contains\"\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "settings",
											"item": [
												{
													"name": "byNetwork",
													"item": [
														{
															"name": "getOrganizationWirelessAirMarshalSettingsByNetwork",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/wireless/airMarshal/settings/byNetwork",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"wireless",
																		"airMarshal",
																		"settings",
																		"byNetwork"
																	],
																	"query": [
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "The network IDs to include in the result set.",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "The network IDs to include in the result set.",
																			"disabled": true
																		},
																		{
																			"key": "perPage",
																			"value": "{{perPage}}",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																			"disabled": true
																		},
																		{
																			"key": "startingAfter",
																			"value": "{{startingAfter}}",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "endingBefore",
																			"value": "{{endingBefore}}",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Returns the current Air Marshal settings for this network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/wireless/airMarshal/settings/byNetwork?networkIds=<string>&networkIds=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"wireless",
																				"airMarshal",
																				"settings",
																				"byNetwork"
																			],
																			"query": [
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "perPage",
																					"value": "<integer>"
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>"
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Link",
																			"value": "Lorem nisi fugiat",
																			"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"items\": [\n    {\n      \"networkId\": \"N_12345\",\n      \"defaultPolicy\": \"allow\"\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 1,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "updateNetworkWirelessAirMarshalSettings",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"defaultPolicy\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/airMarshal/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"airMarshal",
																"settings"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Updates Air Marshal settings."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"defaultPolicy\": \"allow\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/airMarshal/settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"airMarshal",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"networkId\": \"N_12345\",\n  \"defaultPolicy\": \"allow\"\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "alternateManagementInterface",
									"item": [
										{
											"name": "ipv6",
											"item": [
												{
													"name": "updateDeviceWirelessAlternateManagementInterfaceIpv6",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"addresses\": [\n    {\n      \"protocol\": \"<string>\",\n      \"assignmentMode\": \"<string>\",\n      \"address\": \"<string>\",\n      \"gateway\": \"<string>\",\n      \"prefix\": \"<string>\",\n      \"nameservers\": {\n        \"addresses\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"protocol\": \"<string>\",\n      \"assignmentMode\": \"<string>\",\n      \"address\": \"<string>\",\n      \"gateway\": \"<string>\",\n      \"prefix\": \"<string>\",\n      \"nameservers\": {\n        \"addresses\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/wireless/alternateManagementInterface/ipv6",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"wireless",
																"alternateManagementInterface",
																"ipv6"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update alternate management interface IPv6 address"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"addresses\": [\n    {\n      \"protocol\": \"<string>\",\n      \"assignmentMode\": \"<string>\",\n      \"address\": \"<string>\",\n      \"gateway\": \"<string>\",\n      \"prefix\": \"<string>\",\n      \"nameservers\": {\n        \"addresses\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"protocol\": \"<string>\",\n      \"assignmentMode\": \"<string>\",\n      \"address\": \"<string>\",\n      \"gateway\": \"<string>\",\n      \"prefix\": \"<string>\",\n      \"nameservers\": {\n        \"addresses\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/wireless/alternateManagementInterface/ipv6",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"wireless",
																		"alternateManagementInterface",
																		"ipv6"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"addresses\": [\n    {\n      \"protocol\": \"ipv6\",\n      \"assignmentMode\": \"static\",\n      \"address\": \"2001:db8:3c4d:15::1\",\n      \"gateway\": \"fe80:db8:c15:c0:d0c::10ca:1d02\",\n      \"prefix\": \"2001:db8:3c4d:15::/64\",\n      \"nameservers\": {\n        \"addresses\": [\n          \"2001:db8:3c4d:15::1\",\n          \"2001:db8:3c4d:15::1\"\n        ]\n      }\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "getNetworkWirelessAlternateManagementInterface",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/alternateManagementInterface",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"alternateManagementInterface"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return alternate management interface and devices with IP assigned"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/alternateManagementInterface",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"alternateManagementInterface"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"enabled\": true,\n  \"vlanId\": 100,\n  \"protocols\": [\n    \"radius\",\n    \"snmp\",\n    \"syslog\",\n    \"ldap\"\n  ],\n  \"accessPoints\": [\n    {\n      \"serial\": \"Q234-ABCD-5678\",\n      \"alternateManagementIp\": \"1.2.3.4\",\n      \"subnetMask\": \"255.255.255.0\",\n      \"gateway\": \"1.2.3.5\",\n      \"dns1\": \"8.8.8.8\",\n      \"dns2\": \"8.8.4.4\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "updateNetworkWirelessAlternateManagementInterface",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"vlanId\": \"<integer>\",\n  \"protocols\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"accessPoints\": [\n    {\n      \"serial\": \"<string>\",\n      \"alternateManagementIp\": \"<string>\",\n      \"subnetMask\": \"<string>\",\n      \"gateway\": \"<string>\",\n      \"dns1\": \"<string>\",\n      \"dns2\": \"<string>\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"alternateManagementIp\": \"<string>\",\n      \"subnetMask\": \"<string>\",\n      \"gateway\": \"<string>\",\n      \"dns1\": \"<string>\",\n      \"dns2\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/alternateManagementInterface",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"alternateManagementInterface"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update alternate management interface and device static IP"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"vlanId\": \"<integer>\",\n  \"protocols\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"accessPoints\": [\n    {\n      \"serial\": \"<string>\",\n      \"alternateManagementIp\": \"<string>\",\n      \"subnetMask\": \"<string>\",\n      \"gateway\": \"<string>\",\n      \"dns1\": \"<string>\",\n      \"dns2\": \"<string>\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"alternateManagementIp\": \"<string>\",\n      \"subnetMask\": \"<string>\",\n      \"gateway\": \"<string>\",\n      \"dns1\": \"<string>\",\n      \"dns2\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/alternateManagementInterface",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"alternateManagementInterface"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"enabled\": true,\n  \"vlanId\": 100,\n  \"protocols\": [\n    \"radius\",\n    \"snmp\",\n    \"syslog\",\n    \"ldap\"\n  ],\n  \"accessPoints\": [\n    {\n      \"serial\": \"Q234-ABCD-5678\",\n      \"alternateManagementIp\": \"1.2.3.4\",\n      \"subnetMask\": \"255.255.255.0\",\n      \"gateway\": \"1.2.3.5\",\n      \"dns1\": \"8.8.8.8\",\n      \"dns2\": \"8.8.4.4\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "billing",
									"item": [
										{
											"name": "getNetworkWirelessBilling",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/billing",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"billing"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the billing settings of this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/billing",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"billing"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"currency\": \"USD\",\n  \"plans\": [\n    {\n      \"id\": \"1\",\n      \"price\": 5,\n      \"bandwidthLimits\": {\n        \"limitUp\": 1000,\n        \"limitDown\": 1000\n      },\n      \"timeLimit\": \"1 hour\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "updateNetworkWirelessBilling",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"currency\": \"<string>\",\n  \"plans\": [\n    {\n      \"price\": \"<float>\",\n      \"bandwidthLimits\": {\n        \"limitUp\": \"<integer>\",\n        \"limitDown\": \"<integer>\"\n      },\n      \"timeLimit\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"price\": \"<float>\",\n      \"bandwidthLimits\": {\n        \"limitUp\": \"<integer>\",\n        \"limitDown\": \"<integer>\"\n      },\n      \"timeLimit\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/billing",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"billing"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the billing settings"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"currency\": \"<string>\",\n  \"plans\": [\n    {\n      \"price\": \"<float>\",\n      \"bandwidthLimits\": {\n        \"limitUp\": \"<integer>\",\n        \"limitDown\": \"<integer>\"\n      },\n      \"timeLimit\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"price\": \"<float>\",\n      \"bandwidthLimits\": {\n        \"limitUp\": \"<integer>\",\n        \"limitDown\": \"<integer>\"\n      },\n      \"timeLimit\": \"<string>\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/billing",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"billing"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"currency\": \"USD\",\n  \"plans\": [\n    {\n      \"id\": \"1\",\n      \"price\": 5,\n      \"bandwidthLimits\": {\n        \"limitUp\": 1000,\n        \"limitDown\": 1000\n      },\n      \"timeLimit\": \"1 hour\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "bluetooth",
									"item": [
										{
											"name": "settings",
											"item": [
												{
													"name": "getDeviceWirelessBluetoothSettings",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/wireless/bluetooth/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"wireless",
																"bluetooth",
																"settings"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the bluetooth settings for a wireless device"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/wireless/bluetooth/settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"wireless",
																		"bluetooth",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"uuid\": \"00000000-0000-0000-000-000000000000\",\n  \"major\": 13,\n  \"minor\": 125\n}"
														}
													]
												},
												{
													"name": "getNetworkWirelessBluetoothSettings",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/bluetooth/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"bluetooth",
																"settings"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the Bluetooth settings for a network. <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a> must be enabled on the network."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/bluetooth/settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"bluetooth",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"scanningEnabled\": true,\n  \"advertisingEnabled\": true,\n  \"uuid\": \"00000000-0000-0000-000-000000000000\",\n  \"majorMinorAssignmentMode\": \"Non-unique\",\n  \"major\": 1,\n  \"minor\": 1,\n  \"eslEnabled\": true\n}"
														}
													]
												},
												{
													"name": "updateDeviceWirelessBluetoothSettings",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"uuid\": \"<string>\",\n  \"major\": \"<integer>\",\n  \"minor\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/wireless/bluetooth/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"wireless",
																"bluetooth",
																"settings"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the bluetooth settings for a wireless device"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"uuid\": \"00000000-0000-0000-000-000000000000\",\n  \"major\": 13,\n  \"minor\": 125\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/wireless/bluetooth/settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"wireless",
																		"bluetooth",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"uuid\": \"00000000-0000-0000-000-000000000000\",\n  \"major\": 13,\n  \"minor\": 125\n}"
														}
													]
												},
												{
													"name": "updateNetworkWirelessBluetoothSettings",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"scanningEnabled\": \"<boolean>\",\n  \"advertisingEnabled\": \"<boolean>\",\n  \"uuid\": \"<string>\",\n  \"majorMinorAssignmentMode\": \"<string>\",\n  \"major\": \"<integer>\",\n  \"minor\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/bluetooth/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"bluetooth",
																"settings"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the Bluetooth settings for a network. See the docs page for <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a>."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"scanningEnabled\": true,\n  \"advertisingEnabled\": true,\n  \"uuid\": \"00000000-0000-0000-000-000000000000\",\n  \"majorMinorAssignmentMode\": \"Non-unique\",\n  \"major\": 1,\n  \"minor\": 1\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/bluetooth/settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"bluetooth",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"scanningEnabled\": true,\n  \"advertisingEnabled\": true,\n  \"uuid\": \"00000000-0000-0000-000-000000000000\",\n  \"majorMinorAssignmentMode\": \"Non-unique\",\n  \"major\": 1,\n  \"minor\": 1,\n  \"eslEnabled\": true\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "electronicShelfLabel",
									"item": [
										{
											"name": "configuredDevices",
											"item": [
												{
													"name": "getNetworkWirelessElectronicShelfLabelConfiguredDevices",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/electronicShelfLabel/configuredDevices",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"electronicShelfLabel",
																"configuredDevices"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Get a list of all ESL eligible devices of a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/electronicShelfLabel/configuredDevices",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"electronicShelfLabel",
																		"configuredDevices"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"hostname\": \"example.com\",\n    \"enabled\": true,\n    \"mode\": \"high frequency\"\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "getDeviceWirelessElectronicShelfLabel",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/wireless/electronicShelfLabel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"wireless",
														"electronicShelfLabel"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the ESL settings of a device"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/wireless/electronicShelfLabel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"wireless",
																"electronicShelfLabel"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"apEslId\": 16777216,\n  \"serial\": \"Q234-ABCD-5678\",\n  \"channel\": \"1\",\n  \"enabled\": true,\n  \"networkId\": \"N_24329156\",\n  \"hostname\": \"localhost:700\",\n  \"provider\": \"imagotag\"\n}"
												}
											]
										},
										{
											"name": "getNetworkWirelessElectronicShelfLabel",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/electronicShelfLabel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"electronicShelfLabel"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the ESL settings of a wireless network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/electronicShelfLabel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"electronicShelfLabel"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"hostname\": \"example.com\",\n  \"enabled\": true,\n  \"mode\": \"high frequency\"\n}"
												}
											]
										},
										{
											"name": "updateDeviceWirelessElectronicShelfLabel",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"channel\": \"<string>\",\n  \"enabled\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/wireless/electronicShelfLabel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"wireless",
														"electronicShelfLabel"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the ESL settings of a device"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"channel\": \"1\",\n  \"enabled\": true\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/wireless/electronicShelfLabel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"wireless",
																"electronicShelfLabel"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"apEslId\": 16777216,\n  \"serial\": \"Q234-ABCD-5678\",\n  \"channel\": \"1\",\n  \"enabled\": true,\n  \"networkId\": \"N_24329156\",\n  \"hostname\": \"localhost:700\",\n  \"provider\": \"imagotag\"\n}"
												}
											]
										},
										{
											"name": "updateNetworkWirelessElectronicShelfLabel",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"hostname\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"mode\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/electronicShelfLabel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"electronicShelfLabel"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the ESL settings of a wireless network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"hostname\": \"example.com\",\n  \"enabled\": true,\n  \"mode\": \"high frequency\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/electronicShelfLabel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"electronicShelfLabel"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"hostname\": \"example.com\",\n  \"enabled\": true,\n  \"mode\": \"high frequency\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "ethernet",
									"item": [
										{
											"name": "ports",
											"item": [
												{
													"name": "profiles",
													"item": [
														{
															"name": "assignNetworkWirelessEthernetPortsProfiles",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"profileId\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ethernet/ports/profiles/assign",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ethernet",
																		"ports",
																		"profiles",
																		"assign"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Assign AP port profile to list of APs"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"profileId\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/wireless/ethernet/ports/profiles/assign",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"wireless",
																				"ethernet",
																				"ports",
																				"profiles",
																				"assign"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"serials\": [\n    \"Q234-ABCD-0001\",\n    \"Q234-ABCD-0002\",\n    \"Q234-ABCD-0003\"\n  ],\n  \"profileId\": \"1001\"\n}"
																}
															]
														},
														{
															"name": "createNetworkWirelessEthernetPortsProfile",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"ports\": [\n    {\n      \"name\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"ssid\": \"<integer>\",\n      \"pskGroupId\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"ssid\": \"<integer>\",\n      \"pskGroupId\": \"<string>\"\n    }\n  ],\n  \"usbPorts\": [\n    {\n      \"name\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"ssid\": \"<integer>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"ssid\": \"<integer>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ethernet/ports/profiles",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ethernet",
																		"ports",
																		"profiles"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Create an AP port profile"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"<string>\",\n  \"ports\": [\n    {\n      \"name\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"ssid\": \"<integer>\",\n      \"pskGroupId\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"ssid\": \"<integer>\",\n      \"pskGroupId\": \"<string>\"\n    }\n  ],\n  \"usbPorts\": [\n    {\n      \"name\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"ssid\": \"<integer>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"ssid\": \"<integer>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/wireless/ethernet/ports/profiles",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"wireless",
																				"ethernet",
																				"ports",
																				"profiles"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"profileId\": \"1001\",\n  \"name\": \"Ap Port Profile Name\",\n  \"isDefault\": false,\n  \"ports\": [\n    {\n      \"name\": \"port 1\",\n      \"number\": 1,\n      \"enabled\": true,\n      \"ssid\": 1,\n      \"pskGroupId\": \"100\"\n    }\n  ],\n  \"usbPorts\": [\n    {\n      \"name\": \"usb port\",\n      \"enabled\": true,\n      \"ssid\": 5\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "deleteNetworkWirelessEthernetPortsProfile",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ethernet/ports/profiles/:profileId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ethernet",
																		"ports",
																		"profiles",
																		":profileId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "profileId",
																			"value": "{{profileId}}",
																			"description": "(Required) Profile ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Delete an AP port profile"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/wireless/ethernet/ports/profiles/:profileId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"wireless",
																				"ethernet",
																				"ports",
																				"profiles",
																				":profileId"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "profileId",
																					"value": "<string>",
																					"description": "(Required) Profile ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "getNetworkWirelessEthernetPortsProfile",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ethernet/ports/profiles/:profileId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ethernet",
																		"ports",
																		"profiles",
																		":profileId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "profileId",
																			"value": "{{profileId}}",
																			"description": "(Required) Profile ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Show the AP port profile by ID for this network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/wireless/ethernet/ports/profiles/:profileId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"wireless",
																				"ethernet",
																				"ports",
																				"profiles",
																				":profileId"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "profileId",
																					"value": "<string>",
																					"description": "(Required) Profile ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"profileId\": \"1001\",\n  \"name\": \"Ap Port Profile Name\",\n  \"isDefault\": false,\n  \"ports\": [\n    {\n      \"name\": \"port 1\",\n      \"number\": 1,\n      \"enabled\": true,\n      \"ssid\": 1,\n      \"pskGroupId\": \"100\"\n    }\n  ],\n  \"usbPorts\": [\n    {\n      \"name\": \"usb port\",\n      \"enabled\": true,\n      \"ssid\": 5\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "getNetworkWirelessEthernetPortsProfiles",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ethernet/ports/profiles",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ethernet",
																		"ports",
																		"profiles"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "List the AP port profiles for this network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/wireless/ethernet/ports/profiles",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"wireless",
																				"ethernet",
																				"ports",
																				"profiles"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"profileId\": \"1001\",\n    \"name\": \"Ap Port Profile Name\",\n    \"isDefault\": false,\n    \"ports\": [\n      {\n        \"name\": \"port 1\",\n        \"number\": 1,\n        \"enabled\": true,\n        \"ssid\": 1,\n        \"pskGroupId\": \"100\"\n      }\n    ],\n    \"usbPorts\": [\n      {\n        \"name\": \"usb port\",\n        \"enabled\": true,\n        \"ssid\": 5\n      }\n    ]\n  }\n]"
																}
															]
														},
														{
															"name": "setNetworkWirelessEthernetPortsProfilesDefault",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"profileId\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ethernet/ports/profiles/setDefault",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ethernet",
																		"ports",
																		"profiles",
																		"setDefault"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Set the AP port profile to be default for this network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"profileId\": \"1001\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/wireless/ethernet/ports/profiles/setDefault",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"wireless",
																				"ethernet",
																				"ports",
																				"profiles",
																				"setDefault"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"profileId\": \"1001\"\n}"
																}
															]
														},
														{
															"name": "updateNetworkWirelessEthernetPortsProfile",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"ports\": [\n    {\n      \"name\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"ssid\": \"<integer>\",\n      \"pskGroupId\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"ssid\": \"<integer>\",\n      \"pskGroupId\": \"<string>\"\n    }\n  ],\n  \"usbPorts\": [\n    {\n      \"name\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"ssid\": \"<integer>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"ssid\": \"<integer>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ethernet/ports/profiles/:profileId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ethernet",
																		"ports",
																		"profiles",
																		":profileId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "profileId",
																			"value": "{{profileId}}",
																			"description": "(Required) Profile ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Update the AP port profile by ID for this network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/wireless/ethernet/ports/profiles/:profileId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"wireless",
																				"ethernet",
																				"ports",
																				"profiles",
																				":profileId"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "profileId",
																					"value": "<string>",
																					"description": "(Required) Profile ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"profileId\": \"1001\",\n  \"name\": \"Ap Port Profile Name\",\n  \"isDefault\": false,\n  \"ports\": [\n    {\n      \"name\": \"port 1\",\n      \"number\": 1,\n      \"enabled\": true,\n      \"ssid\": 1,\n      \"pskGroupId\": \"100\"\n    }\n  ],\n  \"usbPorts\": [\n    {\n      \"name\": \"usb port\",\n      \"enabled\": true,\n      \"ssid\": 5\n    }\n  ]\n}"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "location",
									"item": [
										{
											"name": "scanning",
											"item": [
												{
													"name": "byNetwork",
													"item": [
														{
															"name": "getOrganizationWirelessLocationScanningByNetwork",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/wireless/location/scanning/byNetwork",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"wireless",
																		"location",
																		"scanning",
																		"byNetwork"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "{{perPage}}",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 250. Default is 50.",
																			"disabled": true
																		},
																		{
																			"key": "startingAfter",
																			"value": "{{startingAfter}}",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "endingBefore",
																			"value": "{{endingBefore}}",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Optional parameter to filter scanning settings by network ID.",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Optional parameter to filter scanning settings by network ID.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Return scanning API settings"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/wireless/location/scanning/byNetwork?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"wireless",
																				"location",
																				"scanning",
																				"byNetwork"
																			],
																			"query": [
																				{
																					"key": "perPage",
																					"value": "<integer>"
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>"
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Link",
																			"value": "Lorem nisi fugiat",
																			"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"items\": [\n    {\n      \"networkId\": \"L_1234\",\n      \"name\": \"My Network\",\n      \"enabled\": true,\n      \"api\": {\n        \"enabled\": true,\n        \"validator\": {\n          \"string\": \"sample_validator\"\n        }\n      }\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 10,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "receivers",
													"item": [
														{
															"name": "createOrganizationWirelessLocationScanningReceiver",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"network\": {\n    \"id\": \"<string>\"\n  },\n  \"url\": \"<string>\",\n  \"version\": \"<string>\",\n  \"radio\": {\n    \"type\": \"<string>\"\n  },\n  \"sharedSecret\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/wireless/location/scanning/receivers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"wireless",
																		"location",
																		"scanning",
																		"receivers"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Add new receiver for scanning API"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"network\": {},\n  \"url\": \"https://www.myreceiver.com\",\n  \"version\": \"3\",\n  \"radio\": {\n    \"type\": \"Wi-Fi\"\n  },\n  \"sharedSecret\": \"mysecretvalue\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/wireless/location/scanning/receivers",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"wireless",
																				"location",
																				"scanning",
																				"receivers"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"network\": {\n    \"id\": \"L_1234\",\n    \"name\": \"My Network\"\n  },\n  \"receiverId\": \"1234567\",\n  \"url\": \"https://www.myreceiver.com\",\n  \"version\": \"3\",\n  \"radio\": {\n    \"type\": \"Wi-Fi\"\n  }\n}"
																}
															]
														},
														{
															"name": "deleteOrganizationWirelessLocationScanningReceiver",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/wireless/location/scanning/receivers/:receiverId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"wireless",
																		"location",
																		"scanning",
																		"receivers",
																		":receiverId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "receiverId",
																			"value": "{{receiverId}}",
																			"description": "(Required) Receiver ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Delete a scanning API receiver"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/wireless/location/scanning/receivers/:receiverId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"wireless",
																				"location",
																				"scanning",
																				"receivers",
																				":receiverId"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "receiverId",
																					"value": "<string>",
																					"description": "(Required) Receiver ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "getOrganizationWirelessLocationScanningReceivers",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/wireless/location/scanning/receivers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"wireless",
																		"location",
																		"scanning",
																		"receivers"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "{{perPage}}",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 250. Default is 50.",
																			"disabled": true
																		},
																		{
																			"key": "startingAfter",
																			"value": "{{startingAfter}}",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "endingBefore",
																			"value": "{{endingBefore}}",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Optional parameter to filter scanning API receivers by network ID.",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Optional parameter to filter scanning API receivers by network ID.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Return scanning API receivers"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/wireless/location/scanning/receivers?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"wireless",
																				"location",
																				"scanning",
																				"receivers"
																			],
																			"query": [
																				{
																					"key": "perPage",
																					"value": "<integer>"
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>"
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Link",
																			"value": "Lorem nisi fugiat",
																			"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"items\": [\n    {\n      \"network\": {\n        \"id\": \"L_1234\",\n        \"name\": \"My Network\"\n      },\n      \"receiverId\": \"1234567\",\n      \"url\": \"https://www.myreceiver.com\",\n      \"version\": \"3\",\n      \"radio\": {\n        \"type\": \"Wi-Fi\"\n      }\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 10,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																}
															]
														},
														{
															"name": "updateOrganizationWirelessLocationScanningReceiver",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"url\": \"<string>\",\n  \"version\": \"<string>\",\n  \"radio\": {\n    \"type\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/wireless/location/scanning/receivers/:receiverId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"wireless",
																		"location",
																		"scanning",
																		"receivers",
																		":receiverId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "receiverId",
																			"value": "{{receiverId}}",
																			"description": "(Required) Receiver ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Change scanning API receiver settings"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"url\": \"https://www.myreceiver.com\",\n  \"version\": \"3\",\n  \"radio\": {\n    \"type\": \"Wi-Fi\"\n  }\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/wireless/location/scanning/receivers/:receiverId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"wireless",
																				"location",
																				"scanning",
																				"receivers",
																				":receiverId"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "receiverId",
																					"value": "<string>",
																					"description": "(Required) Receiver ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"network\": {\n    \"id\": \"L_1234\",\n    \"name\": \"My Network\"\n  },\n  \"receiverId\": \"1234567\",\n  \"url\": \"https://www.myreceiver.com\",\n  \"version\": \"3\",\n  \"radio\": {\n    \"type\": \"Wi-Fi\"\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "updateNetworkWirelessLocationScanning",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"api\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/location/scanning",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"location",
																"scanning"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Change scanning API settings"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"enabled\": true,\n  \"api\": {\n    \"enabled\": false\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/location/scanning",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"location",
																		"scanning"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"enabled\": true,\n  \"api\": {\n    \"enabled\": true,\n    \"validator\": {\n      \"string\": \"sample_validator\"\n    }\n  }\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "radio",
									"item": [
										{
											"name": "autoRf",
											"item": [
												{
													"name": "channels",
													"item": [
														{
															"name": "recalculateOrganizationWirelessRadioAutoRfChannels",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"networkIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/wireless/radio/autoRf/channels/recalculate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"wireless",
																		"radio",
																		"autoRf",
																		"channels",
																		"recalculate"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Recalculates automatically assigned channels for every AP within specified the specified network(s). Note: This could cause a brief loss in connectivity for wireless clients."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"networkIds\": [\n    \"N_678910\",\n    \"L_12345\"\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/wireless/radio/autoRf/channels/recalculate",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"wireless",
																				"radio",
																				"autoRf",
																				"channels",
																				"recalculate"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"estimatedCompletedAt\": \"2019-01-01T00:00:00Z\"\n}"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "settings",
											"item": [
												{
													"name": "getDeviceWirelessRadioSettings",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/wireless/radio/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"wireless",
																"radio",
																"settings"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the manually configured radio settings overrides of a device, which take precedence over RF profiles."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/wireless/radio/settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"wireless",
																		"radio",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"serial\": \"Q234-ABCD-5678\",\n  \"rfProfileId\": \"1234\",\n  \"twoFourGhzSettings\": {\n    \"channel\": 11,\n    \"targetPower\": 21\n  },\n  \"fiveGhzSettings\": {\n    \"channel\": 149,\n    \"channelWidth\": 20,\n    \"targetPower\": 15\n  }\n}"
														}
													]
												},
												{
													"name": "updateDeviceWirelessRadioSettings",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rfProfileId\": \"<string>\",\n  \"twoFourGhzSettings\": {\n    \"channel\": \"<integer>\",\n    \"targetPower\": \"<integer>\"\n  },\n  \"fiveGhzSettings\": {\n    \"channel\": \"<integer>\",\n    \"channelWidth\": \"<integer>\",\n    \"targetPower\": \"<integer>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/wireless/radio/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"wireless",
																"radio",
																"settings"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "{{serial}}",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the radio settings overrides of a device, which take precedence over RF profiles."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rfProfileId\": \"1234\",\n  \"twoFourGhzSettings\": {\n    \"channel\": 11,\n    \"targetPower\": 21\n  },\n  \"fiveGhzSettings\": {\n    \"channel\": 149,\n    \"channelWidth\": 20,\n    \"targetPower\": 15\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/devices/:serial/wireless/radio/settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"wireless",
																		"radio",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": "serial",
																			"value": "<string>",
																			"description": "(Required) Serial"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"serial\": \"Q234-ABCD-5678\",\n  \"rfProfileId\": \"1234\",\n  \"twoFourGhzSettings\": {\n    \"channel\": 11,\n    \"targetPower\": 21\n  },\n  \"fiveGhzSettings\": {\n    \"channel\": 149,\n    \"channelWidth\": 20,\n    \"targetPower\": 15\n  }\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "rfProfiles",
									"item": [
										{
											"name": "assignments",
											"item": [
												{
													"name": "byDevice",
													"item": [
														{
															"name": "getOrganizationWirelessRfProfilesAssignmentsByDevice",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/wireless/rfProfiles/assignments/byDevice",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"wireless",
																		"rfProfiles",
																		"assignments",
																		"byDevice"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "{{perPage}}",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																			"disabled": true
																		},
																		{
																			"key": "startingAfter",
																			"value": "{{startingAfter}}",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "endingBefore",
																			"value": "{{endingBefore}}",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Optional parameter to filter devices by network.",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Optional parameter to filter devices by network.",
																			"disabled": true
																		},
																		{
																			"key": "productTypes",
																			"value": "{{productTypes}}",
																			"description": "Optional parameter to filter devices by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor, wirelessController, and secureConnect.",
																			"disabled": true
																		},
																		{
																			"key": "productTypes",
																			"value": "{{productTypes}}",
																			"description": "Optional parameter to filter devices by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor, wirelessController, and secureConnect.",
																			"disabled": true
																		},
																		{
																			"key": "name",
																			"value": "{{name}}",
																			"description": "Optional parameter to filter RF profiles by device name. All returned devices will have a name that contains the search term or is an exact match.",
																			"disabled": true
																		},
																		{
																			"key": "mac",
																			"value": "{{mac}}",
																			"description": "Optional parameter to filter RF profiles by device MAC address. All returned devices will have a MAC address that contains the search term or is an exact match.",
																			"disabled": true
																		},
																		{
																			"key": "serial",
																			"value": "{{serial}}",
																			"description": "Optional parameter to filter RF profiles by device serial number. All returned devices will have a serial number that contains the search term or is an exact match.",
																			"disabled": true
																		},
																		{
																			"key": "model",
																			"value": "{{model}}",
																			"description": "Optional parameter to filter RF profiles by device model. All returned devices will have a model that contains the search term or is an exact match.",
																			"disabled": true
																		},
																		{
																			"key": "macs",
																			"value": "{{macs}}",
																			"description": "Optional parameter to filter RF profiles by one or more device MAC addresses. All returned devices will have a MAC address that is an exact match.",
																			"disabled": true
																		},
																		{
																			"key": "macs",
																			"value": "{{macs}}",
																			"description": "Optional parameter to filter RF profiles by one or more device MAC addresses. All returned devices will have a MAC address that is an exact match.",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "Optional parameter to filter RF profiles by one or more device serial numbers. All returned devices will have a serial number that is an exact match.",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "Optional parameter to filter RF profiles by one or more device serial numbers. All returned devices will have a serial number that is an exact match.",
																			"disabled": true
																		},
																		{
																			"key": "models",
																			"value": "{{models}}",
																			"description": "Optional parameter to filter RF profiles by one or more device models. All returned devices will have a model that is an exact match.",
																			"disabled": true
																		},
																		{
																			"key": "models",
																			"value": "{{models}}",
																			"description": "Optional parameter to filter RF profiles by one or more device models. All returned devices will have a model that is an exact match.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "List the RF profiles of an organization by device"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/wireless/rfProfiles/assignments/byDevice?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&productTypes=<string>&productTypes=<string>&name=<string>&mac=<string>&serial=<string>&model=<string>&macs=<string>&macs=<string>&serials=<string>&serials=<string>&models=<string>&models=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"wireless",
																				"rfProfiles",
																				"assignments",
																				"byDevice"
																			],
																			"query": [
																				{
																					"key": "perPage",
																					"value": "<integer>"
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>"
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "productTypes",
																					"value": "<string>"
																				},
																				{
																					"key": "productTypes",
																					"value": "<string>"
																				},
																				{
																					"key": "name",
																					"value": "<string>"
																				},
																				{
																					"key": "mac",
																					"value": "<string>"
																				},
																				{
																					"key": "serial",
																					"value": "<string>"
																				},
																				{
																					"key": "model",
																					"value": "<string>"
																				},
																				{
																					"key": "macs",
																					"value": "<string>"
																				},
																				{
																					"key": "macs",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "models",
																					"value": "<string>"
																				},
																				{
																					"key": "models",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Link",
																			"value": "Lorem nisi fugiat",
																			"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"items\": [\n      {\n        \"network\": {\n          \"id\": \"1234\"\n        },\n        \"name\": \"Device_name\",\n        \"serial\": \"Q234-ABCD-0001\",\n        \"model\": \"MR34\",\n        \"rfProfile\": {\n          \"id\": \"123456\",\n          \"name\": \"Basic Outdoor Profile\",\n          \"isIndoorDefault\": false,\n          \"isOutdoorDefault\": true\n        }\n      }\n    ],\n    \"meta\": {\n      \"counts\": {\n        \"items\": {\n          \"total\": 1200,\n          \"remaining\": 200\n        }\n      }\n    }\n  }\n]"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "createNetworkWirelessRfProfile",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"bandSelectionType\": \"<string>\",\n  \"clientBalancingEnabled\": \"<boolean>\",\n  \"minBitrateType\": \"<string>\",\n  \"apBandSettings\": {\n    \"bandOperationMode\": \"<string>\",\n    \"bands\": {\n      \"enabled\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"bandSteeringEnabled\": \"<boolean>\"\n  },\n  \"twoFourGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<float>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"axEnabled\": \"<boolean>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"fiveGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<integer>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"channelWidth\": \"<string>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"sixGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<integer>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"channelWidth\": \"<string>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"transmission\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"perSsidSettings\": {\n    \"0\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"1\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"2\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"3\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"4\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"5\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"6\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"7\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"8\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"9\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"10\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"11\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"12\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"13\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"14\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    }\n  },\n  \"flexRadios\": {\n    \"byModel\": [\n      {\n        \"model\": \"<string>\",\n        \"bands\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"model\": \"<string>\",\n        \"bands\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/rfProfiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"rfProfiles"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Creates new RF profile for this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"bandSelectionType\": \"<string>\",\n  \"clientBalancingEnabled\": \"<boolean>\",\n  \"minBitrateType\": \"<string>\",\n  \"apBandSettings\": {\n    \"bandOperationMode\": \"<string>\",\n    \"bands\": {\n      \"enabled\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"bandSteeringEnabled\": \"<boolean>\"\n  },\n  \"twoFourGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<float>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"axEnabled\": \"<boolean>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"fiveGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<integer>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"channelWidth\": \"<string>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"sixGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<integer>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"channelWidth\": \"<string>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"transmission\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"perSsidSettings\": {\n    \"0\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"1\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"2\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"3\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"4\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"5\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"6\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"7\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"8\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"9\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"10\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"11\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"12\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"13\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"14\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    }\n  },\n  \"flexRadios\": {\n    \"byModel\": [\n      {\n        \"model\": \"<string>\",\n        \"bands\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"model\": \"<string>\",\n        \"bands\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/rfProfiles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"rfProfiles"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"networkId\": \"N_24329156\",\n  \"name\": \"Main Office\",\n  \"clientBalancingEnabled\": true,\n  \"minBitrateType\": \"band\",\n  \"bandSelectionType\": \"ap\",\n  \"apBandSettings\": {\n    \"bandOperationMode\": \"dual\",\n    \"bands\": {\n      \"enabled\": [\n        \"2.4\",\n        \"5\"\n      ]\n    },\n    \"bandSteeringEnabled\": true\n  },\n  \"twoFourGhzSettings\": {\n    \"maxPower\": 30,\n    \"minPower\": 5,\n    \"minBitrate\": 11,\n    \"validAutoChannels\": [\n      1,\n      6,\n      11\n    ],\n    \"axEnabled\": true,\n    \"rxsop\": -95\n  },\n  \"fiveGhzSettings\": {\n    \"maxPower\": 30,\n    \"minPower\": 8,\n    \"minBitrate\": 12,\n    \"validAutoChannels\": [\n      36,\n      40,\n      44,\n      48,\n      52,\n      56,\n      60,\n      64,\n      100,\n      104,\n      108,\n      112,\n      116,\n      120,\n      124,\n      128,\n      132,\n      136,\n      140,\n      144,\n      149,\n      153,\n      157,\n      161,\n      165\n    ],\n    \"channelWidth\": \"auto\",\n    \"rxsop\": -95\n  },\n  \"sixGhzSettings\": {\n    \"maxPower\": 30,\n    \"minPower\": 8,\n    \"minBitrate\": 12,\n    \"validAutoChannels\": [\n      1,\n      5,\n      9,\n      13,\n      17,\n      21,\n      25,\n      29,\n      33,\n      37,\n      41,\n      45,\n      49,\n      53,\n      57,\n      61,\n      65,\n      69,\n      73,\n      77,\n      81,\n      85,\n      89,\n      93,\n      97,\n      101,\n      105,\n      109,\n      113,\n      117,\n      121,\n      125,\n      129,\n      133,\n      137,\n      141,\n      145,\n      149,\n      153,\n      157,\n      161,\n      165,\n      169,\n      173,\n      177,\n      181,\n      185,\n      189,\n      193,\n      197,\n      201,\n      205,\n      209,\n      213,\n      217,\n      221,\n      225,\n      229,\n      233\n    ],\n    \"channelWidth\": \"auto\",\n    \"rxsop\": -95\n  },\n  \"transmission\": {\n    \"enabled\": true\n  },\n  \"perSsidSettings\": {\n    \"0\": {\n      \"name\": \"SSID 0\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"1\": {\n      \"name\": \"SSID 1\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"2\": {\n      \"name\": \"SSID 2\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"3\": {\n      \"name\": \"SSID 3\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"4\": {\n      \"name\": \"SSID 4\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"5\": {\n      \"name\": \"SSID 5\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"6\": {\n      \"name\": \"SSID 6\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"7\": {\n      \"name\": \"SSID 7\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"8\": {\n      \"name\": \"SSID 8\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"9\": {\n      \"name\": \"SSID 9\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"10\": {\n      \"name\": \"SSID 10\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"11\": {\n      \"name\": \"SSID 11\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"12\": {\n      \"name\": \"SSID 12\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"13\": {\n      \"name\": \"SSID 13\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"14\": {\n      \"name\": \"SSID 14\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    }\n  },\n  \"isIndoorDefault\": false,\n  \"isOutdoorDefault\": false\n}"
												}
											]
										},
										{
											"name": "deleteNetworkWirelessRfProfile",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/rfProfiles/:rfProfileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"rfProfiles",
														":rfProfileId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "rfProfileId",
															"value": "{{rfProfileId}}",
															"description": "(Required) Rf profile ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Delete a RF Profile"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/rfProfiles/:rfProfileId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"rfProfiles",
																":rfProfileId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "rfProfileId",
																	"value": "<string>",
																	"description": "(Required) Rf profile ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "getNetworkWirelessRfProfile",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/rfProfiles/:rfProfileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"rfProfiles",
														":rfProfileId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "rfProfileId",
															"value": "{{rfProfileId}}",
															"description": "(Required) Rf profile ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return a RF profile"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/rfProfiles/:rfProfileId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"rfProfiles",
																":rfProfileId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "rfProfileId",
																	"value": "<string>",
																	"description": "(Required) Rf profile ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"networkId\": \"N_24329156\",\n  \"name\": \"Main Office\",\n  \"clientBalancingEnabled\": true,\n  \"minBitrateType\": \"band\",\n  \"bandSelectionType\": \"ap\",\n  \"apBandSettings\": {\n    \"bandOperationMode\": \"dual\",\n    \"bands\": {\n      \"enabled\": [\n        \"2.4\",\n        \"5\"\n      ]\n    },\n    \"bandSteeringEnabled\": true\n  },\n  \"twoFourGhzSettings\": {\n    \"maxPower\": 30,\n    \"minPower\": 5,\n    \"minBitrate\": 11,\n    \"validAutoChannels\": [\n      1,\n      6,\n      11\n    ],\n    \"axEnabled\": true,\n    \"rxsop\": -95\n  },\n  \"fiveGhzSettings\": {\n    \"maxPower\": 30,\n    \"minPower\": 8,\n    \"minBitrate\": 12,\n    \"validAutoChannels\": [\n      36,\n      40,\n      44,\n      48,\n      52,\n      56,\n      60,\n      64,\n      100,\n      104,\n      108,\n      112,\n      116,\n      120,\n      124,\n      128,\n      132,\n      136,\n      140,\n      144,\n      149,\n      153,\n      157,\n      161,\n      165\n    ],\n    \"channelWidth\": \"auto\",\n    \"rxsop\": -95\n  },\n  \"sixGhzSettings\": {\n    \"maxPower\": 30,\n    \"minPower\": 8,\n    \"minBitrate\": 12,\n    \"validAutoChannels\": [\n      1,\n      5,\n      9,\n      13,\n      17,\n      21,\n      25,\n      29,\n      33,\n      37,\n      41,\n      45,\n      49,\n      53,\n      57,\n      61,\n      65,\n      69,\n      73,\n      77,\n      81,\n      85,\n      89,\n      93,\n      97,\n      101,\n      105,\n      109,\n      113,\n      117,\n      121,\n      125,\n      129,\n      133,\n      137,\n      141,\n      145,\n      149,\n      153,\n      157,\n      161,\n      165,\n      169,\n      173,\n      177,\n      181,\n      185,\n      189,\n      193,\n      197,\n      201,\n      205,\n      209,\n      213,\n      217,\n      221,\n      225,\n      229,\n      233\n    ],\n    \"channelWidth\": \"auto\",\n    \"rxsop\": -95\n  },\n  \"transmission\": {\n    \"enabled\": true\n  },\n  \"perSsidSettings\": {\n    \"0\": {\n      \"name\": \"SSID 0\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"1\": {\n      \"name\": \"SSID 1\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"2\": {\n      \"name\": \"SSID 2\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"3\": {\n      \"name\": \"SSID 3\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"4\": {\n      \"name\": \"SSID 4\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"5\": {\n      \"name\": \"SSID 5\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"6\": {\n      \"name\": \"SSID 6\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"7\": {\n      \"name\": \"SSID 7\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"8\": {\n      \"name\": \"SSID 8\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"9\": {\n      \"name\": \"SSID 9\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"10\": {\n      \"name\": \"SSID 10\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"11\": {\n      \"name\": \"SSID 11\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"12\": {\n      \"name\": \"SSID 12\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"13\": {\n      \"name\": \"SSID 13\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"14\": {\n      \"name\": \"SSID 14\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    }\n  },\n  \"isIndoorDefault\": false,\n  \"isOutdoorDefault\": false\n}"
												}
											]
										},
										{
											"name": "getNetworkWirelessRfProfiles",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/rfProfiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"rfProfiles"
													],
													"query": [
														{
															"key": "includeTemplateProfiles",
															"value": "{{includeTemplateProfiles}}",
															"description": "If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List RF profiles for this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/rfProfiles?includeTemplateProfiles=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"rfProfiles"
															],
															"query": [
																{
																	"key": "includeTemplateProfiles",
																	"value": "<boolean>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"networkId\": \"N_24329156\",\n  \"name\": \"Main Office\",\n  \"clientBalancingEnabled\": true,\n  \"minBitrateType\": \"band\",\n  \"bandSelectionType\": \"ap\",\n  \"apBandSettings\": {\n    \"bandOperationMode\": \"dual\",\n    \"bands\": {\n      \"enabled\": [\n        \"2.4\",\n        \"5\"\n      ]\n    },\n    \"bandSteeringEnabled\": true\n  },\n  \"twoFourGhzSettings\": {\n    \"maxPower\": 30,\n    \"minPower\": 5,\n    \"minBitrate\": 11,\n    \"validAutoChannels\": [\n      1,\n      6,\n      11\n    ],\n    \"axEnabled\": true,\n    \"rxsop\": -95\n  },\n  \"fiveGhzSettings\": {\n    \"maxPower\": 30,\n    \"minPower\": 8,\n    \"minBitrate\": 12,\n    \"validAutoChannels\": [\n      36,\n      40,\n      44,\n      48,\n      52,\n      56,\n      60,\n      64,\n      100,\n      104,\n      108,\n      112,\n      116,\n      120,\n      124,\n      128,\n      132,\n      136,\n      140,\n      144,\n      149,\n      153,\n      157,\n      161,\n      165\n    ],\n    \"channelWidth\": \"auto\",\n    \"rxsop\": -95\n  },\n  \"sixGhzSettings\": {\n    \"maxPower\": 30,\n    \"minPower\": 8,\n    \"minBitrate\": 12,\n    \"validAutoChannels\": [\n      1,\n      5,\n      9,\n      13,\n      17,\n      21,\n      25,\n      29,\n      33,\n      37,\n      41,\n      45,\n      49,\n      53,\n      57,\n      61,\n      65,\n      69,\n      73,\n      77,\n      81,\n      85,\n      89,\n      93,\n      97,\n      101,\n      105,\n      109,\n      113,\n      117,\n      121,\n      125,\n      129,\n      133,\n      137,\n      141,\n      145,\n      149,\n      153,\n      157,\n      161,\n      165,\n      169,\n      173,\n      177,\n      181,\n      185,\n      189,\n      193,\n      197,\n      201,\n      205,\n      209,\n      213,\n      217,\n      221,\n      225,\n      229,\n      233\n    ],\n    \"channelWidth\": \"auto\",\n    \"rxsop\": -95\n  },\n  \"transmission\": {\n    \"enabled\": true\n  },\n  \"perSsidSettings\": {\n    \"0\": {\n      \"name\": \"SSID 0\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"1\": {\n      \"name\": \"SSID 1\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"2\": {\n      \"name\": \"SSID 2\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"3\": {\n      \"name\": \"SSID 3\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"4\": {\n      \"name\": \"SSID 4\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"5\": {\n      \"name\": \"SSID 5\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"6\": {\n      \"name\": \"SSID 6\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"7\": {\n      \"name\": \"SSID 7\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"8\": {\n      \"name\": \"SSID 8\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"9\": {\n      \"name\": \"SSID 9\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"10\": {\n      \"name\": \"SSID 10\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"11\": {\n      \"name\": \"SSID 11\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"12\": {\n      \"name\": \"SSID 12\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"13\": {\n      \"name\": \"SSID 13\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"14\": {\n      \"name\": \"SSID 14\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    }\n  },\n  \"isIndoorDefault\": false,\n  \"isOutdoorDefault\": false\n}"
												}
											]
										},
										{
											"name": "updateNetworkWirelessRfProfile",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"isIndoorDefault\": \"<boolean>\",\n  \"isOutdoorDefault\": \"<boolean>\",\n  \"clientBalancingEnabled\": \"<boolean>\",\n  \"minBitrateType\": \"<string>\",\n  \"bandSelectionType\": \"<string>\",\n  \"apBandSettings\": {\n    \"bandOperationMode\": \"<string>\",\n    \"bands\": {\n      \"enabled\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"bandSteeringEnabled\": \"<boolean>\"\n  },\n  \"twoFourGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<float>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"axEnabled\": \"<boolean>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"fiveGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<integer>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"channelWidth\": \"<string>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"sixGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<integer>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"channelWidth\": \"<string>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"transmission\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"perSsidSettings\": {\n    \"0\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"1\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"2\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"3\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"4\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"5\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"6\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"7\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"8\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"9\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"10\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"11\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"12\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"13\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"14\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    }\n  },\n  \"flexRadios\": {\n    \"byModel\": [\n      {\n        \"model\": \"<string>\",\n        \"bands\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"model\": \"<string>\",\n        \"bands\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/rfProfiles/:rfProfileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"rfProfiles",
														":rfProfileId"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "rfProfileId",
															"value": "{{rfProfileId}}",
															"description": "(Required) Rf profile ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Updates specified RF profile for this network. Note: built-in RF profiles can only be assigned as a default, and its attributes are immutable"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"isIndoorDefault\": \"<boolean>\",\n  \"isOutdoorDefault\": \"<boolean>\",\n  \"clientBalancingEnabled\": \"<boolean>\",\n  \"minBitrateType\": \"<string>\",\n  \"bandSelectionType\": \"<string>\",\n  \"apBandSettings\": {\n    \"bandOperationMode\": \"<string>\",\n    \"bands\": {\n      \"enabled\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"bandSteeringEnabled\": \"<boolean>\"\n  },\n  \"twoFourGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<float>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"axEnabled\": \"<boolean>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"fiveGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<integer>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"channelWidth\": \"<string>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"sixGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<integer>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"channelWidth\": \"<string>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"transmission\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"perSsidSettings\": {\n    \"0\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"1\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"2\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"3\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"4\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"5\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"6\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"7\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"8\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"9\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"10\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"11\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"12\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"13\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"14\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"<string>\",\n      \"bands\": {\n        \"enabled\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"bandSteeringEnabled\": \"<boolean>\"\n    }\n  },\n  \"flexRadios\": {\n    \"byModel\": [\n      {\n        \"model\": \"<string>\",\n        \"bands\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"model\": \"<string>\",\n        \"bands\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/rfProfiles/:rfProfileId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"rfProfiles",
																":rfProfileId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "rfProfileId",
																	"value": "<string>",
																	"description": "(Required) Rf profile ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1234\",\n  \"networkId\": \"N_24329156\",\n  \"name\": \"Main Office\",\n  \"clientBalancingEnabled\": true,\n  \"minBitrateType\": \"band\",\n  \"bandSelectionType\": \"ap\",\n  \"apBandSettings\": {\n    \"bandOperationMode\": \"dual\",\n    \"bands\": {\n      \"enabled\": [\n        \"2.4\",\n        \"5\"\n      ]\n    },\n    \"bandSteeringEnabled\": true\n  },\n  \"twoFourGhzSettings\": {\n    \"maxPower\": 30,\n    \"minPower\": 5,\n    \"minBitrate\": 11,\n    \"validAutoChannels\": [\n      1,\n      6,\n      11\n    ],\n    \"axEnabled\": true,\n    \"rxsop\": -95\n  },\n  \"fiveGhzSettings\": {\n    \"maxPower\": 30,\n    \"minPower\": 8,\n    \"minBitrate\": 12,\n    \"validAutoChannels\": [\n      36,\n      40,\n      44,\n      48,\n      52,\n      56,\n      60,\n      64,\n      100,\n      104,\n      108,\n      112,\n      116,\n      120,\n      124,\n      128,\n      132,\n      136,\n      140,\n      144,\n      149,\n      153,\n      157,\n      161,\n      165\n    ],\n    \"channelWidth\": \"auto\",\n    \"rxsop\": -95\n  },\n  \"sixGhzSettings\": {\n    \"maxPower\": 30,\n    \"minPower\": 8,\n    \"minBitrate\": 12,\n    \"validAutoChannels\": [\n      1,\n      5,\n      9,\n      13,\n      17,\n      21,\n      25,\n      29,\n      33,\n      37,\n      41,\n      45,\n      49,\n      53,\n      57,\n      61,\n      65,\n      69,\n      73,\n      77,\n      81,\n      85,\n      89,\n      93,\n      97,\n      101,\n      105,\n      109,\n      113,\n      117,\n      121,\n      125,\n      129,\n      133,\n      137,\n      141,\n      145,\n      149,\n      153,\n      157,\n      161,\n      165,\n      169,\n      173,\n      177,\n      181,\n      185,\n      189,\n      193,\n      197,\n      201,\n      205,\n      209,\n      213,\n      217,\n      221,\n      225,\n      229,\n      233\n    ],\n    \"channelWidth\": \"auto\",\n    \"rxsop\": -95\n  },\n  \"transmission\": {\n    \"enabled\": true\n  },\n  \"perSsidSettings\": {\n    \"0\": {\n      \"name\": \"SSID 0\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"1\": {\n      \"name\": \"SSID 1\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"2\": {\n      \"name\": \"SSID 2\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"3\": {\n      \"name\": \"SSID 3\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"4\": {\n      \"name\": \"SSID 4\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"5\": {\n      \"name\": \"SSID 5\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"6\": {\n      \"name\": \"SSID 6\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"7\": {\n      \"name\": \"SSID 7\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"8\": {\n      \"name\": \"SSID 8\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"9\": {\n      \"name\": \"SSID 9\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"10\": {\n      \"name\": \"SSID 10\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"11\": {\n      \"name\": \"SSID 11\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"12\": {\n      \"name\": \"SSID 12\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"13\": {\n      \"name\": \"SSID 13\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    },\n    \"14\": {\n      \"name\": \"SSID 14\",\n      \"minBitrate\": 11,\n      \"bandOperationMode\": \"dual\",\n      \"bands\": {\n        \"enabled\": [\n          \"2.4\",\n          \"5\"\n        ]\n      },\n      \"bandSteeringEnabled\": true\n    }\n  },\n  \"isIndoorDefault\": false,\n  \"isOutdoorDefault\": false\n}"
												}
											]
										}
									]
								},
								{
									"name": "settings",
									"item": [
										{
											"name": "getNetworkWirelessSettings",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"settings"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the wireless settings for a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"settings"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"meshingEnabled\": true,\n  \"ipv6BridgeEnabled\": false,\n  \"locationAnalyticsEnabled\": false,\n  \"upgradeStrategy\": \"minimizeUpgradeTime\",\n  \"ledLightsOn\": false,\n  \"namedVlans\": {\n    \"poolDhcpMonitoring\": {\n      \"enabled\": true,\n      \"duration\": 5\n    }\n  },\n  \"regulatoryDomain\": {\n    \"name\": \"FCC\",\n    \"countryCode\": \"US\",\n    \"permits6e\": true\n  }\n}"
												}
											]
										},
										{
											"name": "updateNetworkWirelessSettings",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"meshingEnabled\": \"<boolean>\",\n  \"ipv6BridgeEnabled\": \"<boolean>\",\n  \"locationAnalyticsEnabled\": \"<boolean>\",\n  \"upgradeStrategy\": \"<string>\",\n  \"ledLightsOn\": \"<boolean>\",\n  \"namedVlans\": {\n    \"poolDhcpMonitoring\": {\n      \"enabled\": \"<boolean>\",\n      \"duration\": \"<integer>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"settings"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the wireless settings for a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"meshingEnabled\": true,\n  \"ipv6BridgeEnabled\": false,\n  \"locationAnalyticsEnabled\": false,\n  \"upgradeStrategy\": \"minimizeUpgradeTime\",\n  \"ledLightsOn\": false,\n  \"namedVlans\": {\n    \"poolDhcpMonitoring\": {\n      \"enabled\": true,\n      \"duration\": 5\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"settings"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"meshingEnabled\": true,\n  \"ipv6BridgeEnabled\": false,\n  \"locationAnalyticsEnabled\": false,\n  \"upgradeStrategy\": \"minimizeUpgradeTime\",\n  \"ledLightsOn\": false,\n  \"namedVlans\": {\n    \"poolDhcpMonitoring\": {\n      \"enabled\": true,\n      \"duration\": 5\n    }\n  },\n  \"regulatoryDomain\": {\n    \"name\": \"FCC\",\n    \"countryCode\": \"US\",\n    \"permits6e\": true\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "ssids",
									"item": [
										{
											"name": "bonjourForwarding",
											"item": [
												{
													"name": "getNetworkWirelessSsidBonjourForwarding",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/bonjourForwarding",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"ssids",
																":number",
																"bonjourForwarding"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "number",
																	"value": "{{number}}",
																	"description": "(Required) Number"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the Bonjour forwarding setting and rules for the SSID"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/bonjourForwarding",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"bonjourForwarding"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "<string>",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"enabled\": true,\n  \"exception\": {\n    \"enabled\": true\n  },\n  \"rules\": [\n    {\n      \"description\": \"A simple bonjour rule\",\n      \"vlanId\": \"1\",\n      \"services\": [\n        \"All Services\"\n      ]\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "updateNetworkWirelessSsidBonjourForwarding",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"rules\": [\n    {\n      \"vlanId\": \"<string>\",\n      \"services\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"description\": \"<string>\"\n    },\n    {\n      \"vlanId\": \"<string>\",\n      \"services\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"description\": \"<string>\"\n    }\n  ],\n  \"exception\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/bonjourForwarding",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"ssids",
																":number",
																"bonjourForwarding"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "number",
																	"value": "{{number}}",
																	"description": "(Required) Number"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the bonjour forwarding setting and rules for the SSID"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"rules\": [\n    {\n      \"vlanId\": \"<string>\",\n      \"services\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"description\": \"<string>\"\n    },\n    {\n      \"vlanId\": \"<string>\",\n      \"services\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"description\": \"<string>\"\n    }\n  ],\n  \"exception\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/bonjourForwarding",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"bonjourForwarding"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "<string>",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"enabled\": true,\n  \"exception\": {\n    \"enabled\": true\n  },\n  \"rules\": [\n    {\n      \"description\": \"A simple bonjour rule\",\n      \"vlanId\": \"1\",\n      \"services\": [\n        \"All Services\"\n      ]\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "deviceTypeGroupPolicies",
											"item": [
												{
													"name": "getNetworkWirelessSsidDeviceTypeGroupPolicies",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/deviceTypeGroupPolicies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"ssids",
																":number",
																"deviceTypeGroupPolicies"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "number",
																	"value": "{{number}}",
																	"description": "(Required) Number"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the device type group policies for the SSID"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/deviceTypeGroupPolicies",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"deviceTypeGroupPolicies"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "<string>",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"enabled\": true,\n  \"deviceTypePolicies\": [\n    {\n      \"deviceType\": \"Android\",\n      \"devicePolicy\": \"Allowed\"\n    },\n    {\n      \"deviceType\": \"iPhone\",\n      \"devicePolicy\": \"Group policy\",\n      \"groupPolicyId\": 101\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "updateNetworkWirelessSsidDeviceTypeGroupPolicies",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"deviceTypePolicies\": [\n    {\n      \"deviceType\": \"<string>\",\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<integer>\"\n    },\n    {\n      \"deviceType\": \"<string>\",\n      \"devicePolicy\": \"<string>\",\n      \"groupPolicyId\": \"<integer>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/deviceTypeGroupPolicies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"ssids",
																":number",
																"deviceTypeGroupPolicies"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "number",
																	"value": "{{number}}",
																	"description": "(Required) Number"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the device type group policies for the SSID"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"enabled\": true,\n  \"deviceTypePolicies\": [\n    {\n      \"deviceType\": \"Android\",\n      \"devicePolicy\": \"Allowed\"\n    },\n    {\n      \"deviceType\": \"iPhone\",\n      \"devicePolicy\": \"Group policy\",\n      \"groupPolicyId\": 101\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/deviceTypeGroupPolicies",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"deviceTypeGroupPolicies"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "<string>",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"enabled\": true,\n  \"deviceTypePolicies\": [\n    {\n      \"deviceType\": \"Android\",\n      \"devicePolicy\": \"Allowed\"\n    },\n    {\n      \"deviceType\": \"iPhone\",\n      \"devicePolicy\": \"Group policy\",\n      \"groupPolicyId\": 101\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "eapOverride",
											"item": [
												{
													"name": "getNetworkWirelessSsidEapOverride",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/eapOverride",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"ssids",
																":number",
																"eapOverride"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "number",
																	"value": "{{number}}",
																	"description": "(Required) Number"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the EAP overridden parameters for an SSID"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/eapOverride",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"eapOverride"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "<string>",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"timeout\": 50,\n  \"maxRetries\": 5,\n  \"identity\": {\n    \"retries\": 5,\n    \"timeout\": 50\n  },\n  \"eapolKey\": {\n    \"retries\": 50,\n    \"timeoutInMs\": 5000\n  }\n}"
														}
													]
												},
												{
													"name": "updateNetworkWirelessSsidEapOverride",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"timeout\": \"<integer>\",\n  \"identity\": {\n    \"retries\": \"<integer>\",\n    \"timeout\": \"<integer>\"\n  },\n  \"maxRetries\": \"<integer>\",\n  \"eapolKey\": {\n    \"retries\": \"<integer>\",\n    \"timeoutInMs\": \"<integer>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/eapOverride",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"ssids",
																":number",
																"eapOverride"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "number",
																	"value": "{{number}}",
																	"description": "(Required) Number"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the EAP overridden parameters for an SSID."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"timeout\": 5,\n  \"identity\": {\n    \"retries\": 5,\n    \"timeout\": 5\n  },\n  \"maxRetries\": 5,\n  \"eapolKey\": {\n    \"retries\": 5,\n    \"timeoutInMs\": 5000\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/eapOverride",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"eapOverride"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "<string>",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"timeout\": 50,\n  \"maxRetries\": 5,\n  \"identity\": {\n    \"retries\": 5,\n    \"timeout\": 50\n  },\n  \"eapolKey\": {\n    \"retries\": 50,\n    \"timeoutInMs\": 5000\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "firewall",
											"item": [
												{
													"name": "isolation",
													"item": [
														{
															"name": "allowlist",
															"item": [
																{
																	"name": "entries",
																	"item": [
																		{
																			"name": "createOrganizationWirelessSsidsFirewallIsolationAllowlistEntry",
																			"protocolProfileBehavior": {
																				"followAuthorizationHeader": false
																			},
																			"request": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"client\": {\n    \"mac\": \"<string>\"\n  },\n  \"ssid\": {\n    \"number\": \"<integer>\"\n  },\n  \"network\": {\n    \"id\": \"<string>\"\n  },\n  \"description\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/wireless/ssids/firewall/isolation/allowlist/entries",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"wireless",
																						"ssids",
																						"firewall",
																						"isolation",
																						"allowlist",
																						"entries"
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "{{organizationId}}",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				},
																				"description": "Create isolation allow list MAC entry for this organization"
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "POST",
																						"header": [
																							{
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>",
																								"description": "Added as a part of security scheme: apikey"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n  \"description\": \"Example mac address\",\n  \"client\": {\n    \"mac\": \"A1:B2:C3:D4:E5:F6\"\n  },\n  \"ssid\": {\n    \"number\": 2\n  },\n  \"network\": {}\n}",
																							"options": {
																								"raw": {
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{baseUrl}}/organizations/:organizationId/wireless/ssids/firewall/isolation/allowlist/entries",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"organizations",
																								":organizationId",
																								"wireless",
																								"ssids",
																								"firewall",
																								"isolation",
																								"allowlist",
																								"entries"
																							],
																							"variable": [
																								{
																									"key": "organizationId",
																									"value": "<string>",
																									"description": "(Required) Organization ID"
																								},
																								{
																									"key": "basePath",
																									"value": "{{basePath}}"
																								}
																							]
																						}
																					},
																					"status": "Created",
																					"code": 201,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"entryId\": \"1\",\n  \"createdAt\": \"2024-11-11T07:16:38Z\",\n  \"lastUpdatedAt\": \"2024-11-11T07:16:38Z\",\n  \"description\": \"Example mac address\",\n  \"client\": {\n    \"mac\": \"A1:B2:C3:D4:E5:F6\"\n  },\n  \"ssid\": {\n    \"id\": \"5\",\n    \"name\": \"Test SSID\",\n    \"number\": 2\n  },\n  \"network\": {\n    \"id\": \"N_123\",\n    \"name\": \"Test network\"\n  }\n}"
																				}
																			]
																		},
																		{
																			"name": "deleteOrganizationWirelessSsidsFirewallIsolationAllowlistEntry",
																			"protocolProfileBehavior": {
																				"followAuthorizationHeader": false
																			},
																			"request": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/wireless/ssids/firewall/isolation/allowlist/entries/:entryId",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"wireless",
																						"ssids",
																						"firewall",
																						"isolation",
																						"allowlist",
																						"entries",
																						":entryId"
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "{{organizationId}}",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "entryId",
																							"value": "{{entryId}}",
																							"description": "(Required) Entry ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				},
																				"description": "Destroy isolation allow list MAC entry for this organization"
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "DELETE",
																						"header": [
																							{
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>",
																								"description": "Added as a part of security scheme: apikey"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/organizations/:organizationId/wireless/ssids/firewall/isolation/allowlist/entries/:entryId",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"organizations",
																								":organizationId",
																								"wireless",
																								"ssids",
																								"firewall",
																								"isolation",
																								"allowlist",
																								"entries",
																								":entryId"
																							],
																							"variable": [
																								{
																									"key": "organizationId",
																									"value": "<string>",
																									"description": "(Required) Organization ID"
																								},
																								{
																									"key": "entryId",
																									"value": "<string>",
																									"description": "(Required) Entry ID"
																								},
																								{
																									"key": "basePath",
																									"value": "{{basePath}}"
																								}
																							]
																						}
																					},
																					"status": "No Content",
																					"code": 204,
																					"_postman_previewlanguage": "text",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "text/plain"
																						}
																					],
																					"cookie": [],
																					"body": ""
																				}
																			]
																		},
																		{
																			"name": "getOrganizationWirelessSsidsFirewallIsolationAllowlistEntries",
																			"protocolProfileBehavior": {
																				"followAuthorizationHeader": false
																			},
																			"request": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/wireless/ssids/firewall/isolation/allowlist/entries",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"wireless",
																						"ssids",
																						"firewall",
																						"isolation",
																						"allowlist",
																						"entries"
																					],
																					"query": [
																						{
																							"key": "perPage",
																							"value": "{{perPage}}",
																							"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																							"disabled": true
																						},
																						{
																							"key": "startingAfter",
																							"value": "{{startingAfter}}",
																							"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																							"disabled": true
																						},
																						{
																							"key": "endingBefore",
																							"value": "{{endingBefore}}",
																							"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																							"disabled": true
																						},
																						{
																							"key": "networkIds",
																							"value": "{{networkIds}}",
																							"description": "networkIds array to filter out results",
																							"disabled": true
																						},
																						{
																							"key": "networkIds",
																							"value": "{{networkIds}}",
																							"description": "networkIds array to filter out results",
																							"disabled": true
																						},
																						{
																							"key": "ssids",
																							"value": "{{ssids}}",
																							"description": "ssids number array to filter out results",
																							"disabled": true
																						},
																						{
																							"key": "ssids",
																							"value": "{{ssids}}",
																							"description": "ssids number array to filter out results",
																							"disabled": true
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "{{organizationId}}",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				},
																				"description": "List the L2 isolation allow list MAC entry in an organization"
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>",
																								"description": "Added as a part of security scheme: apikey"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/organizations/:organizationId/wireless/ssids/firewall/isolation/allowlist/entries?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&ssids=<integer>&ssids=<integer>",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"organizations",
																								":organizationId",
																								"wireless",
																								"ssids",
																								"firewall",
																								"isolation",
																								"allowlist",
																								"entries"
																							],
																							"query": [
																								{
																									"key": "perPage",
																									"value": "<integer>"
																								},
																								{
																									"key": "startingAfter",
																									"value": "<string>"
																								},
																								{
																									"key": "endingBefore",
																									"value": "<string>"
																								},
																								{
																									"key": "networkIds",
																									"value": "<string>"
																								},
																								{
																									"key": "networkIds",
																									"value": "<string>"
																								},
																								{
																									"key": "ssids",
																									"value": "<integer>"
																								},
																								{
																									"key": "ssids",
																									"value": "<integer>"
																								}
																							],
																							"variable": [
																								{
																									"key": "organizationId",
																									"value": "<string>",
																									"description": "(Required) Organization ID"
																								},
																								{
																									"key": "basePath",
																									"value": "{{basePath}}"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Link",
																							"value": "Lorem nisi fugiat",
																							"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																						},
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"items\": [\n    {\n      \"entryId\": \"1\",\n      \"createdAt\": \"2024-11-11T07:16:38Z\",\n      \"lastUpdatedAt\": \"2024-11-11T07:16:38Z\",\n      \"description\": \"Example mac address\",\n      \"client\": {\n        \"mac\": \"A1:B2:C3:D4:E5:F6\"\n      },\n      \"ssid\": {\n        \"id\": \"5\",\n        \"name\": \"Test SSID\",\n        \"number\": 2\n      },\n      \"network\": {\n        \"id\": \"N_123\",\n        \"name\": \"Test network\"\n      }\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 1,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																				}
																			]
																		},
																		{
																			"name": "updateOrganizationWirelessSsidsFirewallIsolationAllowlistEntry",
																			"protocolProfileBehavior": {
																				"followAuthorizationHeader": false
																			},
																			"request": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"description\": \"<string>\",\n  \"client\": {\n    \"mac\": \"<string>\"\n  }\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/wireless/ssids/firewall/isolation/allowlist/entries/:entryId",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"wireless",
																						"ssids",
																						"firewall",
																						"isolation",
																						"allowlist",
																						"entries",
																						":entryId"
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "{{organizationId}}",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "entryId",
																							"value": "{{entryId}}",
																							"description": "(Required) Entry ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				},
																				"description": "Update isolation allow list MAC entry info"
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "PUT",
																						"header": [
																							{
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>",
																								"description": "Added as a part of security scheme: apikey"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n  \"description\": \"Example mac address\",\n  \"client\": {\n    \"mac\": \"A1:B2:C3:D4:E5:F6\"\n  }\n}",
																							"options": {
																								"raw": {
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{baseUrl}}/organizations/:organizationId/wireless/ssids/firewall/isolation/allowlist/entries/:entryId",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"organizations",
																								":organizationId",
																								"wireless",
																								"ssids",
																								"firewall",
																								"isolation",
																								"allowlist",
																								"entries",
																								":entryId"
																							],
																							"variable": [
																								{
																									"key": "organizationId",
																									"value": "<string>",
																									"description": "(Required) Organization ID"
																								},
																								{
																									"key": "entryId",
																									"value": "<string>",
																									"description": "(Required) Entry ID"
																								},
																								{
																									"key": "basePath",
																									"value": "{{basePath}}"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"entryId\": \"1\",\n  \"createdAt\": \"2024-11-11T07:16:38Z\",\n  \"lastUpdatedAt\": \"2024-11-11T07:16:38Z\",\n  \"description\": \"Example mac address\",\n  \"client\": {\n    \"mac\": \"A1:B2:C3:D4:E5:F6\"\n  },\n  \"ssid\": {\n    \"id\": \"5\",\n    \"name\": \"Test SSID\",\n    \"number\": 2\n  },\n  \"network\": {\n    \"id\": \"N_123\",\n    \"name\": \"Test network\"\n  }\n}"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "l3FirewallRules",
													"item": [
														{
															"name": "getNetworkWirelessSsidFirewallL3FirewallRules",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/firewall/l3FirewallRules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"firewall",
																		"l3FirewallRules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "{{number}}",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Return the L3 firewall rules for an SSID on an MR network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/firewall/l3FirewallRules",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"wireless",
																				"ssids",
																				":number",
																				"firewall",
																				"l3FirewallRules"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "number",
																					"value": "<string>",
																					"description": "(Required) Number"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"rules\": [\n    {\n      \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\n      \"policy\": \"allow\",\n      \"protocol\": \"tcp\",\n      \"destPort\": \"443\",\n      \"destCidr\": \"192.168.1.0/24\"\n    }\n  ],\n  \"allowLanAccess\": false\n}"
																}
															]
														},
														{
															"name": "updateNetworkWirelessSsidFirewallL3FirewallRules",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"destPort\": \"<string>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"destPort\": \"<string>\"\n    }\n  ],\n  \"allowLanAccess\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/firewall/l3FirewallRules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"firewall",
																		"l3FirewallRules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "{{number}}",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Update the L3 firewall rules of an SSID on an MR network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"destPort\": \"<string>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"destPort\": \"<string>\"\n    }\n  ],\n  \"allowLanAccess\": \"<boolean>\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/firewall/l3FirewallRules",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"wireless",
																				"ssids",
																				":number",
																				"firewall",
																				"l3FirewallRules"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "number",
																					"value": "<string>",
																					"description": "(Required) Number"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"rules\": [\n    {\n      \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\n      \"policy\": \"allow\",\n      \"protocol\": \"tcp\",\n      \"destPort\": \"443\",\n      \"destCidr\": \"192.168.1.0/24\"\n    }\n  ],\n  \"allowLanAccess\": false\n}"
																}
															]
														}
													]
												},
												{
													"name": "l7FirewallRules",
													"item": [
														{
															"name": "getNetworkWirelessSsidFirewallL7FirewallRules",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/firewall/l7FirewallRules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"firewall",
																		"l7FirewallRules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "{{number}}",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Return the L7 firewall rules for an SSID on an MR network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/firewall/l7FirewallRules",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"wireless",
																				"ssids",
																				":number",
																				"firewall",
																				"l7FirewallRules"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "number",
																					"value": "<string>",
																					"description": "(Required) Number"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"rules\": [\n    {\n      \"policy\": \"deny\",\n      \"type\": \"host\",\n      \"value\": \"google.com\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "updateNetworkWirelessSsidFirewallL7FirewallRules",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/firewall/l7FirewallRules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"firewall",
																		"l7FirewallRules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "{{number}}",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Update the L7 firewall rules of an SSID on an MR network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/firewall/l7FirewallRules",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"wireless",
																				"ssids",
																				":number",
																				"firewall",
																				"l7FirewallRules"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "number",
																					"value": "<string>",
																					"description": "(Required) Number"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"rules\": [\n    {\n      \"policy\": \"deny\",\n      \"type\": \"host\",\n      \"value\": \"google.com\"\n    }\n  ]\n}"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "hotspot20",
											"item": [
												{
													"name": "getNetworkWirelessSsidHotspot20",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/hotspot20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"ssids",
																":number",
																"hotspot20"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "number",
																	"value": "{{number}}",
																	"description": "(Required) Number"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the Hotspot 2.0 settings for an SSID"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/hotspot20",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"hotspot20"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "<string>",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"enabled\": true,\n  \"operator\": {\n    \"name\": \"Meraki Product Management\"\n  },\n  \"venue\": {\n    \"name\": \"SF Branch\",\n    \"type\": \"Unspecified Assembly\"\n  },\n  \"networkAccessType\": \"Private network\",\n  \"domains\": [\n    \"meraki.local\",\n    \"domain2.com\"\n  ],\n  \"roamConsortOis\": [\n    \"ABC123\",\n    \"456EFG\"\n  ],\n  \"mccMncs\": [\n    {\n      \"mcc\": \"123\",\n      \"mnc\": \"456\"\n    },\n    {\n      \"mcc\": \"563\",\n      \"mnc\": \"232\"\n    }\n  ],\n  \"naiRealms\": [\n    {\n      \"format\": \"1\",\n      \"name\": \"Realm 1\",\n      \"methods\": [\n        {\n          \"id\": \"1\",\n          \"authenticationTypes\": {\n            \"nonEapInnerAuthentication\": [\n              \"MSCHAP\"\n            ],\n            \"eapInnerAuthentication\": [\n              \"EAP-TTLS with MSCHAPv2\"\n            ],\n            \"credentials\": [],\n            \"tunneledEapMethodCredentials\": []\n          }\n        }\n      ]\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "updateNetworkWirelessSsidHotspot20",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"operator\": {\n    \"name\": \"<string>\"\n  },\n  \"venue\": {\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"networkAccessType\": \"<string>\",\n  \"domains\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"roamConsortOis\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"mccMncs\": [\n    {\n      \"mcc\": \"<string>\",\n      \"mnc\": \"<string>\"\n    },\n    {\n      \"mcc\": \"<string>\",\n      \"mnc\": \"<string>\"\n    }\n  ],\n  \"naiRealms\": [\n    {\n      \"format\": \"<string>\",\n      \"realm\": \"<string>\",\n      \"methods\": [\n        {\n          \"id\": \"<string>\",\n          \"authenticationTypes\": \"<object>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"authenticationTypes\": \"<object>\"\n        }\n      ]\n    },\n    {\n      \"format\": \"<string>\",\n      \"realm\": \"<string>\",\n      \"methods\": [\n        {\n          \"id\": \"<string>\",\n          \"authenticationTypes\": \"<object>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"authenticationTypes\": \"<object>\"\n        }\n      ]\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/hotspot20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"ssids",
																":number",
																"hotspot20"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "number",
																	"value": "{{number}}",
																	"description": "(Required) Number"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the Hotspot 2.0 settings of an SSID"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"operator\": {\n    \"name\": \"<string>\"\n  },\n  \"venue\": {\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"networkAccessType\": \"<string>\",\n  \"domains\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"roamConsortOis\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"mccMncs\": [\n    {\n      \"mcc\": \"<string>\",\n      \"mnc\": \"<string>\"\n    },\n    {\n      \"mcc\": \"<string>\",\n      \"mnc\": \"<string>\"\n    }\n  ],\n  \"naiRealms\": [\n    {\n      \"format\": \"<string>\",\n      \"realm\": \"<string>\",\n      \"methods\": [\n        {\n          \"id\": \"<string>\",\n          \"authenticationTypes\": \"<object>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"authenticationTypes\": \"<object>\"\n        }\n      ]\n    },\n    {\n      \"format\": \"<string>\",\n      \"realm\": \"<string>\",\n      \"methods\": [\n        {\n          \"id\": \"<string>\",\n          \"authenticationTypes\": \"<object>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"authenticationTypes\": \"<object>\"\n        }\n      ]\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/hotspot20",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"hotspot20"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "<string>",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"enabled\": true,\n  \"operator\": {\n    \"name\": \"Meraki Product Management\"\n  },\n  \"venue\": {\n    \"name\": \"SF Branch\",\n    \"type\": \"Unspecified Assembly\"\n  },\n  \"networkAccessType\": \"Private network\",\n  \"domains\": [\n    \"meraki.local\",\n    \"domain2.com\"\n  ],\n  \"roamConsortOis\": [\n    \"ABC123\",\n    \"456EFG\"\n  ],\n  \"mccMncs\": [\n    {\n      \"mcc\": \"123\",\n      \"mnc\": \"456\"\n    },\n    {\n      \"mcc\": \"563\",\n      \"mnc\": \"232\"\n    }\n  ],\n  \"naiRealms\": [\n    {\n      \"format\": \"1\",\n      \"name\": \"Realm 1\",\n      \"methods\": [\n        {\n          \"id\": \"1\",\n          \"authenticationTypes\": {\n            \"nonEapInnerAuthentication\": [\n              \"MSCHAP\"\n            ],\n            \"eapInnerAuthentication\": [\n              \"EAP-TTLS with MSCHAPv2\"\n            ],\n            \"credentials\": [],\n            \"tunneledEapMethodCredentials\": []\n          }\n        }\n      ]\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "identityPsks",
											"item": [
												{
													"name": "createNetworkWirelessSsidIdentityPsk",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"groupPolicyId\": \"<string>\",\n  \"passphrase\": \"<string>\",\n  \"expiresAt\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/identityPsks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"ssids",
																":number",
																"identityPsks"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "number",
																	"value": "{{number}}",
																	"description": "(Required) Number"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Create an Identity PSK"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"Sample Identity PSK\",\n  \"passphrase\": \"secret\",\n  \"groupPolicyId\": \"101\",\n  \"expiresAt\": \"2018-02-11T00:00:00.090210Z\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/identityPsks",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"identityPsks"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "<string>",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"name\": \"Sample Identity PSK\",\n  \"id\": \"1284392014819\",\n  \"groupPolicyId\": \"101\",\n  \"passphrase\": \"secret\",\n  \"wifiPersonalNetworkId\": \"1284392014819\",\n  \"email\": \"miles@meraki.com\",\n  \"expiresAt\": \"2018-02-11T00:00:00.090210Z\"\n}"
														}
													]
												},
												{
													"name": "deleteNetworkWirelessSsidIdentityPsk",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/identityPsks/:identityPskId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"ssids",
																":number",
																"identityPsks",
																":identityPskId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "number",
																	"value": "{{number}}",
																	"description": "(Required) Number"
																},
																{
																	"key": "identityPskId",
																	"value": "{{identityPskId}}",
																	"description": "(Required) Identity psk ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Delete an Identity PSK"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/identityPsks/:identityPskId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"identityPsks",
																		":identityPskId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "<string>",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "identityPskId",
																			"value": "<string>",
																			"description": "(Required) Identity psk ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "getNetworkWirelessSsidIdentityPsk",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/identityPsks/:identityPskId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"ssids",
																":number",
																"identityPsks",
																":identityPskId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "number",
																	"value": "{{number}}",
																	"description": "(Required) Number"
																},
																{
																	"key": "identityPskId",
																	"value": "{{identityPskId}}",
																	"description": "(Required) Identity psk ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return an Identity PSK"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/identityPsks/:identityPskId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"identityPsks",
																		":identityPskId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "<string>",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "identityPskId",
																			"value": "<string>",
																			"description": "(Required) Identity psk ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"name\": \"Sample Identity PSK\",\n  \"id\": \"1284392014819\",\n  \"groupPolicyId\": \"101\",\n  \"passphrase\": \"secret\",\n  \"wifiPersonalNetworkId\": \"1284392014819\",\n  \"email\": \"miles@meraki.com\",\n  \"expiresAt\": \"2018-02-11T00:00:00.090210Z\"\n}"
														}
													]
												},
												{
													"name": "getNetworkWirelessSsidIdentityPsks",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/identityPsks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"ssids",
																":number",
																"identityPsks"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "number",
																	"value": "{{number}}",
																	"description": "(Required) Number"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List all Identity PSKs in a wireless network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/identityPsks",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"identityPsks"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "<string>",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"name\": \"Sample Identity PSK\",\n    \"id\": \"1284392014819\",\n    \"groupPolicyId\": \"101\",\n    \"passphrase\": \"secret\",\n    \"wifiPersonalNetworkId\": \"1284392014819\",\n    \"email\": \"miles@meraki.com\",\n    \"expiresAt\": \"2018-02-11T00:00:00.090210Z\"\n  }\n]"
														}
													]
												},
												{
													"name": "updateNetworkWirelessSsidIdentityPsk",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"passphrase\": \"<string>\",\n  \"groupPolicyId\": \"<string>\",\n  \"expiresAt\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/identityPsks/:identityPskId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"ssids",
																":number",
																"identityPsks",
																":identityPskId"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "number",
																	"value": "{{number}}",
																	"description": "(Required) Number"
																},
																{
																	"key": "identityPskId",
																	"value": "{{identityPskId}}",
																	"description": "(Required) Identity psk ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update an Identity PSK"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"Sample Identity PSK\",\n  \"passphrase\": \"secret\",\n  \"groupPolicyId\": \"101\",\n  \"expiresAt\": \"2018-02-11T00:00:00.090210Z\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/identityPsks/:identityPskId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"identityPsks",
																		":identityPskId"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "<string>",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "identityPskId",
																			"value": "<string>",
																			"description": "(Required) Identity psk ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"name\": \"Sample Identity PSK\",\n  \"id\": \"1284392014819\",\n  \"groupPolicyId\": \"101\",\n  \"passphrase\": \"secret\",\n  \"wifiPersonalNetworkId\": \"1284392014819\",\n  \"email\": \"miles@meraki.com\",\n  \"expiresAt\": \"2018-02-11T00:00:00.090210Z\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "schedules",
											"item": [
												{
													"name": "getNetworkWirelessSsidSchedules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/schedules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"ssids",
																":number",
																"schedules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "number",
																	"value": "{{number}}",
																	"description": "(Required) Number"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the outage schedule for the SSID"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/schedules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"schedules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "<string>",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"enabled\": true,\n  \"ranges\": [\n    {\n      \"startDay\": \"Tuesday\",\n      \"startTime\": \"01:00\",\n      \"endDay\": \"Tuesday\",\n      \"endTime\": \"05:00\"\n    }\n  ],\n  \"rangesInSeconds\": [\n    {\n      \"start\": 604800,\n      \"end\": 0\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "updateNetworkWirelessSsidSchedules",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"ranges\": [\n    {\n      \"startDay\": \"<string>\",\n      \"startTime\": \"<string>\",\n      \"endDay\": \"<string>\",\n      \"endTime\": \"<string>\"\n    },\n    {\n      \"startDay\": \"<string>\",\n      \"startTime\": \"<string>\",\n      \"endDay\": \"<string>\",\n      \"endTime\": \"<string>\"\n    }\n  ],\n  \"rangesInSeconds\": [\n    {\n      \"start\": \"<integer>\",\n      \"end\": \"<integer>\"\n    },\n    {\n      \"start\": \"<integer>\",\n      \"end\": \"<integer>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/schedules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"ssids",
																":number",
																"schedules"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "number",
																	"value": "{{number}}",
																	"description": "(Required) Number"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the outage schedule for the SSID"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"ranges\": [\n    {\n      \"startDay\": \"<string>\",\n      \"startTime\": \"<string>\",\n      \"endDay\": \"<string>\",\n      \"endTime\": \"<string>\"\n    },\n    {\n      \"startDay\": \"<string>\",\n      \"startTime\": \"<string>\",\n      \"endDay\": \"<string>\",\n      \"endTime\": \"<string>\"\n    }\n  ],\n  \"rangesInSeconds\": [\n    {\n      \"start\": \"<integer>\",\n      \"end\": \"<integer>\"\n    },\n    {\n      \"start\": \"<integer>\",\n      \"end\": \"<integer>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/schedules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"schedules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "<string>",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"enabled\": true,\n  \"ranges\": [\n    {\n      \"startDay\": \"Tuesday\",\n      \"startTime\": \"01:00\",\n      \"endDay\": \"Tuesday\",\n      \"endTime\": \"05:00\"\n    }\n  ],\n  \"rangesInSeconds\": [\n    {\n      \"start\": 604800,\n      \"end\": 0\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "splash",
											"item": [
												{
													"name": "settings",
													"item": [
														{
															"name": "getNetworkWirelessSsidSplashSettings",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/splash/settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"splash",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "{{number}}",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Display the splash page settings for the given SSID"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/splash/settings",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"wireless",
																				"ssids",
																				":number",
																				"splash",
																				"settings"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "number",
																					"value": "<string>",
																					"description": "(Required) Number"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"ssidNumber\": 0,\n  \"splashPage\": \"Click-through splash page\",\n  \"useSplashUrl\": true,\n  \"splashUrl\": \"https://www.custom_splash_url.com\",\n  \"splashTimeout\": 1440,\n  \"redirectUrl\": \"https://example.com\",\n  \"useRedirectUrl\": true,\n  \"welcomeMessage\": \"Welcome!\",\n  \"themeId\": \"c3ddcb4f16785ee747ab5ffc10867d6c8ea704be\",\n  \"splashLogo\": {\n    \"md5\": \"abcd1234\",\n    \"extension\": \"jpg\"\n  },\n  \"splashImage\": {\n    \"md5\": \"542cccac8d7dedee0f185311d154d194\",\n    \"extension\": \"jpg\"\n  },\n  \"splashPrepaidFront\": {\n    \"md5\": \"542cccac8d7dedee0f185311d154d194\",\n    \"extension\": \"jpg\"\n  },\n  \"guestSponsorship\": {\n    \"durationInMinutes\": 30,\n    \"guestCanRequestTimeframe\": false\n  },\n  \"blockAllTrafficBeforeSignOn\": false,\n  \"controllerDisconnectionBehavior\": \"default\",\n  \"allowSimultaneousLogins\": false,\n  \"billing\": {\n    \"freeAccess\": {\n      \"enabled\": true,\n      \"durationInMinutes\": 120\n    },\n    \"prepaidAccessFastLoginEnabled\": true,\n    \"replyToEmailAddress\": \"user@email.com\"\n  },\n  \"sentryEnrollment\": {\n    \"systemsManagerNetwork\": {\n      \"id\": \"N_1234\"\n    },\n    \"strength\": \"focused\",\n    \"enforcedSystems\": [\n      \"iOS\"\n    ]\n  },\n  \"selfRegistration\": {\n    \"enabled\": true,\n    \"authorizationType\": \"admin\"\n  }\n}"
																}
															]
														},
														{
															"name": "updateNetworkWirelessSsidSplashSettings",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"splashUrl\": \"<string>\",\n  \"useSplashUrl\": \"<boolean>\",\n  \"splashTimeout\": \"<integer>\",\n  \"redirectUrl\": \"<string>\",\n  \"useRedirectUrl\": \"<boolean>\",\n  \"welcomeMessage\": \"<string>\",\n  \"themeId\": \"<string>\",\n  \"splashLogo\": {\n    \"md5\": \"<string>\",\n    \"extension\": \"<string>\",\n    \"image\": {\n      \"format\": \"<string>\",\n      \"contents\": \"<byte>\"\n    }\n  },\n  \"splashImage\": {\n    \"md5\": \"<string>\",\n    \"extension\": \"<string>\",\n    \"image\": {\n      \"format\": \"<string>\",\n      \"contents\": \"<byte>\"\n    }\n  },\n  \"splashPrepaidFront\": {\n    \"md5\": \"<string>\",\n    \"extension\": \"<string>\",\n    \"image\": {\n      \"format\": \"<string>\",\n      \"contents\": \"<byte>\"\n    }\n  },\n  \"blockAllTrafficBeforeSignOn\": \"<boolean>\",\n  \"controllerDisconnectionBehavior\": \"<string>\",\n  \"allowSimultaneousLogins\": \"<boolean>\",\n  \"guestSponsorship\": {\n    \"durationInMinutes\": \"<integer>\",\n    \"guestCanRequestTimeframe\": \"<boolean>\"\n  },\n  \"billing\": {\n    \"freeAccess\": {\n      \"enabled\": \"<boolean>\",\n      \"durationInMinutes\": \"<integer>\"\n    },\n    \"prepaidAccessFastLoginEnabled\": \"<boolean>\",\n    \"replyToEmailAddress\": \"<string>\"\n  },\n  \"sentryEnrollment\": {\n    \"systemsManagerNetwork\": {\n      \"id\": \"<string>\"\n    },\n    \"strength\": \"<string>\",\n    \"enforcedSystems\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"selfRegistration\": {\n    \"enabled\": \"<boolean>\",\n    \"authorizationType\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/splash/settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"splash",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "{{number}}",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Modify the splash page settings for the given SSID"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"splashUrl\": \"<string>\",\n  \"useSplashUrl\": \"<boolean>\",\n  \"splashTimeout\": \"<integer>\",\n  \"redirectUrl\": \"<string>\",\n  \"useRedirectUrl\": \"<boolean>\",\n  \"welcomeMessage\": \"<string>\",\n  \"themeId\": \"<string>\",\n  \"splashLogo\": {\n    \"md5\": \"<string>\",\n    \"extension\": \"<string>\",\n    \"image\": {\n      \"format\": \"<string>\",\n      \"contents\": \"<byte>\"\n    }\n  },\n  \"splashImage\": {\n    \"md5\": \"<string>\",\n    \"extension\": \"<string>\",\n    \"image\": {\n      \"format\": \"<string>\",\n      \"contents\": \"<byte>\"\n    }\n  },\n  \"splashPrepaidFront\": {\n    \"md5\": \"<string>\",\n    \"extension\": \"<string>\",\n    \"image\": {\n      \"format\": \"<string>\",\n      \"contents\": \"<byte>\"\n    }\n  },\n  \"blockAllTrafficBeforeSignOn\": \"<boolean>\",\n  \"controllerDisconnectionBehavior\": \"<string>\",\n  \"allowSimultaneousLogins\": \"<boolean>\",\n  \"guestSponsorship\": {\n    \"durationInMinutes\": \"<integer>\",\n    \"guestCanRequestTimeframe\": \"<boolean>\"\n  },\n  \"billing\": {\n    \"freeAccess\": {\n      \"enabled\": \"<boolean>\",\n      \"durationInMinutes\": \"<integer>\"\n    },\n    \"prepaidAccessFastLoginEnabled\": \"<boolean>\",\n    \"replyToEmailAddress\": \"<string>\"\n  },\n  \"sentryEnrollment\": {\n    \"systemsManagerNetwork\": {\n      \"id\": \"<string>\"\n    },\n    \"strength\": \"<string>\",\n    \"enforcedSystems\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"selfRegistration\": {\n    \"enabled\": \"<boolean>\",\n    \"authorizationType\": \"<string>\"\n  }\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/splash/settings",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"wireless",
																				"ssids",
																				":number",
																				"splash",
																				"settings"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "number",
																					"value": "<string>",
																					"description": "(Required) Number"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"ssidNumber\": 0,\n  \"splashPage\": \"Click-through splash page\",\n  \"useSplashUrl\": true,\n  \"splashUrl\": \"https://www.custom_splash_url.com\",\n  \"splashTimeout\": 1440,\n  \"redirectUrl\": \"https://example.com\",\n  \"useRedirectUrl\": true,\n  \"welcomeMessage\": \"Welcome!\",\n  \"themeId\": \"c3ddcb4f16785ee747ab5ffc10867d6c8ea704be\",\n  \"splashLogo\": {\n    \"md5\": \"abcd1234\",\n    \"extension\": \"jpg\"\n  },\n  \"splashImage\": {\n    \"md5\": \"542cccac8d7dedee0f185311d154d194\",\n    \"extension\": \"jpg\"\n  },\n  \"splashPrepaidFront\": {\n    \"md5\": \"542cccac8d7dedee0f185311d154d194\",\n    \"extension\": \"jpg\"\n  },\n  \"guestSponsorship\": {\n    \"durationInMinutes\": 30,\n    \"guestCanRequestTimeframe\": false\n  },\n  \"blockAllTrafficBeforeSignOn\": false,\n  \"controllerDisconnectionBehavior\": \"default\",\n  \"allowSimultaneousLogins\": false,\n  \"billing\": {\n    \"freeAccess\": {\n      \"enabled\": true,\n      \"durationInMinutes\": 120\n    },\n    \"prepaidAccessFastLoginEnabled\": true,\n    \"replyToEmailAddress\": \"user@email.com\"\n  },\n  \"sentryEnrollment\": {\n    \"systemsManagerNetwork\": {\n      \"id\": \"N_1234\"\n    },\n    \"strength\": \"focused\",\n    \"enforcedSystems\": [\n      \"iOS\"\n    ]\n  },\n  \"selfRegistration\": {\n    \"enabled\": true,\n    \"authorizationType\": \"admin\"\n  }\n}"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "trafficShaping",
											"item": [
												{
													"name": "rules",
													"item": [
														{
															"name": "getNetworkWirelessSsidTrafficShapingRules",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/trafficShaping/rules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"trafficShaping",
																		"rules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "{{number}}",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Display the traffic shaping settings for a SSID on an MR network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/trafficShaping/rules",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"wireless",
																				"ssids",
																				":number",
																				"trafficShaping",
																				"rules"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "number",
																					"value": "<string>",
																					"description": "(Required) Number"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"trafficShapingEnabled\": true,\n  \"defaultRulesEnabled\": true,\n  \"rules\": [\n    {\n      \"definitions\": [\n        {\n          \"type\": \"host\",\n          \"value\": \"google.com\"\n        }\n      ],\n      \"perClientBandwidthLimits\": {\n        \"settings\": \"custom\",\n        \"bandwidthLimits\": {\n          \"limitUp\": 1000000,\n          \"limitDown\": 1000000\n        }\n      },\n      \"dscpTagValue\": 0,\n      \"pcpTagValue\": 0\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "updateNetworkWirelessSsidTrafficShapingRules",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"trafficShapingEnabled\": \"<boolean>\",\n  \"defaultRulesEnabled\": \"<boolean>\",\n  \"rules\": [\n    {\n      \"definitions\": {\n        \"type\": \"array\",\n        \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n        \"maxItems\": 2,\n        \"items\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"type\",\n            \"value\"\n          ],\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"application\",\n                \"applicationCategory\",\n                \"host\",\n                \"ipRange\",\n                \"localNet\",\n                \"port\"\n              ],\n              \"description\": \"The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\",\n              \"default\": \"<string>\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then \\\"value\\\" must be a string, matching either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation, excluding\\n    custom ports.\\n     If \\\"type\\\" is 'application' or 'applicationCategory', then \\\"value\\\" must be an object\\n    with the structure { \\\"id\\\": \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application category or\\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\\n    endpoint).\\n\",\n              \"default\": \"<string>\"\n            }\n          }\n        }\n      },\n      \"perClientBandwidthLimits\": {\n        \"settings\": \"<string>\",\n        \"bandwidthLimits\": {\n          \"limitUp\": \"<integer>\",\n          \"limitDown\": \"<integer>\"\n        }\n      },\n      \"dscpTagValue\": \"<integer>\",\n      \"pcpTagValue\": \"<integer>\"\n    },\n    {\n      \"definitions\": {\n        \"type\": \"array\",\n        \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n        \"maxItems\": 2,\n        \"items\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"type\",\n            \"value\"\n          ],\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"application\",\n                \"applicationCategory\",\n                \"host\",\n                \"ipRange\",\n                \"localNet\",\n                \"port\"\n              ],\n              \"description\": \"The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\",\n              \"default\": \"<string>\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then \\\"value\\\" must be a string, matching either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation, excluding\\n    custom ports.\\n     If \\\"type\\\" is 'application' or 'applicationCategory', then \\\"value\\\" must be an object\\n    with the structure { \\\"id\\\": \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application category or\\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\\n    endpoint).\\n\",\n              \"default\": \"<string>\"\n            }\n          }\n        }\n      },\n      \"perClientBandwidthLimits\": {\n        \"settings\": \"<string>\",\n        \"bandwidthLimits\": {\n          \"limitUp\": \"<integer>\",\n          \"limitDown\": \"<integer>\"\n        }\n      },\n      \"dscpTagValue\": \"<integer>\",\n      \"pcpTagValue\": \"<integer>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/trafficShaping/rules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"trafficShaping",
																		"rules"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "{{networkId}}",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "{{number}}",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Update the traffic shaping rules for an SSID on an MR network."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"trafficShapingEnabled\": \"<boolean>\",\n  \"defaultRulesEnabled\": \"<boolean>\",\n  \"rules\": [\n    {\n      \"definitions\": {\n        \"type\": \"array\",\n        \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n        \"maxItems\": 2,\n        \"minItems\": 2,\n        \"items\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"type\",\n            \"value\"\n          ],\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"application\",\n                \"applicationCategory\",\n                \"host\",\n                \"ipRange\",\n                \"localNet\",\n                \"port\"\n              ],\n              \"description\": \"The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\",\n              \"default\": \"<string>\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then \\\"value\\\" must be a string, matching either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation, excluding\\n    custom ports.\\n     If \\\"type\\\" is 'application' or 'applicationCategory', then \\\"value\\\" must be an object\\n    with the structure { \\\"id\\\": \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application category or\\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\\n    endpoint).\\n\",\n              \"default\": \"<string>\"\n            }\n          }\n        }\n      },\n      \"perClientBandwidthLimits\": {\n        \"settings\": \"<string>\",\n        \"bandwidthLimits\": {\n          \"limitUp\": \"<integer>\",\n          \"limitDown\": \"<integer>\"\n        }\n      },\n      \"dscpTagValue\": \"<integer>\",\n      \"pcpTagValue\": \"<integer>\"\n    },\n    {\n      \"definitions\": {\n        \"type\": \"array\",\n        \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n        \"maxItems\": 2,\n        \"minItems\": 2,\n        \"items\": {\n          \"type\": \"object\",\n          \"required\": [\n            \"type\",\n            \"value\"\n          ],\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"application\",\n                \"applicationCategory\",\n                \"host\",\n                \"ipRange\",\n                \"localNet\",\n                \"port\"\n              ],\n              \"description\": \"The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\",\n              \"default\": \"<string>\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then \\\"value\\\" must be a string, matching either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation, excluding\\n    custom ports.\\n     If \\\"type\\\" is 'application' or 'applicationCategory', then \\\"value\\\" must be an object\\n    with the structure { \\\"id\\\": \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application category or\\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\\n    endpoint).\\n\",\n              \"default\": \"<string>\"\n            }\n          }\n        }\n      },\n      \"perClientBandwidthLimits\": {\n        \"settings\": \"<string>\",\n        \"bandwidthLimits\": {\n          \"limitUp\": \"<integer>\",\n          \"limitDown\": \"<integer>\"\n        }\n      },\n      \"dscpTagValue\": \"<integer>\",\n      \"pcpTagValue\": \"<integer>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/trafficShaping/rules",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"networks",
																				":networkId",
																				"wireless",
																				"ssids",
																				":number",
																				"trafficShaping",
																				"rules"
																			],
																			"variable": [
																				{
																					"key": "networkId",
																					"value": "<string>",
																					"description": "(Required) Network ID"
																				},
																				{
																					"key": "number",
																					"value": "<string>",
																					"description": "(Required) Number"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"trafficShapingEnabled\": true,\n  \"defaultRulesEnabled\": true,\n  \"rules\": [\n    {\n      \"definitions\": [\n        {\n          \"type\": \"host\",\n          \"value\": \"google.com\"\n        }\n      ],\n      \"perClientBandwidthLimits\": {\n        \"settings\": \"custom\",\n        \"bandwidthLimits\": {\n          \"limitUp\": 1000000,\n          \"limitDown\": 1000000\n        }\n      },\n      \"dscpTagValue\": 0,\n      \"pcpTagValue\": 0\n    }\n  ]\n}"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "vpn",
											"item": [
												{
													"name": "getNetworkWirelessSsidVpn",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/vpn",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"ssids",
																":number",
																"vpn"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "number",
																	"value": "{{number}}",
																	"description": "(Required) Number"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the VPN settings for the SSID."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/vpn",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"vpn"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "<string>",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"concentrator\": {\n    \"networkId\": \"N_123\",\n    \"vlanId\": 44,\n    \"name\": \"some concentrator name\"\n  },\n  \"failover\": {\n    \"requestIp\": \"1.1.1.1\",\n    \"heartbeatInterval\": 10,\n    \"idleTimeout\": 30\n  },\n  \"splitTunnel\": {\n    \"enabled\": true,\n    \"rules\": [\n      {\n        \"protocol\": \"Any\",\n        \"destCidr\": \"1.1.1.1/32\",\n        \"destPort\": \"any\",\n        \"policy\": \"allow\",\n        \"comment\": \"split tunnel rule 1\"\n      },\n      {\n        \"destCidr\": \"foo.com\",\n        \"destPort\": \"any\",\n        \"policy\": \"deny\",\n        \"comment\": \"split tunnel rule 2\"\n      }\n    ]\n  }\n}"
														}
													]
												},
												{
													"name": "updateNetworkWirelessSsidVpn",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"concentrator\": {\n    \"networkId\": \"<string>\",\n    \"vlanId\": \"<integer>\"\n  },\n  \"splitTunnel\": {\n    \"enabled\": \"<boolean>\",\n    \"rules\": [\n      {\n        \"destCidr\": \"<string>\",\n        \"policy\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"destPort\": \"<string>\",\n        \"comment\": \"<string>\"\n      },\n      {\n        \"destCidr\": \"<string>\",\n        \"policy\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"destPort\": \"<string>\",\n        \"comment\": \"<string>\"\n      }\n    ]\n  },\n  \"failover\": {\n    \"requestIp\": \"<string>\",\n    \"heartbeatInterval\": \"<integer>\",\n    \"idleTimeout\": \"<integer>\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/vpn",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"ssids",
																":number",
																"vpn"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "number",
																	"value": "{{number}}",
																	"description": "(Required) Number"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Update the VPN settings for the SSID"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"concentrator\": {\n    \"networkId\": \"N_123\",\n    \"vlanId\": 44,\n    \"name\": \"some concentrator name\"\n  },\n  \"failover\": {\n    \"requestIp\": \"1.1.1.1\",\n    \"heartbeatInterval\": 10,\n    \"idleTimeout\": 30\n  },\n  \"splitTunnel\": {\n    \"enabled\": true,\n    \"rules\": [\n      {\n        \"protocol\": \"Any\",\n        \"destCidr\": \"1.1.1.1/32\",\n        \"destPort\": \"any\",\n        \"policy\": \"allow\",\n        \"comment\": \"split tunnel rule 1\"\n      },\n      {\n        \"destCidr\": \"foo.com\",\n        \"destPort\": \"any\",\n        \"policy\": \"deny\",\n        \"comment\": \"split tunnel rule 2\"\n      }\n    ]\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number/vpn",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"ssids",
																		":number",
																		"vpn"
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "number",
																			"value": "<string>",
																			"description": "(Required) Number"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"concentrator\": {\n    \"networkId\": \"N_123\",\n    \"vlanId\": 44,\n    \"name\": \"some concentrator name\"\n  },\n  \"failover\": {\n    \"requestIp\": \"1.1.1.1\",\n    \"heartbeatInterval\": 10,\n    \"idleTimeout\": 30\n  },\n  \"splitTunnel\": {\n    \"enabled\": true,\n    \"rules\": [\n      {\n        \"protocol\": \"Any\",\n        \"destCidr\": \"1.1.1.1/32\",\n        \"destPort\": \"any\",\n        \"policy\": \"allow\",\n        \"comment\": \"split tunnel rule 1\"\n      },\n      {\n        \"destCidr\": \"foo.com\",\n        \"destPort\": \"any\",\n        \"policy\": \"deny\",\n        \"comment\": \"split tunnel rule 2\"\n      }\n    ]\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "getNetworkWirelessSsid",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"ssids",
														":number"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "number",
															"value": "{{number}}",
															"description": "(Required) Number"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return a single MR SSID"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"ssids",
																":number"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "number",
																	"value": "<string>",
																	"description": "(Required) Number"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"number\": 0,\n  \"name\": \"My SSID\",\n  \"enabled\": true,\n  \"splashPage\": \"Click-through splash page\",\n  \"ssidAdminAccessible\": false,\n  \"localAuth\": false,\n  \"authMode\": \"8021x-radius\",\n  \"encryptionMode\": \"wpa\",\n  \"wpaEncryptionMode\": \"WPA2 only\",\n  \"radiusServers\": [\n    {\n      \"host\": \"0.0.0.0\",\n      \"port\": 3000,\n      \"openRoamingCertificateId\": 2,\n      \"caCertificate\": \"-----BEGIN CERTIFICATE-----\\nMIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw\\ngYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT\\nYW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ\\nRE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx\\nMTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu\\nYXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD\\naXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3\\nMDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK\\nuTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA\\nayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u\\npZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS\\nKjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2\\naEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU\\nCwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML\\nUSopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E\\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE\\n1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa\\njON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh\\na/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/\\nuoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/\\nUR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ\\nwTw70BVktzJnb0VLeDg=\\n-----END CERTIFICATE-----\"\n    }\n  ],\n  \"radiusAccountingServers\": [\n    {\n      \"host\": \"0.0.0.0\",\n      \"port\": 3000,\n      \"openRoamingCertificateId\": 2,\n      \"caCertificate\": \"-----BEGIN CERTIFICATE-----\\nMIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw\\ngYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT\\nYW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ\\nRE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx\\nMTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu\\nYXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD\\naXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3\\nMDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK\\nuTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA\\nayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u\\npZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS\\nKjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2\\naEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU\\nCwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML\\nUSopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E\\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE\\n1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa\\njON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh\\na/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/\\nuoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/\\nUR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ\\nwTw70BVktzJnb0VLeDg=\\n-----END CERTIFICATE-----\"\n    }\n  ],\n  \"radiusAccountingEnabled\": false,\n  \"radiusEnabled\": true,\n  \"radiusAttributeForGroupPolicies\": \"Filter-Id\",\n  \"radiusFailoverPolicy\": \"Deny access\",\n  \"radiusLoadBalancingPolicy\": \"Round robin\",\n  \"ipAssignmentMode\": \"NAT mode\",\n  \"adminSplashUrl\": \"http://example.com\",\n  \"splashTimeout\": \"30 minutes\",\n  \"walledGardenEnabled\": true,\n  \"walledGardenRanges\": [\n    \"example.com\",\n    \"1.1.1.1/32\"\n  ],\n  \"minBitrate\": 11,\n  \"bandSelection\": \"5 GHz band only\",\n  \"perClientBandwidthLimitUp\": 0,\n  \"perClientBandwidthLimitDown\": 0,\n  \"visible\": true,\n  \"availableOnAllAps\": false,\n  \"availabilityTags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"perSsidBandwidthLimitUp\": 0,\n  \"perSsidBandwidthLimitDown\": 0,\n  \"mandatoryDhcpEnabled\": false\n}"
												}
											]
										},
										{
											"name": "getNetworkWirelessSsids",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"ssids"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List the MR SSIDs in a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"ssids"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"number\": 0,\n    \"name\": \"My SSID\",\n    \"enabled\": true,\n    \"splashPage\": \"Click-through splash page\",\n    \"ssidAdminAccessible\": false,\n    \"localAuth\": false,\n    \"authMode\": \"8021x-radius\",\n    \"encryptionMode\": \"wpa\",\n    \"wpaEncryptionMode\": \"WPA2 only\",\n    \"radiusServers\": [\n      {\n        \"host\": \"0.0.0.0\",\n        \"port\": 3000,\n        \"openRoamingCertificateId\": 2,\n        \"caCertificate\": \"-----BEGIN CERTIFICATE-----\\nMIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw\\ngYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT\\nYW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ\\nRE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx\\nMTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu\\nYXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD\\naXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3\\nMDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK\\nuTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA\\nayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u\\npZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS\\nKjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2\\naEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU\\nCwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML\\nUSopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E\\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE\\n1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa\\njON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh\\na/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/\\nuoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/\\nUR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ\\nwTw70BVktzJnb0VLeDg=\\n-----END CERTIFICATE-----\"\n      }\n    ],\n    \"radiusAccountingServers\": [\n      {\n        \"host\": \"0.0.0.0\",\n        \"port\": 3000,\n        \"openRoamingCertificateId\": 2,\n        \"caCertificate\": \"-----BEGIN CERTIFICATE-----\\nMIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw\\ngYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT\\nYW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ\\nRE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx\\nMTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu\\nYXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD\\naXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3\\nMDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK\\nuTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA\\nayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u\\npZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS\\nKjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2\\naEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU\\nCwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML\\nUSopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E\\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE\\n1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa\\njON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh\\na/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/\\nuoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/\\nUR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ\\nwTw70BVktzJnb0VLeDg=\\n-----END CERTIFICATE-----\"\n      }\n    ],\n    \"radiusAccountingEnabled\": false,\n    \"radiusEnabled\": true,\n    \"radiusAttributeForGroupPolicies\": \"Filter-Id\",\n    \"radiusFailoverPolicy\": \"Deny access\",\n    \"radiusLoadBalancingPolicy\": \"Round robin\",\n    \"ipAssignmentMode\": \"NAT mode\",\n    \"adminSplashUrl\": \"http://example.com\",\n    \"splashTimeout\": \"30 minutes\",\n    \"walledGardenEnabled\": true,\n    \"walledGardenRanges\": [\n      \"example.com\",\n      \"1.1.1.1/32\"\n    ],\n    \"minBitrate\": 11,\n    \"bandSelection\": \"5 GHz band only\",\n    \"perClientBandwidthLimitUp\": 0,\n    \"perClientBandwidthLimitDown\": 0,\n    \"visible\": true,\n    \"availableOnAllAps\": false,\n    \"availabilityTags\": [\n      \"tag1\",\n      \"tag2\"\n    ],\n    \"perSsidBandwidthLimitUp\": 0,\n    \"perSsidBandwidthLimitDown\": 0,\n    \"mandatoryDhcpEnabled\": false\n  }\n]"
												}
											]
										},
										{
											"name": "updateNetworkWirelessSsid",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"authMode\": \"<string>\",\n  \"enterpriseAdminAccess\": \"<string>\",\n  \"encryptionMode\": \"<string>\",\n  \"psk\": \"<string>\",\n  \"wpaEncryptionMode\": \"<string>\",\n  \"dot11w\": {\n    \"enabled\": \"<boolean>\",\n    \"required\": \"<boolean>\"\n  },\n  \"dot11r\": {\n    \"enabled\": \"<boolean>\",\n    \"adaptive\": \"<boolean>\"\n  },\n  \"splashPage\": \"<string>\",\n  \"splashGuestSponsorDomains\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"oauth\": {\n    \"allowedDomains\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"localRadius\": {\n    \"cacheTimeout\": \"<integer>\",\n    \"passwordAuthentication\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"certificateAuthentication\": {\n      \"enabled\": \"<boolean>\",\n      \"useLdap\": \"<boolean>\",\n      \"useOcsp\": \"<boolean>\",\n      \"ocspResponderUrl\": \"<string>\",\n      \"clientRootCaCertificate\": {\n        \"contents\": \"<string>\"\n      }\n    }\n  },\n  \"ldap\": {\n    \"servers\": [\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      },\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    ],\n    \"credentials\": {\n      \"distinguishedName\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"baseDistinguishedName\": \"<string>\",\n    \"serverCaCertificate\": {\n      \"contents\": \"<string>\"\n    }\n  },\n  \"activeDirectory\": {\n    \"servers\": [\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      },\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    ],\n    \"credentials\": {\n      \"logonName\": \"<string>\",\n      \"password\": \"<string>\"\n    }\n  },\n  \"radiusServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\",\n      \"radsecEnabled\": \"<boolean>\",\n      \"openRoamingCertificateId\": \"<integer>\",\n      \"caCertificate\": \"<string>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\",\n      \"radsecEnabled\": \"<boolean>\",\n      \"openRoamingCertificateId\": \"<integer>\",\n      \"caCertificate\": \"<string>\"\n    }\n  ],\n  \"radiusProxyEnabled\": \"<boolean>\",\n  \"radiusTestingEnabled\": \"<boolean>\",\n  \"radiusCalledStationId\": \"<string>\",\n  \"radiusAuthenticationNasId\": \"<string>\",\n  \"radiusServerTimeout\": \"<integer>\",\n  \"radiusServerAttemptsLimit\": \"<integer>\",\n  \"radiusFallbackEnabled\": \"<boolean>\",\n  \"radiusRadsec\": {\n    \"tlsTunnel\": {\n      \"timeout\": \"<integer>\"\n    }\n  },\n  \"radiusCoaEnabled\": \"<boolean>\",\n  \"radiusFailoverPolicy\": \"<string>\",\n  \"radiusLoadBalancingPolicy\": \"<string>\",\n  \"radiusAccountingEnabled\": \"<boolean>\",\n  \"radiusAccountingServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\",\n      \"radsecEnabled\": \"<boolean>\",\n      \"caCertificate\": \"<string>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\",\n      \"radsecEnabled\": \"<boolean>\",\n      \"caCertificate\": \"<string>\"\n    }\n  ],\n  \"radiusAccountingInterimInterval\": \"<integer>\",\n  \"radiusAttributeForGroupPolicies\": \"<string>\",\n  \"ipAssignmentMode\": \"<string>\",\n  \"useVlanTagging\": \"<boolean>\",\n  \"concentratorNetworkId\": \"<string>\",\n  \"secondaryConcentratorNetworkId\": \"<string>\",\n  \"disassociateClientsOnVpnFailover\": \"<boolean>\",\n  \"vlanId\": \"<integer>\",\n  \"defaultVlanId\": \"<integer>\",\n  \"apTagsAndVlanIds\": [\n    {\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"vlanId\": \"<integer>\"\n    },\n    {\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"vlanId\": \"<integer>\"\n    }\n  ],\n  \"walledGardenEnabled\": \"<boolean>\",\n  \"walledGardenRanges\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"gre\": {\n    \"concentrator\": {\n      \"host\": \"<string>\"\n    },\n    \"key\": \"<integer>\"\n  },\n  \"radiusOverride\": \"<boolean>\",\n  \"radiusGuestVlanEnabled\": \"<boolean>\",\n  \"radiusGuestVlanId\": \"<integer>\",\n  \"minBitrate\": \"<float>\",\n  \"bandSelection\": \"<string>\",\n  \"perClientBandwidthLimitUp\": \"<integer>\",\n  \"perClientBandwidthLimitDown\": \"<integer>\",\n  \"perSsidBandwidthLimitUp\": \"<integer>\",\n  \"perSsidBandwidthLimitDown\": \"<integer>\",\n  \"lanIsolationEnabled\": \"<boolean>\",\n  \"visible\": \"<boolean>\",\n  \"availableOnAllAps\": \"<boolean>\",\n  \"availabilityTags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"adaptivePolicyGroupId\": \"<string>\",\n  \"mandatoryDhcpEnabled\": \"<boolean>\",\n  \"adultContentFilteringEnabled\": \"<boolean>\",\n  \"dnsRewrite\": {\n    \"enabled\": \"<boolean>\",\n    \"dnsCustomNameservers\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"speedBurst\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"namedVlans\": {\n    \"tagging\": {\n      \"enabled\": \"<boolean>\",\n      \"defaultVlanName\": \"<string>\",\n      \"byApTags\": [\n        {\n          \"tags\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"vlanName\": \"<string>\"\n        },\n        {\n          \"tags\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"vlanName\": \"<string>\"\n        }\n      ]\n    },\n    \"radius\": {\n      \"guestVlan\": {\n        \"enabled\": \"<boolean>\",\n        \"name\": \"<string>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"ssids",
														":number"
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "number",
															"value": "{{number}}",
															"description": "(Required) Number"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Update the attributes of an MR SSID"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"authMode\": \"<string>\",\n  \"enterpriseAdminAccess\": \"<string>\",\n  \"encryptionMode\": \"<string>\",\n  \"psk\": \"<string>\",\n  \"wpaEncryptionMode\": \"<string>\",\n  \"dot11w\": {\n    \"enabled\": \"<boolean>\",\n    \"required\": \"<boolean>\"\n  },\n  \"dot11r\": {\n    \"enabled\": \"<boolean>\",\n    \"adaptive\": \"<boolean>\"\n  },\n  \"splashPage\": \"<string>\",\n  \"splashGuestSponsorDomains\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"oauth\": {\n    \"allowedDomains\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"localRadius\": {\n    \"cacheTimeout\": \"<integer>\",\n    \"passwordAuthentication\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"certificateAuthentication\": {\n      \"enabled\": \"<boolean>\",\n      \"useLdap\": \"<boolean>\",\n      \"useOcsp\": \"<boolean>\",\n      \"ocspResponderUrl\": \"<string>\",\n      \"clientRootCaCertificate\": {\n        \"contents\": \"<string>\"\n      }\n    }\n  },\n  \"ldap\": {\n    \"servers\": [\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      },\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    ],\n    \"credentials\": {\n      \"distinguishedName\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"baseDistinguishedName\": \"<string>\",\n    \"serverCaCertificate\": {\n      \"contents\": \"<string>\"\n    }\n  },\n  \"activeDirectory\": {\n    \"servers\": [\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      },\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    ],\n    \"credentials\": {\n      \"logonName\": \"<string>\",\n      \"password\": \"<string>\"\n    }\n  },\n  \"radiusServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\",\n      \"radsecEnabled\": \"<boolean>\",\n      \"openRoamingCertificateId\": \"<integer>\",\n      \"caCertificate\": \"<string>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\",\n      \"radsecEnabled\": \"<boolean>\",\n      \"openRoamingCertificateId\": \"<integer>\",\n      \"caCertificate\": \"<string>\"\n    }\n  ],\n  \"radiusProxyEnabled\": \"<boolean>\",\n  \"radiusTestingEnabled\": \"<boolean>\",\n  \"radiusCalledStationId\": \"<string>\",\n  \"radiusAuthenticationNasId\": \"<string>\",\n  \"radiusServerTimeout\": \"<integer>\",\n  \"radiusServerAttemptsLimit\": \"<integer>\",\n  \"radiusFallbackEnabled\": \"<boolean>\",\n  \"radiusRadsec\": {\n    \"tlsTunnel\": {\n      \"timeout\": \"<integer>\"\n    }\n  },\n  \"radiusCoaEnabled\": \"<boolean>\",\n  \"radiusFailoverPolicy\": \"<string>\",\n  \"radiusLoadBalancingPolicy\": \"<string>\",\n  \"radiusAccountingEnabled\": \"<boolean>\",\n  \"radiusAccountingServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\",\n      \"radsecEnabled\": \"<boolean>\",\n      \"caCertificate\": \"<string>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\",\n      \"radsecEnabled\": \"<boolean>\",\n      \"caCertificate\": \"<string>\"\n    }\n  ],\n  \"radiusAccountingInterimInterval\": \"<integer>\",\n  \"radiusAttributeForGroupPolicies\": \"<string>\",\n  \"ipAssignmentMode\": \"<string>\",\n  \"useVlanTagging\": \"<boolean>\",\n  \"concentratorNetworkId\": \"<string>\",\n  \"secondaryConcentratorNetworkId\": \"<string>\",\n  \"disassociateClientsOnVpnFailover\": \"<boolean>\",\n  \"vlanId\": \"<integer>\",\n  \"defaultVlanId\": \"<integer>\",\n  \"apTagsAndVlanIds\": [\n    {\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"vlanId\": \"<integer>\"\n    },\n    {\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"vlanId\": \"<integer>\"\n    }\n  ],\n  \"walledGardenEnabled\": \"<boolean>\",\n  \"walledGardenRanges\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"gre\": {\n    \"concentrator\": {\n      \"host\": \"<string>\"\n    },\n    \"key\": \"<integer>\"\n  },\n  \"radiusOverride\": \"<boolean>\",\n  \"radiusGuestVlanEnabled\": \"<boolean>\",\n  \"radiusGuestVlanId\": \"<integer>\",\n  \"minBitrate\": \"<float>\",\n  \"bandSelection\": \"<string>\",\n  \"perClientBandwidthLimitUp\": \"<integer>\",\n  \"perClientBandwidthLimitDown\": \"<integer>\",\n  \"perSsidBandwidthLimitUp\": \"<integer>\",\n  \"perSsidBandwidthLimitDown\": \"<integer>\",\n  \"lanIsolationEnabled\": \"<boolean>\",\n  \"visible\": \"<boolean>\",\n  \"availableOnAllAps\": \"<boolean>\",\n  \"availabilityTags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"adaptivePolicyGroupId\": \"<string>\",\n  \"mandatoryDhcpEnabled\": \"<boolean>\",\n  \"adultContentFilteringEnabled\": \"<boolean>\",\n  \"dnsRewrite\": {\n    \"enabled\": \"<boolean>\",\n    \"dnsCustomNameservers\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"speedBurst\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"namedVlans\": {\n    \"tagging\": {\n      \"enabled\": \"<boolean>\",\n      \"defaultVlanName\": \"<string>\",\n      \"byApTags\": [\n        {\n          \"tags\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"vlanName\": \"<string>\"\n        },\n        {\n          \"tags\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"vlanName\": \"<string>\"\n        }\n      ]\n    },\n    \"radius\": {\n      \"guestVlan\": {\n        \"enabled\": \"<boolean>\",\n        \"name\": \"<string>\"\n      }\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/ssids/:number",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"ssids",
																":number"
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "number",
																	"value": "<string>",
																	"description": "(Required) Number"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"number\": 0,\n  \"name\": \"My SSID\",\n  \"enabled\": true,\n  \"splashPage\": \"Click-through splash page\",\n  \"ssidAdminAccessible\": false,\n  \"localAuth\": false,\n  \"authMode\": \"8021x-radius\",\n  \"encryptionMode\": \"wpa\",\n  \"wpaEncryptionMode\": \"WPA2 only\",\n  \"radiusServers\": [\n    {\n      \"host\": \"0.0.0.0\",\n      \"port\": 3000,\n      \"openRoamingCertificateId\": 2,\n      \"caCertificate\": \"-----BEGIN CERTIFICATE-----\\nMIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw\\ngYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT\\nYW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ\\nRE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx\\nMTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu\\nYXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD\\naXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3\\nMDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK\\nuTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA\\nayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u\\npZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS\\nKjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2\\naEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU\\nCwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML\\nUSopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E\\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE\\n1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa\\njON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh\\na/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/\\nuoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/\\nUR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ\\nwTw70BVktzJnb0VLeDg=\\n-----END CERTIFICATE-----\"\n    }\n  ],\n  \"radiusAccountingServers\": [\n    {\n      \"host\": \"0.0.0.0\",\n      \"port\": 3000,\n      \"openRoamingCertificateId\": 2,\n      \"caCertificate\": \"-----BEGIN CERTIFICATE-----\\nMIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw\\ngYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT\\nYW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ\\nRE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx\\nMTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu\\nYXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD\\naXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3\\nMDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK\\nuTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA\\nayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u\\npZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS\\nKjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2\\naEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU\\nCwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML\\nUSopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E\\nBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE\\n1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa\\njON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh\\na/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/\\nuoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/\\nUR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ\\nwTw70BVktzJnb0VLeDg=\\n-----END CERTIFICATE-----\"\n    }\n  ],\n  \"radiusAccountingEnabled\": false,\n  \"radiusEnabled\": true,\n  \"radiusAttributeForGroupPolicies\": \"Filter-Id\",\n  \"radiusFailoverPolicy\": \"Deny access\",\n  \"radiusLoadBalancingPolicy\": \"Round robin\",\n  \"ipAssignmentMode\": \"NAT mode\",\n  \"adminSplashUrl\": \"http://example.com\",\n  \"splashTimeout\": \"30 minutes\",\n  \"walledGardenEnabled\": true,\n  \"walledGardenRanges\": [\n    \"example.com\",\n    \"1.1.1.1/32\"\n  ],\n  \"minBitrate\": 11,\n  \"bandSelection\": \"5 GHz band only\",\n  \"perClientBandwidthLimitUp\": 0,\n  \"perClientBandwidthLimitDown\": 0,\n  \"visible\": true,\n  \"availableOnAllAps\": false,\n  \"availabilityTags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"perSsidBandwidthLimitUp\": 0,\n  \"perSsidBandwidthLimitDown\": 0,\n  \"mandatoryDhcpEnabled\": false\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "monitor",
							"item": [
								{
									"name": "airMarshal",
									"item": [
										{
											"name": "getNetworkWirelessAirMarshal",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/airMarshal",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"airMarshal"
													],
													"query": [
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List Air Marshal scan results from a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/airMarshal?t0=<string>&timespan=<float>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"airMarshal"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"ssid\": \"linksys\",\n    \"bssids\": [\n      {\n        \"bssid\": \"00:11:22:33:44:55\",\n        \"contained\": false,\n        \"detectedBy\": [\n          {\n            \"device\": \"Q234-ABCD-5678\",\n            \"rssi\": 17\n          }\n        ]\n      }\n    ],\n    \"channels\": [\n      36,\n      40\n    ],\n    \"firstSeen\": 1518365681,\n    \"lastSeen\": 1526087474,\n    \"wiredMacs\": [\n      \"00:11:22:33:44:55\"\n    ],\n    \"wiredVlans\": [\n      0,\n      108\n    ],\n    \"wiredLastSeen\": 1526087474\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "channelUtilizationHistory",
									"item": [
										{
											"name": "getNetworkWirelessChannelUtilizationHistory",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/channelUtilizationHistory",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"channelUtilizationHistory"
													],
													"query": [
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
															"disabled": true
														},
														{
															"key": "t1",
															"value": "{{t1}}",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
															"disabled": true
														},
														{
															"key": "resolution",
															"value": "{{resolution}}",
															"description": "The time resolution in seconds for returned data. The valid resolutions are: 600, 1200, 3600, 14400, 86400. The default is 86400.",
															"disabled": true
														},
														{
															"key": "autoResolution",
															"value": "{{autoResolution}}",
															"description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.",
															"disabled": true
														},
														{
															"key": "clientId",
															"value": "{{clientId}}",
															"description": "Filter results by network client to return per-device, per-band AP channel utilization metrics inner joined by the queried client's connection history.",
															"disabled": true
														},
														{
															"key": "deviceSerial",
															"value": "{{deviceSerial}}",
															"description": "Filter results by device to return AP channel utilization metrics for the queried device; either :band or :clientId must be jointly specified.",
															"disabled": true
														},
														{
															"key": "apTag",
															"value": "{{apTag}}",
															"description": "Filter results by AP tag to return AP channel utilization metrics for devices labeled with the given tag; either :clientId or :deviceSerial must be jointly specified.",
															"disabled": true
														},
														{
															"key": "band",
															"value": "{{band}}",
															"description": "Filter results by band (either '2.4', '5' or '6').",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return AP channel utilization over time for a device or network client"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/channelUtilizationHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&autoResolution=<boolean>&clientId=<string>&deviceSerial=<string>&apTag=<string>&band=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"channelUtilizationHistory"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "t1",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																},
																{
																	"key": "resolution",
																	"value": "<integer>"
																},
																{
																	"key": "autoResolution",
																	"value": "<boolean>"
																},
																{
																	"key": "clientId",
																	"value": "<string>"
																},
																{
																	"key": "deviceSerial",
																	"value": "<string>"
																},
																{
																	"key": "apTag",
																	"value": "<string>"
																},
																{
																	"key": "band",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"startTs\": \"2020-01-01T00:00:00Z\",\n    \"endTs\": \"2020-01-01T01:00:00Z\",\n    \"utilizationTotal\": 9.89,\n    \"utilization80211\": 7.22,\n    \"utilizationNon80211\": 2.67\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "clientCountHistory",
									"item": [
										{
											"name": "getNetworkWirelessClientCountHistory",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/clientCountHistory",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"clientCountHistory"
													],
													"query": [
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
															"disabled": true
														},
														{
															"key": "t1",
															"value": "{{t1}}",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
															"disabled": true
														},
														{
															"key": "resolution",
															"value": "{{resolution}}",
															"description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.",
															"disabled": true
														},
														{
															"key": "autoResolution",
															"value": "{{autoResolution}}",
															"description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.",
															"disabled": true
														},
														{
															"key": "clientId",
															"value": "{{clientId}}",
															"description": "Filter results by network client to return per-device client counts over time inner joined by the queried client's connection history.",
															"disabled": true
														},
														{
															"key": "deviceSerial",
															"value": "{{deviceSerial}}",
															"description": "Filter results by device.",
															"disabled": true
														},
														{
															"key": "apTag",
															"value": "{{apTag}}",
															"description": "Filter results by AP tag.",
															"disabled": true
														},
														{
															"key": "band",
															"value": "{{band}}",
															"description": "Filter results by band (either '2.4', '5' or '6').",
															"disabled": true
														},
														{
															"key": "ssid",
															"value": "{{ssid}}",
															"description": "Filter results by SSID number.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return wireless client counts over time for a network, device, or network client"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/clientCountHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&autoResolution=<boolean>&clientId=<string>&deviceSerial=<string>&apTag=<string>&band=<string>&ssid=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"clientCountHistory"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "t1",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																},
																{
																	"key": "resolution",
																	"value": "<integer>"
																},
																{
																	"key": "autoResolution",
																	"value": "<boolean>"
																},
																{
																	"key": "clientId",
																	"value": "<string>"
																},
																{
																	"key": "deviceSerial",
																	"value": "<string>"
																},
																{
																	"key": "apTag",
																	"value": "<string>"
																},
																{
																	"key": "band",
																	"value": "<string>"
																},
																{
																	"key": "ssid",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"startTs\": \"2020-01-01T00:00:00Z\",\n    \"endTs\": \"2020-01-01T01:00:00Z\",\n    \"clientCount\": 14\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "clients",
									"item": [
										{
											"name": "connectionStats",
											"item": [
												{
													"name": "getNetworkWirelessClientConnectionStats",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/clients/:clientId/connectionStats",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"clients",
																":clientId",
																"connectionStats"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "{{t0}}",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
																	"disabled": true
																},
																{
																	"key": "t1",
																	"value": "{{t1}}",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
																	"disabled": true
																},
																{
																	"key": "timespan",
																	"value": "{{timespan}}",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.",
																	"disabled": true
																},
																{
																	"key": "band",
																	"value": "{{band}}",
																	"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.",
																	"disabled": true
																},
																{
																	"key": "ssid",
																	"value": "{{ssid}}",
																	"description": "Filter results by SSID",
																	"disabled": true
																},
																{
																	"key": "vlan",
																	"value": "{{vlan}}",
																	"description": "Filter results by VLAN",
																	"disabled": true
																},
																{
																	"key": "apTag",
																	"value": "{{apTag}}",
																	"description": "Filter results by AP Tag",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "clientId",
																	"value": "{{clientId}}",
																	"description": "(Required) Client ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Aggregated connectivity info for a given client on this network. Clients are identified by their MAC."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/clients/:clientId/connectionStats?t0=<string>&t1=<string>&timespan=<float>&band=<string>&ssid=<integer>&vlan=<integer>&apTag=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"clients",
																		":clientId",
																		"connectionStats"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>"
																		},
																		{
																			"key": "t1",
																			"value": "<string>"
																		},
																		{
																			"key": "timespan",
																			"value": "<float>"
																		},
																		{
																			"key": "band",
																			"value": "<string>"
																		},
																		{
																			"key": "ssid",
																			"value": "<integer>"
																		},
																		{
																			"key": "vlan",
																			"value": "<integer>"
																		},
																		{
																			"key": "apTag",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "clientId",
																			"value": "<string>",
																			"description": "(Required) Client ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"mac\": \"00:11:22:33:44:55\",\n  \"connectionStats\": {\n    \"assoc\": 3,\n    \"auth\": 4,\n    \"dhcp\": 4,\n    \"success\": 5\n  }\n}"
														}
													]
												},
												{
													"name": "getNetworkWirelessClientsConnectionStats",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/clients/connectionStats",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"clients",
																"connectionStats"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "{{t0}}",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
																	"disabled": true
																},
																{
																	"key": "t1",
																	"value": "{{t1}}",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
																	"disabled": true
																},
																{
																	"key": "timespan",
																	"value": "{{timespan}}",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.",
																	"disabled": true
																},
																{
																	"key": "band",
																	"value": "{{band}}",
																	"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.",
																	"disabled": true
																},
																{
																	"key": "ssid",
																	"value": "{{ssid}}",
																	"description": "Filter results by SSID",
																	"disabled": true
																},
																{
																	"key": "vlan",
																	"value": "{{vlan}}",
																	"description": "Filter results by VLAN",
																	"disabled": true
																},
																{
																	"key": "apTag",
																	"value": "{{apTag}}",
																	"description": "Filter results by AP Tag",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Aggregated connectivity info for this network, grouped by clients"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/clients/connectionStats?t0=<string>&t1=<string>&timespan=<float>&band=<string>&ssid=<integer>&vlan=<integer>&apTag=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"clients",
																		"connectionStats"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>"
																		},
																		{
																			"key": "t1",
																			"value": "<string>"
																		},
																		{
																			"key": "timespan",
																			"value": "<float>"
																		},
																		{
																			"key": "band",
																			"value": "<string>"
																		},
																		{
																			"key": "ssid",
																			"value": "<integer>"
																		},
																		{
																			"key": "vlan",
																			"value": "<integer>"
																		},
																		{
																			"key": "apTag",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"mac\": \"00:61:71:c8:51:27\",\n    \"connectionStats\": {\n      \"assoc\": 0,\n      \"auth\": 4,\n      \"dhcp\": 0,\n      \"dns\": 0,\n      \"success\": 10\n    }\n  },\n  {\n    \"mac\": \"1c:4d:70:7f:5e:5e\",\n    \"connectionStats\": {\n      \"assoc\": 0,\n      \"auth\": 1,\n      \"dhcp\": 0,\n      \"dns\": 0,\n      \"success\": 24\n    }\n  },\n  {\n    \"mac\": \"1c:4d:70:81:8d:0a\",\n    \"connectionStats\": {\n      \"assoc\": 1,\n      \"auth\": 0,\n      \"dhcp\": 0,\n      \"dns\": 0,\n      \"success\": 16\n    }\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "connectivityEvents",
											"item": [
												{
													"name": "getNetworkWirelessClientConnectivityEvents",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/clients/:clientId/connectivityEvents",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"clients",
																":clientId",
																"connectivityEvents"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "sortOrder",
																	"value": "{{sortOrder}}",
																	"description": "Sorted order of entries. Order options are 'ascending' and 'descending'. Default is 'ascending'.",
																	"disabled": true
																},
																{
																	"key": "t0",
																	"value": "{{t0}}",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
																	"disabled": true
																},
																{
																	"key": "t1",
																	"value": "{{t1}}",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
																	"disabled": true
																},
																{
																	"key": "timespan",
																	"value": "{{timespan}}",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
																	"disabled": true
																},
																{
																	"key": "types",
																	"value": "{{types}}",
																	"description": "A list of event types to include. If not specified, events of all types will be returned. Valid types are 'assoc', 'disassoc', 'auth', 'deauth', 'dns', 'dhcp', 'roam', 'connection' and/or 'sticky'.",
																	"disabled": true
																},
																{
																	"key": "types",
																	"value": "{{types}}",
																	"description": "A list of event types to include. If not specified, events of all types will be returned. Valid types are 'assoc', 'disassoc', 'auth', 'deauth', 'dns', 'dhcp', 'roam', 'connection' and/or 'sticky'.",
																	"disabled": true
																},
																{
																	"key": "band",
																	"value": "{{band}}",
																	"description": "Filter results by band. Valid bands are '2.4', '5' or '6'.",
																	"disabled": true
																},
																{
																	"key": "ssidNumber",
																	"value": "{{ssidNumber}}",
																	"description": "Filter results by SSID. If not specified, events for all SSIDs will be returned.",
																	"disabled": true
																},
																{
																	"key": "includedSeverities",
																	"value": "{{includedSeverities}}",
																	"description": "A list of severities to include. If not specified, events of all severities will be returned. Valid severities are 'good', 'info', 'warn' and/or 'bad'.",
																	"disabled": true
																},
																{
																	"key": "includedSeverities",
																	"value": "{{includedSeverities}}",
																	"description": "A list of severities to include. If not specified, events of all severities will be returned. Valid severities are 'good', 'info', 'warn' and/or 'bad'.",
																	"disabled": true
																},
																{
																	"key": "deviceSerial",
																	"value": "{{deviceSerial}}",
																	"description": "Filter results by an AP's serial number.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "clientId",
																	"value": "{{clientId}}",
																	"description": "(Required) Client ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the wireless connectivity events for a client within a network in the timespan."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/clients/:clientId/connectivityEvents?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&sortOrder=<string>&t0=<string>&t1=<string>&timespan=<float>&types=<string>&types=<string>&band=<string>&ssidNumber=<integer>&includedSeverities=<string>&includedSeverities=<string>&deviceSerial=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"clients",
																		":clientId",
																		"connectivityEvents"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		},
																		{
																			"key": "sortOrder",
																			"value": "<string>"
																		},
																		{
																			"key": "t0",
																			"value": "<string>"
																		},
																		{
																			"key": "t1",
																			"value": "<string>"
																		},
																		{
																			"key": "timespan",
																			"value": "<float>"
																		},
																		{
																			"key": "types",
																			"value": "<string>"
																		},
																		{
																			"key": "types",
																			"value": "<string>"
																		},
																		{
																			"key": "band",
																			"value": "<string>"
																		},
																		{
																			"key": "ssidNumber",
																			"value": "<integer>"
																		},
																		{
																			"key": "includedSeverities",
																			"value": "<string>"
																		},
																		{
																			"key": "includedSeverities",
																			"value": "<string>"
																		},
																		{
																			"key": "deviceSerial",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "clientId",
																			"value": "<string>",
																			"description": "(Required) Client ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"occurredAt\": \"2018-02-11T00:00:00.090210Z\",\n    \"band\": \"5\",\n    \"ssidNumber\": 1,\n    \"type\": \"auth\",\n    \"subtype\": \"success\",\n    \"severity\": \"bad\",\n    \"durationMs\": 100,\n    \"channel\": 44,\n    \"rssi\": 80,\n    \"deviceSerial\": \"Q234-ABCD-5678\",\n    \"captureId\": \"123456\"\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "latencyHistory",
											"item": [
												{
													"name": "getNetworkWirelessClientLatencyHistory",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/clients/:clientId/latencyHistory",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"clients",
																":clientId",
																"latencyHistory"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "{{t0}}",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 791 days from today.",
																	"disabled": true
																},
																{
																	"key": "t1",
																	"value": "{{t1}}",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 791 days after t0.",
																	"disabled": true
																},
																{
																	"key": "timespan",
																	"value": "{{timespan}}",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 1 day.",
																	"disabled": true
																},
																{
																	"key": "resolution",
																	"value": "{{resolution}}",
																	"description": "The time resolution in seconds for returned data. The valid resolutions are: 86400. The default is 86400.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "clientId",
																	"value": "{{clientId}}",
																	"description": "(Required) Client ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Return the latency history for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP. The latency data is from a sample of 2% of packets and is grouped into 4 traffic categories: background, best effort, video, voice. Within these categories the sampled packet counters are bucketed by latency in milliseconds."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/clients/:clientId/latencyHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"clients",
																		":clientId",
																		"latencyHistory"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>"
																		},
																		{
																			"key": "t1",
																			"value": "<string>"
																		},
																		{
																			"key": "timespan",
																			"value": "<float>"
																		},
																		{
																			"key": "resolution",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "clientId",
																			"value": "<string>",
																			"description": "(Required) Client ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"t0\": 1550534400,\n    \"t1\": 1550620800,\n    \"latencyBinsByCategory\": {\n      \"backgroundTraffic\": {\n        \"0.5\": 41750,\n        \"1.0\": 21552,\n        \"2.0\": 59940,\n        \"4.0\": 146622,\n        \"8.0\": 57354,\n        \"16.0\": 0,\n        \"32.0\": 9954,\n        \"64.0\": 0,\n        \"128.0\": 0,\n        \"256.0\": 1896,\n        \"512.0\": 0,\n        \"1024.0\": 0,\n        \"2048.0\": 0\n      },\n      \"bestEffortTraffic\": {\n        \"0.5\": 1840899,\n        \"1.0\": 1644506,\n        \"2.0\": 629958,\n        \"4.0\": 449564,\n        \"8.0\": 2009658,\n        \"16.0\": 1329568,\n        \"32.0\": 282168,\n        \"64.0\": 97573,\n        \"128.0\": 191977,\n        \"256.0\": 30560,\n        \"512.0\": 26032,\n        \"1024.0\": 4943,\n        \"2048.0\": 12072\n      },\n      \"videoTraffic\": {\n        \"0.5\": 0,\n        \"1.0\": 0,\n        \"2.0\": 0,\n        \"4.0\": 0,\n        \"8.0\": 0,\n        \"16.0\": 0,\n        \"32.0\": 0,\n        \"64.0\": 0,\n        \"128.0\": 0,\n        \"256.0\": 0,\n        \"512.0\": 0,\n        \"1024.0\": 0,\n        \"2048.0\": 0\n      },\n      \"voiceTraffic\": {\n        \"0.5\": 716,\n        \"1.0\": 948,\n        \"2.0\": 474,\n        \"4.0\": 78,\n        \"8.0\": 0,\n        \"16.0\": 0,\n        \"32.0\": 0,\n        \"64.0\": 0,\n        \"128.0\": 0,\n        \"256.0\": 0,\n        \"512.0\": 0,\n        \"1024.0\": 0,\n        \"2048.0\": 0\n      }\n    }\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "latencyStats",
											"item": [
												{
													"name": "getNetworkWirelessClientLatencyStats",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/clients/:clientId/latencyStats",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"clients",
																":clientId",
																"latencyStats"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "{{t0}}",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
																	"disabled": true
																},
																{
																	"key": "t1",
																	"value": "{{t1}}",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
																	"disabled": true
																},
																{
																	"key": "timespan",
																	"value": "{{timespan}}",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.",
																	"disabled": true
																},
																{
																	"key": "band",
																	"value": "{{band}}",
																	"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.",
																	"disabled": true
																},
																{
																	"key": "ssid",
																	"value": "{{ssid}}",
																	"description": "Filter results by SSID",
																	"disabled": true
																},
																{
																	"key": "vlan",
																	"value": "{{vlan}}",
																	"description": "Filter results by VLAN",
																	"disabled": true
																},
																{
																	"key": "apTag",
																	"value": "{{apTag}}",
																	"description": "Filter results by AP Tag",
																	"disabled": true
																},
																{
																	"key": "fields",
																	"value": "{{fields}}",
																	"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "clientId",
																	"value": "{{clientId}}",
																	"description": "(Required) Client ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Aggregated latency info for a given client on this network. Clients are identified by their MAC."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/clients/:clientId/latencyStats?t0=<string>&t1=<string>&timespan=<float>&band=<string>&ssid=<integer>&vlan=<integer>&apTag=<string>&fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"clients",
																		":clientId",
																		"latencyStats"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>"
																		},
																		{
																			"key": "t1",
																			"value": "<string>"
																		},
																		{
																			"key": "timespan",
																			"value": "<float>"
																		},
																		{
																			"key": "band",
																			"value": "<string>"
																		},
																		{
																			"key": "ssid",
																			"value": "<integer>"
																		},
																		{
																			"key": "vlan",
																			"value": "<integer>"
																		},
																		{
																			"key": "apTag",
																			"value": "<string>"
																		},
																		{
																			"key": "fields",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "clientId",
																			"value": "<string>",
																			"description": "(Required) Client ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"mac\": \"00:61:71:c8:51:27\",\n  \"latencyStats\": {\n    \"backgroundTraffic\": {\n      \"rawDistribution\": {\n        \"0\": 1234,\n        \"1\": 2345,\n        \"2\": 3456,\n        \"4\": 4567,\n        \"8\": 5678,\n        \"16\": 6789,\n        \"32\": 7890,\n        \"64\": 8901,\n        \"128\": 9012,\n        \"256\": 83,\n        \"512\": 1234,\n        \"1024\": 2345,\n        \"2048\": 9999\n      },\n      \"avg\": 606.52\n    },\n    \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\n    \"videoTraffic\": \"same shape as backgroundTraffic\",\n    \"voiceTraffic\": \"same shape as backgroundTraffic\"\n  }\n}"
														}
													]
												},
												{
													"name": "getNetworkWirelessClientsLatencyStats",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/clients/latencyStats",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"clients",
																"latencyStats"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "{{t0}}",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
																	"disabled": true
																},
																{
																	"key": "t1",
																	"value": "{{t1}}",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
																	"disabled": true
																},
																{
																	"key": "timespan",
																	"value": "{{timespan}}",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.",
																	"disabled": true
																},
																{
																	"key": "band",
																	"value": "{{band}}",
																	"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.",
																	"disabled": true
																},
																{
																	"key": "ssid",
																	"value": "{{ssid}}",
																	"description": "Filter results by SSID",
																	"disabled": true
																},
																{
																	"key": "vlan",
																	"value": "{{vlan}}",
																	"description": "Filter results by VLAN",
																	"disabled": true
																},
																{
																	"key": "apTag",
																	"value": "{{apTag}}",
																	"description": "Filter results by AP Tag",
																	"disabled": true
																},
																{
																	"key": "fields",
																	"value": "{{fields}}",
																	"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Aggregated latency info for this network, grouped by clients"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/clients/latencyStats?t0=<string>&t1=<string>&timespan=<float>&band=<string>&ssid=<integer>&vlan=<integer>&apTag=<string>&fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"clients",
																		"latencyStats"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>"
																		},
																		{
																			"key": "t1",
																			"value": "<string>"
																		},
																		{
																			"key": "timespan",
																			"value": "<float>"
																		},
																		{
																			"key": "band",
																			"value": "<string>"
																		},
																		{
																			"key": "ssid",
																			"value": "<integer>"
																		},
																		{
																			"key": "vlan",
																			"value": "<integer>"
																		},
																		{
																			"key": "apTag",
																			"value": "<string>"
																		},
																		{
																			"key": "fields",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"mac\": \"00:61:71:c8:51:27\",\n    \"latencyStats\": {\n      \"backgroundTraffic\": {\n        \"rawDistribution\": {\n          \"0\": 1234,\n          \"1\": 2345,\n          \"2\": 3456,\n          \"4\": 4567,\n          \"8\": 5678,\n          \"16\": 6789,\n          \"32\": 7890,\n          \"64\": 8901,\n          \"128\": 9012,\n          \"256\": 83,\n          \"512\": 1234,\n          \"1024\": 2345,\n          \"2048\": 9999\n        },\n        \"avg\": 606.52\n      },\n      \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\n      \"videoTraffic\": \"same shape as backgroundTraffic\",\n      \"voiceTraffic\": \"same shape as backgroundTraffic\"\n    }\n  },\n  {\n    \"mac\": \"1c:4d:70:7f:5e:5e\",\n    \"latencyStats\": {\n      \"backgroundTraffic\": {\n        \"rawDistribution\": {\n          \"0\": 1234,\n          \"1\": 2345,\n          \"2\": 3456,\n          \"4\": 4567,\n          \"8\": 5678,\n          \"16\": 6789,\n          \"32\": 7890,\n          \"64\": 8901,\n          \"128\": 9012,\n          \"256\": 83,\n          \"512\": 1234,\n          \"1024\": 2345,\n          \"2048\": 9999\n        },\n        \"avg\": 606.52\n      },\n      \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\n      \"videoTraffic\": \"same shape as backgroundTraffic\",\n      \"voiceTraffic\": \"same shape as backgroundTraffic\"\n    }\n  },\n  {\n    \"mac\": \"1c:4d:70:81:8d:0a\",\n    \"latencyStats\": {\n      \"backgroundTraffic\": {\n        \"rawDistribution\": {\n          \"0\": 1234,\n          \"1\": 2345,\n          \"2\": 3456,\n          \"4\": 4567,\n          \"8\": 5678,\n          \"16\": 6789,\n          \"32\": 7890,\n          \"64\": 8901,\n          \"128\": 9012,\n          \"256\": 83,\n          \"512\": 1234,\n          \"1024\": 2345,\n          \"2048\": 9999\n        },\n        \"avg\": 606.52\n      },\n      \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\n      \"videoTraffic\": \"same shape as backgroundTraffic\",\n      \"voiceTraffic\": \"same shape as backgroundTraffic\"\n    }\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "overview",
											"item": [
												{
													"name": "byDevice",
													"item": [
														{
															"name": "getOrganizationWirelessClientsOverviewByDevice",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/wireless/clients/overview/byDevice",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"wireless",
																		"clients",
																		"overview",
																		"byDevice"
																	],
																	"query": [
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Optional parameter to filter access points client counts by network ID. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Optional parameter to filter access points client counts by network ID. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "Optional parameter to filter access points client counts by its serial numbers. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "Optional parameter to filter access points client counts by its serial numbers. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "campusGatewayClusterIds",
																			"value": "{{campusGatewayClusterIds}}",
																			"description": "Optional parameter to filter access points client counts by MCG cluster IDs. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "campusGatewayClusterIds",
																			"value": "{{campusGatewayClusterIds}}",
																			"description": "Optional parameter to filter access points client counts by MCG cluster IDs. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "perPage",
																			"value": "{{perPage}}",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																			"disabled": true
																		},
																		{
																			"key": "startingAfter",
																			"value": "{{startingAfter}}",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "endingBefore",
																			"value": "{{endingBefore}}",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "List access point client count at the moment in an organization"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/wireless/clients/overview/byDevice?networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&campusGatewayClusterIds=<string>&campusGatewayClusterIds=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"wireless",
																				"clients",
																				"overview",
																				"byDevice"
																			],
																			"query": [
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "campusGatewayClusterIds",
																					"value": "<string>"
																				},
																				{
																					"key": "campusGatewayClusterIds",
																					"value": "<string>"
																				},
																				{
																					"key": "perPage",
																					"value": "<integer>"
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>"
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Link",
																			"value": "Lorem nisi fugiat",
																			"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"items\": [\n    {\n      \"network\": {\n        \"id\": \"N_24329156\"\n      },\n      \"serial\": \"Q234-ABCD-5678\",\n      \"counts\": {\n        \"byStatus\": {\n          \"online\": 1\n        }\n      }\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 10,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "connectionStats",
									"item": [
										{
											"name": "getDeviceWirelessConnectionStats",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/wireless/connectionStats",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"wireless",
														"connectionStats"
													],
													"query": [
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
															"disabled": true
														},
														{
															"key": "t1",
															"value": "{{t1}}",
															"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.",
															"disabled": true
														},
														{
															"key": "band",
															"value": "{{band}}",
															"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.",
															"disabled": true
														},
														{
															"key": "ssid",
															"value": "{{ssid}}",
															"description": "Filter results by SSID",
															"disabled": true
														},
														{
															"key": "vlan",
															"value": "{{vlan}}",
															"description": "Filter results by VLAN",
															"disabled": true
														},
														{
															"key": "apTag",
															"value": "{{apTag}}",
															"description": "Filter results by AP Tag",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Aggregated connectivity info for a given AP on this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/wireless/connectionStats?t0=<string>&t1=<string>&timespan=<float>&band=<string>&ssid=<integer>&vlan=<integer>&apTag=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"wireless",
																"connectionStats"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "t1",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																},
																{
																	"key": "band",
																	"value": "<string>"
																},
																{
																	"key": "ssid",
																	"value": "<integer>"
																},
																{
																	"key": "vlan",
																	"value": "<integer>"
																},
																{
																	"key": "apTag",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"serial\": \"Q234-ABCD-5678\",\n  \"connectionStats\": {\n    \"assoc\": 0,\n    \"auth\": 1,\n    \"dhcp\": 0,\n    \"dns\": 0,\n    \"success\": 43\n  }\n}"
												}
											]
										},
										{
											"name": "getNetworkWirelessConnectionStats",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/connectionStats",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"connectionStats"
													],
													"query": [
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
															"disabled": true
														},
														{
															"key": "t1",
															"value": "{{t1}}",
															"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.",
															"disabled": true
														},
														{
															"key": "band",
															"value": "{{band}}",
															"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.",
															"disabled": true
														},
														{
															"key": "ssid",
															"value": "{{ssid}}",
															"description": "Filter results by SSID",
															"disabled": true
														},
														{
															"key": "vlan",
															"value": "{{vlan}}",
															"description": "Filter results by VLAN",
															"disabled": true
														},
														{
															"key": "apTag",
															"value": "{{apTag}}",
															"description": "Filter results by AP Tag",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Aggregated connectivity info for this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/connectionStats?t0=<string>&t1=<string>&timespan=<float>&band=<string>&ssid=<integer>&vlan=<integer>&apTag=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"connectionStats"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "t1",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																},
																{
																	"key": "band",
																	"value": "<string>"
																},
																{
																	"key": "ssid",
																	"value": "<integer>"
																},
																{
																	"key": "vlan",
																	"value": "<integer>"
																},
																{
																	"key": "apTag",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"assoc\": 1,\n  \"auth\": 5,\n  \"dhcp\": 0,\n  \"dns\": 0,\n  \"success\": 51\n}"
												}
											]
										}
									]
								},
								{
									"name": "dataRateHistory",
									"item": [
										{
											"name": "getNetworkWirelessDataRateHistory",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/dataRateHistory",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"dataRateHistory"
													],
													"query": [
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
															"disabled": true
														},
														{
															"key": "t1",
															"value": "{{t1}}",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
															"disabled": true
														},
														{
															"key": "resolution",
															"value": "{{resolution}}",
															"description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.",
															"disabled": true
														},
														{
															"key": "autoResolution",
															"value": "{{autoResolution}}",
															"description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.",
															"disabled": true
														},
														{
															"key": "clientId",
															"value": "{{clientId}}",
															"description": "Filter results by network client.",
															"disabled": true
														},
														{
															"key": "deviceSerial",
															"value": "{{deviceSerial}}",
															"description": "Filter results by device.",
															"disabled": true
														},
														{
															"key": "apTag",
															"value": "{{apTag}}",
															"description": "Filter results by AP tag.",
															"disabled": true
														},
														{
															"key": "band",
															"value": "{{band}}",
															"description": "Filter results by band (either '2.4', '5' or '6').",
															"disabled": true
														},
														{
															"key": "ssid",
															"value": "{{ssid}}",
															"description": "Filter results by SSID number.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return PHY data rates over time for a network, device, or network client"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/dataRateHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&autoResolution=<boolean>&clientId=<string>&deviceSerial=<string>&apTag=<string>&band=<string>&ssid=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"dataRateHistory"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "t1",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																},
																{
																	"key": "resolution",
																	"value": "<integer>"
																},
																{
																	"key": "autoResolution",
																	"value": "<boolean>"
																},
																{
																	"key": "clientId",
																	"value": "<string>"
																},
																{
																	"key": "deviceSerial",
																	"value": "<string>"
																},
																{
																	"key": "apTag",
																	"value": "<string>"
																},
																{
																	"key": "band",
																	"value": "<string>"
																},
																{
																	"key": "ssid",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"startTs\": \"2020-01-01T00:00:00Z\",\n    \"endTs\": \"2020-01-01T01:00:00Z\",\n    \"averageKbps\": 151806,\n    \"downloadKbps\": 144839,\n    \"uploadKbps\": 158837\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "devices",
									"item": [
										{
											"name": "channelUtilization",
											"item": [
												{
													"name": "byDevice",
													"item": [
														{
															"name": "getOrganizationWirelessDevicesChannelUtilizationByDevice",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/wireless/devices/channelUtilization/byDevice",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"wireless",
																		"devices",
																		"channelUtilization",
																		"byDevice"
																	],
																	"query": [
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Filter results by network.",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Filter results by network.",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "Filter results by device.",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "Filter results by device.",
																			"disabled": true
																		},
																		{
																			"key": "perPage",
																			"value": "{{perPage}}",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																			"disabled": true
																		},
																		{
																			"key": "startingAfter",
																			"value": "{{startingAfter}}",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "endingBefore",
																			"value": "{{endingBefore}}",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "t0",
																			"value": "{{t0}}",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 90 days from today.",
																			"disabled": true
																		},
																		{
																			"key": "t1",
																			"value": "{{t1}}",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 90 days after t0.",
																			"disabled": true
																		},
																		{
																			"key": "timespan",
																			"value": "{{timespan}}",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 90 days. The default is 7 days.",
																			"disabled": true
																		},
																		{
																			"key": "interval",
																			"value": "{{interval}}",
																			"description": "The time interval in seconds for returned data. The valid intervals are: 300, 600, 3600, 7200, 14400, 21600. The default is 3600.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Get average channel utilization for all bands in a network, split by AP"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/wireless/devices/channelUtilization/byDevice?networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>&interval=<integer>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"wireless",
																				"devices",
																				"channelUtilization",
																				"byDevice"
																			],
																			"query": [
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "perPage",
																					"value": "<integer>"
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>"
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>"
																				},
																				{
																					"key": "t0",
																					"value": "<string>"
																				},
																				{
																					"key": "t1",
																					"value": "<string>"
																				},
																				{
																					"key": "timespan",
																					"value": "<float>"
																				},
																				{
																					"key": "interval",
																					"value": "<integer>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Link",
																			"value": "Lorem nisi fugiat",
																			"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"serial\": \"Q234-ABCD-5678\",\n    \"mac\": \"00:11:22:33:44:55\",\n    \"network\": {\n      \"id\": \"N_24329156\"\n    },\n    \"byBand\": [\n      {\n        \"band\": \"5\",\n        \"wifi\": {\n          \"percentage\": 33.12\n        },\n        \"nonWifi\": {\n          \"percentage\": 1.84\n        },\n        \"total\": {\n          \"percentage\": 34.96\n        }\n      }\n    ]\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "byNetwork",
													"item": [
														{
															"name": "getOrganizationWirelessDevicesChannelUtilizationByNetwork",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/wireless/devices/channelUtilization/byNetwork",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"wireless",
																		"devices",
																		"channelUtilization",
																		"byNetwork"
																	],
																	"query": [
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Filter results by network.",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Filter results by network.",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "Filter results by device.",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "Filter results by device.",
																			"disabled": true
																		},
																		{
																			"key": "perPage",
																			"value": "{{perPage}}",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																			"disabled": true
																		},
																		{
																			"key": "startingAfter",
																			"value": "{{startingAfter}}",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "endingBefore",
																			"value": "{{endingBefore}}",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "t0",
																			"value": "{{t0}}",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 90 days from today.",
																			"disabled": true
																		},
																		{
																			"key": "t1",
																			"value": "{{t1}}",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 90 days after t0.",
																			"disabled": true
																		},
																		{
																			"key": "timespan",
																			"value": "{{timespan}}",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 90 days. The default is 7 days.",
																			"disabled": true
																		},
																		{
																			"key": "interval",
																			"value": "{{interval}}",
																			"description": "The time interval in seconds for returned data. The valid intervals are: 300, 600, 3600, 7200, 14400, 21600. The default is 3600.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Get average channel utilization across all bands for all networks in the organization"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/wireless/devices/channelUtilization/byNetwork?networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>&interval=<integer>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"wireless",
																				"devices",
																				"channelUtilization",
																				"byNetwork"
																			],
																			"query": [
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "perPage",
																					"value": "<integer>"
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>"
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>"
																				},
																				{
																					"key": "t0",
																					"value": "<string>"
																				},
																				{
																					"key": "t1",
																					"value": "<string>"
																				},
																				{
																					"key": "timespan",
																					"value": "<float>"
																				},
																				{
																					"key": "interval",
																					"value": "<integer>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Link",
																			"value": "Lorem nisi fugiat",
																			"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"network\": {\n      \"id\": \"N_24329156\"\n    },\n    \"byBand\": [\n      {\n        \"band\": \"5\",\n        \"wifi\": {\n          \"percentage\": 33.12\n        },\n        \"nonWifi\": {\n          \"percentage\": 1.84\n        },\n        \"total\": {\n          \"percentage\": 34.96\n        }\n      }\n    ]\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "history",
													"item": [
														{
															"name": "byDevice",
															"item": [
																{
																	"name": "byInterval",
																	"item": [
																		{
																			"name": "getOrganizationWirelessDevicesChannelUtilizationHistoryByDeviceByInterval",
																			"protocolProfileBehavior": {
																				"followAuthorizationHeader": false
																			},
																			"request": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/wireless/devices/channelUtilization/history/byDevice/byInterval",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"wireless",
																						"devices",
																						"channelUtilization",
																						"history",
																						"byDevice",
																						"byInterval"
																					],
																					"query": [
																						{
																							"key": "networkIds",
																							"value": "{{networkIds}}",
																							"description": "Filter results by network.",
																							"disabled": true
																						},
																						{
																							"key": "networkIds",
																							"value": "{{networkIds}}",
																							"description": "Filter results by network.",
																							"disabled": true
																						},
																						{
																							"key": "serials",
																							"value": "{{serials}}",
																							"description": "Filter results by device.",
																							"disabled": true
																						},
																						{
																							"key": "serials",
																							"value": "{{serials}}",
																							"description": "Filter results by device.",
																							"disabled": true
																						},
																						{
																							"key": "perPage",
																							"value": "{{perPage}}",
																							"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																							"disabled": true
																						},
																						{
																							"key": "startingAfter",
																							"value": "{{startingAfter}}",
																							"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																							"disabled": true
																						},
																						{
																							"key": "endingBefore",
																							"value": "{{endingBefore}}",
																							"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																							"disabled": true
																						},
																						{
																							"key": "t0",
																							"value": "{{t0}}",
																							"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
																							"disabled": true
																						},
																						{
																							"key": "t1",
																							"value": "{{t1}}",
																							"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
																							"disabled": true
																						},
																						{
																							"key": "timespan",
																							"value": "{{timespan}}",
																							"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
																							"disabled": true
																						},
																						{
																							"key": "interval",
																							"value": "{{interval}}",
																							"description": "The time interval in seconds for returned data. The valid intervals are: 300, 600, 3600, 7200, 14400, 21600. The default is 3600.",
																							"disabled": true
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "{{organizationId}}",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				},
																				"description": "Get a time-series of average channel utilization for all bands, segmented by device."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>",
																								"description": "Added as a part of security scheme: apikey"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/organizations/:organizationId/wireless/devices/channelUtilization/history/byDevice/byInterval?networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>&interval=<integer>",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"organizations",
																								":organizationId",
																								"wireless",
																								"devices",
																								"channelUtilization",
																								"history",
																								"byDevice",
																								"byInterval"
																							],
																							"query": [
																								{
																									"key": "networkIds",
																									"value": "<string>"
																								},
																								{
																									"key": "networkIds",
																									"value": "<string>"
																								},
																								{
																									"key": "serials",
																									"value": "<string>"
																								},
																								{
																									"key": "serials",
																									"value": "<string>"
																								},
																								{
																									"key": "perPage",
																									"value": "<integer>"
																								},
																								{
																									"key": "startingAfter",
																									"value": "<string>"
																								},
																								{
																									"key": "endingBefore",
																									"value": "<string>"
																								},
																								{
																									"key": "t0",
																									"value": "<string>"
																								},
																								{
																									"key": "t1",
																									"value": "<string>"
																								},
																								{
																									"key": "timespan",
																									"value": "<float>"
																								},
																								{
																									"key": "interval",
																									"value": "<integer>"
																								}
																							],
																							"variable": [
																								{
																									"key": "organizationId",
																									"value": "<string>",
																									"description": "(Required) Organization ID"
																								},
																								{
																									"key": "basePath",
																									"value": "{{basePath}}"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Link",
																							"value": "Lorem nisi fugiat",
																							"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																						},
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "[\n  {\n    \"startTs\": \"2018-02-11T00:00:00Z\",\n    \"endTs\": \"2018-05-12T00:00:00Z\",\n    \"serial\": \"Q234-ABCD-5678\",\n    \"mac\": \"00:11:22:33:44:55\",\n    \"network\": {\n      \"id\": \"N_24329156\"\n    },\n    \"byBand\": [\n      {\n        \"band\": \"5\",\n        \"wifi\": {\n          \"percentage\": 33.12\n        },\n        \"nonWifi\": {\n          \"percentage\": 1.84\n        },\n        \"total\": {\n          \"percentage\": 34.96\n        }\n      }\n    ]\n  }\n]"
																				}
																			]
																		}
																	]
																}
															]
														},
														{
															"name": "byNetwork",
															"item": [
																{
																	"name": "byInterval",
																	"item": [
																		{
																			"name": "getOrganizationWirelessDevicesChannelUtilizationHistoryByNetworkByInterval",
																			"protocolProfileBehavior": {
																				"followAuthorizationHeader": false
																			},
																			"request": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/wireless/devices/channelUtilization/history/byNetwork/byInterval",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"wireless",
																						"devices",
																						"channelUtilization",
																						"history",
																						"byNetwork",
																						"byInterval"
																					],
																					"query": [
																						{
																							"key": "networkIds",
																							"value": "{{networkIds}}",
																							"description": "Filter results by network.",
																							"disabled": true
																						},
																						{
																							"key": "networkIds",
																							"value": "{{networkIds}}",
																							"description": "Filter results by network.",
																							"disabled": true
																						},
																						{
																							"key": "serials",
																							"value": "{{serials}}",
																							"description": "Filter results by device.",
																							"disabled": true
																						},
																						{
																							"key": "serials",
																							"value": "{{serials}}",
																							"description": "Filter results by device.",
																							"disabled": true
																						},
																						{
																							"key": "perPage",
																							"value": "{{perPage}}",
																							"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																							"disabled": true
																						},
																						{
																							"key": "startingAfter",
																							"value": "{{startingAfter}}",
																							"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																							"disabled": true
																						},
																						{
																							"key": "endingBefore",
																							"value": "{{endingBefore}}",
																							"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																							"disabled": true
																						},
																						{
																							"key": "t0",
																							"value": "{{t0}}",
																							"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
																							"disabled": true
																						},
																						{
																							"key": "t1",
																							"value": "{{t1}}",
																							"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
																							"disabled": true
																						},
																						{
																							"key": "timespan",
																							"value": "{{timespan}}",
																							"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
																							"disabled": true
																						},
																						{
																							"key": "interval",
																							"value": "{{interval}}",
																							"description": "The time interval in seconds for returned data. The valid intervals are: 300, 600, 3600, 7200, 14400, 21600. The default is 3600.",
																							"disabled": true
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "{{organizationId}}",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				},
																				"description": "Get a time-series of average channel utilization for all bands"
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>",
																								"description": "Added as a part of security scheme: apikey"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/organizations/:organizationId/wireless/devices/channelUtilization/history/byNetwork/byInterval?networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>&interval=<integer>",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"organizations",
																								":organizationId",
																								"wireless",
																								"devices",
																								"channelUtilization",
																								"history",
																								"byNetwork",
																								"byInterval"
																							],
																							"query": [
																								{
																									"key": "networkIds",
																									"value": "<string>"
																								},
																								{
																									"key": "networkIds",
																									"value": "<string>"
																								},
																								{
																									"key": "serials",
																									"value": "<string>"
																								},
																								{
																									"key": "serials",
																									"value": "<string>"
																								},
																								{
																									"key": "perPage",
																									"value": "<integer>"
																								},
																								{
																									"key": "startingAfter",
																									"value": "<string>"
																								},
																								{
																									"key": "endingBefore",
																									"value": "<string>"
																								},
																								{
																									"key": "t0",
																									"value": "<string>"
																								},
																								{
																									"key": "t1",
																									"value": "<string>"
																								},
																								{
																									"key": "timespan",
																									"value": "<float>"
																								},
																								{
																									"key": "interval",
																									"value": "<integer>"
																								}
																							],
																							"variable": [
																								{
																									"key": "organizationId",
																									"value": "<string>",
																									"description": "(Required) Organization ID"
																								},
																								{
																									"key": "basePath",
																									"value": "{{basePath}}"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Link",
																							"value": "Lorem nisi fugiat",
																							"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																						},
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "[\n  {\n    \"startTs\": \"2018-02-11T00:00:00Z\",\n    \"endTs\": \"2018-05-12T00:00:00Z\",\n    \"network\": {\n      \"id\": \"N_24329156\"\n    },\n    \"byBand\": [\n      {\n        \"band\": \"5\",\n        \"wifi\": {\n          \"percentage\": 33.12\n        },\n        \"nonWifi\": {\n          \"percentage\": 1.84\n        },\n        \"total\": {\n          \"percentage\": 34.96\n        }\n      }\n    ]\n  }\n]"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "connectionStats",
											"item": [
												{
													"name": "getNetworkWirelessDevicesConnectionStats",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/devices/connectionStats",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"devices",
																"connectionStats"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "{{t0}}",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
																	"disabled": true
																},
																{
																	"key": "t1",
																	"value": "{{t1}}",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
																	"disabled": true
																},
																{
																	"key": "timespan",
																	"value": "{{timespan}}",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.",
																	"disabled": true
																},
																{
																	"key": "band",
																	"value": "{{band}}",
																	"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.",
																	"disabled": true
																},
																{
																	"key": "ssid",
																	"value": "{{ssid}}",
																	"description": "Filter results by SSID",
																	"disabled": true
																},
																{
																	"key": "vlan",
																	"value": "{{vlan}}",
																	"description": "Filter results by VLAN",
																	"disabled": true
																},
																{
																	"key": "apTag",
																	"value": "{{apTag}}",
																	"description": "Filter results by AP Tag",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Aggregated connectivity info for this network, grouped by node"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/devices/connectionStats?t0=<string>&t1=<string>&timespan=<float>&band=<string>&ssid=<integer>&vlan=<integer>&apTag=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"devices",
																		"connectionStats"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>"
																		},
																		{
																			"key": "t1",
																			"value": "<string>"
																		},
																		{
																			"key": "timespan",
																			"value": "<float>"
																		},
																		{
																			"key": "band",
																			"value": "<string>"
																		},
																		{
																			"key": "ssid",
																			"value": "<integer>"
																		},
																		{
																			"key": "vlan",
																			"value": "<integer>"
																		},
																		{
																			"key": "apTag",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"serial\": \"Q234-ABCD-5678\",\n    \"connectionStats\": {\n      \"assoc\": 0,\n      \"auth\": 1,\n      \"dhcp\": 0,\n      \"dns\": 0,\n      \"success\": 43\n    }\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "ethernet",
											"item": [
												{
													"name": "statuses",
													"item": [
														{
															"name": "getOrganizationWirelessDevicesEthernetStatuses",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/wireless/devices/ethernet/statuses",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"wireless",
																		"devices",
																		"ethernet",
																		"statuses"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "{{perPage}}",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.",
																			"disabled": true
																		},
																		{
																			"key": "startingAfter",
																			"value": "{{startingAfter}}",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "endingBefore",
																			"value": "{{endingBefore}}",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "List the most recent Ethernet link speed, duplex, aggregation and power mode and status information for wireless devices."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/wireless/devices/ethernet/statuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"wireless",
																				"devices",
																				"ethernet",
																				"statuses"
																			],
																			"query": [
																				{
																					"key": "perPage",
																					"value": "<integer>"
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>"
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Link",
																			"value": "Lorem nisi fugiat",
																			"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"serial\": \"Q234-ABCD-5678\",\n    \"name\": \"My appliance\",\n    \"network\": {\n      \"id\": \"N_24329156\"\n    },\n    \"power\": {\n      \"mode\": \"full\",\n      \"ac\": {\n        \"isConnected\": false\n      },\n      \"poe\": {\n        \"isConnected\": true\n      }\n    },\n    \"ports\": [\n      {\n        \"name\": \"Ethernet 0\",\n        \"poe\": {\n          \"standard\": \"802.3at\"\n        },\n        \"linkNegotiation\": {\n          \"duplex\": \"full\",\n          \"speed\": 5000\n        }\n      }\n    ],\n    \"aggregation\": {\n      \"enabled\": true,\n      \"speed\": 10000\n    }\n  }\n]"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "latencyStats",
											"item": [
												{
													"name": "getNetworkWirelessDevicesLatencyStats",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/devices/latencyStats",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"devices",
																"latencyStats"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "{{t0}}",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
																	"disabled": true
																},
																{
																	"key": "t1",
																	"value": "{{t1}}",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
																	"disabled": true
																},
																{
																	"key": "timespan",
																	"value": "{{timespan}}",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.",
																	"disabled": true
																},
																{
																	"key": "band",
																	"value": "{{band}}",
																	"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.",
																	"disabled": true
																},
																{
																	"key": "ssid",
																	"value": "{{ssid}}",
																	"description": "Filter results by SSID",
																	"disabled": true
																},
																{
																	"key": "vlan",
																	"value": "{{vlan}}",
																	"description": "Filter results by VLAN",
																	"disabled": true
																},
																{
																	"key": "apTag",
																	"value": "{{apTag}}",
																	"description": "Filter results by AP Tag",
																	"disabled": true
																},
																{
																	"key": "fields",
																	"value": "{{fields}}",
																	"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "{{networkId}}",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "Aggregated latency info for this network, grouped by node"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/networks/:networkId/wireless/devices/latencyStats?t0=<string>&t1=<string>&timespan=<float>&band=<string>&ssid=<integer>&vlan=<integer>&apTag=<string>&fields=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"networks",
																		":networkId",
																		"wireless",
																		"devices",
																		"latencyStats"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>"
																		},
																		{
																			"key": "t1",
																			"value": "<string>"
																		},
																		{
																			"key": "timespan",
																			"value": "<float>"
																		},
																		{
																			"key": "band",
																			"value": "<string>"
																		},
																		{
																			"key": "ssid",
																			"value": "<integer>"
																		},
																		{
																			"key": "vlan",
																			"value": "<integer>"
																		},
																		{
																			"key": "apTag",
																			"value": "<string>"
																		},
																		{
																			"key": "fields",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "networkId",
																			"value": "<string>",
																			"description": "(Required) Network ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"serial\": \"Q2JC-2MJM-FHRD\",\n    \"latencyStats\": {\n      \"backgroundTraffic\": {\n        \"rawDistribution\": {\n          \"0\": 1234,\n          \"1\": 2345,\n          \"2\": 3456,\n          \"4\": 4567,\n          \"8\": 5678,\n          \"16\": 6789,\n          \"32\": 7890,\n          \"64\": 8901,\n          \"128\": 9012,\n          \"256\": 83,\n          \"512\": 1234,\n          \"1024\": 2345,\n          \"2048\": 9999\n        },\n        \"avg\": 606.52\n      },\n      \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\n      \"videoTraffic\": \"same shape as backgroundTraffic\",\n      \"voiceTraffic\": \"same shape as backgroundTraffic\"\n    }\n  },\n  {\n    \"serial\": \"Q2FJ-3SHB-Y2K2\",\n    \"latencyStats\": {\n      \"backgroundTraffic\": {\n        \"rawDistribution\": {\n          \"0\": 1234,\n          \"1\": 2345,\n          \"2\": 3456,\n          \"4\": 4567,\n          \"8\": 5678,\n          \"16\": 6789,\n          \"32\": 7890,\n          \"64\": 8901,\n          \"128\": 9012,\n          \"256\": 83,\n          \"512\": 1234,\n          \"1024\": 2345,\n          \"2048\": 9999\n        },\n        \"avg\": 606.52\n      },\n      \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\n      \"videoTraffic\": \"same shape as backgroundTraffic\",\n      \"voiceTraffic\": \"same shape as backgroundTraffic\"\n    }\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "packetLoss",
											"item": [
												{
													"name": "byClient",
													"item": [
														{
															"name": "getOrganizationWirelessDevicesPacketLossByClient",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/wireless/devices/packetLoss/byClient",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"wireless",
																		"devices",
																		"packetLoss",
																		"byClient"
																	],
																	"query": [
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Filter results by network.",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Filter results by network.",
																			"disabled": true
																		},
																		{
																			"key": "ssids",
																			"value": "{{ssids}}",
																			"description": "Filter results by SSID number.",
																			"disabled": true
																		},
																		{
																			"key": "ssids",
																			"value": "{{ssids}}",
																			"description": "Filter results by SSID number.",
																			"disabled": true
																		},
																		{
																			"key": "bands",
																			"value": "{{bands}}",
																			"description": "Filter results by band. Valid bands are: 2.4, 5, and 6.",
																			"disabled": true
																		},
																		{
																			"key": "bands",
																			"value": "{{bands}}",
																			"description": "Filter results by band. Valid bands are: 2.4, 5, and 6.",
																			"disabled": true
																		},
																		{
																			"key": "macs",
																			"value": "{{macs}}",
																			"description": "Filter results by client mac address(es).",
																			"disabled": true
																		},
																		{
																			"key": "macs",
																			"value": "{{macs}}",
																			"description": "Filter results by client mac address(es).",
																			"disabled": true
																		},
																		{
																			"key": "perPage",
																			"value": "{{perPage}}",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																			"disabled": true
																		},
																		{
																			"key": "startingAfter",
																			"value": "{{startingAfter}}",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "endingBefore",
																			"value": "{{endingBefore}}",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "t0",
																			"value": "{{t0}}",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 90 days from today.",
																			"disabled": true
																		},
																		{
																			"key": "t1",
																			"value": "{{t1}}",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 90 days after t0.",
																			"disabled": true
																		},
																		{
																			"key": "timespan",
																			"value": "{{timespan}}",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 5 minutes and be less than or equal to 90 days. The default is 7 days.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Get average packet loss for the given timespan for all clients in the organization."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/wireless/devices/packetLoss/byClient?networkIds=<string>&networkIds=<string>&ssids=<integer>&ssids=<integer>&bands=<string>&bands=<string>&macs=<string>&macs=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"wireless",
																				"devices",
																				"packetLoss",
																				"byClient"
																			],
																			"query": [
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "ssids",
																					"value": "<integer>"
																				},
																				{
																					"key": "ssids",
																					"value": "<integer>"
																				},
																				{
																					"key": "bands",
																					"value": "<string>"
																				},
																				{
																					"key": "bands",
																					"value": "<string>"
																				},
																				{
																					"key": "macs",
																					"value": "<string>"
																				},
																				{
																					"key": "macs",
																					"value": "<string>"
																				},
																				{
																					"key": "perPage",
																					"value": "<integer>"
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>"
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>"
																				},
																				{
																					"key": "t0",
																					"value": "<string>"
																				},
																				{
																					"key": "t1",
																					"value": "<string>"
																				},
																				{
																					"key": "timespan",
																					"value": "<float>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Link",
																			"value": "Lorem nisi fugiat",
																			"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"downstream\": {\n      \"total\": 1000,\n      \"lost\": 10,\n      \"lossPercentage\": 1\n    },\n    \"upstream\": {\n      \"total\": 1200,\n      \"lost\": 15,\n      \"lossPercentage\": 1.3\n    },\n    \"client\": {\n      \"id\": \"k74272e\",\n      \"mac\": \"22:33:44:55:66:77\"\n    },\n    \"network\": {\n      \"id\": \"N_24329156\",\n      \"name\": \"Main Office\"\n    }\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "byDevice",
													"item": [
														{
															"name": "getOrganizationWirelessDevicesPacketLossByDevice",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/wireless/devices/packetLoss/byDevice",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"wireless",
																		"devices",
																		"packetLoss",
																		"byDevice"
																	],
																	"query": [
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Filter results by network.",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Filter results by network.",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "Filter results by device.",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "Filter results by device.",
																			"disabled": true
																		},
																		{
																			"key": "ssids",
																			"value": "{{ssids}}",
																			"description": "Filter results by SSID number.",
																			"disabled": true
																		},
																		{
																			"key": "ssids",
																			"value": "{{ssids}}",
																			"description": "Filter results by SSID number.",
																			"disabled": true
																		},
																		{
																			"key": "bands",
																			"value": "{{bands}}",
																			"description": "Filter results by band. Valid bands are: 2.4, 5, and 6.",
																			"disabled": true
																		},
																		{
																			"key": "bands",
																			"value": "{{bands}}",
																			"description": "Filter results by band. Valid bands are: 2.4, 5, and 6.",
																			"disabled": true
																		},
																		{
																			"key": "perPage",
																			"value": "{{perPage}}",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																			"disabled": true
																		},
																		{
																			"key": "startingAfter",
																			"value": "{{startingAfter}}",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "endingBefore",
																			"value": "{{endingBefore}}",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "t0",
																			"value": "{{t0}}",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 90 days from today.",
																			"disabled": true
																		},
																		{
																			"key": "t1",
																			"value": "{{t1}}",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 90 days after t0.",
																			"disabled": true
																		},
																		{
																			"key": "timespan",
																			"value": "{{timespan}}",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 5 minutes and be less than or equal to 90 days. The default is 7 days.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Get average packet loss for the given timespan for all devices in the organization. Does not include device's own traffic."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/wireless/devices/packetLoss/byDevice?networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&ssids=<integer>&ssids=<integer>&bands=<string>&bands=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"wireless",
																				"devices",
																				"packetLoss",
																				"byDevice"
																			],
																			"query": [
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "ssids",
																					"value": "<integer>"
																				},
																				{
																					"key": "ssids",
																					"value": "<integer>"
																				},
																				{
																					"key": "bands",
																					"value": "<string>"
																				},
																				{
																					"key": "bands",
																					"value": "<string>"
																				},
																				{
																					"key": "perPage",
																					"value": "<integer>"
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>"
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>"
																				},
																				{
																					"key": "t0",
																					"value": "<string>"
																				},
																				{
																					"key": "t1",
																					"value": "<string>"
																				},
																				{
																					"key": "timespan",
																					"value": "<float>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Link",
																			"value": "Lorem nisi fugiat",
																			"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"downstream\": {\n      \"total\": 1000,\n      \"lost\": 10,\n      \"lossPercentage\": 1\n    },\n    \"upstream\": {\n      \"total\": 1200,\n      \"lost\": 15,\n      \"lossPercentage\": 1.3\n    },\n    \"network\": {\n      \"id\": \"N_24329156\",\n      \"name\": \"Main Office\"\n    },\n    \"device\": {\n      \"name\": \"My AP\",\n      \"serial\": \"Q234-ABCD-5678\",\n      \"mac\": \"00:11:22:33:44:55\"\n    }\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "byNetwork",
													"item": [
														{
															"name": "getOrganizationWirelessDevicesPacketLossByNetwork",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/wireless/devices/packetLoss/byNetwork",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"wireless",
																		"devices",
																		"packetLoss",
																		"byNetwork"
																	],
																	"query": [
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Filter results by network.",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Filter results by network.",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "Filter results by device.",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "Filter results by device.",
																			"disabled": true
																		},
																		{
																			"key": "ssids",
																			"value": "{{ssids}}",
																			"description": "Filter results by SSID number.",
																			"disabled": true
																		},
																		{
																			"key": "ssids",
																			"value": "{{ssids}}",
																			"description": "Filter results by SSID number.",
																			"disabled": true
																		},
																		{
																			"key": "bands",
																			"value": "{{bands}}",
																			"description": "Filter results by band. Valid bands are: 2.4, 5, and 6.",
																			"disabled": true
																		},
																		{
																			"key": "bands",
																			"value": "{{bands}}",
																			"description": "Filter results by band. Valid bands are: 2.4, 5, and 6.",
																			"disabled": true
																		},
																		{
																			"key": "perPage",
																			"value": "{{perPage}}",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																			"disabled": true
																		},
																		{
																			"key": "startingAfter",
																			"value": "{{startingAfter}}",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "endingBefore",
																			"value": "{{endingBefore}}",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "t0",
																			"value": "{{t0}}",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 90 days from today.",
																			"disabled": true
																		},
																		{
																			"key": "t1",
																			"value": "{{t1}}",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 90 days after t0.",
																			"disabled": true
																		},
																		{
																			"key": "timespan",
																			"value": "{{timespan}}",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 5 minutes and be less than or equal to 90 days. The default is 7 days.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "Get average packet loss for the given timespan for all networks in the organization."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/wireless/devices/packetLoss/byNetwork?networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&ssids=<integer>&ssids=<integer>&bands=<string>&bands=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"wireless",
																				"devices",
																				"packetLoss",
																				"byNetwork"
																			],
																			"query": [
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "ssids",
																					"value": "<integer>"
																				},
																				{
																					"key": "ssids",
																					"value": "<integer>"
																				},
																				{
																					"key": "bands",
																					"value": "<string>"
																				},
																				{
																					"key": "bands",
																					"value": "<string>"
																				},
																				{
																					"key": "perPage",
																					"value": "<integer>"
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>"
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>"
																				},
																				{
																					"key": "t0",
																					"value": "<string>"
																				},
																				{
																					"key": "t1",
																					"value": "<string>"
																				},
																				{
																					"key": "timespan",
																					"value": "<float>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Link",
																			"value": "Lorem nisi fugiat",
																			"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"downstream\": {\n      \"total\": 1000,\n      \"lost\": 10,\n      \"lossPercentage\": 1\n    },\n    \"upstream\": {\n      \"total\": 1200,\n      \"lost\": 15,\n      \"lossPercentage\": 1.3\n    },\n    \"network\": {\n      \"id\": \"N_24329156\",\n      \"name\": \"Main Office\"\n    }\n  }\n]"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "power",
											"item": [
												{
													"name": "mode",
													"item": [
														{
															"name": "history",
															"item": [
																{
																	"name": "getOrganizationWirelessDevicesPowerModeHistory",
																	"protocolProfileBehavior": {
																		"followAuthorizationHeader": false
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/wireless/devices/power/mode/history",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"wireless",
																				"devices",
																				"power",
																				"mode",
																				"history"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "{{t0}}",
																					"description": "The beginning of the timespan for the data. The maximum lookback period is 1 day from today.",
																					"disabled": true
																				},
																				{
																					"key": "t1",
																					"value": "{{t1}}",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 1 day after t0.",
																					"disabled": true
																				},
																				{
																					"key": "timespan",
																					"value": "{{timespan}}",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 1 day. The default is 1 day.",
																					"disabled": true
																				},
																				{
																					"key": "perPage",
																					"value": "{{perPage}}",
																					"description": "The number of entries per page returned. Acceptable range is 3 - 20. Default is 10.",
																					"disabled": true
																				},
																				{
																					"key": "startingAfter",
																					"value": "{{startingAfter}}",
																					"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																					"disabled": true
																				},
																				{
																					"key": "endingBefore",
																					"value": "{{endingBefore}}",
																					"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																					"disabled": true
																				},
																				{
																					"key": "networkIds",
																					"value": "{{networkIds}}",
																					"description": "Optional parameter to filter the result set by the included set of network IDs",
																					"disabled": true
																				},
																				{
																					"key": "networkIds",
																					"value": "{{networkIds}}",
																					"description": "Optional parameter to filter the result set by the included set of network IDs",
																					"disabled": true
																				},
																				{
																					"key": "serials",
																					"value": "{{serials}}",
																					"description": "Optional parameter to filter device availabilities history by device serial numbers",
																					"disabled": true
																				},
																				{
																					"key": "serials",
																					"value": "{{serials}}",
																					"description": "Optional parameter to filter device availabilities history by device serial numbers",
																					"disabled": true
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "{{organizationId}}",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		},
																		"description": "Return a record of power mode changes for wireless devices in the organization. For each device, it provides a series of events with timestamps indicating when a power mode change occurred and the new mode. The events are ordered by timestamp."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/wireless/devices/power/mode/history?t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"wireless",
																						"devices",
																						"power",
																						"mode",
																						"history"
																					],
																					"query": [
																						{
																							"key": "t0",
																							"value": "<string>"
																						},
																						{
																							"key": "t1",
																							"value": "<string>"
																						},
																						{
																							"key": "timespan",
																							"value": "<float>"
																						},
																						{
																							"key": "perPage",
																							"value": "<integer>"
																						},
																						{
																							"key": "startingAfter",
																							"value": "<string>"
																						},
																						{
																							"key": "endingBefore",
																							"value": "<string>"
																						},
																						{
																							"key": "networkIds",
																							"value": "<string>"
																						},
																						{
																							"key": "networkIds",
																							"value": "<string>"
																						},
																						{
																							"key": "serials",
																							"value": "<string>"
																						},
																						{
																							"key": "serials",
																							"value": "<string>"
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "<string>",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Link",
																					"value": "Lorem nisi fugiat",
																					"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																				},
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"items\": [\n    {\n      \"serial\": \"Q234-ABCD-0001\",\n      \"model\": \"MR\",\n      \"name\": \"My AP\",\n      \"mac\": \"00:11:22:33:44:55\",\n      \"tags\": [\n        \"tag1\",\n        \"tag2\"\n      ],\n      \"network\": {\n        \"id\": \"N_24329156\",\n        \"name\": \"Main Office\",\n        \"tags\": [\n          \"tag1\",\n          \"tag2\"\n        ]\n      },\n      \"events\": [\n        {\n          \"ts\": \"2018-02-11T00:00:00.090210Z\",\n          \"powerMode\": \"full power\"\n        }\n      ]\n    }\n  ]\n}"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "system",
											"item": [
												{
													"name": "cpu",
													"item": [
														{
															"name": "load",
															"item": [
																{
																	"name": "history",
																	"item": [
																		{
																			"name": "getOrganizationWirelessDevicesSystemCpuLoadHistory",
																			"protocolProfileBehavior": {
																				"followAuthorizationHeader": false
																			},
																			"request": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/wireless/devices/system/cpu/load/history",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"wireless",
																						"devices",
																						"system",
																						"cpu",
																						"load",
																						"history"
																					],
																					"query": [
																						{
																							"key": "t0",
																							"value": "{{t0}}",
																							"description": "The beginning of the timespan for the data. The maximum lookback period is 1 day from today.",
																							"disabled": true
																						},
																						{
																							"key": "t1",
																							"value": "{{t1}}",
																							"description": "The end of the timespan for the data. t1 can be a maximum of 1 day after t0.",
																							"disabled": true
																						},
																						{
																							"key": "timespan",
																							"value": "{{timespan}}",
																							"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 1 day. The default is 1 day.",
																							"disabled": true
																						},
																						{
																							"key": "perPage",
																							"value": "{{perPage}}",
																							"description": "The number of entries per page returned. Acceptable range is 3 - 20. Default is 10.",
																							"disabled": true
																						},
																						{
																							"key": "startingAfter",
																							"value": "{{startingAfter}}",
																							"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																							"disabled": true
																						},
																						{
																							"key": "endingBefore",
																							"value": "{{endingBefore}}",
																							"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																							"disabled": true
																						},
																						{
																							"key": "networkIds",
																							"value": "{{networkIds}}",
																							"description": "Optional parameter to filter the result set by the included set of network IDs",
																							"disabled": true
																						},
																						{
																							"key": "networkIds",
																							"value": "{{networkIds}}",
																							"description": "Optional parameter to filter the result set by the included set of network IDs",
																							"disabled": true
																						},
																						{
																							"key": "serials",
																							"value": "{{serials}}",
																							"description": "Optional parameter to filter device availabilities history by device serial numbers",
																							"disabled": true
																						},
																						{
																							"key": "serials",
																							"value": "{{serials}}",
																							"description": "Optional parameter to filter device availabilities history by device serial numbers",
																							"disabled": true
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "{{organizationId}}",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				},
																				"description": "Return the CPU Load history for a list of wireless devices in the organization."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>",
																								"description": "Added as a part of security scheme: apikey"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/organizations/:organizationId/wireless/devices/system/cpu/load/history?t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"organizations",
																								":organizationId",
																								"wireless",
																								"devices",
																								"system",
																								"cpu",
																								"load",
																								"history"
																							],
																							"query": [
																								{
																									"key": "t0",
																									"value": "<string>"
																								},
																								{
																									"key": "t1",
																									"value": "<string>"
																								},
																								{
																									"key": "timespan",
																									"value": "<float>"
																								},
																								{
																									"key": "perPage",
																									"value": "<integer>"
																								},
																								{
																									"key": "startingAfter",
																									"value": "<string>"
																								},
																								{
																									"key": "endingBefore",
																									"value": "<string>"
																								},
																								{
																									"key": "networkIds",
																									"value": "<string>"
																								},
																								{
																									"key": "networkIds",
																									"value": "<string>"
																								},
																								{
																									"key": "serials",
																									"value": "<string>"
																								},
																								{
																									"key": "serials",
																									"value": "<string>"
																								}
																							],
																							"variable": [
																								{
																									"key": "organizationId",
																									"value": "<string>",
																									"description": "(Required) Organization ID"
																								},
																								{
																									"key": "basePath",
																									"value": "{{basePath}}"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Link",
																							"value": "Lorem nisi fugiat",
																							"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																						},
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"items\": [\n    {\n      \"serial\": \"Q234-ABCD-0001\",\n      \"model\": \"MR\",\n      \"name\": \"My AP\",\n      \"mac\": \"00:11:22:33:44:55\",\n      \"tags\": [\n        \"tag1\",\n        \"tag2\"\n      ],\n      \"network\": {\n        \"id\": \"N_24329156\",\n        \"name\": \"Main Office\",\n        \"tags\": [\n          \"tag1\",\n          \"tag2\"\n        ]\n      },\n      \"cpuCount\": 4,\n      \"series\": [\n        {\n          \"ts\": \"2018-02-11T00:00:00.090210Z\",\n          \"cpuLoad5\": 1000\n        }\n      ]\n    }\n  ]\n}"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "wirelessControllers",
											"item": [
												{
													"name": "byDevice",
													"item": [
														{
															"name": "getOrganizationWirelessDevicesWirelessControllersByDevice",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/wireless/devices/wirelessControllers/byDevice",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"wireless",
																		"devices",
																		"wirelessControllers",
																		"byDevice"
																	],
																	"query": [
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Optional parameter to filter access points by network ID. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Optional parameter to filter access points by network ID. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "Optional parameter to filter access points by its cloud ID. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "Optional parameter to filter access points by its cloud ID. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "controllerSerials",
																			"value": "{{controllerSerials}}",
																			"description": "Optional parameter to filter access points by its wireless LAN controller cloud ID. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "controllerSerials",
																			"value": "{{controllerSerials}}",
																			"description": "Optional parameter to filter access points by its wireless LAN controller cloud ID. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "perPage",
																			"value": "{{perPage}}",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.",
																			"disabled": true
																		},
																		{
																			"key": "startingAfter",
																			"value": "{{startingAfter}}",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "endingBefore",
																			"value": "{{endingBefore}}",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "List of Catalyst access points information"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/wireless/devices/wirelessControllers/byDevice?networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&controllerSerials=<string>&controllerSerials=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"wireless",
																				"devices",
																				"wirelessControllers",
																				"byDevice"
																			],
																			"query": [
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "controllerSerials",
																					"value": "<string>"
																				},
																				{
																					"key": "controllerSerials",
																					"value": "<string>"
																				},
																				{
																					"key": "perPage",
																					"value": "<integer>"
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>"
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Link",
																			"value": "Lorem nisi fugiat",
																			"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"items\": [\n    {\n      \"network\": {\n        \"id\": \"N_24329156\"\n      },\n      \"serial\": \"Q234-ABCD-5678\",\n      \"controller\": {\n        \"serial\": \"Q234-ABCD-5678\"\n      },\n      \"joinedAt\": \"2020-01-01T00:00:00Z\",\n      \"model\": \"C9115AXI-H\",\n      \"tags\": [\n        {\n          \"policy\": \"4F\",\n          \"site\": \"default-site-tag\",\n          \"rf\": \"default-rf-tag\"\n        }\n      ],\n      \"mode\": \"local\",\n      \"countryCode\": \"CA\",\n      \"details\": [\n        {\n          \"name\": \"catalyst serial\",\n          \"value\": \"FGL2446L7QQ\"\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 10,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "failedConnections",
									"item": [
										{
											"name": "getNetworkWirelessFailedConnections",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/failedConnections",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"failedConnections"
													],
													"query": [
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
															"disabled": true
														},
														{
															"key": "t1",
															"value": "{{t1}}",
															"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.",
															"disabled": true
														},
														{
															"key": "band",
															"value": "{{band}}",
															"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.",
															"disabled": true
														},
														{
															"key": "ssid",
															"value": "{{ssid}}",
															"description": "Filter results by SSID",
															"disabled": true
														},
														{
															"key": "vlan",
															"value": "{{vlan}}",
															"description": "Filter results by VLAN",
															"disabled": true
														},
														{
															"key": "apTag",
															"value": "{{apTag}}",
															"description": "Filter results by AP Tag",
															"disabled": true
														},
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "Filter by AP",
															"disabled": true
														},
														{
															"key": "clientId",
															"value": "{{clientId}}",
															"description": "Filter by client MAC",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List of all failed client connection events on this network in a given time range"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/failedConnections?t0=<string>&t1=<string>&timespan=<float>&band=<string>&ssid=<integer>&vlan=<integer>&apTag=<string>&serial=<string>&clientId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"failedConnections"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "t1",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																},
																{
																	"key": "band",
																	"value": "<string>"
																},
																{
																	"key": "ssid",
																	"value": "<integer>"
																},
																{
																	"key": "vlan",
																	"value": "<integer>"
																},
																{
																	"key": "apTag",
																	"value": "<string>"
																},
																{
																	"key": "serial",
																	"value": "<string>"
																},
																{
																	"key": "clientId",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"ssidNumber\": 1,\n    \"vlan\": 100,\n    \"clientMac\": \"22:33:44:55:66:77\",\n    \"serial\": \"Q234-ABCD-5678\",\n    \"failureStep\": \"dns\",\n    \"type\": \"802.1X auth fail\",\n    \"ts\": \"2018-02-11T00:00:00.090210Z\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "latencyHistory",
									"item": [
										{
											"name": "getNetworkWirelessLatencyHistory",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/latencyHistory",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"latencyHistory"
													],
													"query": [
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
															"disabled": true
														},
														{
															"key": "t1",
															"value": "{{t1}}",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
															"disabled": true
														},
														{
															"key": "resolution",
															"value": "{{resolution}}",
															"description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.",
															"disabled": true
														},
														{
															"key": "autoResolution",
															"value": "{{autoResolution}}",
															"description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.",
															"disabled": true
														},
														{
															"key": "clientId",
															"value": "{{clientId}}",
															"description": "Filter results by network client.",
															"disabled": true
														},
														{
															"key": "deviceSerial",
															"value": "{{deviceSerial}}",
															"description": "Filter results by device.",
															"disabled": true
														},
														{
															"key": "apTag",
															"value": "{{apTag}}",
															"description": "Filter results by AP tag.",
															"disabled": true
														},
														{
															"key": "band",
															"value": "{{band}}",
															"description": "Filter results by band (either '2.4', '5' or '6').",
															"disabled": true
														},
														{
															"key": "ssid",
															"value": "{{ssid}}",
															"description": "Filter results by SSID number.",
															"disabled": true
														},
														{
															"key": "accessCategory",
															"value": "{{accessCategory}}",
															"description": "Filter by access category.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return average wireless latency over time for a network, device, or network client"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/latencyHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&autoResolution=<boolean>&clientId=<string>&deviceSerial=<string>&apTag=<string>&band=<string>&ssid=<integer>&accessCategory=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"latencyHistory"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "t1",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																},
																{
																	"key": "resolution",
																	"value": "<integer>"
																},
																{
																	"key": "autoResolution",
																	"value": "<boolean>"
																},
																{
																	"key": "clientId",
																	"value": "<string>"
																},
																{
																	"key": "deviceSerial",
																	"value": "<string>"
																},
																{
																	"key": "apTag",
																	"value": "<string>"
																},
																{
																	"key": "band",
																	"value": "<string>"
																},
																{
																	"key": "ssid",
																	"value": "<integer>"
																},
																{
																	"key": "accessCategory",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"startTs\": \"2020-01-01T00:00:00Z\",\n    \"endTs\": \"2020-01-01T01:00:00Z\",\n    \"avgLatencyMs\": 29\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "latencyStats",
									"item": [
										{
											"name": "getDeviceWirelessLatencyStats",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/wireless/latencyStats",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"wireless",
														"latencyStats"
													],
													"query": [
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
															"disabled": true
														},
														{
															"key": "t1",
															"value": "{{t1}}",
															"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.",
															"disabled": true
														},
														{
															"key": "band",
															"value": "{{band}}",
															"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.",
															"disabled": true
														},
														{
															"key": "ssid",
															"value": "{{ssid}}",
															"description": "Filter results by SSID",
															"disabled": true
														},
														{
															"key": "vlan",
															"value": "{{vlan}}",
															"description": "Filter results by VLAN",
															"disabled": true
														},
														{
															"key": "apTag",
															"value": "{{apTag}}",
															"description": "Filter results by AP Tag",
															"disabled": true
														},
														{
															"key": "fields",
															"value": "{{fields}}",
															"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Aggregated latency info for a given AP on this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/wireless/latencyStats?t0=<string>&t1=<string>&timespan=<float>&band=<string>&ssid=<integer>&vlan=<integer>&apTag=<string>&fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"wireless",
																"latencyStats"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "t1",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																},
																{
																	"key": "band",
																	"value": "<string>"
																},
																{
																	"key": "ssid",
																	"value": "<integer>"
																},
																{
																	"key": "vlan",
																	"value": "<integer>"
																},
																{
																	"key": "apTag",
																	"value": "<string>"
																},
																{
																	"key": "fields",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"serial\": \"Q2JC-2MJM-FHRD\",\n  \"latencyStats\": {\n    \"backgroundTraffic\": {\n      \"rawDistribution\": {\n        \"0\": 1234,\n        \"1\": 2345,\n        \"2\": 3456,\n        \"4\": 4567,\n        \"8\": 5678,\n        \"16\": 6789,\n        \"32\": 7890,\n        \"64\": 8901,\n        \"128\": 9012,\n        \"256\": 83,\n        \"512\": 1234,\n        \"1024\": 2345,\n        \"2048\": 9999\n      },\n      \"avg\": 606.52\n    },\n    \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\n    \"videoTraffic\": \"same shape as backgroundTraffic\",\n    \"voiceTraffic\": \"same shape as backgroundTraffic\"\n  }\n}"
												}
											]
										},
										{
											"name": "getNetworkWirelessLatencyStats",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/latencyStats",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"latencyStats"
													],
													"query": [
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
															"disabled": true
														},
														{
															"key": "t1",
															"value": "{{t1}}",
															"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.",
															"disabled": true
														},
														{
															"key": "band",
															"value": "{{band}}",
															"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.",
															"disabled": true
														},
														{
															"key": "ssid",
															"value": "{{ssid}}",
															"description": "Filter results by SSID",
															"disabled": true
														},
														{
															"key": "vlan",
															"value": "{{vlan}}",
															"description": "Filter results by VLAN",
															"disabled": true
														},
														{
															"key": "apTag",
															"value": "{{apTag}}",
															"description": "Filter results by AP Tag",
															"disabled": true
														},
														{
															"key": "fields",
															"value": "{{fields}}",
															"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Aggregated latency info for this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/latencyStats?t0=<string>&t1=<string>&timespan=<float>&band=<string>&ssid=<integer>&vlan=<integer>&apTag=<string>&fields=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"latencyStats"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "t1",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																},
																{
																	"key": "band",
																	"value": "<string>"
																},
																{
																	"key": "ssid",
																	"value": "<integer>"
																},
																{
																	"key": "vlan",
																	"value": "<integer>"
																},
																{
																	"key": "apTag",
																	"value": "<string>"
																},
																{
																	"key": "fields",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"backgroundTraffic\": {\n    \"rawDistribution\": {\n      \"0\": 1234,\n      \"1\": 2345,\n      \"2\": 3456,\n      \"4\": 4567,\n      \"8\": 5678,\n      \"16\": 6789,\n      \"32\": 7890,\n      \"64\": 8901,\n      \"128\": 9012,\n      \"256\": 83,\n      \"512\": 1234,\n      \"1024\": 2345,\n      \"2048\": 9999\n    },\n    \"avg\": 606.52\n  },\n  \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\n  \"videoTraffic\": \"same shape as backgroundTraffic\",\n  \"voiceTraffic\": \"same shape as backgroundTraffic\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "meshStatuses",
									"item": [
										{
											"name": "getNetworkWirelessMeshStatuses",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/meshStatuses",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"meshStatuses"
													],
													"query": [
														{
															"key": "perPage",
															"value": "{{perPage}}",
															"description": "The number of entries per page returned. Acceptable range is 3 - 500. Default is 50.",
															"disabled": true
														},
														{
															"key": "startingAfter",
															"value": "{{startingAfter}}",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "endingBefore",
															"value": "{{endingBefore}}",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List wireless mesh statuses for repeaters"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/meshStatuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"meshStatuses"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>"
																},
																{
																	"key": "startingAfter",
																	"value": "<string>"
																},
																{
																	"key": "endingBefore",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Link",
															"value": "Lorem nisi fugiat",
															"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"serial\": \"Q234-ABCD-5678\",\n    \"meshRoute\": [\n      \"Q234-ABCD-5678\",\n      \"QWEY-SKTD-ST01\",\n      \"QWEY-SKTD-ST02\"\n    ],\n    \"latestMeshPerformance\": {\n      \"mbps\": 43,\n      \"metric\": 12345,\n      \"usagePercentage\": \"100%\"\n    }\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "signalQualityHistory",
									"item": [
										{
											"name": "getNetworkWirelessSignalQualityHistory",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/signalQualityHistory",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"signalQualityHistory"
													],
													"query": [
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
															"disabled": true
														},
														{
															"key": "t1",
															"value": "{{t1}}",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
															"disabled": true
														},
														{
															"key": "resolution",
															"value": "{{resolution}}",
															"description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.",
															"disabled": true
														},
														{
															"key": "autoResolution",
															"value": "{{autoResolution}}",
															"description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.",
															"disabled": true
														},
														{
															"key": "clientId",
															"value": "{{clientId}}",
															"description": "Filter results by network client.",
															"disabled": true
														},
														{
															"key": "deviceSerial",
															"value": "{{deviceSerial}}",
															"description": "Filter results by device.",
															"disabled": true
														},
														{
															"key": "apTag",
															"value": "{{apTag}}",
															"description": "Filter results by AP tag; either :clientId or :deviceSerial must be jointly specified.",
															"disabled": true
														},
														{
															"key": "band",
															"value": "{{band}}",
															"description": "Filter results by band (either '2.4', '5' or '6').",
															"disabled": true
														},
														{
															"key": "ssid",
															"value": "{{ssid}}",
															"description": "Filter results by SSID number.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return signal quality (SNR/RSSI) over time for a device or network client"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/signalQualityHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&autoResolution=<boolean>&clientId=<string>&deviceSerial=<string>&apTag=<string>&band=<string>&ssid=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"signalQualityHistory"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "t1",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																},
																{
																	"key": "resolution",
																	"value": "<integer>"
																},
																{
																	"key": "autoResolution",
																	"value": "<boolean>"
																},
																{
																	"key": "clientId",
																	"value": "<string>"
																},
																{
																	"key": "deviceSerial",
																	"value": "<string>"
																},
																{
																	"key": "apTag",
																	"value": "<string>"
																},
																{
																	"key": "band",
																	"value": "<string>"
																},
																{
																	"key": "ssid",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"startTs\": \"2020-01-01T00:00:00Z\",\n    \"endTs\": \"2020-01-01T01:00:00Z\",\n    \"snr\": 27,\n    \"rssi\": -77\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "ssids",
									"item": [
										{
											"name": "statuses",
											"item": [
												{
													"name": "byDevice",
													"item": [
														{
															"name": "getOrganizationWirelessSsidsStatusesByDevice",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/wireless/ssids/statuses/byDevice",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"wireless",
																		"ssids",
																		"statuses",
																		"byDevice"
																	],
																	"query": [
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Optional parameter to filter the result set by the included set of network IDs",
																			"disabled": true
																		},
																		{
																			"key": "networkIds",
																			"value": "{{networkIds}}",
																			"description": "Optional parameter to filter the result set by the included set of network IDs",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "A list of serial numbers. The returned devices will be filtered to only include these serials.",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "A list of serial numbers. The returned devices will be filtered to only include these serials.",
																			"disabled": true
																		},
																		{
																			"key": "bssids",
																			"value": "{{bssids}}",
																			"description": "A list of BSSIDs. The returned devices will be filtered to only include these BSSIDs.",
																			"disabled": true
																		},
																		{
																			"key": "bssids",
																			"value": "{{bssids}}",
																			"description": "A list of BSSIDs. The returned devices will be filtered to only include these BSSIDs.",
																			"disabled": true
																		},
																		{
																			"key": "hideDisabled",
																			"value": "{{hideDisabled}}",
																			"description": "If true, the returned devices will not include disabled SSIDs. (default: true)",
																			"disabled": true
																		},
																		{
																			"key": "perPage",
																			"value": "{{perPage}}",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 500. Default is 100.",
																			"disabled": true
																		},
																		{
																			"key": "startingAfter",
																			"value": "{{startingAfter}}",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "endingBefore",
																			"value": "{{endingBefore}}",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "List status information of all BSSIDs in your organization"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/wireless/ssids/statuses/byDevice?networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&bssids=<string>&bssids=<string>&hideDisabled=<boolean>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"wireless",
																				"ssids",
																				"statuses",
																				"byDevice"
																			],
																			"query": [
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "bssids",
																					"value": "<string>"
																				},
																				{
																					"key": "bssids",
																					"value": "<string>"
																				},
																				{
																					"key": "hideDisabled",
																					"value": "<boolean>"
																				},
																				{
																					"key": "perPage",
																					"value": "<integer>"
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>"
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Link",
																			"value": "Lorem nisi fugiat",
																			"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"items\": [\n    {\n      \"serial\": \"QQ3A-QHWY-DQ2Z\",\n      \"name\": \"My AP\",\n      \"network\": {\n        \"id\": \"N_24329156\",\n        \"name\": \"Main Office\"\n      },\n      \"basicServiceSets\": [\n        {\n          \"bssid\": \"8A:15:04:00:00:00\",\n          \"ssid\": {\n            \"name\": \"My SSID\",\n            \"number\": 0,\n            \"enabled\": true,\n            \"advertised\": true\n          },\n          \"radio\": {\n            \"band\": \"2.4\",\n            \"channel\": 11,\n            \"channelWidth\": 20,\n            \"power\": 18,\n            \"isBroadcasting\": true,\n            \"index\": \"0\"\n          }\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 1738,\n        \"remaining\": 1238\n      }\n    }\n  }\n}"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "status",
									"item": [
										{
											"name": "getDeviceWirelessStatus",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/devices/:serial/wireless/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"devices",
														":serial",
														"wireless",
														"status"
													],
													"variable": [
														{
															"key": "serial",
															"value": "{{serial}}",
															"description": "(Required) Serial"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return the SSID statuses of an access point"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/devices/:serial/wireless/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"devices",
																":serial",
																"wireless",
																"status"
															],
															"variable": [
																{
																	"key": "serial",
																	"value": "<string>",
																	"description": "(Required) Serial"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"basicServiceSets\": [\n    {\n      \"ssidName\": \"My SSID\",\n      \"ssidNumber\": 0,\n      \"enabled\": true,\n      \"band\": \"2.4 GHz\",\n      \"bssid\": \"8A:15:04:00:00:00\",\n      \"channel\": 11,\n      \"channelWidth\": \"20 MHz\",\n      \"power\": \"18 dBm\",\n      \"visible\": true,\n      \"broadcasting\": true\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "usageHistory",
									"item": [
										{
											"name": "getNetworkWirelessUsageHistory",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/networks/:networkId/wireless/usageHistory",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"networks",
														":networkId",
														"wireless",
														"usageHistory"
													],
													"query": [
														{
															"key": "t0",
															"value": "{{t0}}",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
															"disabled": true
														},
														{
															"key": "t1",
															"value": "{{t1}}",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
															"disabled": true
														},
														{
															"key": "timespan",
															"value": "{{timespan}}",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
															"disabled": true
														},
														{
															"key": "resolution",
															"value": "{{resolution}}",
															"description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.",
															"disabled": true
														},
														{
															"key": "autoResolution",
															"value": "{{autoResolution}}",
															"description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.",
															"disabled": true
														},
														{
															"key": "clientId",
															"value": "{{clientId}}",
															"description": "Filter results by network client to return per-device AP usage over time inner joined by the queried client's connection history.",
															"disabled": true
														},
														{
															"key": "deviceSerial",
															"value": "{{deviceSerial}}",
															"description": "Filter results by device. Requires :band.",
															"disabled": true
														},
														{
															"key": "apTag",
															"value": "{{apTag}}",
															"description": "Filter results by AP tag; either :clientId or :deviceSerial must be jointly specified.",
															"disabled": true
														},
														{
															"key": "band",
															"value": "{{band}}",
															"description": "Filter results by band (either '2.4', '5' or '6').",
															"disabled": true
														},
														{
															"key": "ssid",
															"value": "{{ssid}}",
															"description": "Filter results by SSID number.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "networkId",
															"value": "{{networkId}}",
															"description": "(Required) Network ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "Return AP usage over time for a device or network client"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/networks/:networkId/wireless/usageHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&autoResolution=<boolean>&clientId=<string>&deviceSerial=<string>&apTag=<string>&band=<string>&ssid=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"networks",
																":networkId",
																"wireless",
																"usageHistory"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>"
																},
																{
																	"key": "t1",
																	"value": "<string>"
																},
																{
																	"key": "timespan",
																	"value": "<float>"
																},
																{
																	"key": "resolution",
																	"value": "<integer>"
																},
																{
																	"key": "autoResolution",
																	"value": "<boolean>"
																},
																{
																	"key": "clientId",
																	"value": "<string>"
																},
																{
																	"key": "deviceSerial",
																	"value": "<string>"
																},
																{
																	"key": "apTag",
																	"value": "<string>"
																},
																{
																	"key": "band",
																	"value": "<string>"
																},
																{
																	"key": "ssid",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "networkId",
																	"value": "<string>",
																	"description": "(Required) Network ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"startTs\": \"2020-01-01T00:00:00Z\",\n    \"endTs\": \"2020-01-01T01:00:00Z\",\n    \"totalKbps\": 2590,\n    \"sentKbps\": 159,\n    \"receivedKbps\": 2431\n  }\n]"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "wirelessController",
					"item": [
						{
							"name": "monitor",
							"item": [
								{
									"name": "availabilities",
									"item": [
										{
											"name": "changeHistory",
											"item": [
												{
													"name": "getOrganizationWirelessControllerAvailabilitiesChangeHistory",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/availabilities/changeHistory",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"wirelessController",
																"availabilities",
																"changeHistory"
															],
															"query": [
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																	"disabled": true
																},
																{
																	"key": "t0",
																	"value": "{{t0}}",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
																	"disabled": true
																},
																{
																	"key": "t1",
																	"value": "{{t1}}",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
																	"disabled": true
																},
																{
																	"key": "timespan",
																	"value": "{{timespan}}",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
																	"disabled": true
																},
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List connectivity data of wireless LAN controllers in an organization. If it is HA setup, then only returns active WLC data start from switchover"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/availabilities/changeHistory?serials=<string>&serials=<string>&t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"wirelessController",
																		"availabilities",
																		"changeHistory"
																	],
																	"query": [
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "t0",
																			"value": "<string>"
																		},
																		{
																			"key": "t1",
																			"value": "<string>"
																		},
																		{
																			"key": "timespan",
																			"value": "<float>"
																		},
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": [\n    {\n      \"serial\": \"Q234-ABCD-5678\",\n      \"changes\": [\n        {\n          \"startTs\": \"2020-01-01T00:00:00Z\",\n          \"endTs\": \"null\",\n          \"status\": \"online\"\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 10,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "clients",
									"item": [
										{
											"name": "overview",
											"item": [
												{
													"name": "history",
													"item": [
														{
															"name": "byDevice",
															"item": [
																{
																	"name": "byInterval",
																	"item": [
																		{
																			"name": "getOrganizationWirelessControllerClientsOverviewHistoryByDeviceByInterval",
																			"protocolProfileBehavior": {
																				"followAuthorizationHeader": false
																			},
																			"request": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/clients/overview/history/byDevice/byInterval",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"wirelessController",
																						"clients",
																						"overview",
																						"history",
																						"byDevice",
																						"byInterval"
																					],
																					"query": [
																						{
																							"key": "networkIds",
																							"value": "{{networkIds}}",
																							"description": "Optional parameter to filter wireless LAN controllers by network ID. This filter uses multiple exact matches.",
																							"disabled": true
																						},
																						{
																							"key": "networkIds",
																							"value": "{{networkIds}}",
																							"description": "Optional parameter to filter wireless LAN controllers by network ID. This filter uses multiple exact matches.",
																							"disabled": true
																						},
																						{
																							"key": "serials",
																							"value": "{{serials}}",
																							"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																							"disabled": true
																						},
																						{
																							"key": "serials",
																							"value": "{{serials}}",
																							"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																							"disabled": true
																						},
																						{
																							"key": "t0",
																							"value": "{{t0}}",
																							"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
																							"disabled": true
																						},
																						{
																							"key": "t1",
																							"value": "{{t1}}",
																							"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
																							"disabled": true
																						},
																						{
																							"key": "timespan",
																							"value": "{{timespan}}",
																							"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
																							"disabled": true
																						},
																						{
																							"key": "perPage",
																							"value": "{{perPage}}",
																							"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																							"disabled": true
																						},
																						{
																							"key": "startingAfter",
																							"value": "{{startingAfter}}",
																							"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																							"disabled": true
																						},
																						{
																							"key": "endingBefore",
																							"value": "{{endingBefore}}",
																							"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																							"disabled": true
																						},
																						{
																							"key": "resolution",
																							"value": "{{resolution}}",
																							"description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.",
																							"disabled": true
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "{{organizationId}}",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				},
																				"description": "List wireless client counts of wireless LAN controllers over time in an organization"
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>",
																								"description": "Added as a part of security scheme: apikey"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/clients/overview/history/byDevice/byInterval?networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&resolution=<integer>",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"organizations",
																								":organizationId",
																								"wirelessController",
																								"clients",
																								"overview",
																								"history",
																								"byDevice",
																								"byInterval"
																							],
																							"query": [
																								{
																									"key": "networkIds",
																									"value": "<string>"
																								},
																								{
																									"key": "networkIds",
																									"value": "<string>"
																								},
																								{
																									"key": "serials",
																									"value": "<string>"
																								},
																								{
																									"key": "serials",
																									"value": "<string>"
																								},
																								{
																									"key": "t0",
																									"value": "<string>"
																								},
																								{
																									"key": "t1",
																									"value": "<string>"
																								},
																								{
																									"key": "timespan",
																									"value": "<float>"
																								},
																								{
																									"key": "perPage",
																									"value": "<integer>"
																								},
																								{
																									"key": "startingAfter",
																									"value": "<string>"
																								},
																								{
																									"key": "endingBefore",
																									"value": "<string>"
																								},
																								{
																									"key": "resolution",
																									"value": "<integer>"
																								}
																							],
																							"variable": [
																								{
																									"key": "organizationId",
																									"value": "<string>",
																									"description": "(Required) Organization ID"
																								},
																								{
																									"key": "basePath",
																									"value": "{{basePath}}"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Link",
																							"value": "Lorem nisi fugiat",
																							"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																						},
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"items\": [\n    {\n      \"serial\": \"Q234-ABCD-5678\",\n      \"network\": {\n        \"id\": \"N_24329156\"\n      },\n      \"readings\": [\n        {\n          \"startTs\": \"2020-01-01T00:00:00Z\",\n          \"endTs\": \"2020-01-01T01:00:00Z\",\n          \"counts\": {\n            \"byStatus\": {\n              \"online\": 1\n            }\n          }\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 10,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "connections",
									"item": [
										{
											"name": "getOrganizationWirelessControllerConnections",
											"protocolProfileBehavior": {
												"followAuthorizationHeader": false
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/connections",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organizationId",
														"wirelessController",
														"connections"
													],
													"query": [
														{
															"key": "networkIds",
															"value": "{{networkIds}}",
															"description": "Optional parameter to filter access points by network ID. This filter uses multiple exact matches.",
															"disabled": true
														},
														{
															"key": "networkIds",
															"value": "{{networkIds}}",
															"description": "Optional parameter to filter access points by network ID. This filter uses multiple exact matches.",
															"disabled": true
														},
														{
															"key": "controllerSerials",
															"value": "{{controllerSerials}}",
															"description": "Optional parameter to filter access points by its controller cloud ID. This filter uses multiple exact matches.",
															"disabled": true
														},
														{
															"key": "controllerSerials",
															"value": "{{controllerSerials}}",
															"description": "Optional parameter to filter access points by its controller cloud ID. This filter uses multiple exact matches.",
															"disabled": true
														},
														{
															"key": "perPage",
															"value": "{{perPage}}",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
															"disabled": true
														},
														{
															"key": "startingAfter",
															"value": "{{startingAfter}}",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														},
														{
															"key": "endingBefore",
															"value": "{{endingBefore}}",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "{{organizationId}}",
															"description": "(Required) Organization ID"
														},
														{
															"key": "basePath",
															"value": "{{basePath}}"
														}
													]
												},
												"description": "List all access points associated with wireless LAN controllers in an organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/connections?networkIds=<string>&networkIds=<string>&controllerSerials=<string>&controllerSerials=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"wirelessController",
																"connections"
															],
															"query": [
																{
																	"key": "networkIds",
																	"value": "<string>"
																},
																{
																	"key": "networkIds",
																	"value": "<string>"
																},
																{
																	"key": "controllerSerials",
																	"value": "<string>"
																},
																{
																	"key": "controllerSerials",
																	"value": "<string>"
																},
																{
																	"key": "perPage",
																	"value": "<integer>"
																},
																{
																	"key": "startingAfter",
																	"value": "<string>"
																},
																{
																	"key": "endingBefore",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "<string>",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Link",
															"value": "Lorem nisi fugiat",
															"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"items\": [\n    {\n      \"serial\": \"Q234-ABCD-5678\",\n      \"controller\": {\n        \"serial\": \"Q234-ABCD-5678\"\n      },\n      \"network\": {\n        \"id\": \"N_24329156\",\n        \"url\": \"https://network/url\",\n        \"name\": \"Network1\"\n      }\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 10,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "devices",
									"item": [
										{
											"name": "interfaces",
											"item": [
												{
													"name": "l2",
													"item": [
														{
															"name": "byDevice",
															"item": [
																{
																	"name": "getOrganizationWirelessControllerDevicesInterfacesL2ByDevice",
																	"protocolProfileBehavior": {
																		"followAuthorizationHeader": false
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/devices/interfaces/l2/byDevice",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"wirelessController",
																				"devices",
																				"interfaces",
																				"l2",
																				"byDevice"
																			],
																			"query": [
																				{
																					"key": "serials",
																					"value": "{{serials}}",
																					"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																					"disabled": true
																				},
																				{
																					"key": "serials",
																					"value": "{{serials}}",
																					"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																					"disabled": true
																				},
																				{
																					"key": "t0",
																					"value": "{{t0}}",
																					"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
																					"disabled": true
																				},
																				{
																					"key": "t1",
																					"value": "{{t1}}",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
																					"disabled": true
																				},
																				{
																					"key": "timespan",
																					"value": "{{timespan}}",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
																					"disabled": true
																				},
																				{
																					"key": "perPage",
																					"value": "{{perPage}}",
																					"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																					"disabled": true
																				},
																				{
																					"key": "startingAfter",
																					"value": "{{startingAfter}}",
																					"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																					"disabled": true
																				},
																				{
																					"key": "endingBefore",
																					"value": "{{endingBefore}}",
																					"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																					"disabled": true
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "{{organizationId}}",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		},
																		"description": "List wireless LAN controller layer 2 interfaces in an organization"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/devices/interfaces/l2/byDevice?serials=<string>&serials=<string>&t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"wirelessController",
																						"devices",
																						"interfaces",
																						"l2",
																						"byDevice"
																					],
																					"query": [
																						{
																							"key": "serials",
																							"value": "<string>"
																						},
																						{
																							"key": "serials",
																							"value": "<string>"
																						},
																						{
																							"key": "t0",
																							"value": "<string>"
																						},
																						{
																							"key": "t1",
																							"value": "<string>"
																						},
																						{
																							"key": "timespan",
																							"value": "<float>"
																						},
																						{
																							"key": "perPage",
																							"value": "<integer>"
																						},
																						{
																							"key": "startingAfter",
																							"value": "<string>"
																						},
																						{
																							"key": "endingBefore",
																							"value": "<string>"
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "<string>",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Link",
																					"value": "Lorem nisi fugiat",
																					"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																				},
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"items\": [\n    {\n      \"serial\": \"Q234-ABCD-5678\",\n      \"interfaces\": [\n        {\n          \"name\": \"TenGigabitEthernet0/0/5\",\n          \"description\": \"Uplink\",\n          \"enabled\": true,\n          \"mac\": \"b0:c5:3c:0d:c5:0b\",\n          \"status\": \"disabled\",\n          \"speed\": \"1 Gbps\",\n          \"isUplink\": true,\n          \"vlan\": 10,\n          \"isRedundancyPort\": true,\n          \"linkNegotiation\": \"auto\",\n          \"channelGroup\": {\n            \"number\": 5\n          },\n          \"module\": {\n            \"model\": \"C9800-2X40GE\"\n          }\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 10,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "statuses",
															"item": [
																{
																	"name": "changeHistory",
																	"item": [
																		{
																			"name": "byDevice",
																			"item": [
																				{
																					"name": "getOrganizationWirelessControllerDevicesInterfacesL2StatusesChangeHistoryByDevice",
																					"protocolProfileBehavior": {
																						"followAuthorizationHeader": false
																					},
																					"request": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/devices/interfaces/l2/statuses/changeHistory/byDevice",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"organizations",
																								":organizationId",
																								"wirelessController",
																								"devices",
																								"interfaces",
																								"l2",
																								"statuses",
																								"changeHistory",
																								"byDevice"
																							],
																							"query": [
																								{
																									"key": "serials",
																									"value": "{{serials}}",
																									"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																									"disabled": true
																								},
																								{
																									"key": "serials",
																									"value": "{{serials}}",
																									"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																									"disabled": true
																								},
																								{
																									"key": "includeInterfacesWithoutChanges",
																									"value": "{{includeInterfacesWithoutChanges}}",
																									"description": "By default, interfaces without changes are omitted from the response for brevity. If you want to include the interfaces even if they have no changes, set to true. (default: false)",
																									"disabled": true
																								},
																								{
																									"key": "t0",
																									"value": "{{t0}}",
																									"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
																									"disabled": true
																								},
																								{
																									"key": "t1",
																									"value": "{{t1}}",
																									"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
																									"disabled": true
																								},
																								{
																									"key": "timespan",
																									"value": "{{timespan}}",
																									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
																									"disabled": true
																								},
																								{
																									"key": "perPage",
																									"value": "{{perPage}}",
																									"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																									"disabled": true
																								},
																								{
																									"key": "startingAfter",
																									"value": "{{startingAfter}}",
																									"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																									"disabled": true
																								},
																								{
																									"key": "endingBefore",
																									"value": "{{endingBefore}}",
																									"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																									"disabled": true
																								}
																							],
																							"variable": [
																								{
																									"key": "organizationId",
																									"value": "{{organizationId}}",
																									"description": "(Required) Organization ID"
																								},
																								{
																									"key": "basePath",
																									"value": "{{basePath}}"
																								}
																							]
																						},
																						"description": "List wireless LAN controller layer 2 interfaces history status in an organization"
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "GET",
																								"header": [
																									{
																										"key": "X-Cisco-Meraki-API-Key",
																										"value": "<API Key>",
																										"description": "Added as a part of security scheme: apikey"
																									},
																									{
																										"key": "Accept",
																										"value": "application/json"
																									}
																								],
																								"url": {
																									"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/devices/interfaces/l2/statuses/changeHistory/byDevice?serials=<string>&serials=<string>&includeInterfacesWithoutChanges=<boolean>&t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"organizations",
																										":organizationId",
																										"wirelessController",
																										"devices",
																										"interfaces",
																										"l2",
																										"statuses",
																										"changeHistory",
																										"byDevice"
																									],
																									"query": [
																										{
																											"key": "serials",
																											"value": "<string>"
																										},
																										{
																											"key": "serials",
																											"value": "<string>"
																										},
																										{
																											"key": "includeInterfacesWithoutChanges",
																											"value": "<boolean>"
																										},
																										{
																											"key": "t0",
																											"value": "<string>"
																										},
																										{
																											"key": "t1",
																											"value": "<string>"
																										},
																										{
																											"key": "timespan",
																											"value": "<float>"
																										},
																										{
																											"key": "perPage",
																											"value": "<integer>"
																										},
																										{
																											"key": "startingAfter",
																											"value": "<string>"
																										},
																										{
																											"key": "endingBefore",
																											"value": "<string>"
																										}
																									],
																									"variable": [
																										{
																											"key": "organizationId",
																											"value": "<string>",
																											"description": "(Required) Organization ID"
																										},
																										{
																											"key": "basePath",
																											"value": "{{basePath}}"
																										}
																									]
																								}
																							},
																							"status": "OK",
																							"code": 200,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Link",
																									"value": "Lorem nisi fugiat",
																									"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																								},
																								{
																									"key": "Content-Type",
																									"value": "application/json"
																								}
																							],
																							"cookie": [],
																							"body": "{\n  \"items\": [\n    {\n      \"serial\": \"Q234-ABCD-5678\",\n      \"interfaces\": [\n        {\n          \"name\": \"TenGigabitEthernet0/0/5\",\n          \"mac\": \"b0:c5:3c:0d:c5:0b\",\n          \"changes\": [\n            {\n              \"ts\": \"2020-01-01T00:00:00Z\",\n              \"status\": \"disabled\",\n              \"warnings\": [\n                \"CRC warnings\"\n              ],\n              \"errors\": [\n                \"CRC errors\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 10,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														},
														{
															"name": "usage",
															"item": [
																{
																	"name": "history",
																	"item": [
																		{
																			"name": "byInterval",
																			"item": [
																				{
																					"name": "getOrganizationWirelessControllerDevicesInterfacesL2UsageHistoryByInterval",
																					"protocolProfileBehavior": {
																						"followAuthorizationHeader": false
																					},
																					"request": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/devices/interfaces/l2/usage/history/byInterval",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"organizations",
																								":organizationId",
																								"wirelessController",
																								"devices",
																								"interfaces",
																								"l2",
																								"usage",
																								"history",
																								"byInterval"
																							],
																							"query": [
																								{
																									"key": "serials",
																									"value": "{{serials}}",
																									"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																									"disabled": true
																								},
																								{
																									"key": "serials",
																									"value": "{{serials}}",
																									"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																									"disabled": true
																								},
																								{
																									"key": "t0",
																									"value": "{{t0}}",
																									"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
																									"disabled": true
																								},
																								{
																									"key": "t1",
																									"value": "{{t1}}",
																									"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
																									"disabled": true
																								},
																								{
																									"key": "timespan",
																									"value": "{{timespan}}",
																									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
																									"disabled": true
																								},
																								{
																									"key": "perPage",
																									"value": "{{perPage}}",
																									"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																									"disabled": true
																								},
																								{
																									"key": "startingAfter",
																									"value": "{{startingAfter}}",
																									"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																									"disabled": true
																								},
																								{
																									"key": "endingBefore",
																									"value": "{{endingBefore}}",
																									"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																									"disabled": true
																								}
																							],
																							"variable": [
																								{
																									"key": "organizationId",
																									"value": "{{organizationId}}",
																									"description": "(Required) Organization ID"
																								},
																								{
																									"key": "basePath",
																									"value": "{{basePath}}"
																								}
																							]
																						},
																						"description": "List wireless LAN controller layer 2 interfaces history usage in an organization"
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "GET",
																								"header": [
																									{
																										"key": "X-Cisco-Meraki-API-Key",
																										"value": "<API Key>",
																										"description": "Added as a part of security scheme: apikey"
																									},
																									{
																										"key": "Accept",
																										"value": "application/json"
																									}
																								],
																								"url": {
																									"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/devices/interfaces/l2/usage/history/byInterval?serials=<string>&serials=<string>&t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"organizations",
																										":organizationId",
																										"wirelessController",
																										"devices",
																										"interfaces",
																										"l2",
																										"usage",
																										"history",
																										"byInterval"
																									],
																									"query": [
																										{
																											"key": "serials",
																											"value": "<string>"
																										},
																										{
																											"key": "serials",
																											"value": "<string>"
																										},
																										{
																											"key": "t0",
																											"value": "<string>"
																										},
																										{
																											"key": "t1",
																											"value": "<string>"
																										},
																										{
																											"key": "timespan",
																											"value": "<float>"
																										},
																										{
																											"key": "perPage",
																											"value": "<integer>"
																										},
																										{
																											"key": "startingAfter",
																											"value": "<string>"
																										},
																										{
																											"key": "endingBefore",
																											"value": "<string>"
																										}
																									],
																									"variable": [
																										{
																											"key": "organizationId",
																											"value": "<string>",
																											"description": "(Required) Organization ID"
																										},
																										{
																											"key": "basePath",
																											"value": "{{basePath}}"
																										}
																									]
																								}
																							},
																							"status": "OK",
																							"code": 200,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Link",
																									"value": "Lorem nisi fugiat",
																									"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																								},
																								{
																									"key": "Content-Type",
																									"value": "application/json"
																								}
																							],
																							"cookie": [],
																							"body": "{\n  \"items\": [\n    {\n      \"serial\": \"Q234-ABCD-5678\",\n      \"readings\": [\n        {\n          \"name\": \"TenGigabitEthernet0/0/5\",\n          \"mac\": \"b0:c5:3c:0d:c5:0b\",\n          \"recv\": 0,\n          \"send\": 0\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 10,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "l3",
													"item": [
														{
															"name": "byDevice",
															"item": [
																{
																	"name": "getOrganizationWirelessControllerDevicesInterfacesL3ByDevice",
																	"protocolProfileBehavior": {
																		"followAuthorizationHeader": false
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/devices/interfaces/l3/byDevice",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"wirelessController",
																				"devices",
																				"interfaces",
																				"l3",
																				"byDevice"
																			],
																			"query": [
																				{
																					"key": "serials",
																					"value": "{{serials}}",
																					"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																					"disabled": true
																				},
																				{
																					"key": "serials",
																					"value": "{{serials}}",
																					"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																					"disabled": true
																				},
																				{
																					"key": "t0",
																					"value": "{{t0}}",
																					"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
																					"disabled": true
																				},
																				{
																					"key": "t1",
																					"value": "{{t1}}",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
																					"disabled": true
																				},
																				{
																					"key": "timespan",
																					"value": "{{timespan}}",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
																					"disabled": true
																				},
																				{
																					"key": "perPage",
																					"value": "{{perPage}}",
																					"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																					"disabled": true
																				},
																				{
																					"key": "startingAfter",
																					"value": "{{startingAfter}}",
																					"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																					"disabled": true
																				},
																				{
																					"key": "endingBefore",
																					"value": "{{endingBefore}}",
																					"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																					"disabled": true
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "{{organizationId}}",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		},
																		"description": "List wireless LAN controller layer 3 interfaces in an organization"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/devices/interfaces/l3/byDevice?serials=<string>&serials=<string>&t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"wirelessController",
																						"devices",
																						"interfaces",
																						"l3",
																						"byDevice"
																					],
																					"query": [
																						{
																							"key": "serials",
																							"value": "<string>"
																						},
																						{
																							"key": "serials",
																							"value": "<string>"
																						},
																						{
																							"key": "t0",
																							"value": "<string>"
																						},
																						{
																							"key": "t1",
																							"value": "<string>"
																						},
																						{
																							"key": "timespan",
																							"value": "<float>"
																						},
																						{
																							"key": "perPage",
																							"value": "<integer>"
																						},
																						{
																							"key": "startingAfter",
																							"value": "<string>"
																						},
																						{
																							"key": "endingBefore",
																							"value": "<string>"
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "<string>",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Link",
																					"value": "Lorem nisi fugiat",
																					"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																				},
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"items\": [\n    {\n      \"serial\": \"Q234-ABCD-5678\",\n      \"interfaces\": [\n        {\n          \"name\": \"vlan123\",\n          \"description\": \"Wireless Mgmt\",\n          \"mac\": \"1c:e8:5d:00:00:0c\",\n          \"status\": \"disabled\",\n          \"speed\": \"1 Gbps\",\n          \"addresses\": [\n            {\n              \"protocol\": \"ipv4\",\n              \"address\": \"192.168.123.1\",\n              \"subnet\": \"192.168.123.0/24\"\n            }\n          ],\n          \"vrf\": {\n            \"name\": \"Global\"\n          },\n          \"isUplink\": true,\n          \"vlan\": 10,\n          \"linkNegotiation\": \"auto\",\n          \"channelGroup\": {\n            \"number\": 5\n          },\n          \"module\": {\n            \"model\": \"C9800-2X40GE\"\n          }\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 10,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "statuses",
															"item": [
																{
																	"name": "changeHistory",
																	"item": [
																		{
																			"name": "byDevice",
																			"item": [
																				{
																					"name": "getOrganizationWirelessControllerDevicesInterfacesL3StatusesChangeHistoryByDevice",
																					"protocolProfileBehavior": {
																						"followAuthorizationHeader": false
																					},
																					"request": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/devices/interfaces/l3/statuses/changeHistory/byDevice",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"organizations",
																								":organizationId",
																								"wirelessController",
																								"devices",
																								"interfaces",
																								"l3",
																								"statuses",
																								"changeHistory",
																								"byDevice"
																							],
																							"query": [
																								{
																									"key": "serials",
																									"value": "{{serials}}",
																									"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																									"disabled": true
																								},
																								{
																									"key": "serials",
																									"value": "{{serials}}",
																									"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																									"disabled": true
																								},
																								{
																									"key": "includeInterfacesWithoutChanges",
																									"value": "{{includeInterfacesWithoutChanges}}",
																									"description": "By default, interfaces without changes are omitted from the response for brevity. If you want to include the interfaces even if they have no changes, set to true. (default: false)",
																									"disabled": true
																								},
																								{
																									"key": "t0",
																									"value": "{{t0}}",
																									"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
																									"disabled": true
																								},
																								{
																									"key": "t1",
																									"value": "{{t1}}",
																									"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
																									"disabled": true
																								},
																								{
																									"key": "timespan",
																									"value": "{{timespan}}",
																									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
																									"disabled": true
																								},
																								{
																									"key": "perPage",
																									"value": "{{perPage}}",
																									"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																									"disabled": true
																								},
																								{
																									"key": "startingAfter",
																									"value": "{{startingAfter}}",
																									"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																									"disabled": true
																								},
																								{
																									"key": "endingBefore",
																									"value": "{{endingBefore}}",
																									"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																									"disabled": true
																								}
																							],
																							"variable": [
																								{
																									"key": "organizationId",
																									"value": "{{organizationId}}",
																									"description": "(Required) Organization ID"
																								},
																								{
																									"key": "basePath",
																									"value": "{{basePath}}"
																								}
																							]
																						},
																						"description": "List wireless LAN controller layer 3 interfaces history status in an organization"
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "GET",
																								"header": [
																									{
																										"key": "X-Cisco-Meraki-API-Key",
																										"value": "<API Key>",
																										"description": "Added as a part of security scheme: apikey"
																									},
																									{
																										"key": "Accept",
																										"value": "application/json"
																									}
																								],
																								"url": {
																									"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/devices/interfaces/l3/statuses/changeHistory/byDevice?serials=<string>&serials=<string>&includeInterfacesWithoutChanges=<boolean>&t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"organizations",
																										":organizationId",
																										"wirelessController",
																										"devices",
																										"interfaces",
																										"l3",
																										"statuses",
																										"changeHistory",
																										"byDevice"
																									],
																									"query": [
																										{
																											"key": "serials",
																											"value": "<string>"
																										},
																										{
																											"key": "serials",
																											"value": "<string>"
																										},
																										{
																											"key": "includeInterfacesWithoutChanges",
																											"value": "<boolean>"
																										},
																										{
																											"key": "t0",
																											"value": "<string>"
																										},
																										{
																											"key": "t1",
																											"value": "<string>"
																										},
																										{
																											"key": "timespan",
																											"value": "<float>"
																										},
																										{
																											"key": "perPage",
																											"value": "<integer>"
																										},
																										{
																											"key": "startingAfter",
																											"value": "<string>"
																										},
																										{
																											"key": "endingBefore",
																											"value": "<string>"
																										}
																									],
																									"variable": [
																										{
																											"key": "organizationId",
																											"value": "<string>",
																											"description": "(Required) Organization ID"
																										},
																										{
																											"key": "basePath",
																											"value": "{{basePath}}"
																										}
																									]
																								}
																							},
																							"status": "OK",
																							"code": 200,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Link",
																									"value": "Lorem nisi fugiat",
																									"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																								},
																								{
																									"key": "Content-Type",
																									"value": "application/json"
																								}
																							],
																							"cookie": [],
																							"body": "{\n  \"items\": [\n    {\n      \"serial\": \"Q234-ABCD-5678\",\n      \"interfaces\": [\n        {\n          \"name\": \"TenGigabitEthernet0/0/5\",\n          \"mac\": \"b0:c5:3c:0d:c5:0b\",\n          \"changes\": [\n            {\n              \"ts\": \"2020-01-01T00:00:00Z\",\n              \"status\": \"disabled\",\n              \"warnings\": [\n                \"CRC warnings\"\n              ],\n              \"errors\": [\n                \"CRC errors\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 10,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														},
														{
															"name": "usage",
															"item": [
																{
																	"name": "history",
																	"item": [
																		{
																			"name": "byInterval",
																			"item": [
																				{
																					"name": "getOrganizationWirelessControllerDevicesInterfacesL3UsageHistoryByInterval",
																					"protocolProfileBehavior": {
																						"followAuthorizationHeader": false
																					},
																					"request": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/devices/interfaces/l3/usage/history/byInterval",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"organizations",
																								":organizationId",
																								"wirelessController",
																								"devices",
																								"interfaces",
																								"l3",
																								"usage",
																								"history",
																								"byInterval"
																							],
																							"query": [
																								{
																									"key": "serials",
																									"value": "{{serials}}",
																									"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																									"disabled": true
																								},
																								{
																									"key": "serials",
																									"value": "{{serials}}",
																									"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																									"disabled": true
																								},
																								{
																									"key": "t0",
																									"value": "{{t0}}",
																									"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
																									"disabled": true
																								},
																								{
																									"key": "t1",
																									"value": "{{t1}}",
																									"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
																									"disabled": true
																								},
																								{
																									"key": "timespan",
																									"value": "{{timespan}}",
																									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
																									"disabled": true
																								},
																								{
																									"key": "perPage",
																									"value": "{{perPage}}",
																									"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																									"disabled": true
																								},
																								{
																									"key": "startingAfter",
																									"value": "{{startingAfter}}",
																									"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																									"disabled": true
																								},
																								{
																									"key": "endingBefore",
																									"value": "{{endingBefore}}",
																									"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																									"disabled": true
																								}
																							],
																							"variable": [
																								{
																									"key": "organizationId",
																									"value": "{{organizationId}}",
																									"description": "(Required) Organization ID"
																								},
																								{
																									"key": "basePath",
																									"value": "{{basePath}}"
																								}
																							]
																						},
																						"description": "List wireless LAN controller layer 3 interfaces history usage in an organization"
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "GET",
																								"header": [
																									{
																										"key": "X-Cisco-Meraki-API-Key",
																										"value": "<API Key>",
																										"description": "Added as a part of security scheme: apikey"
																									},
																									{
																										"key": "Accept",
																										"value": "application/json"
																									}
																								],
																								"url": {
																									"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/devices/interfaces/l3/usage/history/byInterval?serials=<string>&serials=<string>&t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																									"host": [
																										"{{baseUrl}}"
																									],
																									"path": [
																										"organizations",
																										":organizationId",
																										"wirelessController",
																										"devices",
																										"interfaces",
																										"l3",
																										"usage",
																										"history",
																										"byInterval"
																									],
																									"query": [
																										{
																											"key": "serials",
																											"value": "<string>"
																										},
																										{
																											"key": "serials",
																											"value": "<string>"
																										},
																										{
																											"key": "t0",
																											"value": "<string>"
																										},
																										{
																											"key": "t1",
																											"value": "<string>"
																										},
																										{
																											"key": "timespan",
																											"value": "<float>"
																										},
																										{
																											"key": "perPage",
																											"value": "<integer>"
																										},
																										{
																											"key": "startingAfter",
																											"value": "<string>"
																										},
																										{
																											"key": "endingBefore",
																											"value": "<string>"
																										}
																									],
																									"variable": [
																										{
																											"key": "organizationId",
																											"value": "<string>",
																											"description": "(Required) Organization ID"
																										},
																										{
																											"key": "basePath",
																											"value": "{{basePath}}"
																										}
																									]
																								}
																							},
																							"status": "OK",
																							"code": 200,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Link",
																									"value": "Lorem nisi fugiat",
																									"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																								},
																								{
																									"key": "Content-Type",
																									"value": "application/json"
																								}
																							],
																							"cookie": [],
																							"body": "{\n  \"items\": [\n    {\n      \"serial\": \"Q234-ABCD-5678\",\n      \"readings\": [\n        {\n          \"name\": \"TenGigabitEthernet0/0/5\",\n          \"mac\": \"b0:c5:3c:0d:c5:0b\",\n          \"recv\": 0,\n          \"send\": 0\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 10,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "packets",
													"item": [
														{
															"name": "overview",
															"item": [
																{
																	"name": "byDevice",
																	"item": [
																		{
																			"name": "getOrganizationWirelessControllerDevicesInterfacesPacketsOverviewByDevice",
																			"protocolProfileBehavior": {
																				"followAuthorizationHeader": false
																			},
																			"request": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/devices/interfaces/packets/overview/byDevice",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"wirelessController",
																						"devices",
																						"interfaces",
																						"packets",
																						"overview",
																						"byDevice"
																					],
																					"query": [
																						{
																							"key": "serials",
																							"value": "{{serials}}",
																							"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																							"disabled": true
																						},
																						{
																							"key": "serials",
																							"value": "{{serials}}",
																							"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																							"disabled": true
																						},
																						{
																							"key": "names",
																							"value": "{{names}}",
																							"description": "Optional parameter to filter wireless LAN controller by its interface name. This filter uses multiple exact matches.",
																							"disabled": true
																						},
																						{
																							"key": "names",
																							"value": "{{names}}",
																							"description": "Optional parameter to filter wireless LAN controller by its interface name. This filter uses multiple exact matches.",
																							"disabled": true
																						},
																						{
																							"key": "t0",
																							"value": "{{t0}}",
																							"description": "The beginning of the timespan for the data. The maximum lookback period is 1 day from today.",
																							"disabled": true
																						},
																						{
																							"key": "t1",
																							"value": "{{t1}}",
																							"description": "The end of the timespan for the data. t1 can be a maximum of 1 day after t0.",
																							"disabled": true
																						},
																						{
																							"key": "timespan",
																							"value": "{{timespan}}",
																							"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 1 day. The default is 1 hour.",
																							"disabled": true
																						},
																						{
																							"key": "perPage",
																							"value": "{{perPage}}",
																							"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																							"disabled": true
																						},
																						{
																							"key": "startingAfter",
																							"value": "{{startingAfter}}",
																							"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																							"disabled": true
																						},
																						{
																							"key": "endingBefore",
																							"value": "{{endingBefore}}",
																							"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																							"disabled": true
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "{{organizationId}}",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				},
																				"description": "Retrieve the packet counters for the interfaces of a Wireless LAN controller"
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>",
																								"description": "Added as a part of security scheme: apikey"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/devices/interfaces/packets/overview/byDevice?serials=<string>&serials=<string>&names=<string>&names=<string>&t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"organizations",
																								":organizationId",
																								"wirelessController",
																								"devices",
																								"interfaces",
																								"packets",
																								"overview",
																								"byDevice"
																							],
																							"query": [
																								{
																									"key": "serials",
																									"value": "<string>"
																								},
																								{
																									"key": "serials",
																									"value": "<string>"
																								},
																								{
																									"key": "names",
																									"value": "<string>"
																								},
																								{
																									"key": "names",
																									"value": "<string>"
																								},
																								{
																									"key": "t0",
																									"value": "<string>"
																								},
																								{
																									"key": "t1",
																									"value": "<string>"
																								},
																								{
																									"key": "timespan",
																									"value": "<float>"
																								},
																								{
																									"key": "perPage",
																									"value": "<integer>"
																								},
																								{
																									"key": "startingAfter",
																									"value": "<string>"
																								},
																								{
																									"key": "endingBefore",
																									"value": "<string>"
																								}
																							],
																							"variable": [
																								{
																									"key": "organizationId",
																									"value": "<string>",
																									"description": "(Required) Organization ID"
																								},
																								{
																									"key": "basePath",
																									"value": "{{basePath}}"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Link",
																							"value": "Lorem nisi fugiat",
																							"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																						},
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"items\": [\n    {\n      \"serial\": \"Q234-ABCD-5678\",\n      \"interfaces\": [\n        {\n          \"name\": \"TenGigabitEthernet0/0/0\",\n          \"readings\": [\n            {\n              \"name\": \"Total\",\n              \"total\": 2001,\n              \"recv\": 1000,\n              \"send\": 1001,\n              \"rate\": {\n                \"total\": 12,\n                \"recv\": 3,\n                \"send\": 8\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 10,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "usage",
													"item": [
														{
															"name": "history",
															"item": [
																{
																	"name": "byInterval",
																	"item": [
																		{
																			"name": "getOrganizationWirelessControllerDevicesInterfacesUsageHistoryByInterval",
																			"protocolProfileBehavior": {
																				"followAuthorizationHeader": false
																			},
																			"request": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/devices/interfaces/usage/history/byInterval",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"wirelessController",
																						"devices",
																						"interfaces",
																						"usage",
																						"history",
																						"byInterval"
																					],
																					"query": [
																						{
																							"key": "serials",
																							"value": "{{serials}}",
																							"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																							"disabled": true
																						},
																						{
																							"key": "serials",
																							"value": "{{serials}}",
																							"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																							"disabled": true
																						},
																						{
																							"key": "names",
																							"value": "{{names}}",
																							"description": "Optional parameter to filter wireless LAN controller by its interface name. This filter uses multiple exact matches.",
																							"disabled": true
																						},
																						{
																							"key": "names",
																							"value": "{{names}}",
																							"description": "Optional parameter to filter wireless LAN controller by its interface name. This filter uses multiple exact matches.",
																							"disabled": true
																						},
																						{
																							"key": "t0",
																							"value": "{{t0}}",
																							"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
																							"disabled": true
																						},
																						{
																							"key": "t1",
																							"value": "{{t1}}",
																							"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
																							"disabled": true
																						},
																						{
																							"key": "timespan",
																							"value": "{{timespan}}",
																							"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
																							"disabled": true
																						},
																						{
																							"key": "perPage",
																							"value": "{{perPage}}",
																							"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																							"disabled": true
																						},
																						{
																							"key": "startingAfter",
																							"value": "{{startingAfter}}",
																							"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																							"disabled": true
																						},
																						{
																							"key": "endingBefore",
																							"value": "{{endingBefore}}",
																							"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																							"disabled": true
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "{{organizationId}}",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				},
																				"description": "Retrieve the traffic for the interfaces of a Wireless LAN controller"
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>",
																								"description": "Added as a part of security scheme: apikey"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/devices/interfaces/usage/history/byInterval?serials=<string>&serials=<string>&names=<string>&names=<string>&t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"organizations",
																								":organizationId",
																								"wirelessController",
																								"devices",
																								"interfaces",
																								"usage",
																								"history",
																								"byInterval"
																							],
																							"query": [
																								{
																									"key": "serials",
																									"value": "<string>"
																								},
																								{
																									"key": "serials",
																									"value": "<string>"
																								},
																								{
																									"key": "names",
																									"value": "<string>"
																								},
																								{
																									"key": "names",
																									"value": "<string>"
																								},
																								{
																									"key": "t0",
																									"value": "<string>"
																								},
																								{
																									"key": "t1",
																									"value": "<string>"
																								},
																								{
																									"key": "timespan",
																									"value": "<float>"
																								},
																								{
																									"key": "perPage",
																									"value": "<integer>"
																								},
																								{
																									"key": "startingAfter",
																									"value": "<string>"
																								},
																								{
																									"key": "endingBefore",
																									"value": "<string>"
																								}
																							],
																							"variable": [
																								{
																									"key": "organizationId",
																									"value": "<string>",
																									"description": "(Required) Organization ID"
																								},
																								{
																									"key": "basePath",
																									"value": "{{basePath}}"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Link",
																							"value": "Lorem nisi fugiat",
																							"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																						},
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"items\": [\n    {\n      \"serial\": \"Q234-ABCD-5678\",\n      \"intervals\": [\n        {\n          \"startTs\": \"2024-07-25T03:20:55Z\",\n          \"endTs\": \"2024-07-25T03:25:55Z\",\n          \"overall\": {\n            \"total\": 12300,\n            \"recv\": 2300,\n            \"send\": 10000\n          },\n          \"byInterface\": [\n            {\n              \"name\": \"TenGigabitEthernet0/0/1\",\n              \"usage\": {\n                \"total\": 12300,\n                \"recv\": 2300,\n                \"send\": 10000\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 10,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "redundancy",
											"item": [
												{
													"name": "failover",
													"item": [
														{
															"name": "history",
															"item": [
																{
																	"name": "getOrganizationWirelessControllerDevicesRedundancyFailoverHistory",
																	"protocolProfileBehavior": {
																		"followAuthorizationHeader": false
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/devices/redundancy/failover/history",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"wirelessController",
																				"devices",
																				"redundancy",
																				"failover",
																				"history"
																			],
																			"query": [
																				{
																					"key": "serials",
																					"value": "{{serials}}",
																					"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																					"disabled": true
																				},
																				{
																					"key": "serials",
																					"value": "{{serials}}",
																					"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																					"disabled": true
																				},
																				{
																					"key": "t0",
																					"value": "{{t0}}",
																					"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
																					"disabled": true
																				},
																				{
																					"key": "t1",
																					"value": "{{t1}}",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
																					"disabled": true
																				},
																				{
																					"key": "timespan",
																					"value": "{{timespan}}",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
																					"disabled": true
																				},
																				{
																					"key": "perPage",
																					"value": "{{perPage}}",
																					"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																					"disabled": true
																				},
																				{
																					"key": "startingAfter",
																					"value": "{{startingAfter}}",
																					"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																					"disabled": true
																				},
																				{
																					"key": "endingBefore",
																					"value": "{{endingBefore}}",
																					"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																					"disabled": true
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "{{organizationId}}",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		},
																		"description": "List the failover events of wireless LAN controllers in an organization"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>",
																						"description": "Added as a part of security scheme: apikey"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/devices/redundancy/failover/history?serials=<string>&serials=<string>&t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"wirelessController",
																						"devices",
																						"redundancy",
																						"failover",
																						"history"
																					],
																					"query": [
																						{
																							"key": "serials",
																							"value": "<string>"
																						},
																						{
																							"key": "serials",
																							"value": "<string>"
																						},
																						{
																							"key": "t0",
																							"value": "<string>"
																						},
																						{
																							"key": "t1",
																							"value": "<string>"
																						},
																						{
																							"key": "timespan",
																							"value": "<float>"
																						},
																						{
																							"key": "perPage",
																							"value": "<integer>"
																						},
																						{
																							"key": "startingAfter",
																							"value": "<string>"
																						},
																						{
																							"key": "endingBefore",
																							"value": "<string>"
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "<string>",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Link",
																					"value": "Lorem nisi fugiat",
																					"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																				},
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "[\n  {\n    \"items\": [\n      {\n        \"serial\": \"Q234-ABCD-5678\",\n        \"ts\": \"2020-01-01T00:00:00Z\",\n        \"reason\": \"Active Unit Failed\",\n        \"failed\": {\n          \"chassis\": {\n            \"name\": \"Chassis 2\"\n          }\n        },\n        \"active\": {\n          \"chassis\": {\n            \"name\": \"Chassis 1\"\n          }\n        }\n      }\n    ],\n    \"meta\": {\n      \"counts\": {\n        \"items\": {\n          \"total\": 10,\n          \"remaining\": 0\n        }\n      }\n    }\n  }\n]"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "statuses",
													"item": [
														{
															"name": "getOrganizationWirelessControllerDevicesRedundancyStatuses",
															"protocolProfileBehavior": {
																"followAuthorizationHeader": false
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/devices/redundancy/statuses",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"wirelessController",
																		"devices",
																		"redundancy",
																		"statuses"
																	],
																	"query": [
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "Optional parameter to filter wireless LAN controller by its cloud IDs. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "serials",
																			"value": "{{serials}}",
																			"description": "Optional parameter to filter wireless LAN controller by its cloud IDs. This filter uses multiple exact matches.",
																			"disabled": true
																		},
																		{
																			"key": "perPage",
																			"value": "{{perPage}}",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																			"disabled": true
																		},
																		{
																			"key": "startingAfter",
																			"value": "{{startingAfter}}",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		},
																		{
																			"key": "endingBefore",
																			"value": "{{endingBefore}}",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																			"disabled": true
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "{{organizationId}}",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																},
																"description": "List redundancy details of wireless LAN controllers in an organization. The failover count refers to the total failovers system happens from the moment of this device onboarding to Dashboard"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>",
																				"description": "Added as a part of security scheme: apikey"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/devices/redundancy/statuses?serials=<string>&serials=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"organizations",
																				":organizationId",
																				"wirelessController",
																				"devices",
																				"redundancy",
																				"statuses"
																			],
																			"query": [
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "serials",
																					"value": "<string>"
																				},
																				{
																					"key": "perPage",
																					"value": "<integer>"
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>"
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "<string>",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "basePath",
																					"value": "{{basePath}}"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Link",
																			"value": "Lorem nisi fugiat",
																			"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																		},
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"items\": [\n    {\n      \"serial\": \"Q234-ABCD-5678\",\n      \"mode\": \"SSO\",\n      \"enabled\": true,\n      \"failover\": {\n        \"last\": {\n          \"ts\": \"2020-01-01T00:00:00Z\",\n          \"reason\": \"Active Unit Failed\"\n        },\n        \"counts\": {\n          \"total\": 2\n        }\n      },\n      \"mobilityMac\": \"b0:c5:3c:0d:c5:0b\"\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 10,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "system",
											"item": [
												{
													"name": "utilization",
													"item": [
														{
															"name": "history",
															"item": [
																{
																	"name": "byInterval",
																	"item": [
																		{
																			"name": "getOrganizationWirelessControllerDevicesSystemUtilizationHistoryByInterval",
																			"protocolProfileBehavior": {
																				"followAuthorizationHeader": false
																			},
																			"request": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/devices/system/utilization/history/byInterval",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"organizations",
																						":organizationId",
																						"wirelessController",
																						"devices",
																						"system",
																						"utilization",
																						"history",
																						"byInterval"
																					],
																					"query": [
																						{
																							"key": "serials",
																							"value": "{{serials}}",
																							"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																							"disabled": true
																						},
																						{
																							"key": "serials",
																							"value": "{{serials}}",
																							"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																							"disabled": true
																						},
																						{
																							"key": "t0",
																							"value": "{{t0}}",
																							"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
																							"disabled": true
																						},
																						{
																							"key": "t1",
																							"value": "{{t1}}",
																							"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0.",
																							"disabled": true
																						},
																						{
																							"key": "timespan",
																							"value": "{{timespan}}",
																							"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.",
																							"disabled": true
																						},
																						{
																							"key": "perPage",
																							"value": "{{perPage}}",
																							"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																							"disabled": true
																						},
																						{
																							"key": "startingAfter",
																							"value": "{{startingAfter}}",
																							"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																							"disabled": true
																						},
																						{
																							"key": "endingBefore",
																							"value": "{{endingBefore}}",
																							"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																							"disabled": true
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationId",
																							"value": "{{organizationId}}",
																							"description": "(Required) Organization ID"
																						},
																						{
																							"key": "basePath",
																							"value": "{{basePath}}"
																						}
																					]
																				},
																				"description": "List cpu utilization data of wireless LAN controllers in an organization"
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>",
																								"description": "Added as a part of security scheme: apikey"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"url": {
																							"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/devices/system/utilization/history/byInterval?serials=<string>&serials=<string>&t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"organizations",
																								":organizationId",
																								"wirelessController",
																								"devices",
																								"system",
																								"utilization",
																								"history",
																								"byInterval"
																							],
																							"query": [
																								{
																									"key": "serials",
																									"value": "<string>"
																								},
																								{
																									"key": "serials",
																									"value": "<string>"
																								},
																								{
																									"key": "t0",
																									"value": "<string>"
																								},
																								{
																									"key": "t1",
																									"value": "<string>"
																								},
																								{
																									"key": "timespan",
																									"value": "<float>"
																								},
																								{
																									"key": "perPage",
																									"value": "<integer>"
																								},
																								{
																									"key": "startingAfter",
																									"value": "<string>"
																								},
																								{
																									"key": "endingBefore",
																									"value": "<string>"
																								}
																							],
																							"variable": [
																								{
																									"key": "organizationId",
																									"value": "<string>",
																									"description": "(Required) Organization ID"
																								},
																								{
																									"key": "basePath",
																									"value": "{{basePath}}"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Link",
																							"value": "Lorem nisi fugiat",
																							"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																						},
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"items\": [\n    {\n      \"serial\": \"Q234-ABCD-5678\",\n      \"intervals\": [\n        {\n          \"startTs\": \"2024-03-04T05:25:03Z\",\n          \"endTs\": \"2024-03-04T05:30:19Z\",\n          \"overall\": {\n            \"usage\": {\n              \"average\": {\n                \"percentage\": 10.59\n              }\n            }\n          },\n          \"byCore\": [\n            {\n              \"name\": \"0\",\n              \"usage\": {\n                \"average\": {\n                  \"percentage\": 2.74\n                }\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 10,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "overview",
									"item": [
										{
											"name": "byDevice",
											"item": [
												{
													"name": "getOrganizationWirelessControllerOverviewByDevice",
													"protocolProfileBehavior": {
														"followAuthorizationHeader": false
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/overview/byDevice",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organizationId",
																"wirelessController",
																"overview",
																"byDevice"
															],
															"query": [
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Optional parameter to filter wireless LAN controllers by network ID. This filter uses multiple exact matches.",
																	"disabled": true
																},
																{
																	"key": "networkIds",
																	"value": "{{networkIds}}",
																	"description": "Optional parameter to filter wireless LAN controllers by network ID. This filter uses multiple exact matches.",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																	"disabled": true
																},
																{
																	"key": "serials",
																	"value": "{{serials}}",
																	"description": "Optional parameter to filter wireless LAN controller by its cloud ID. This filter uses multiple exact matches.",
																	"disabled": true
																},
																{
																	"key": "perPage",
																	"value": "{{perPage}}",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
																	"disabled": true
																},
																{
																	"key": "startingAfter",
																	"value": "{{startingAfter}}",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																},
																{
																	"key": "endingBefore",
																	"value": "{{endingBefore}}",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
																	"disabled": true
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "{{organizationId}}",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "basePath",
																	"value": "{{basePath}}"
																}
															]
														},
														"description": "List the overview information of wireless LAN controllers in an organization and it is updated every minute."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>",
																		"description": "Added as a part of security scheme: apikey"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organizationId/wirelessController/overview/byDevice?networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organizationId",
																		"wirelessController",
																		"overview",
																		"byDevice"
																	],
																	"query": [
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "serials",
																			"value": "<string>"
																		},
																		{
																			"key": "perPage",
																			"value": "<integer>"
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>"
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "<string>",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "basePath",
																			"value": "{{basePath}}"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Link",
																	"value": "Lorem nisi fugiat",
																	"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
																},
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"items\": [\n    {\n      \"serial\": \"Q234-ABCD-5678\",\n      \"network\": {\n        \"id\": \"N_24329156\"\n      },\n      \"counts\": {\n        \"clients\": {\n          \"byStatus\": {\n            \"online\": 300\n          }\n        },\n        \"connections\": {\n          \"total\": 200,\n          \"byStatus\": {\n            \"online\": 180,\n            \"offline\": 20\n          }\n        }\n      },\n      \"redundancy\": {\n        \"role\": \"Active\",\n        \"id\": \"123456\",\n        \"chassisName\": \"Chassis 1\",\n        \"redundantSerial\": \"Q234-ABCD-5679\",\n        \"management\": {\n          \"addresses\": [\n            {\n              \"address\": \"10.14.140.5\"\n            }\n          ]\n        }\n      },\n      \"firmware\": {\n        \"version\": {\n          \"shortName\": \"ios-xe\"\n        }\n      }\n    }\n  ],\n  \"meta\": {\n    \"counts\": {\n      \"items\": {\n        \"total\": 10,\n        \"remaining\": 0\n      }\n    }\n  }\n}"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "getOrganizations",
			"protocolProfileBehavior": {
				"followAuthorizationHeader": false
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/organizations",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"organizations"
					],
					"query": [
						{
							"key": "perPage",
							"value": "{{perPage}}",
							"description": "The number of entries per page returned. Acceptable range is 3 - 9000. Default is 9000.",
							"disabled": true
						},
						{
							"key": "startingAfter",
							"value": "{{startingAfter}}",
							"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
							"disabled": true
						},
						{
							"key": "endingBefore",
							"value": "{{endingBefore}}",
							"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "basePath",
							"value": "{{basePath}}"
						}
					]
				},
				"description": "List the organizations that the user has privileges on"
			},
			"response": [
				{
					"name": "Successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cisco-Meraki-API-Key",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							],
							"query": [
								{
									"key": "perPage",
									"value": "<integer>"
								},
								{
									"key": "startingAfter",
									"value": "<string>"
								},
								{
									"key": "endingBefore",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "basePath",
									"value": "{{basePath}}"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Link",
							"value": "Lorem nisi fugiat",
							"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"id\": \"2930418\",\n    \"name\": \"My organization\",\n    \"url\": \"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview\",\n    \"api\": {\n      \"enabled\": true\n    },\n    \"licensing\": {\n      \"model\": \"co-term\"\n    },\n    \"cloud\": {\n      \"region\": {\n        \"name\": \"North America\",\n        \"host\": {\n          \"name\": \"United States\"\n        }\n      }\n    },\n    \"management\": {\n      \"details\": [\n        {\n          \"name\": \"MSP ID\",\n          \"value\": \"123456\"\n        }\n      ]\n    }\n  }\n]"
				}
			]
		},
		{
			"name": "getOrganizationNetworks",
			"protocolProfileBehavior": {
				"followAuthorizationHeader": false
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/organizations/:organizationId/networks",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"organizations",
						":organizationId",
						"networks"
					],
					"query": [
						{
							"key": "configTemplateId",
							"value": "{{configTemplateId}}",
							"description": "An optional parameter that is the ID of a config template. Will return all networks bound to that template.",
							"disabled": true
						},
						{
							"key": "isBoundToConfigTemplate",
							"value": "{{isBoundToConfigTemplate}}",
							"description": "An optional parameter to filter config template bound networks. If configTemplateId is set, this cannot be false.",
							"disabled": true
						},
						{
							"key": "tags",
							"value": "{{tags}}",
							"description": "An optional parameter to filter networks by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).",
							"disabled": true
						},
						{
							"key": "tags",
							"value": "{{tags}}",
							"description": "An optional parameter to filter networks by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).",
							"disabled": true
						},
						{
							"key": "tagsFilterType",
							"value": "{{tagsFilterType}}",
							"description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.",
							"disabled": true
						},
						{
							"key": "productTypes",
							"value": "{{productTypes}}",
							"description": "An optional parameter to filter networks by product type. Results will have at least one of the included product types.",
							"disabled": true
						},
						{
							"key": "productTypes",
							"value": "{{productTypes}}",
							"description": "An optional parameter to filter networks by product type. Results will have at least one of the included product types.",
							"disabled": true
						},
						{
							"key": "perPage",
							"value": "{{perPage}}",
							"description": "The number of entries per page returned. Acceptable range is 3 - 100000. Default is 1000.",
							"disabled": true
						},
						{
							"key": "startingAfter",
							"value": "{{startingAfter}}",
							"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
							"disabled": true
						},
						{
							"key": "endingBefore",
							"value": "{{endingBefore}}",
							"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "organizationId",
							"value": "{{organizationId}}",
							"description": "(Required) Organization ID"
						},
						{
							"key": "basePath",
							"value": "{{basePath}}"
						}
					]
				},
				"description": "List the networks that the user has privileges on in an organization"
			},
			"response": [
				{
					"name": "Successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cisco-Meraki-API-Key",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/networks?configTemplateId=<string>&isBoundToConfigTemplate=<boolean>&tags=<string>&tags=<string>&tagsFilterType=<string>&productTypes=<string>&productTypes=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"networks"
							],
							"query": [
								{
									"key": "configTemplateId",
									"value": "<string>"
								},
								{
									"key": "isBoundToConfigTemplate",
									"value": "<boolean>"
								},
								{
									"key": "tags",
									"value": "<string>"
								},
								{
									"key": "tags",
									"value": "<string>"
								},
								{
									"key": "tagsFilterType",
									"value": "<string>"
								},
								{
									"key": "productTypes",
									"value": "<string>"
								},
								{
									"key": "productTypes",
									"value": "<string>"
								},
								{
									"key": "perPage",
									"value": "<integer>"
								},
								{
									"key": "startingAfter",
									"value": "<string>"
								},
								{
									"key": "endingBefore",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "<string>",
									"description": "(Required) Organization ID"
								},
								{
									"key": "basePath",
									"value": "{{basePath}}"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Link",
							"value": "Lorem nisi fugiat",
							"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"id\": \"N_24329156\",\n    \"organizationId\": \"2930418\",\n    \"name\": \"Main Office\",\n    \"productTypes\": [\n      \"appliance\",\n      \"switch\",\n      \"wireless\"\n    ],\n    \"timeZone\": \"America/Los_Angeles\",\n    \"tags\": [\n      \"tag1\",\n      \"tag2\"\n    ],\n    \"enrollmentString\": \"my-enrollment-string\",\n    \"url\": \"https://n1.meraki.com//n//manage/nodes/list\",\n    \"notes\": \"Additional description of the network\",\n    \"isBoundToConfigTemplate\": false\n  }\n]"
				}
			]
		},
		{
			"name": "getOrganizationDevices",
			"protocolProfileBehavior": {
				"followAuthorizationHeader": false
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/organizations/:organizationId/devices",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"organizations",
						":organizationId",
						"devices"
					],
					"query": [
						{
							"key": "perPage",
							"value": "{{perPage}}",
							"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.",
							"disabled": true
						},
						{
							"key": "startingAfter",
							"value": "{{startingAfter}}",
							"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
							"disabled": true
						},
						{
							"key": "endingBefore",
							"value": "{{endingBefore}}",
							"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
							"disabled": true
						},
						{
							"key": "configurationUpdatedAfter",
							"value": "{{configurationUpdatedAfter}}",
							"description": "Filter results by whether or not the device's configuration has been updated after the given timestamp",
							"disabled": true
						},
						{
							"key": "networkIds",
							"value": "{{networkIds}}",
							"description": "Optional parameter to filter devices by network.",
							"disabled": true
						},
						{
							"key": "networkIds",
							"value": "{{networkIds}}",
							"description": "Optional parameter to filter devices by network.",
							"disabled": true
						},
						{
							"key": "productTypes",
							"value": "{{productTypes}}",
							"description": "Optional parameter to filter devices by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor, wirelessController, and secureConnect.",
							"disabled": true
						},
						{
							"key": "productTypes",
							"value": "{{productTypes}}",
							"description": "Optional parameter to filter devices by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor, wirelessController, and secureConnect.",
							"disabled": true
						},
						{
							"key": "tags",
							"value": "{{tags}}",
							"description": "Optional parameter to filter devices by tags.",
							"disabled": true
						},
						{
							"key": "tags",
							"value": "{{tags}}",
							"description": "Optional parameter to filter devices by tags.",
							"disabled": true
						},
						{
							"key": "tagsFilterType",
							"value": "{{tagsFilterType}}",
							"description": "Optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.",
							"disabled": true
						},
						{
							"key": "name",
							"value": "{{name}}",
							"description": "Optional parameter to filter devices by name. All returned devices will have a name that contains the search term or is an exact match.",
							"disabled": true
						},
						{
							"key": "mac",
							"value": "{{mac}}",
							"description": "Optional parameter to filter devices by MAC address. All returned devices will have a MAC address that contains the search term or is an exact match.",
							"disabled": true
						},
						{
							"key": "serial",
							"value": "{{serial}}",
							"description": "Optional parameter to filter devices by serial number. All returned devices will have a serial number that contains the search term or is an exact match.",
							"disabled": true
						},
						{
							"key": "model",
							"value": "{{model}}",
							"description": "Optional parameter to filter devices by model. All returned devices will have a model that contains the search term or is an exact match.",
							"disabled": true
						},
						{
							"key": "macs",
							"value": "{{macs}}",
							"description": "Optional parameter to filter devices by one or more MAC addresses. All returned devices will have a MAC address that is an exact match.",
							"disabled": true
						},
						{
							"key": "macs",
							"value": "{{macs}}",
							"description": "Optional parameter to filter devices by one or more MAC addresses. All returned devices will have a MAC address that is an exact match.",
							"disabled": true
						},
						{
							"key": "serials",
							"value": "{{serials}}",
							"description": "Optional parameter to filter devices by one or more serial numbers. All returned devices will have a serial number that is an exact match.",
							"disabled": true
						},
						{
							"key": "serials",
							"value": "{{serials}}",
							"description": "Optional parameter to filter devices by one or more serial numbers. All returned devices will have a serial number that is an exact match.",
							"disabled": true
						},
						{
							"key": "sensorMetrics",
							"value": "{{sensorMetrics}}",
							"description": "Optional parameter to filter devices by the metrics that they provide. Only applies to sensor devices.",
							"disabled": true
						},
						{
							"key": "sensorMetrics",
							"value": "{{sensorMetrics}}",
							"description": "Optional parameter to filter devices by the metrics that they provide. Only applies to sensor devices.",
							"disabled": true
						},
						{
							"key": "sensorAlertProfileIds",
							"value": "{{sensorAlertProfileIds}}",
							"description": "Optional parameter to filter devices by the alert profiles that are bound to them. Only applies to sensor devices.",
							"disabled": true
						},
						{
							"key": "sensorAlertProfileIds",
							"value": "{{sensorAlertProfileIds}}",
							"description": "Optional parameter to filter devices by the alert profiles that are bound to them. Only applies to sensor devices.",
							"disabled": true
						},
						{
							"key": "models",
							"value": "{{models}}",
							"description": "Optional parameter to filter devices by one or more models. All returned devices will have a model that is an exact match.",
							"disabled": true
						},
						{
							"key": "models",
							"value": "{{models}}",
							"description": "Optional parameter to filter devices by one or more models. All returned devices will have a model that is an exact match.",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "organizationId",
							"value": "{{organizationId}}",
							"description": "(Required) Organization ID"
						},
						{
							"key": "basePath",
							"value": "{{basePath}}"
						}
					]
				},
				"description": "List the devices in an organization that have been assigned to a network."
			},
			"response": [
				{
					"name": "Successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cisco-Meraki-API-Key",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations/:organizationId/devices?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&configurationUpdatedAfter=<string>&networkIds=<string>&networkIds=<string>&productTypes=<string>&productTypes=<string>&tags=<string>&tags=<string>&tagsFilterType=<string>&name=<string>&mac=<string>&serial=<string>&model=<string>&macs=<string>&macs=<string>&serials=<string>&serials=<string>&sensorMetrics=<string>&sensorMetrics=<string>&sensorAlertProfileIds=<string>&sensorAlertProfileIds=<string>&models=<string>&models=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								":organizationId",
								"devices"
							],
							"query": [
								{
									"key": "perPage",
									"value": "<integer>"
								},
								{
									"key": "startingAfter",
									"value": "<string>"
								},
								{
									"key": "endingBefore",
									"value": "<string>"
								},
								{
									"key": "configurationUpdatedAfter",
									"value": "<string>"
								},
								{
									"key": "networkIds",
									"value": "<string>"
								},
								{
									"key": "networkIds",
									"value": "<string>"
								},
								{
									"key": "productTypes",
									"value": "<string>"
								},
								{
									"key": "productTypes",
									"value": "<string>"
								},
								{
									"key": "tags",
									"value": "<string>"
								},
								{
									"key": "tags",
									"value": "<string>"
								},
								{
									"key": "tagsFilterType",
									"value": "<string>"
								},
								{
									"key": "name",
									"value": "<string>"
								},
								{
									"key": "mac",
									"value": "<string>"
								},
								{
									"key": "serial",
									"value": "<string>"
								},
								{
									"key": "model",
									"value": "<string>"
								},
								{
									"key": "macs",
									"value": "<string>"
								},
								{
									"key": "macs",
									"value": "<string>"
								},
								{
									"key": "serials",
									"value": "<string>"
								},
								{
									"key": "serials",
									"value": "<string>"
								},
								{
									"key": "sensorMetrics",
									"value": "<string>"
								},
								{
									"key": "sensorMetrics",
									"value": "<string>"
								},
								{
									"key": "sensorAlertProfileIds",
									"value": "<string>"
								},
								{
									"key": "sensorAlertProfileIds",
									"value": "<string>"
								},
								{
									"key": "models",
									"value": "<string>"
								},
								{
									"key": "models",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "<string>",
									"description": "(Required) Organization ID"
								},
								{
									"key": "basePath",
									"value": "{{basePath}}"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Link",
							"value": "Lorem nisi fugiat",
							"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"name\": \"My AP\",\n    \"lat\": 37.4180951010362,\n    \"lng\": -122.098531723022,\n    \"address\": \"1600 Pennsylvania Ave\",\n    \"notes\": \"My AP's note\",\n    \"tags\": [\n      \"recently-added\"\n    ],\n    \"networkId\": \"N_24329156\",\n    \"serial\": \"Q234-ABCD-5678\",\n    \"model\": \"MR34\",\n    \"imei\": \"123456789000000\",\n    \"mac\": \"00:11:22:33:44:55\",\n    \"lanIp\": \"1.2.3.4\",\n    \"firmware\": \"wireless-25-14\",\n    \"productType\": \"wireless\",\n    \"details\": [\n      {\n        \"name\": \"Catalyst serial\",\n        \"value\": \"123ABC\"\n      }\n    ]\n  }\n]"
				}
			]
		},
		{
			"name": "getNetworkClients",
			"protocolProfileBehavior": {
				"followAuthorizationHeader": false
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/networks/:networkId/clients",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networks",
						":networkId",
						"clients"
					],
					"query": [
						{
							"key": "t0",
							"value": "{{t0}}",
							"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today.",
							"disabled": true
						},
						{
							"key": "timespan",
							"value": "{{timespan}}",
							"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.",
							"disabled": true
						},
						{
							"key": "perPage",
							"value": "{{perPage}}",
							"description": "The number of entries per page returned. Acceptable range is 3 - 5000. Default is 10.",
							"disabled": true
						},
						{
							"key": "startingAfter",
							"value": "{{startingAfter}}",
							"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
							"disabled": true
						},
						{
							"key": "endingBefore",
							"value": "{{endingBefore}}",
							"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.",
							"disabled": true
						},
						{
							"key": "statuses",
							"value": "{{statuses}}",
							"description": "Filters clients based on status. Can be one of 'Online' or 'Offline'.",
							"disabled": true
						},
						{
							"key": "statuses",
							"value": "{{statuses}}",
							"description": "Filters clients based on status. Can be one of 'Online' or 'Offline'.",
							"disabled": true
						},
						{
							"key": "ip",
							"value": "{{ip}}",
							"description": "Filters clients based on a partial or full match for the ip address field.",
							"disabled": true
						},
						{
							"key": "ip6",
							"value": "{{ip6}}",
							"description": "Filters clients based on a partial or full match for the ip6 address field.",
							"disabled": true
						},
						{
							"key": "ip6Local",
							"value": "{{ip6Local}}",
							"description": "Filters clients based on a partial or full match for the ip6Local address field.",
							"disabled": true
						},
						{
							"key": "mac",
							"value": "{{mac}}",
							"description": "Filters clients based on a partial or full match for the mac address field.",
							"disabled": true
						},
						{
							"key": "os",
							"value": "{{os}}",
							"description": "Filters clients based on a partial or full match for the os (operating system) field.",
							"disabled": true
						},
						{
							"key": "pskGroup",
							"value": "{{pskGroup}}",
							"description": "Filters clients based on partial or full match for the iPSK name field.",
							"disabled": true
						},
						{
							"key": "description",
							"value": "{{description}}",
							"description": "Filters clients based on a partial or full match for the description field.",
							"disabled": true
						},
						{
							"key": "vlan",
							"value": "{{vlan}}",
							"description": "Filters clients based on the full match for the VLAN field.",
							"disabled": true
						},
						{
							"key": "namedVlan",
							"value": "{{namedVlan}}",
							"description": "Filters clients based on the partial or full match for the named VLAN field.",
							"disabled": true
						},
						{
							"key": "recentDeviceConnections",
							"value": "{{recentDeviceConnections}}",
							"description": "Filters clients based on recent connection type. Can be one of 'Wired' or 'Wireless'.",
							"disabled": true
						},
						{
							"key": "recentDeviceConnections",
							"value": "{{recentDeviceConnections}}",
							"description": "Filters clients based on recent connection type. Can be one of 'Wired' or 'Wireless'.",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "networkId",
							"value": "{{networkId}}",
							"description": "(Required) Network ID"
						},
						{
							"key": "basePath",
							"value": "{{basePath}}"
						}
					]
				},
				"description": "List the clients that have used this network in the timespan. The data is updated at most once every five minutes."
			},
			"response": [
				{
					"name": "Successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cisco-Meraki-API-Key",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networks/:networkId/clients?t0=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&statuses=<string>&statuses=<string>&ip=<string>&ip6=<string>&ip6Local=<string>&mac=<string>&os=<string>&pskGroup=<string>&description=<string>&vlan=<string>&namedVlan=<string>&recentDeviceConnections=<string>&recentDeviceConnections=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":networkId",
								"clients"
							],
							"query": [
								{
									"key": "t0",
									"value": "<string>"
								},
								{
									"key": "timespan",
									"value": "<float>"
								},
								{
									"key": "perPage",
									"value": "<integer>"
								},
								{
									"key": "startingAfter",
									"value": "<string>"
								},
								{
									"key": "endingBefore",
									"value": "<string>"
								},
								{
									"key": "statuses",
									"value": "<string>"
								},
								{
									"key": "statuses",
									"value": "<string>"
								},
								{
									"key": "ip",
									"value": "<string>"
								},
								{
									"key": "ip6",
									"value": "<string>"
								},
								{
									"key": "ip6Local",
									"value": "<string>"
								},
								{
									"key": "mac",
									"value": "<string>"
								},
								{
									"key": "os",
									"value": "<string>"
								},
								{
									"key": "pskGroup",
									"value": "<string>"
								},
								{
									"key": "description",
									"value": "<string>"
								},
								{
									"key": "vlan",
									"value": "<string>"
								},
								{
									"key": "namedVlan",
									"value": "<string>"
								},
								{
									"key": "recentDeviceConnections",
									"value": "<string>"
								},
								{
									"key": "recentDeviceConnections",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "networkId",
									"value": "<string>",
									"description": "(Required) Network ID"
								},
								{
									"key": "basePath",
									"value": "{{basePath}}"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Link",
							"value": "Lorem nisi fugiat",
							"description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"id\": \"k74272e\",\n    \"mac\": \"22:33:44:55:66:77\",\n    \"ip\": \"1.2.3.4\",\n    \"ip6\": \"2001:db8:3c4d:15::1\",\n    \"description\": \"Miles's phone\",\n    \"firstSeen\": 1518365681,\n    \"lastSeen\": 1526087474,\n    \"manufacturer\": \"Apple\",\n    \"os\": \"iOS\",\n    \"user\": \"milesmeraki\",\n    \"vlan\": \"100\",\n    \"ssid\": \"My SSID\",\n    \"switchport\": \"My switch port\",\n    \"wirelessCapabilities\": \"802.11b - 2.4 GHz\",\n    \"smInstalled\": true,\n    \"recentDeviceMac\": \"22:33:44:55:66:77\",\n    \"status\": \"Online\",\n    \"usage\": {\n      \"sent\": 138,\n      \"recv\": 61\n    },\n    \"namedVlan\": \"My VLAN\",\n    \"adaptivePolicyGroup\": \"2: Infrastructure\",\n    \"deviceTypePrediction\": \"iPhone SE, iOS9.3.5\",\n    \"recentDeviceSerial\": \"Q234-ABCD-5678\",\n    \"recentDeviceName\": \"00:11:22:33:44:55\",\n    \"recentDeviceConnection\": \"Wired\",\n    \"notes\": \"My AP's note\",\n    \"ip6Local\": \"fe80:0:0:0:1430:aac1:6826:75ab\",\n    \"groupPolicy8021x\": \"Student_Access\",\n    \"pskGroup\": \"Group 1\"\n  }\n]"
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{apiKey}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// JSON Magic Postman Template",
					"const templateUrl = \"https://raw.githubusercontent.com/dexterlabora/json-magic/master/postman/postman-viz-jsonmagic-template.html\"",
					"",
					"//Load template",
					"pm.sendRequest(templateUrl,  (_, res) => { ",
					"    var template = res.text()",
					"    var data = pm.response.json()",
					"    pm.visualizer.set(template, data )",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.meraki.com/api/v1",
			"type": "string"
		},
		{
			"key": "organizationId",
			"value": "",
			"type": "string"
		},
		{
			"key": "networkId",
			"value": "",
			"type": "string"
		},
		{
			"key": "serial",
			"value": "",
			"type": "string"
		}
	]
}