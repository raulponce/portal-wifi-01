-- TYPE: BY_TIME, UNKNOWN
-- STATUS: READY, UNAVAILABLE, DELETED, ON_CONFIG
-- CURRENCY: USD, ARS

CREATE TABLE VOUCHERS (
    ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
    NAME VARCHAR(32) NOT NULL,
    TYPE VARCHAR(32) NOT NULL,
    STATUS VARCHAR(32) DEFAULT 'READY' NOT NULL,
    CURRENCY VARCHAR(6) NOT NULL,
    PRICE DECIMAL(9,3) NOT NULL DEFAULT 0,

    DATA_ENUM VARCHAR(64) DEFAULT NULL,
    DATA_UINT INT UNSIGNED DEFAULT NULL,

    PRIMARY KEY(ID),
    UNIQUE KEY (NAME)
);

-- STATUS: READY, BANNED, DELETED

CREATE TABLE CLIENTS (
    ID INT UNSIGNED AUTO_INCREMENT NOT NULL,
    NAME VARCHAR(128) DEFAULT NULL,
    EMAIL VARCHAR(128) DEFAULT NULL,
    STATUS VARCHAR(32) DEFAULT 'READY' NOT NULL,

    CREATION_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    LAST_OPERATION TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,

    LAST_VOUCHER_ID INT UNSIGNED DEFAULT NULL,

    PRIMARY KEY(ID)
);

-- STATUS: PENDING, UNAUTHORIZED, AUTHORIZED, EXPIRED, DELETED

CREATE TABLE DEVICES (
    CLIENT_ID INT UNSIGNED NOT NULL,
    MAC VARCHAR(20) NOT NULL,
    IP VARCHAR(20) NOT NULL,

    STATUS VARCHAR(64) DEFAULT 'PENDING' NOT NULL,
    LAST_OPERATION TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,

    PRIMARY KEY(CLIENT_ID, MAC),
    INDEX(MAC),
    INDEX(IP)
);

-- CURRENCY: USD, ARS
-- STATUS: READY_TO_ASSIGN, ASSIGNED, EXPIRED, PAUSED, DELETED

CREATE TABLE IF NOT EXISTS CLIENT_VAUCHERS (
    ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
    CLIENT_ID INT UNSIGNED NOT NULL,
    DEVICE_MAC VARCHAR(20) NOT NULL,

    VOUCHER_ID INT UNSIGNED DEFAULT NULL,
    VOUCHER_TYPE VARCHAR(32) NOT NULL,
    VOUCHER_NAME VARCHAR(20) NOT NULL,

    DEVICE_IP VARCHAR(20) NOT NULL,

    CURRENCY VARCHAR(6) NOT NULL,
    PRICE DECIMAL(9,3) NOT NULL DEFAULT 0,

    STARTED_TIME TIMESTAMP DEFAULT NULL,
    EXPIRED_TIME TIMESTAMP DEFAULT NULL,

    DURATION_TIME TIMESTAMP DEFAULT NULL,
    PAUSED_TIME TIMESTAMP DEFAULT NULL,

    STATUS VARCHAR(32) DEFAULT 'READY_TO_ASSIGN' NOT NULL,

    PRIMARY KEY(ID)
);

ALTER TABLE CLIENTS
    ADD CONSTRAINT CLIENTS_CLIENT_VAUCHERS_ID
        FOREIGN KEY (LAST_VOUCHER_ID) REFERENCES CLIENT_VAUCHERS (ID)
            ON DELETE SET NULL ON UPDATE CASCADE;

ALTER TABLE CLIENT_VAUCHERS
    ADD CONSTRAINT CLIENT_VAUCHERS_CLIENT_ID
        FOREIGN KEY (CLIENT_ID) REFERENCES CLIENTS (ID)
            ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE CLIENT_VAUCHERS
    ADD CONSTRAINT CLIENT_VAUCHERS_DEVICE_MAC
        FOREIGN KEY (DEVICE_MAC) REFERENCES DEVICES (MAC)
            ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE CLIENT_VAUCHERS
    ADD CONSTRAINT CLIENT_VAUCHERS_DEVICE_IP
        FOREIGN KEY (DEVICE_IP) REFERENCES DEVICES (IP)
            ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE CLIENT_VAUCHERS
    ADD CONSTRAINT CLIENT_VAUCHERS_VOUCHER_ID
        FOREIGN KEY (VOUCHER_ID) REFERENCES VOUCHERS (ID)
            ON DELETE CASCADE;


-- Dashboard

-- DATA_TYPE: FLOAT, INT, UINT, STRING, BOOLEAN

CREATE TABLE PARAMETERS (
    TYPE VARCHAR(128) NOT NULL,
    NAME VARCHAR(128) NOT NULL,
    DATA_TYPE VARCHAR(6) NOT NULL,
    VALUE VARCHAR(256) DEFAULT NULL,
    DEFAULT_VALUE VARCHAR(256) DEFAULT NULL,
    DESCRIPTION VARCHAR(2048) DEFAULT NULL,

    PRIMARY KEY(TYPE, NAME)
);

-- STATUS: READY, SUSPENDED, DELETED

CREATE TABLE USERS (
    ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
    USERNAME VARCHAR(64) NOT NULL,
    PASSWORD VARCHAR(512) NOT NULL,
    RESET_PASSWORD BOOLEAN DEFAULT TRUE,
    EMAIL VARCHAR(128) NOT NULL,
    STATUS VARCHAR(32) NOT NULL,

    PRIMARY KEY (ID),
    UNIQUE KEY (USERNAME),
    UNIQUE KEY (EMAIL)
);

CREATE TABLE FUNCTION_TAGS (
    FTAG VARCHAR(256) NOT NULL,
    PRIMARY KEY (FTAG)
);

CREATE TABLE ROLES (
    ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
    ROL VARCHAR(256) NOT NULL,
    PRIMARY KEY (ID),
    UNIQUE KEY (ROL)
);

CREATE TABLE ROL_FTAGS (
    ROL_ID INT UNSIGNED NOT NULL,
    FTAG VARCHAR(256) NOT NULL,

    PRIMARY KEY (ROL_ID, FTAG),
    CONSTRAINT ROL_FTAGS_ID FOREIGN KEY (ROL_ID) REFERENCES ROLES (ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT ROL_FTAGS_FTAG FOREIGN KEY (FTAG) REFERENCES FUNCTION_TAGS (FTAG) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE USER_ROLES (
    USER_ID INT UNSIGNED NOT NULL,
    ROL_ID INT UNSIGNED NOT NULL,

    PRIMARY KEY(USER_ID, ROL_ID),
    CONSTRAINT USER_ROLES_UID FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT USER_ROLES_RID FOREIGN KEY (ROL_ID) REFERENCES ROLES (ID) ON DELETE RESTRICT ON UPDATE CASCADE
);